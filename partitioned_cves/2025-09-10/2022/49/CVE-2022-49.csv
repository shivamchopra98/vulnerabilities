id,sourceIdentifier,published,lastModified,vulnStatus,cveTags,descriptions,weaknesses,configurations,references,metrics_cvssMetricV31,metrics_cvssMetricV2,cisaExploitAdd,cisaActionDue,cisaRequiredAction,cisaVulnerabilityName,metrics_cvssMetricV30,metrics_cvssMetricV40,evaluatorComment
CVE-2022-49000,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:11.710,2024-10-31T14:56:17.890,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: iommu/vt-d: Fix PCI device refcount leak in has_external_pci() for_each_pci_dev() is implemented by pci_get_device(). The comment of pci_get_device() says that it will increase the reference count for the returned pci_dev and also decrease the reference count for the input pci_dev @from if it is not NULL. If we break for_each_pci_dev() loop with pdev not NULL, we need to call pci_dev_put() to decrease the reference count. Add the missing pci_dev_put() before 'return true' to avoid reference count leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.0"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""E0A5D883-5366-4620-8752-31B3CE410088""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/10ed7655a17f6a3eaecd1293830488259ccd5723"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/17f67414718e6aba123335a33b7d15aa594fff34"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/afca9e19cc720bfafc75dc5ce429c185ca93f31d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b6eea8b2e858a20ad58ac62dc2de90fea2413f94"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49001,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:11.773,2024-10-30T18:58:53.863,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: riscv: fix race when vmap stack overflow Currently, when detecting vmap stack overflow, riscv firstly switches to the so called shadow stack, then use this shadow stack to call the get_overflow_stack() to get the overflow stack. However, there's a race here if two or more harts use the same shadow stack at the same time. To solve this race, we introduce spin_shadow_stack atomic var, which will be swap between its own address and 0 in atomic way, when the var is set, it means the shadow_stack is being used; when the var is cleared, it means the shadow_stack isn't being used. [Palmer: Add AQ to the swap, and also some comments.]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""6B49AE96-FD69-40D4-A29C-DC4DB7DE3CDB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/7e1864332fbc1b993659eab7974da9fe8bf8c128"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/879fabc5a95401d9bce357e4b1d24ae4a360a81f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ac00301adb19df54f2eae1efc4bad7447c0156ce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.0,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49002,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:11.853,2024-10-25T14:24:12.620,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: iommu/vt-d: Fix PCI device refcount leak in dmar_dev_scope_init() for_each_pci_dev() is implemented by pci_get_device(). The comment of pci_get_device() says that it will increase the reference count for the returned pci_dev and also decrease the reference count for the input pci_dev @from if it is not NULL. If we break for_each_pci_dev() loop with pdev not NULL, we need to call pci_dev_put() to decrease the reference count. Add the missing pci_dev_put() for the error path to avoid reference count leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.15"",""versionEndExcluding"":""4.9.335"",""matchCriteriaId"":""2F74B69C-8ADE-4B1E-B15B-C50D11EEC4A1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.301"",""matchCriteriaId"":""0EE18A3A-1E78-44D6-9FDB-B267E4819993""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.268"",""matchCriteriaId"":""04705C94-71FA-46AB-AF73-B551892B0EBA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.226"",""matchCriteriaId"":""274F5087-5805-4D03-8C74-8517300658F1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""D0FB1AF1-0A0B-4419-B25F-C61F17380E18""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2a8f7b90681472948de172dbbf5a54cd342870aa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4bedbbd782ebbe7287231fea862c158d4f08a9e3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/71c4a621985fc051ab86d3a86c749069a993fcb2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/876d7bfb89273997056220029ff12b1c2cc4691d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a5c65cd56aed027f8a97fda8b691caaeb66d115e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bdb613ef179ad4bb9d56a2533e9b30e434f1dfb7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cbdd83bd2fd67142b03ce9dbdd1eab322ff7321f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d47bc9d7bcdbb9adc9703513d964b514fee5b0bf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49003,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:11.920,2024-10-25T14:12:59.897,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: nvme: fix SRCU protection of nvme_ns_head list Walking the nvme_ns_head siblings list is protected by the head's srcu in nvme_ns_head_submit_bio() but not nvme_mpath_revalidate_paths(). Removing namespaces from the list also fails to synchronize the srcu. Concurrent scan work can therefore cause use-after-frees. Hold the head's srcu lock in nvme_mpath_revalidate_paths() and synchronize with the srcu, not the global RCU, in nvme_ns_remove(). Observed the following panic when making NVMe/RDMA connections with native multipath on the Rocky Linux 8.6 kernel (it seems the upstream kernel has the same race condition). Disassembly shows the faulting instruction is cmp 0x50(%rdx),%rcx; computing capacity != get_capacity(ns->disk). Address 0x50 is dereferenced because ns->disk is NULL. The NULL disk appears to be the result of concurrent scan work freeing the namespace (note the log line in the middle of the panic). [37314.206036] BUG: unable to handle kernel NULL pointer dereference at 0000000000000050 [37314.206036] nvme0n3: detected capacity change from 0 to 11811160064 [37314.299753] PGD 0 P4D 0 [37314.299756] Oops: 0000 [#1] SMP PTI [37314.299759] CPU: 29 PID: 322046 Comm: kworker/u98:3 Kdump: loaded Tainted: G W X --------- - - 4.18.0-372.32.1.el8test86.x86_64 #1 [37314.299762] Hardware name: Dell Inc. PowerEdge R720/0JP31P, BIOS 2.7.0 05/23/2018 [37314.299763] Workqueue: nvme-wq nvme_scan_work [nvme_core] [37314.299783] RIP: 0010:nvme_mpath_revalidate_paths+0x26/0xb0 [nvme_core] [37314.299790] Code: 1f 44 00 00 66 66 66 66 90 55 53 48 8b 5f 50 48 8b 83 c8 c9 00 00 48 8b 13 48 8b 48 50 48 39 d3 74 20 48 8d 42 d0 48 8b 50 20 <48> 3b 4a 50 74 05 f0 80 60 70 ef 48 8b 50 30 48 8d 42 d0 48 39 d3 [37315.058803] RSP: 0018:ffffabe28f913d10 EFLAGS: 00010202 [37315.121316] RAX: ffff927a077da800 RBX: ffff92991dd70000 RCX: 0000000001600000 [37315.206704] RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff92991b719800 [37315.292106] RBP: ffff929a6b70c000 R08: 000000010234cd4a R09: c0000000ffff7fff [37315.377501] R10: 0000000000000001 R11: ffffabe28f913a30 R12: 0000000000000000 [37315.462889] R13: ffff92992716600c R14: ffff929964e6e030 R15: ffff92991dd70000 [37315.548286] FS: 0000000000000000(0000) GS:ffff92b87fb80000(0000) knlGS:0000000000000000 [37315.645111] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [37315.713871] CR2: 0000000000000050 CR3: 0000002208810006 CR4: 00000000000606e0 [37315.799267] Call Trace: [37315.828515] nvme_update_ns_info+0x1ac/0x250 [nvme_core] [37315.892075] nvme_validate_or_alloc_ns+0x2ff/0xa00 [nvme_core] [37315.961871] ? __blk_mq_free_request+0x6b/0x90 [37316.015021] nvme_scan_work+0x151/0x240 [nvme_core] [37316.073371] process_one_work+0x1a7/0x360 [37316.121318] ? create_worker+0x1a0/0x1a0 [37316.168227] worker_thread+0x30/0x390 [37316.212024] ? create_worker+0x1a0/0x1a0 [37316.258939] kthread+0x10a/0x120 [37316.297557] ? set_kthread_struct+0x50/0x50 [37316.347590] ret_from_fork+0x35/0x40 [37316.390360] Modules linked in: nvme_rdma nvme_tcp(X) nvme_fabrics nvme_core netconsole iscsi_tcp libiscsi_tcp dm_queue_length dm_service_time nf_conntrack_netlink br_netfilter bridge stp llc overlay nft_chain_nat ipt_MASQUERADE nf_nat xt_addrtype xt_CT nft_counter xt_state xt_conntrack nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 xt_comment xt_multiport nft_compat nf_tables libcrc32c nfnetlink dm_multipath tg3 rpcrdma sunrpc rdma_ucm ib_srpt ib_isert iscsi_target_mod target_core_mod ib_iser libiscsi scsi_transport_iscsi ib_umad rdma_cm ib_ipoib iw_cm ib_cm intel_rapl_msr iTCO_wdt iTCO_vendor_support dcdbas intel_rapl_common sb_edac x86_pkg_temp_thermal intel_powerclamp coretemp kvm_intel ipmi_ssif kvm irqbypass crct10dif_pclmul crc32_pclmul mlx5_ib ghash_clmulni_intel ib_uverbs rapl intel_cstate intel_uncore ib_core ipmi_si joydev mei_me pcspkr ipmi_devintf mei lpc_ich wmi ipmi_msghandler acpi_power_meter ex ---truncated---","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""C947DE0F-3C67-410C-9D9B-DCBE9D8ACB8D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/5b566d09ab1b975566a53f9c5466ee260d087582"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/787d81d4eb150e443e5d1276c6e8f03cfecc2302"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/899d2a05dc14733cfba6224083c6b0dd5a738590"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49004,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:11.990,2024-10-25T14:21:21.593,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: riscv: Sync efi page table's kernel mappings before switching The EFI page table is initially created as a copy of the kernel page table. With VMAP_STACK enabled, kernel stacks are allocated in the vmalloc area: if the stack is allocated in a new PGD (one that was not present at the moment of the efi page table creation or not synced in a previous vmalloc fault), the kernel will take a trap when switching to the efi page table when the vmalloc kernel stack is accessed, resulting in a kernel panic. Fix that by updating the efi kernel mappings before switching to the efi page table.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-noinfo""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.10"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""F4165171-EE33-4D81-A676-357C0DDDA2D4""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/3f105a742725a1b78766a55169f1d827732e62b8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/96f479383d92944406d4b3f2bc03c2f640def9f1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fa7a7d185ef380546b4b1fed6f84f31dbae8cec7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49005,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:12.040,2024-10-25T14:17:56.817,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: ops: Fix bounds check for _sx controls For _sx controls the semantics of the max field is not the usual one, max is the number of steps rather than the maximum value. This means that our check in snd_soc_put_volsw_sx() needs to just check against the maximum value.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-noinfo""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.9.300"",""versionEndExcluding"":""4.9.335"",""matchCriteriaId"":""2F7DD4C9-FE19-497E-B2F9-C094A69EFDFD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.14.265"",""versionEndExcluding"":""4.14.301"",""matchCriteriaId"":""7BC661F9-672A-422C-A1AE-66BB70C1815E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.19.228"",""versionEndExcluding"":""4.19.268"",""matchCriteriaId"":""7B9A6578-30BB-46F2-A669-96F6F8030A4B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4.178"",""versionEndExcluding"":""5.4.226"",""matchCriteriaId"":""A2867EFB-E39E-448E-9A07-D268C880E4C8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.10.99"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""C8E48E4E-390B-49DD-9AEC-B0000F048AAB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15.22"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""17C8626C-FF3E-4843-971D-4998D55BD5A9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16.8"",""versionEndExcluding"":""5.17"",""matchCriteriaId"":""75F55BC5-65F9-43AF-BE7B-5C16E5F52E0B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""0FEB9103-AAEF-499A-A71B-752143D3A506""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/325d94d16e3131b54bdf07356e4cd855e0d853fc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/46bab25cc0230df60d1c02b651cc5640a14b08df"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4a95a49f26308782b4056401989ecd7768fda8fa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/698813ba8c580efb356ace8dbf55f61dac6063a8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/73dce3c1d48c4662bdf3ccbde1492c2cb4bfd8ce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/98b15c706644bebc19d2e77ccc360cc51444f6d0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b50c9641897274c3faef5f95ac852f54b94be2e8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e46adadf19248d59af3aa6bc52e09115bf479bf7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49006,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:12.103,2024-11-04T13:16:22.623,Modified,[],"In the Linux kernel, the following vulnerability has been resolved: tracing: Free buffers when a used dynamic event is removed After 65536 dynamic events have been added and removed, the ""type"" field of the event then uses the first type number that is available (not currently used by other events). A type number is the identifier of the binary blobs in the tracing ring buffer (known as events) to map them to logic that can parse the binary blob. The issue is that if a dynamic event (like a kprobe event) is traced and is in the ring buffer, and then that event is removed (because it is dynamic, which means it can be created and destroyed), if another dynamic event is created that has the same number that new event's logic on parsing the binary blob will be used. To show how this can be an issue, the following can crash the kernel: # cd /sys/kernel/tracing # for i in `seq 65536`; do echo 'p:kprobes/foo do_sys_openat2 $arg1:u32' > kprobe_events # done For every iteration of the above, the writing to the kprobe_events will remove the old event and create a new one (with the same format) and increase the type number to the next available on until the type number reaches over 65535 which is the max number for the 16 bit type. After it reaches that number, the logic to allocate a new number simply looks for the next available number. When an dynamic event is removed, that number is then available to be reused by the next dynamic event created. That is, once the above reaches the max number, the number assigned to the event in that loop will remain the same. Now that means deleting one dynamic event and created another will reuse the previous events type number. This is where bad things can happen. After the above loop finishes, the kprobes/foo event which reads the do_sys_openat2 function call's first parameter as an integer. # echo 1 > kprobes/foo/enable # cat /etc/passwd > /dev/null # cat trace cat-2211 [005] .... 2007.849603: foo: (do_sys_openat2+0x0/0x130) arg1=4294967196 cat-2211 [005] .... 2007.849620: foo: (do_sys_openat2+0x0/0x130) arg1=4294967196 cat-2211 [005] .... 2007.849838: foo: (do_sys_openat2+0x0/0x130) arg1=4294967196 cat-2211 [005] .... 2007.849880: foo: (do_sys_openat2+0x0/0x130) arg1=4294967196 # echo 0 > kprobes/foo/enable Now if we delete the kprobe and create a new one that reads a string: # echo 'p:kprobes/foo do_sys_openat2 +0($arg2):string' > kprobe_events And now we can the trace: # cat trace sendmail-1942 [002] ..... 530.136320: foo: (do_sys_openat2+0x0/0x240) arg1= cat-2046 [004] ..... 530.930817: foo: (do_sys_openat2+0x0/0x240) arg1=""������������������������������������������������������������������������������������������������"" cat-2046 [004] ..... 530.930961: foo: (do_sys_openat2+0x0/0x240) arg1=""������������������������������������������������������������������������������������������������"" cat-2046 [004] ..... 530.934278: foo: (do_sys_openat2+0x0/0x240) arg1=""������������������������������������������������������������������������������������������������"" cat-2046 [004] ..... 530.934563: foo: (do_sys_openat2+0x0/0x240) arg1=""��������������������������������������� ---truncated---","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.33"",""versionEndExcluding"":""5.4.226"",""matchCriteriaId"":""B43AE6EF-9908-464B-9B18-4334334F0ABA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""D0FB1AF1-0A0B-4419-B25F-C61F17380E18""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1603feac154ff38514e8354e3079a455eb4801e2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/417d5ea6e735e5d88ffb6c436cf2938f3f476dd1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4313e5a613049dfc1819a6dfb5f94cf2caff9452"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/be111ebd8868d4b7c041cb3c6102e1ae27d6dc1d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c52d0c8c4f38f7580cff61c4dfe1034c580cedfd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49007,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:12.197,2024-10-25T14:35:25.910,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: nilfs2: fix NULL pointer dereference in nilfs_palloc_commit_free_entry() Syzbot reported a null-ptr-deref bug: NILFS (loop0): segctord starting. Construction interval = 5 seconds, CP frequency < 30 seconds general protection fault, probably for non-canonical address 0xdffffc0000000002: 0000 [#1] PREEMPT SMP KASAN KASAN: null-ptr-deref in range [0x0000000000000010-0x0000000000000017] CPU: 1 PID: 3603 Comm: segctord Not tainted 6.1.0-rc2-syzkaller-00105-gb229b6ca5abb #0 Hardware name: Google Compute Engine/Google Compute Engine, BIOS Google 10/11/2022 RIP: 0010:nilfs_palloc_commit_free_entry+0xe5/0x6b0 fs/nilfs2/alloc.c:608 Code: 00 00 00 00 fc ff df 80 3c 02 00 0f 85 cd 05 00 00 48 b8 00 00 00 00 00 fc ff df 4c 8b 73 08 49 8d 7e 10 48 89 fa 48 c1 ea 03 <80> 3c 02 00 0f 85 26 05 00 00 49 8b 46 10 be a6 00 00 00 48 c7 c7 RSP: 0018:ffffc90003dff830 EFLAGS: 00010212 RAX: dffffc0000000000 RBX: ffff88802594e218 RCX: 000000000000000d RDX: 0000000000000002 RSI: 0000000000002000 RDI: 0000000000000010 RBP: ffff888071880222 R08: 0000000000000005 R09: 000000000000003f R10: 000000000000000d R11: 0000000000000000 R12: ffff888071880158 R13: ffff88802594e220 R14: 0000000000000000 R15: 0000000000000004 FS: 0000000000000000(0000) GS:ffff8880b9b00000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00007fb1c08316a8 CR3: 0000000018560000 CR4: 0000000000350ee0 Call Trace: <TASK> nilfs_dat_commit_free fs/nilfs2/dat.c:114 [inline] nilfs_dat_commit_end+0x464/0x5f0 fs/nilfs2/dat.c:193 nilfs_dat_commit_update+0x26/0x40 fs/nilfs2/dat.c:236 nilfs_btree_commit_update_v+0x87/0x4a0 fs/nilfs2/btree.c:1940 nilfs_btree_commit_propagate_v fs/nilfs2/btree.c:2016 [inline] nilfs_btree_propagate_v fs/nilfs2/btree.c:2046 [inline] nilfs_btree_propagate+0xa00/0xd60 fs/nilfs2/btree.c:2088 nilfs_bmap_propagate+0x73/0x170 fs/nilfs2/bmap.c:337 nilfs_collect_file_data+0x45/0xd0 fs/nilfs2/segment.c:568 nilfs_segctor_apply_buffers+0x14a/0x470 fs/nilfs2/segment.c:1018 nilfs_segctor_scan_file+0x3f4/0x6f0 fs/nilfs2/segment.c:1067 nilfs_segctor_collect_blocks fs/nilfs2/segment.c:1197 [inline] nilfs_segctor_collect fs/nilfs2/segment.c:1503 [inline] nilfs_segctor_do_construct+0x12fc/0x6af0 fs/nilfs2/segment.c:2045 nilfs_segctor_construct+0x8e3/0xb30 fs/nilfs2/segment.c:2379 nilfs_segctor_thread_construct fs/nilfs2/segment.c:2487 [inline] nilfs_segctor_thread+0x3c3/0xf30 fs/nilfs2/segment.c:2570 kthread+0x2e4/0x3a0 kernel/kthread.c:376 ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:306 </TASK> ... If DAT metadata file is corrupted on disk, there is a case where req->pr_desc_bh is NULL and blocknr is 0 at nilfs_dat_commit_end() during a b-tree operation that cascadingly updates ancestor nodes of the b-tree, because nilfs_dat_commit_alloc() for a lower level block can initialize the blocknr on the same DAT entry between nilfs_dat_prepare_end() and nilfs_dat_commit_end(). If this happens, nilfs_dat_commit_end() calls nilfs_dat_commit_free() without valid buffer heads in req->pr_desc_bh and req->pr_bitmap_bh, and causes the NULL pointer dereference above in nilfs_palloc_commit_free_entry() function, which leads to a crash. Fix this by adding a NULL check on req->pr_desc_bh and req->pr_bitmap_bh before nilfs_palloc_commit_free_entry() in nilfs_dat_commit_free(). This also calls nilfs_error() in that case to notify that there is a fatal flaw in the filesystem metadata and prevent further operations.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.335"",""matchCriteriaId"":""136389E3-6553-4B2F-94DB-15BC9CE17183""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.301"",""matchCriteriaId"":""0EE18A3A-1E78-44D6-9FDB-B267E4819993""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.268"",""matchCriteriaId"":""04705C94-71FA-46AB-AF73-B551892B0EBA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.226"",""matchCriteriaId"":""274F5087-5805-4D03-8C74-8517300658F1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""D0FB1AF1-0A0B-4419-B25F-C61F17380E18""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/165c7a3b27a3857ebf57f626b9f38b48b6792e68"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2f2c59506ae39496588ceb8b88bdbdbaed895d63"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/33021419fd81efd3d729a7f19341ba4b98fe66ce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/381b84f60e549ea98cec4666c6c728b1b3318756"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9a130b72e6bd1fb07fc3cde839dc6fb53da76f07"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bc3fd3293887b4cf84a9109700faeb82de533c89"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e858917ab785afe83c14f5ac141301216ccda847"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f0a0ccda18d6fd826d7c7e7ad48a6ed61c20f8b4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49008,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:12.290,2024-10-25T14:38:30.063,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: can: can327: can327_feed_frame_to_netdev(): fix potential skb leak when netdev is down In can327_feed_frame_to_netdev(), it did not free the skb when netdev is down, and all callers of can327_feed_frame_to_netdev() did not free allocated skb too. That would trigger skb leak. Fix it by adding kfree_skb() in can327_feed_frame_to_netdev() when netdev is down. Not tested, just compiled.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""6.0"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""F513F5E9-B8E2-43FB-AA15-D6D48CA2B0E4""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/797b1d9fc0e1f4351e4ad49b078c1a3cdc0d4a08"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8fa452cfafed521aaf5a18c71003fe24b1ee6141"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49009,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:12.373,2024-10-24T18:59:25.877,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: hwmon: (asus-ec-sensors) Add checks for devm_kcalloc As the devm_kcalloc may return NULL, the return value needs to be checked to avoid NULL poineter dereference.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D41C2A25-B1D2-4813-8FD5-E2F37A5A6EA3""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/9bdc112be727cf1ba65be79541147f960c3349d8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a41ec58ac352fd176d5808af847663dc890f6053"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49010,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:12.433,2024-10-24T19:03:50.847,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: hwmon: (coretemp) Check for null before removing sysfs attrs If coretemp_add_core() gets an error then pdata->core_data[indx] is already NULL and has been kfreed. Don't pass that to sysfs_remove_group() as that will crash in sysfs_remove_group(). [Shortened for readability] [91854.020159] sysfs: cannot create duplicate filename '/devices/platform/coretemp.0/hwmon/hwmon2/temp20_label' <cpu offline> [91855.126115] BUG: kernel NULL pointer dereference, address: 0000000000000188 [91855.165103] #PF: supervisor read access in kernel mode [91855.194506] #PF: error_code(0x0000) - not-present page [91855.224445] PGD 0 P4D 0 [91855.238508] Oops: 0000 [#1] PREEMPT SMP PTI ... [91855.342716] RIP: 0010:sysfs_remove_group+0xc/0x80 ... [91855.796571] Call Trace: [91855.810524] coretemp_cpu_offline+0x12b/0x1dd [coretemp] [91855.841738] ? coretemp_cpu_online+0x180/0x180 [coretemp] [91855.871107] cpuhp_invoke_callback+0x105/0x4b0 [91855.893432] cpuhp_thread_fun+0x8e/0x150 ... Fix this by checking for NULL first.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.0"",""versionEndExcluding"":""4.9.335"",""matchCriteriaId"":""78A617B4-066E-4AA8-8440-08AD00E56A84""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.301"",""matchCriteriaId"":""0EE18A3A-1E78-44D6-9FDB-B267E4819993""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.268"",""matchCriteriaId"":""04705C94-71FA-46AB-AF73-B551892B0EBA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.226"",""matchCriteriaId"":""274F5087-5805-4D03-8C74-8517300658F1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""D0FB1AF1-0A0B-4419-B25F-C61F17380E18""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/070d5ea4a0592a37ad96ce7f7b6b024f90bb009f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/280110db1a7d62ad635b103bafc3ae96e8bef75c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7692700ac818866d138a8de555130a6e70e6ac16"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/89eecabe6a47403237f45aafd7d24f93cb973653"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a89ff5f5cc64b9fe7a992cf56988fd36f56ca82a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ae6c8b6e5d5628df1c475c0a8fca1465e205c95b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f06e0cd01eab954bd5f2190c9faa79bb5357e05b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fb503d077ff7b43913503eaf72995d1239028b99"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49011,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:12.500,2024-10-24T19:01:47.513,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: hwmon: (coretemp) fix pci device refcount leak in nv1a_ram_new() As comment of pci_get_domain_bus_and_slot() says, it returns a pci device with refcount increment, when finish using it, the caller must decrement the reference count by calling pci_dev_put(). So call it after using to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.14"",""versionEndExcluding"":""4.9.335"",""matchCriteriaId"":""CBA43FBB-BF21-4B0B-8A18-FAD2E8657A32""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.301"",""matchCriteriaId"":""0EE18A3A-1E78-44D6-9FDB-B267E4819993""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.268"",""matchCriteriaId"":""04705C94-71FA-46AB-AF73-B551892B0EBA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.226"",""matchCriteriaId"":""274F5087-5805-4D03-8C74-8517300658F1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""D0FB1AF1-0A0B-4419-B25F-C61F17380E18""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0dd1da5a15eeecb2fe4cf131b3216fb455af783c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2f74cffc7c85f770b1b1833dccb03b8cde3be102"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6e035d5a2a6b907cfce9a80c5f442c2e459cd34e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7dec14537c5906b8bf40fd6fd6d9c3850f8df11d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bb75a0d1223d43f97089841aecb28a9b4de687a9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c40db1e5f316792b557d2be37e447c20d9ac4635"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ea5844f946b1ec5c0b7c115cd7684f34fd48021b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f598da27acbeee414679cacd14294db3e273e3d2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49012,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:12.573,2024-10-24T19:07:46.193,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: afs: Fix server->active leak in afs_put_server The atomic_read was accidentally replaced with atomic_inc_return, which prevents the server from getting cleaned up and causes rmmod to hang with a warning: Can't purge s=00000001","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-459""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""6.0"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""F513F5E9-B8E2-43FB-AA15-D6D48CA2B0E4""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/c5078548c29c735f71b05053659c0cb294e738ad"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ef4d3ea40565a781c25847e9cb96c1bd9f462bc6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49013,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:12.637,2024-10-24T19:09:30.677,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: sctp: fix memory leak in sctp_stream_outq_migrate() When sctp_stream_outq_migrate() is called to release stream out resources, the memory pointed to by prio_head in stream out is not released. The memory leak information is as follows: unreferenced object 0xffff88801fe79f80 (size 64): comm ""sctp_repo"", pid 7957, jiffies 4294951704 (age 36.480s) hex dump (first 32 bytes): 80 9f e7 1f 80 88 ff ff 80 9f e7 1f 80 88 ff ff ................ 90 9f e7 1f 80 88 ff ff 90 9f e7 1f 80 88 ff ff ................ backtrace: [<ffffffff81b215c6>] kmalloc_trace+0x26/0x60 [<ffffffff88ae517c>] sctp_sched_prio_set+0x4cc/0x770 [<ffffffff88ad64f2>] sctp_stream_init_ext+0xd2/0x1b0 [<ffffffff88aa2604>] sctp_sendmsg_to_asoc+0x1614/0x1a30 [<ffffffff88ab7ff1>] sctp_sendmsg+0xda1/0x1ef0 [<ffffffff87f765ed>] inet_sendmsg+0x9d/0xe0 [<ffffffff8754b5b3>] sock_sendmsg+0xd3/0x120 [<ffffffff8755446a>] __sys_sendto+0x23a/0x340 [<ffffffff87554651>] __x64_sys_sendto+0xe1/0x1b0 [<ffffffff89978b49>] do_syscall_64+0x39/0xb0 [<ffffffff89a0008b>] entry_SYSCALL_64_after_hwframe+0x63/0xcd","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""5.4.226"",""matchCriteriaId"":""9C6A9C59-A3EB-4E20-8696-8E40096052EB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""D0FB1AF1-0A0B-4419-B25F-C61F17380E18""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0dfb9a566327182387c90100ea54d8426cee8c67"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/176ee6c673ccd118e9392fd2dbb165423bdb99ca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9ed7bfc79542119ac0a9e1ce8a2a5285e43433e9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a7555681e50bdebed2c40ff7404ee73c2e932993"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fa20f88271259d42ebe66f0a8c4c20199e888c99"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49014,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:12.707,2024-10-24T18:29:23.407,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: tun: Fix use-after-free in tun_detach() syzbot reported use-after-free in tun_detach() [1]. This causes call trace like below: ================================================================== BUG: KASAN: use-after-free in notifier_call_chain+0x1ee/0x200 kernel/notifier.c:75 Read of size 8 at addr ffff88807324e2a8 by task syz-executor.0/3673 CPU: 0 PID: 3673 Comm: syz-executor.0 Not tainted 6.1.0-rc5-syzkaller-00044-gcc675d22e422 #0 Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/26/2022 Call Trace: <TASK> __dump_stack lib/dump_stack.c:88 [inline] dump_stack_lvl+0xd1/0x138 lib/dump_stack.c:106 print_address_description mm/kasan/report.c:284 [inline] print_report+0x15e/0x461 mm/kasan/report.c:395 kasan_report+0xbf/0x1f0 mm/kasan/report.c:495 notifier_call_chain+0x1ee/0x200 kernel/notifier.c:75 call_netdevice_notifiers_info+0x86/0x130 net/core/dev.c:1942 call_netdevice_notifiers_extack net/core/dev.c:1983 [inline] call_netdevice_notifiers net/core/dev.c:1997 [inline] netdev_wait_allrefs_any net/core/dev.c:10237 [inline] netdev_run_todo+0xbc6/0x1100 net/core/dev.c:10351 tun_detach drivers/net/tun.c:704 [inline] tun_chr_close+0xe4/0x190 drivers/net/tun.c:3467 __fput+0x27c/0xa90 fs/file_table.c:320 task_work_run+0x16f/0x270 kernel/task_work.c:179 exit_task_work include/linux/task_work.h:38 [inline] do_exit+0xb3d/0x2a30 kernel/exit.c:820 do_group_exit+0xd4/0x2a0 kernel/exit.c:950 get_signal+0x21b1/0x2440 kernel/signal.c:2858 arch_do_signal_or_restart+0x86/0x2300 arch/x86/kernel/signal.c:869 exit_to_user_mode_loop kernel/entry/common.c:168 [inline] exit_to_user_mode_prepare+0x15f/0x250 kernel/entry/common.c:203 __syscall_exit_to_user_mode_work kernel/entry/common.c:285 [inline] syscall_exit_to_user_mode+0x1d/0x50 kernel/entry/common.c:296 do_syscall_64+0x46/0xb0 arch/x86/entry/common.c:86 entry_SYSCALL_64_after_hwframe+0x63/0xcd The cause of the issue is that sock_put() from __tun_detach() drops last reference count for struct net, and then notifier_call_chain() from netdev_state_change() accesses that struct net. This patch fixes the issue by calling sock_put() from tun_detach() after all necessary accesses for the struct net has done.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.17"",""versionEndExcluding"":""4.19.268"",""matchCriteriaId"":""F418A145-8A14-43A0-823E-F1C684FB9825""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.226"",""matchCriteriaId"":""274F5087-5805-4D03-8C74-8517300658F1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""D0FB1AF1-0A0B-4419-B25F-C61F17380E18""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/04b995e963229501401810dab89dc73e7f12d054"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/16c244bc65d1175775325ec0489a5a5c830e02c7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1f23f1890d91812c35d32eab1b49621b6d32dc7b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4cde8da2d814a3b7b176db81922d4ddaad7c0f0e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5daadc86f27ea4d691e2131c04310d0418c6cd12"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5f442e1d403e0496bacb74a58e2be7f500695e6f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49015,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:12.787,2024-10-24T18:31:54.943,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: hsr: Fix potential use-after-free The skb is delivered to netif_rx() which may free it, after calling this, dereferencing skb may trigger use-after-free.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.13"",""versionEndExcluding"":""4.9.335"",""matchCriteriaId"":""42B78CF7-5696-47EA-8FC2-89655FE68C51""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.301"",""matchCriteriaId"":""0EE18A3A-1E78-44D6-9FDB-B267E4819993""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.268"",""matchCriteriaId"":""04705C94-71FA-46AB-AF73-B551892B0EBA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.226"",""matchCriteriaId"":""274F5087-5805-4D03-8C74-8517300658F1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""D0FB1AF1-0A0B-4419-B25F-C61F17380E18""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/4b351609af4fdbc23f79ab2b12748f4403ea9af4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/53a62c5efe91665f7a41fad0f888a96f94dc59eb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7ca81a161e406834a1fdc405fc83a572bd14b8d9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7e177d32442b7ed08a9fa61b61724abc548cb248"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8393ce5040803666bfa26a3a7bf41e44fab0ace9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b35d899854d5d5d58eb7d7e7c0f61afc60d3a9e9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/dca370e575d9b6c983f5015e8dc035e23e219ee6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f3add2b8cf620966de3ebfa07679ca12d33ec26f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49016,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:12.840,2024-10-24T18:35:01.597,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: mdiobus: fix unbalanced node reference count I got the following report while doing device(mscc-miim) load test with CONFIG_OF_UNITTEST and CONFIG_OF_DYNAMIC enabled: OF: ERROR: memory leak, expected refcount 1 instead of 2, of_node_get()/of_node_put() unbalanced - destroy cset entry: attach overlay node /spi/soc@0/mdio@7107009c/ethernet-phy@0 If the 'fwnode' is not an acpi node, the refcount is get in fwnode_mdiobus_phy_device_register(), but it has never been put when the device is freed in the normal path. So call fwnode_handle_put() in phy_device_release() to avoid leak. If it's an acpi node, it has never been get, but it's put in the error path, so call fwnode_handle_get() before phy_device_register() to keep get/put operation balanced.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""6B49AE96-FD69-40D4-A29C-DC4DB7DE3CDB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2708b357440427d6a9fee667eb7b8307f4625adc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/543d917f691ab06885ee779c862065899eaa4251"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cdde1560118f82498fc9e9a7c1ef7f0ef7755891"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49017,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:12.910,2024-10-24T18:36:13.233,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tipc: re-fetch skb cb after tipc_msg_validate As the call trace shows, the original skb was freed in tipc_msg_validate(), and dereferencing the old skb cb would cause an use-after-free crash. BUG: KASAN: use-after-free in tipc_crypto_rcv_complete+0x1835/0x2240 [tipc] Call Trace: <IRQ> tipc_crypto_rcv_complete+0x1835/0x2240 [tipc] tipc_crypto_rcv+0xd32/0x1ec0 [tipc] tipc_rcv+0x744/0x1150 [tipc] ... Allocated by task 47078: kmem_cache_alloc_node+0x158/0x4d0 __alloc_skb+0x1c1/0x270 tipc_buf_acquire+0x1e/0xe0 [tipc] tipc_msg_create+0x33/0x1c0 [tipc] tipc_link_build_proto_msg+0x38a/0x2100 [tipc] tipc_link_timeout+0x8b8/0xef0 [tipc] tipc_node_timeout+0x2a1/0x960 [tipc] call_timer_fn+0x2d/0x1c0 ... Freed by task 47078: tipc_msg_validate+0x7b/0x440 [tipc] tipc_crypto_rcv_complete+0x4b5/0x2240 [tipc] tipc_crypto_rcv+0xd32/0x1ec0 [tipc] tipc_rcv+0x744/0x1150 [tipc] This patch fixes it by re-fetching the skb cb from the new allocated skb after calling tipc_msg_validate().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""D0FB1AF1-0A0B-4419-B25F-C61F17380E18""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1daec0815655e110c6f206c5e777a4af8168ff58"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3067bc61fcfe3081bf4807ce65560f499e895e77"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a1ba595e35aa3afbe417ff0af353afb9f65559c0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e128190adb2edfd5042105b5d1ed4553f295f5ef"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49018,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:12.973,2024-10-24T18:38:38.033,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mptcp: fix sleep in atomic at close time Matt reported a splat at msk close time: BUG: sleeping function called from invalid context at net/mptcp/protocol.c:2877 in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 155, name: packetdrill preempt_count: 201, expected: 0 RCU nest depth: 0, expected: 0 4 locks held by packetdrill/155: #0: ffff888001536990 (&sb->s_type->i_mutex_key#6){+.+.}-{3:3}, at: __sock_release (net/socket.c:650) #1: ffff88800b498130 (sk_lock-AF_INET){+.+.}-{0:0}, at: mptcp_close (net/mptcp/protocol.c:2973) #2: ffff88800b49a130 (sk_lock-AF_INET/1){+.+.}-{0:0}, at: __mptcp_close_ssk (net/mptcp/protocol.c:2363) #3: ffff88800b49a0b0 (slock-AF_INET){+...}-{2:2}, at: __lock_sock_fast (include/net/sock.h:1820) Preemption disabled at: 0x0 CPU: 1 PID: 155 Comm: packetdrill Not tainted 6.1.0-rc5 #365 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014 Call Trace: <TASK> dump_stack_lvl (lib/dump_stack.c:107 (discriminator 4)) __might_resched.cold (kernel/sched/core.c:9891) __mptcp_destroy_sock (include/linux/kernel.h:110) __mptcp_close (net/mptcp/protocol.c:2959) mptcp_subflow_queue_clean (include/net/sock.h:1777) __mptcp_close_ssk (net/mptcp/protocol.c:2363) mptcp_destroy_common (net/mptcp/protocol.c:3170) mptcp_destroy (include/net/sock.h:1495) __mptcp_destroy_sock (net/mptcp/protocol.c:2886) __mptcp_close (net/mptcp/protocol.c:2959) mptcp_close (net/mptcp/protocol.c:2974) inet_release (net/ipv4/af_inet.c:432) __sock_release (net/socket.c:651) sock_close (net/socket.c:1367) __fput (fs/file_table.c:320) task_work_run (kernel/task_work.c:181 (discriminator 1)) exit_to_user_mode_prepare (include/linux/resume_user_mode.h:49) syscall_exit_to_user_mode (kernel/entry/common.c:130) do_syscall_64 (arch/x86/entry/common.c:87) entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:120) We can't call mptcp_close under the 'fast' socket lock variant, replace it with a sock_lock_nested() as the relevant code is already under the listening msk socket lock protection.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.19.14"",""versionEndExcluding"":""6.0"",""matchCriteriaId"":""D2B58E9C-FBF6-43D8-AB7E-A1076CD9AED2""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""6.0"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""F513F5E9-B8E2-43FB-AA15-D6D48CA2B0E4""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/b4f166651d03b5484fa179817ba8ad4899a5a6ac"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d8e6c5500dbf0f3e87aace90d4beba6ae928e866"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49019,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:13.040,2024-10-24T18:43:50.413,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: ethernet: nixge: fix NULL dereference In function nixge_hw_dma_bd_release() dereference of NULL pointer priv->rx_bd_v is possible for the case of its allocation failure in nixge_hw_dma_bd_init(). Move for() loop with priv->rx_bd_v dereference under the check for its validity. Found by Linux Verification Center (linuxtesting.org) with SVACE.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.17"",""versionEndExcluding"":""5.4.226"",""matchCriteriaId"":""7B8F7CF0-7F50-4543-87DD-CDAD13FA2425""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""D0FB1AF1-0A0B-4419-B25F-C61F17380E18""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/45752af0247589e6d3dede577415bfe117b4392c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/80e82f7b440b65cf131dce10f487dc73a7046e6b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/910c0264b64ef2dad8887714a7c56c93e39a0ed3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9256db4e45e8b497b0e993cc3ed4ad08eb2389b6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9c584d6d9cfb935dce8fc81a4c26debac0a3049b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49020,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:13.100,2024-10-24T18:43:20.887,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net/9p: Fix a potential socket leak in p9_socket_open Both p9_fd_create_tcp() and p9_fd_create_unix() will call p9_socket_open(). If the creation of p9_trans_fd fails, p9_fd_create_tcp() and p9_fd_create_unix() will return an error directly instead of releasing the cscoket, which will result in a socket leak. This patch adds sock_release() to fix the leak issue.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.33"",""versionEndExcluding"":""4.9.335"",""matchCriteriaId"":""136F2799-F7E6-44CC-9C33-543F433340FC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.301"",""matchCriteriaId"":""0EE18A3A-1E78-44D6-9FDB-B267E4819993""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.268"",""matchCriteriaId"":""04705C94-71FA-46AB-AF73-B551892B0EBA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.226"",""matchCriteriaId"":""274F5087-5805-4D03-8C74-8517300658F1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""D0FB1AF1-0A0B-4419-B25F-C61F17380E18""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0396227f4daf4792a6a8aaa3b7771dc25c4cd443"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2d24d91b9f44620824fc37b766f7cae00ca32748"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8782b32ef867de7981bbe9e86ecb90e92e8780bd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8b14bd0b500aec1458b51cb621c8e5fab3304260"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/aa08323fe18cb7cf95317ffa2d54ca1de8e74ebd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/dcc14cfd7debe11b825cb077e75d91d2575b4cb8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ded893965b895b2dccd3d1436d8d3daffa23ea64"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e01c1542379fb395e7da53706df598f38905dfbf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49021,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:13.163,2024-10-24T18:44:24.567,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: phy: fix null-ptr-deref while probe() failed I got a null-ptr-deref report as following when doing fault injection test: BUG: kernel NULL pointer dereference, address: 0000000000000058 Oops: 0000 [#1] PREEMPT SMP KASAN PTI CPU: 1 PID: 253 Comm: 507-spi-dm9051 Tainted: G B N 6.1.0-rc3+ Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014 RIP: 0010:klist_put+0x2d/0xd0 Call Trace: <TASK> klist_remove+0xf1/0x1c0 device_release_driver_internal+0x23e/0x2d0 bus_remove_device+0x1bd/0x240 device_del+0x357/0x770 phy_device_remove+0x11/0x30 mdiobus_unregister+0xa5/0x140 release_nodes+0x6a/0xa0 devres_release_all+0xf8/0x150 device_unbind_cleanup+0x19/0xd0 //probe path: phy_device_register() device_add() phy_connect phy_attach_direct() //set device driver probe() //it's failed, driver is not bound device_bind_driver() // probe failed, it's not called //remove path: phy_device_remove() device_del() device_release_driver_internal() __device_release_driver() //dev->drv is not NULL klist_remove() <- knode_driver is not added yet, cause null-ptr-deref In phy_attach_direct(), after setting the 'dev->driver', probe() fails, device_bind_driver() is not called, so the knode_driver->n_klist is not set, then it causes null-ptr-deref in __device_release_driver() while deleting device. Fix this by setting dev->driver to NULL in the error path in phy_attach_direct().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.14"",""versionEndExcluding"":""4.9.335"",""matchCriteriaId"":""DF95240D-8688-4572-B73C-F0DC8473CE27""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.301"",""matchCriteriaId"":""0EE18A3A-1E78-44D6-9FDB-B267E4819993""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.268"",""matchCriteriaId"":""04705C94-71FA-46AB-AF73-B551892B0EBA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.226"",""matchCriteriaId"":""274F5087-5805-4D03-8C74-8517300658F1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""D0FB1AF1-0A0B-4419-B25F-C61F17380E18""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0744c7be4de564db03e24527b2e096b7e0e20972"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/369eb2c9f1f72adbe91e0ea8efb130f0a2ba11a6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3e21f85d87c836462bb52ef2078ea561260935c1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/51d7f6b20fae8bae64ad1136f1e30d1fd5ba78f7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7730904f50c7187dd16c76949efb56b5fb55cd57"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8aaafe0f71314f46a066382a047ba8bb3840d273"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/eaa5722549ac2604ffa56c2e946acc83226f130c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fe6bc99c27c21348f548966118867ed26a9a372c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49022,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:13.233,2024-10-24T18:48:52.560,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: wifi: mac8021: fix possible oob access in ieee80211_get_rate_duration Fix possible out-of-bound access in ieee80211_get_rate_duration routine as reported by the following UBSAN report: UBSAN: array-index-out-of-bounds in net/mac80211/airtime.c:455:47 index 15 is out of range for type 'u16 [12]' CPU: 2 PID: 217 Comm: kworker/u32:10 Not tainted 6.1.0-060100rc3-generic Hardware name: Acer Aspire TC-281/Aspire TC-281, BIOS R01-A2 07/18/2017 Workqueue: mt76 mt76u_tx_status_data [mt76_usb] Call Trace: <TASK> show_stack+0x4e/0x61 dump_stack_lvl+0x4a/0x6f dump_stack+0x10/0x18 ubsan_epilogue+0x9/0x43 __ubsan_handle_out_of_bounds.cold+0x42/0x47 ieee80211_get_rate_duration.constprop.0+0x22f/0x2a0 [mac80211] ? ieee80211_tx_status_ext+0x32e/0x640 [mac80211] ieee80211_calc_rx_airtime+0xda/0x120 [mac80211] ieee80211_calc_tx_airtime+0xb4/0x100 [mac80211] mt76x02_send_tx_status+0x266/0x480 [mt76x02_lib] mt76x02_tx_status_data+0x52/0x80 [mt76x02_lib] mt76u_tx_status_data+0x67/0xd0 [mt76_usb] process_one_work+0x225/0x400 worker_thread+0x50/0x3e0 ? process_one_work+0x400/0x400 kthread+0xe9/0x110 ? kthread_complete_and_exit+0x20/0x20 ret_from_fork+0x22/0x30","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-129""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""D0FB1AF1-0A0B-4419-B25F-C61F17380E18""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0184ede0ec61b9cd075babfaa45081b1bf322234"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3e8f7abcc3473bc9603323803aeaed4ffcc3a2ab"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/59b54f0563b6546c94bdb6823d3b382c75407019"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f0fcad4c7201ecfaa17357f4ce0c50b4708df22d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49023,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:13.290,2024-10-24T03:50:29.357,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: wifi: cfg80211: fix buffer overflow in elem comparison For vendor elements, the code here assumes that 5 octets are present without checking. Since the element itself is already checked to fit, we only need to check the length.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-120""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.1"",""versionEndExcluding"":""5.4.226"",""matchCriteriaId"":""3CC306ED-CE15-40C6-9F0E-DB7264BEEC0B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""D0FB1AF1-0A0B-4419-B25F-C61F17380E18""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/391cb872553627bdcf236c03ee7d5adb275e37e1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/88a6fe3707888bd1893e9741157a7035c4159ab6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9e6b79a3cd17620d467311b30d56f2648f6880aa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9f16b5c82a025cd4c864737409234ddc44fb166a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f5c2ec288a865dbe3706b09bed12302e9f6d696b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49024,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:13.367,2024-10-24T03:50:03.797,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: can: m_can: pci: add missing m_can_class_free_dev() in probe/remove methods In m_can_pci_remove() and error handling path of m_can_pci_probe(), m_can_class_free_dev() should be called to free resource allocated by m_can_class_allocate_dev(), otherwise there will be memleak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0bbb88651ef6b7fbb1bf75ec7ba69add632e834b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1eca1d4cc21b6d0fc5f9a390339804c0afce9439"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ea8dc27bb044e19868155e500ce397007be98656"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49025,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:13.427,2024-10-24T03:49:31.117,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net/mlx5e: Fix use-after-free when reverting termination table When having multiple dests with termination tables and second one or afterwards fails the driver reverts usage of term tables but doesn't reset the assignment in attr->dests[num_vport_dests].termtbl which case a use-after-free when releasing the rule. Fix by resetting the assignment of termtbl to null.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.3"",""versionEndExcluding"":""5.4.226"",""matchCriteriaId"":""AC1AB8B7-B0BF-4B35-ACB8-88D567D14FEF""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""D0FB1AF1-0A0B-4419-B25F-C61F17380E18""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0a2d73a77060c3cbdc6e801cd5d979d674cd404b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0d2f9d95d9fbe993f3c4bafb87d59897b0325aff"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/372eb550faa0757349040fd43f59483cbfdb2c0b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/52c795af04441d76f565c4634f893e5b553df2ae"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e6d2d26a49c3a9cd46b232975e45236304810904"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49026,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:13.490,2024-10-24T03:49:21.780,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: e100: Fix possible use after free in e100_xmit_prepare In e100_xmit_prepare(), if we can't map the skb, then return -ENOMEM, so e100_xmit_frame() will return NETDEV_TX_BUSY and the upper layer will resend the skb. But the skb is already freed, which will cause UAF bug when the upper layer resends the skb. Remove the harmful free.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.3"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""CFC2CA88-2FA3-4814-BFDB-53AC3517BD21""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/45605c75c52c7ae7bfe902214343aabcfe5ba0ff"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9fc27d22cdb9b1fcd754599d216a8992fed280cd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b46f6144ab89d3d757ead940759c505091626a7d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b775f37d943966f6f77dca402f5a9dedce502c25"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49027,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:13.563,2024-10-24T03:48:53.720,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: iavf: Fix error handling in iavf_init_module() The iavf_init_module() won't destroy workqueue when pci_register_driver() failed. Call destroy_workqueue() when pci_register_driver() failed to prevent the resource leak. Similar to the handling of u132_hcd_init in commit f276e002793c (""usb: u132-hcd: fix resource leak"")","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.6"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""4F78C193-AD64-42A7-A11E-D5A1ED4B6CBC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0d9f5bd54b913018031c5b964fc1f9a31f5f6cb5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/227d8d2f7f2278b8468c5531b0cd0f2a905b4486"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/971c55f0763b480e63ceb7a22beb19be2509e5ed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bd477b891a4fa084561234eed4afacb3001dd359"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""NONE"",""availabilityImpact"":""NONE""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49028,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:13.627,2024-10-24T15:51:45.197,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ixgbevf: Fix resource leak in ixgbevf_init_module() ixgbevf_init_module() won't destroy the workqueue created by create_singlethread_workqueue() when pci_register_driver() failed. Add destroy_workqueue() in fail path to prevent the resource leak. Similar to the handling of u132_hcd_init in commit f276e002793c (""usb: u132-hcd: fix resource leak"")","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-459""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.5"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""EAADDFA5-C471-491B-80AB-03377F1AA6F7""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/7109e941099244cc876a4b3cb7a3ec79f104374a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8cfa238a48f34038464b99d0b4825238c2687181"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c99671d4699dcf90d6939923c8fe8a8918e140b2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f166c62cad798c53300b4b327e44300c73ec492d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49029,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:13.690,2024-10-24T15:59:48.417,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: hwmon: (ibmpex) Fix possible UAF when ibmpex_register_bmc() fails Smatch report warning as follows: drivers/hwmon/ibmpex.c:509 ibmpex_register_bmc() warn: '&data->list' not removed from list If ibmpex_find_sensors() fails in ibmpex_register_bmc(), data will be freed, but data->list will not be removed from driver_data.bmc_data, then list traversal may cause UAF. Fix by removeing it from driver_data.bmc_data before free().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.24"",""versionEndExcluding"":""4.9.335"",""matchCriteriaId"":""C69D4C1C-5531-498D-BF16-99EC54FDEB19""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.301"",""matchCriteriaId"":""0EE18A3A-1E78-44D6-9FDB-B267E4819993""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.268"",""matchCriteriaId"":""04705C94-71FA-46AB-AF73-B551892B0EBA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.226"",""matchCriteriaId"":""274F5087-5805-4D03-8C74-8517300658F1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""D0FB1AF1-0A0B-4419-B25F-C61F17380E18""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/24b9633f7db7f4809be7053df1d2e117e7c2de10"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/45f6e81863747c0d7bc6a95ec51129900e71467a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/798198273bf86673b970b51acdb35e57f42b3fcb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7b2b67fe1339389e0bf3c37c7a677a004ac0e4e3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/90907cd4d11351ff76c9a447bcb5db0e264c47cd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e2a87785aab0dac190ac89be6a9ba955e2c634f2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e65cfd1f9cd27d9c27ee5cb88128a9f79f25d863"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f2a13196ad41c6c2ab058279dffe6c97292e753a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49030,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:13.747,2024-10-24T18:42:07.703,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: libbpf: Handle size overflow for ringbuf mmap The maximum size of ringbuf is 2GB on x86-64 host, so 2 * max_entries will overflow u32 when mapping producer page and data pages. Only casting max_entries to size_t is not enough, because for 32-bits application on 64-bits kernel the size of read-only mmap region also could overflow size_t. So fixing it by casting the size of read-only mmap region into a __u64 and checking whether or not there will be overflow during mmap.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-190""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.8"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""7D209983-E824-4989-9782-937639AA49FC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""8535320E-A0DB-4277-800E-D0CE5BBA59E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0140e079a42064680394fff1199a7b5483688dec"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/535a25ab4f9a45f74ba38ab71de95e97474922ed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8a549ab6724520aa3c07f47e0eba820293551490"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/927cbb478adf917e0a142b94baa37f06279cc466"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49031,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:13.807,2024-10-24T16:03:12.907,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: iio: health: afe4403: Fix oob read in afe4403_read_raw KASAN report out-of-bounds read as follows: BUG: KASAN: global-out-of-bounds in afe4403_read_raw+0x42e/0x4c0 Read of size 4 at addr ffffffffc02ac638 by task cat/279 Call Trace: afe4403_read_raw iio_read_channel_info dev_attr_show The buggy address belongs to the variable: afe4403_channel_leds+0x18/0xffffffffffffe9e0 This issue can be reproduced by singe command: $ cat /sys/bus/spi/devices/spi0.0/iio\:device0/in_intensity6_raw The array size of afe4403_channel_leds is less than channels, so access with chan->address cause OOB read in afe4403_read_raw. Fix it by moving access before use it.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-125""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.8"",""versionEndExcluding"":""4.9.335"",""matchCriteriaId"":""D200C3B5-F98E-40BB-AF07-8CCA8B0F340D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.301"",""matchCriteriaId"":""0EE18A3A-1E78-44D6-9FDB-B267E4819993""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.268"",""matchCriteriaId"":""04705C94-71FA-46AB-AF73-B551892B0EBA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.226"",""matchCriteriaId"":""274F5087-5805-4D03-8C74-8517300658F1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""D0FB1AF1-0A0B-4419-B25F-C61F17380E18""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/06c6ce21cec77dfa860d57e7a006000a57812efb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2d6a437064ffbe685c67ddb16dfc0946074c6c3f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/58143c1ed5882c138a3cd2251a336fc8755f23d9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/726fa3e4ab97dcff1c745bdc4fb137366cb8d3df"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/98afcb5f3be645d330c74c5194ba0d80e26f95e0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b1756af172fb80a3edc143772d49e166ec691b6c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c9268df36818ee4eaaaeadc80009b442a5ca69c9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e7e76a77aabef8989cbc0a8417af1aa040620867"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"",""baseScore"":7.1,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.2}]",,,,,,,,
CVE-2022-49032,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:13.877,2024-10-24T16:04:49.880,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: iio: health: afe4404: Fix oob read in afe4404_[read|write]_raw KASAN report out-of-bounds read as follows: BUG: KASAN: global-out-of-bounds in afe4404_read_raw+0x2ce/0x380 Read of size 4 at addr ffffffffc00e4658 by task cat/278 Call Trace: afe4404_read_raw iio_read_channel_info dev_attr_show The buggy address belongs to the variable: afe4404_channel_leds+0x18/0xffffffffffffe9c0 This issue can be reproduce by singe command: $ cat /sys/bus/i2c/devices/0-0058/iio\:device0/in_intensity6_raw The array size of afe4404_channel_leds and afe4404_channel_offdacs are less than channels, so access with chan->address cause OOB read in afe4404_[read|write]_raw. Fix it by moving access before use them.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-125""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.8"",""versionEndExcluding"":""4.9.335"",""matchCriteriaId"":""D200C3B5-F98E-40BB-AF07-8CCA8B0F340D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.301"",""matchCriteriaId"":""0EE18A3A-1E78-44D6-9FDB-B267E4819993""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.268"",""matchCriteriaId"":""04705C94-71FA-46AB-AF73-B551892B0EBA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.226"",""matchCriteriaId"":""274F5087-5805-4D03-8C74-8517300658F1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""D0FB1AF1-0A0B-4419-B25F-C61F17380E18""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/113c08030a89aaf406f8a1d4549d758a67c2afba"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3f566b626029ca8598d48e5074e56bb37399ca1b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5eb114f55b37dbc0487aa9c1913b81bb7837f1c4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/68de7da092f38395dde523f2e5db26eba6c23e28"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d45d9f45e7b1365fd0d9bf14680d6d5082a590d1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f5575041ec15310bdc50c42b8b22118cc900226e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f7419fc42afc035f6b29ce713e17dcd2000c833f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fc92d9e3de0b2d30a3ccc08048a5fad533e4672b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"",""baseScore"":7.1,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.2}]",,,,,,,,
CVE-2022-49033,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-10-21T20:15:13.943,2024-10-30T21:50:50.007,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: btrfs: qgroup: fix sleep from invalid context bug in btrfs_qgroup_inherit() Syzkaller reported BUG as follows: BUG: sleeping function called from invalid context at include/linux/sched/mm.h:274 Call Trace: <TASK> dump_stack_lvl+0xcd/0x134 __might_resched.cold+0x222/0x26b kmem_cache_alloc+0x2e7/0x3c0 update_qgroup_limit_item+0xe1/0x390 btrfs_qgroup_inherit+0x147b/0x1ee0 create_subvol+0x4eb/0x1710 btrfs_mksubvol+0xfe5/0x13f0 __btrfs_ioctl_snap_create+0x2b0/0x430 btrfs_ioctl_snap_create_v2+0x25a/0x520 btrfs_ioctl+0x2a1c/0x5ce0 __x64_sys_ioctl+0x193/0x200 do_syscall_64+0x35/0x80 Fix this by calling qgroup_dirty() on @dstqgroup, and update limit item in btrfs_run_qgroups() later outside of the spinlock context.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-noinfo""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.14.301"",""matchCriteriaId"":""13B8AC8B-CE6D-4DF7-9856-FCDB8A56B156""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.268"",""matchCriteriaId"":""04705C94-71FA-46AB-AF73-B551892B0EBA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.226"",""matchCriteriaId"":""274F5087-5805-4D03-8C74-8517300658F1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.158"",""matchCriteriaId"":""D0FB1AF1-0A0B-4419-B25F-C61F17380E18""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.82"",""matchCriteriaId"":""0DC20DB6-73C1-4465-B931-117BFB8EBB02""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.12"",""matchCriteriaId"":""D6D56E90-F3EE-413D-B3E2-B518932F0C7D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""3FFFB0B3-930D-408A-91E2-BAE0C2715D80""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/01d7c41eac9129fba80d8aed0060caab4a7dbe09"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/044da1a371a0da579e805e89c96865f62d8f6f69"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3c98e91be6aea4c7acf09da6eb0c107ea9186bb5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/588ae4fdd8b11788a797776b10d6c44ae12bc133"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/89840b12c8fad7200eb6478525c13261512c01be"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8eb912af525042a7365295eb62f6d5270c2a6462"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f4b930a1602b05e77fee31f9616599b25e910a86"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f7e942b5bb35d8e3af54053d19a6bf04143a3955"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49034,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2024-12-27T14:15:22.533,2024-12-27T14:15:22.533,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: sh: cpuinfo: Fix a warning for CONFIG_CPUMASK_OFFSTACK When CONFIG_CPUMASK_OFFSTACK and CONFIG_DEBUG_PER_CPU_MAPS are selected, cpu_max_bits_warn() generates a runtime warning similar as below when showing /proc/cpuinfo. Fix this by using nr_cpu_ids (the runtime limit) instead of NR_CPUS to iterate CPUs. [ 3.052463] ------------[ cut here ]------------ [ 3.059679] WARNING: CPU: 3 PID: 1 at include/linux/cpumask.h:108 show_cpuinfo+0x5e8/0x5f0 [ 3.070072] Modules linked in: efivarfs autofs4 [ 3.076257] CPU: 0 PID: 1 Comm: systemd Not tainted 5.19-rc5+ #1052 [ 3.099465] Stack : 9000000100157b08 9000000000f18530 9000000000cf846c 9000000100154000 [ 3.109127] 9000000100157a50 0000000000000000 9000000100157a58 9000000000ef7430 [ 3.118774] 90000001001578e8 0000000000000040 0000000000000020 ffffffffffffffff [ 3.128412] 0000000000aaaaaa 1ab25f00eec96a37 900000010021de80 900000000101c890 [ 3.138056] 0000000000000000 0000000000000000 0000000000000000 0000000000aaaaaa [ 3.147711] ffff8000339dc220 0000000000000001 0000000006ab4000 0000000000000000 [ 3.157364] 900000000101c998 0000000000000004 9000000000ef7430 0000000000000000 [ 3.167012] 0000000000000009 000000000000006c 0000000000000000 0000000000000000 [ 3.176641] 9000000000d3de08 9000000001639390 90000000002086d8 00007ffff0080286 [ 3.186260] 00000000000000b0 0000000000000004 0000000000000000 0000000000071c1c [ 3.195868] ... [ 3.199917] Call Trace: [ 3.203941] [<90000000002086d8>] show_stack+0x38/0x14c [ 3.210666] [<9000000000cf846c>] dump_stack_lvl+0x60/0x88 [ 3.217625] [<900000000023d268>] __warn+0xd0/0x100 [ 3.223958] [<9000000000cf3c90>] warn_slowpath_fmt+0x7c/0xcc [ 3.231150] [<9000000000210220>] show_cpuinfo+0x5e8/0x5f0 [ 3.238080] [<90000000004f578c>] seq_read_iter+0x354/0x4b4 [ 3.245098] [<90000000004c2e90>] new_sync_read+0x17c/0x1c4 [ 3.252114] [<90000000004c5174>] vfs_read+0x138/0x1d0 [ 3.258694] [<90000000004c55f8>] ksys_read+0x70/0x100 [ 3.265265] [<9000000000cfde9c>] do_syscall+0x7c/0x94 [ 3.271820] [<9000000000202fe4>] handle_syscall+0xc4/0x160 [ 3.281824] ---[ end trace 8b484262b4b8c24c ]---",,,"[{""url"":""https://git.kernel.org/stable/c/09faf32c682ea4a547200b8b9e04d8b3c8e84b55"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2b6b8e011fab680a223b5e07a3c64774156ec6fe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/39373f6f89f52770a5405d30dddd08a27d097872"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3c891f7c6a4e90bb1199497552f24b26e46383bc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/701e32900683378d93693fec15d133e2c5f7ada2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/77755dc95ff2f9a3e473acc1e039f498629949ea"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8fbb57eabfc8ae67115cb47f904614c99d626a89"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e2b91997db286a5dd3cca6d5d9c20004851f22eb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f8f26cf69003a37ffa947631fc0e6fe6daee624a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49035,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-01-02T15:15:18.807,2025-01-09T20:22:11.780,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: media: s5p_cec: limit msg.len to CEC_MAX_MSG_SIZE I expect that the hardware will have limited this to 16, but just in case it hasn't, check for this corner case.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-770""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.333"",""matchCriteriaId"":""BD342BE3-BDB3-4031-9F0B-DE4F90246387""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.299"",""matchCriteriaId"":""2FE9A829-20E8-4929-AE9B-02761322A926""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.265"",""matchCriteriaId"":""ABED5D97-9B16-4CF6-86E3-D5F5C4358E35""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.224"",""matchCriteriaId"":""1D67A077-EB45-4ADE-94CD-F9A76F6C319C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""475D097C-AB5A-4CF5-899F-413077854ABD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""AB8B27B9-B41B-42D5-AE67-0A89A8A8EEB1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1609231f86760c1f6a429de7913dd795b9faa08c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2654e785bd4aa2439cdffbe7dc1ea30a0eddbfe4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4a449430ecfb199b99ba58af63c467eb53500b39"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7ccb40f26cbefa1c6dfd3418bea54c9518cdbd8a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/93f65ce036863893c164ca410938e0968964b26c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a2728bf9b6c65e46468c763e3dab7e04839d4e11"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cbfa26936f318b16ccf9ca31b8e8b30c0dc087bd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fc0f76dd5f116fa9291327024dda392f8b4e849c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49037,security@synology.com,2024-09-26T04:15:03.770,2024-10-08T16:08:55.390,Analyzed,[],Insertion of sensitive information into log file vulnerability in proxy settings component in Synology Drive Client before 3.3.0-15082 allows remote authenticated users to obtain sensitive information via unspecified vectors.,"[{""source"":""security@synology.com"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-532""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:a:synology:drive_client:*:*:*:*:*:desktop:*:*"",""versionEndExcluding"":""3.3.0-15082"",""matchCriteriaId"":""25A1D284-49F9-4F67-B9A3-6451803B1B36""}]}]}]","[{""url"":""https://www.synology.com/en-global/security/advisory/Synology_SA_24_10"",""source"":""security@synology.com"",""tags"":[""Vendor Advisory""]}]","[{""source"":""security@synology.com"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"",""baseScore"":6.5,""baseSeverity"":""MEDIUM"",""attackVector"":""NETWORK"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""NONE"",""availabilityImpact"":""NONE""},""exploitabilityScore"":2.8,""impactScore"":3.6},{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"",""baseScore"":6.5,""baseSeverity"":""MEDIUM"",""attackVector"":""NETWORK"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""NONE"",""availabilityImpact"":""NONE""},""exploitabilityScore"":2.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49038,security@synology.com,2024-09-26T04:15:04.940,2024-10-08T16:08:35.743,Analyzed,[],Inclusion of functionality from untrusted control sphere vulnerability in OpenSSL DLL component in Synology Drive Client before 3.3.0-15082 allows local users to execute arbitrary code via unspecified vectors.,"[{""source"":""security@synology.com"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-829""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:a:synology:drive_client:*:*:*:*:*:desktop:*:*"",""versionEndExcluding"":""3.3.0-15082"",""matchCriteriaId"":""25A1D284-49F9-4F67-B9A3-6451803B1B36""}]}]}]","[{""url"":""https://www.synology.com/en-global/security/advisory/Synology_SA_24_10"",""source"":""security@synology.com"",""tags"":[""Vendor Advisory""]}]","[{""source"":""security@synology.com"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9},{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49039,security@synology.com,2024-09-26T04:15:05.187,2024-10-08T16:08:08.507,Analyzed,[],Out-of-bounds write vulnerability in backup task management functionality in Synology Drive Client before 3.4.0-15721 allows local users with administrator privileges to execute arbitrary commands via unspecified vectors.,"[{""source"":""security@synology.com"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-787""}]},{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-787""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:a:synology:drive_client:*:*:*:*:*:desktop:*:*"",""versionEndExcluding"":""3.4.0-15721"",""matchCriteriaId"":""52C4C4A2-ADB8-4E6E-892C-7FC403068B36""}]}]}]","[{""url"":""https://www.synology.com/en-global/security/advisory/Synology_SA_24_10"",""source"":""security@synology.com"",""tags"":[""Vendor Advisory""]}]","[{""source"":""security@synology.com"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":6.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""HIGH"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":0.8,""impactScore"":5.9},{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":6.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""HIGH"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":0.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49040,security@synology.com,2024-09-26T04:15:05.390,2024-10-08T16:07:11.210,Analyzed,[],Buffer copy without checking size of input ('Classic Buffer Overflow') vulnerability in connection management functionality in Synology Drive Client before 3.4.0-15721 allows local users with administrator privileges to crash the client via unspecified vectors.,"[{""source"":""security@synology.com"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-120""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:a:synology:drive_client:*:*:*:*:*:desktop:*:*"",""versionEndExcluding"":""3.4.0-15721"",""matchCriteriaId"":""52C4C4A2-ADB8-4E6E-892C-7FC403068B36""}]}]}]","[{""url"":""https://www.synology.com/en-global/security/advisory/Synology_SA_24_10"",""source"":""security@synology.com"",""tags"":[""Vendor Advisory""]}]","[{""source"":""security@synology.com"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.4,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""HIGH"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":0.8,""impactScore"":3.6},{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.4,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""HIGH"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":0.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49041,security@synology.com,2024-09-26T04:15:05.620,2024-10-08T16:06:51.067,Analyzed,[],Buffer copy without checking size of input ('Classic Buffer Overflow') vulnerability in backup task management functionality in Synology Drive Client before 3.4.0-15721 allows local users with administrator privileges to crash the client via unspecified vectors.,"[{""source"":""security@synology.com"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-120""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:a:synology:drive_client:*:*:*:*:*:desktop:*:*"",""versionEndExcluding"":""3.5.0-16084"",""matchCriteriaId"":""FA63ED01-FFC4-4304-B511-8FF3260AEF74""}]}]}]","[{""url"":""https://www.synology.com/en-global/security/advisory/Synology_SA_24_10"",""source"":""security@synology.com"",""tags"":[""Vendor Advisory""]}]","[{""source"":""security@synology.com"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.4,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""HIGH"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":0.8,""impactScore"":3.6},{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.4,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""HIGH"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":0.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49043,cve@mitre.org,2025-01-26T06:15:21.000,2025-01-26T06:15:21.000,Awaiting Analysis,[],xmlXIncludeAddNode in xinclude.c in libxml2 before 2.11.0 has a use-after-free.,"[{""source"":""cve@mitre.org"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]",,"[{""url"":""https://github.com/php/php-src/issues/17467"",""source"":""cve@mitre.org""},{""url"":""https://gitlab.gnome.org/GNOME/libxml2/-/commit/5a19e21605398cef6a8b1452477a8705cb41562b"",""source"":""cve@mitre.org""}]","[{""source"":""cve@mitre.org"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H"",""baseScore"":8.1,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""NONE"",""userInteraction"":""NONE"",""scope"":""CHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.4,""impactScore"":6.0}]",,,,,,,,
CVE-2022-49044,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:41.680,2025-02-26T07:00:41.680,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: dm integrity: fix memory corruption when tag_size is less than digest size It is possible to set up dm-integrity in such a way that the ""tag_size"" parameter is less than the actual digest size. In this situation, a part of the digest beyond tag_size is ignored. In this case, dm-integrity would write beyond the end of the ic->recalc_tags array and corrupt memory. The corruption happened in integrity_recalc->integrity_sector_checksum->crypto_shash_final. Fix this corruption by increasing the tags array so that it has enough padding at the end to accomodate the loop in integrity_recalc() being able to write a full digest size for the last member of the tags array.",,,"[{""url"":""https://git.kernel.org/stable/c/08c1af8f1c13bbf210f1760132f4df24d0ed46d6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4d485cf9b609709e45d5113e6e2b1b01254b2fe9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6a95d91c0b315c965198f6ab7dec7c94129e17e0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6b4bf97587ef6c1927a78934b700204920655123"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7f84c937222944c03f4615ca4742df6bed0e5adf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cd02b2687d66f0a8e716384de4b9a0671331f1dc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49045,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:41.790,2025-03-02T15:15:11.130,Rejected,[],Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.,,,[],,,,,,,,,
CVE-2022-49046,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:41.890,2025-04-10T13:15:43.390,Modified,[],"In the Linux kernel, the following vulnerability has been resolved: i2c: dev: check return value when calling dev_set_name() If dev_set_name() fails, the dev_name() is null, check the return value of dev_set_name() to avoid the null-ptr-deref.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.4.225"",""versionEndExcluding"":""4.5"",""matchCriteriaId"":""F615000A-22D0-462C-9FE0-FD0C0E87F230""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.9.225"",""versionEndExcluding"":""4.10"",""matchCriteriaId"":""1F06A06D-F043-4FC9-8009-F0FF564F7BE3""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.14.182"",""versionEndExcluding"":""4.15"",""matchCriteriaId"":""8ABA63F0-043F-4A44-A038-EB4D78183624""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.19.125"",""versionEndExcluding"":""4.20"",""matchCriteriaId"":""DE8BC53C-081C-4C0C-8FA5-AFEA4ACDB827""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4.43"",""versionEndExcluding"":""5.5"",""matchCriteriaId"":""C0BB4958-AAEF-4720-B7E3-1682593B506A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.6.15"",""versionEndExcluding"":""5.15.35"",""matchCriteriaId"":""5705436C-E633-494B-88B3-ED262B8D5848""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.4"",""matchCriteriaId"":""E22C86CB-06CD-4D16-AB2A-F21EE8199262""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""6AD94161-84BB-42E6-9882-4FC0C42E9FC1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""7AB06DDF-3C2B-416D-B448-E990D8FF67A9""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2e539b17d4cbe5fb8b5152dd9a6e4a8828f97db2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2f345bb14ad4744950499ff222e2899209297afa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/993eb48fa199b5f476df8204e652eff63dd19361"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c74d77a2d07744147d734138acd6ce9dba715e5d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49047,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:41.983,2025-03-24T17:45:00.503,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ep93xx: clock: Fix UAF in ep93xx_clk_register_gate() arch/arm/mach-ep93xx/clock.c:154:2: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc] arch/arm/mach-ep93xx/clock.c:151:2: note: Taking true branch if (IS_ERR(clk)) ^ arch/arm/mach-ep93xx/clock.c:152:3: note: Memory is released kfree(psc); ^~~~~~~~~~ arch/arm/mach-ep93xx/clock.c:154:2: note: Use of memory after it is freed return &psc->hw; ^ ~~~~~~~~","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.4"",""matchCriteriaId"":""E22C86CB-06CD-4D16-AB2A-F21EE8199262""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""6AD94161-84BB-42E6-9882-4FC0C42E9FC1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""7AB06DDF-3C2B-416D-B448-E990D8FF67A9""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0f12166872da46c6b57ba2f1314bbf310b3bf017"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3b68b08885217abd9c57ff9b3bb3eb173eee02a9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49048,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:42.073,2025-02-26T07:00:42.073,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ipv6: fix panic when forwarding a pkt with no in6 dev kongweibin reported a kernel panic in ip6_forward() when input interface has no in6 dev associated. The following tc commands were used to reproduce this panic: tc qdisc del dev vxlan100 root tc qdisc add dev vxlan100 root netem corrupt 5%",,,"[{""url"":""https://git.kernel.org/stable/c/74b68f5249f16c5f7f675d0f604fa6ae20e3a151"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a263712ba8c9ded25dd9d2d5ced11bcea5b33a3e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ab2f5afb7af5c68389e8c7dd29e0a98fbeaaa435"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/adee01bbf6cb5b3e4ed08be8ff866aac90f13836"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e3fa461d8b0e185b7da8a101fe94dfe6dd500ac0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e69fb3de87a8923e5931a272a38fa3cceb01da44"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49049,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:42.170,2025-04-16T19:15:50.377,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: mm/secretmem: fix panic when growing a memfd_secret When one tries to grow an existing memfd_secret with ftruncate, one gets a panic [1]. For example, doing the following reliably induces the panic: fd = memfd_secret(); ftruncate(fd, 10); ptr = mmap(NULL, 10, PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0); strcpy(ptr, ""123456789""); munmap(ptr, 10); ftruncate(fd, 20); The basic reason for this is, when we grow with ftruncate, we call down into simple_setattr, and then truncate_inode_pages_range, and eventually we try to zero part of the memory. The normal truncation code does this via the direct map (i.e., it calls page_address() and hands that to memset()). For memfd_secret though, we specifically don't map our pages via the direct map (i.e. we call set_direct_map_invalid_noflush() on every fault). So the address returned by page_address() isn't useful, and when we try to memset() with it we panic. This patch avoids the panic by implementing a custom setattr for memfd_secret, which detects resizes specifically (setting the size for the first time works just fine, since there are no existing pages to try to zero), and rejects them with EINVAL. One could argue growing should be supported, but I think that will require a significantly more lengthy change. So, I propose a minimal fix for the benefit of stable kernels, and then perhaps to extend memfd_secret to support growing in a separate patch. [1]: BUG: unable to handle page fault for address: ffffa0a889277028 #PF: supervisor write access in kernel mode #PF: error_code(0x0002) - not-present page PGD afa01067 P4D afa01067 PUD 83f909067 PMD 83f8bf067 PTE 800ffffef6d88060 Oops: 0002 [#1] PREEMPT SMP DEBUG_PAGEALLOC PTI CPU: 0 PID: 281 Comm: repro Not tainted 5.17.0-dbg-DEV #1 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014 RIP: 0010:memset_erms+0x9/0x10 Code: c1 e9 03 40 0f b6 f6 48 b8 01 01 01 01 01 01 01 01 48 0f af c6 f3 48 ab 89 d1 f3 aa 4c 89 c8 c3 90 49 89 f9 40 88 f0 48 89 d1 <f3> aa 4c 89 c8 c3 90 49 89 fa 40 0f b6 ce 48 b8 01 01 01 01 01 01 RSP: 0018:ffffb932c09afbf0 EFLAGS: 00010246 RAX: 0000000000000000 RBX: ffffda63c4249dc0 RCX: 0000000000000fd8 RDX: 0000000000000fd8 RSI: 0000000000000000 RDI: ffffa0a889277028 RBP: ffffb932c09afc00 R08: 0000000000001000 R09: ffffa0a889277028 R10: 0000000000020023 R11: 0000000000000000 R12: ffffda63c4249dc0 R13: ffffa0a890d70d98 R14: 0000000000000028 R15: 0000000000000fd8 FS: 00007f7294899580(0000) GS:ffffa0af9bc00000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: ffffa0a889277028 CR3: 0000000107ef6006 CR4: 0000000000370ef0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Call Trace: ? zero_user_segments+0x82/0x190 truncate_inode_partial_folio+0xd4/0x2a0 truncate_inode_pages_range+0x380/0x830 truncate_setsize+0x63/0x80 simple_setattr+0x37/0x60 notify_change+0x3d8/0x4d0 do_sys_ftruncate+0x162/0x1d0 __x64_sys_ftruncate+0x1c/0x20 do_syscall_64+0x44/0xa0 entry_SYSCALL_64_after_hwframe+0x44/0xae Modules linked in: xhci_pci xhci_hcd virtio_net net_failover failover virtio_blk virtio_balloon uhci_hcd ohci_pci ohci_hcd evdev ehci_pci ehci_hcd 9pnet_virtio 9p netfs 9pnet CR2: ffffa0a889277028 [lkp@intel.com: secretmem_iops can be static] [axelrasmussen@google.com: return EINVAL]",,,"[{""url"":""https://git.kernel.org/stable/c/9d3b877daf805fed29be8f61aa3d0ea37df82c7b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b6d17c67885a5624e96eb30c4178c65eea8374bf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f9b141f93659e09a52e28791ccbaf69c273b8e92"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49050,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:42.270,2025-02-26T07:00:42.270,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: memory: renesas-rpc-if: fix platform-device leak in error path Make sure to free the flash platform device in the event that registration fails during probe.",,,"[{""url"":""https://git.kernel.org/stable/c/05d1824a7fb43ab9adb1eb82404954af81d8c984"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/66b9b707ea4dcafca92b6261c6924652914e3b73"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b452dbf24d7d9a990d70118462925f6ee287d135"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c089ffc846c85f200db34ad208338f4f81a6d82d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49051,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:42.363,2025-02-26T07:00:42.363,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: usb: aqc111: Fix out-of-bounds accesses in RX fixup aqc111_rx_fixup() contains several out-of-bounds accesses that can be triggered by a malicious (or defective) USB device, in particular: - The metadata array (desc_offset..desc_offset+2*pkt_count) can be out of bounds, causing OOB reads and (on big-endian systems) OOB endianness flips. - A packet can overlap the metadata array, causing a later OOB endianness flip to corrupt data used by a cloned SKB that has already been handed off into the network stack. - A packet SKB can be constructed whose tail is far beyond its end, causing out-of-bounds heap data to be considered part of the SKB's data. Found doing variant analysis. Tested it with another driver (ax88179_178a), since I don't have a aqc111 device to test it, but the code looks very similar.",,,"[{""url"":""https://git.kernel.org/stable/c/36311fe98f55dea9200c69e2dd6d6ddb8fc94080"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/404998a137bcb8a926f7c949030afbe285472593"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/afb8e246527536848b9b4025b40e613edf776a9d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b416898442f2b6aa9f1b2f2968ce07e3abaa05f7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d90df6da50c56ad8b1a132e3cf86b6cdf8f507b7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49052,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:42.463,2025-02-26T07:00:42.463,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: mm: fix unexpected zeroed page mapping with zram swap Two processes under CLONE_VM cloning, user process can be corrupted by seeing zeroed page unexpectedly. CPU A CPU B do_swap_page do_swap_page SWP_SYNCHRONOUS_IO path SWP_SYNCHRONOUS_IO path swap_readpage valid data swap_slot_free_notify delete zram entry swap_readpage zeroed(invalid) data pte_lock map the *zero data* to userspace pte_unlock pte_lock if (!pte_same) goto out_nomap; pte_unlock return and next refault will read zeroed data The swap_slot_free_notify is bogus for CLONE_VM case since it doesn't increase the refcount of swap slot at copy_mm so it couldn't catch up whether it's safe or not to discard data from backing device. In the case, only the lock it could rely on to synchronize swap slot freeing is page table lock. Thus, this patch gets rid of the swap_slot_free_notify function. With this patch, CPU A will see correct data. CPU A CPU B do_swap_page do_swap_page SWP_SYNCHRONOUS_IO path SWP_SYNCHRONOUS_IO path swap_readpage original data pte_lock map the original data swap_free swap_range_free bd_disk->fops->swap_slot_free_notify swap_readpage read zeroed data pte_unlock pte_lock if (!pte_same) goto out_nomap; pte_unlock return on next refault will see mapped data by CPU B The concern of the patch would increase memory consumption since it could keep wasted memory with compressed form in zram as well as uncompressed form in address space. However, most of cases of zram uses no readahead and do_swap_page is followed by swap_free so it will free the compressed form from in zram quickly.",,,"[{""url"":""https://git.kernel.org/stable/c/12ba1d38115a101c45d8e0ca3aa1181fd148e57f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/20ed94f8181a25212e7404e44958e234f407624b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/afac4b88699a06c8b9369f9d759a1ec3c254b788"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e914d8f00391520ecc4495dd0ca0124538ab7119"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f098f8b9820fe3f2e41aefc4329dfe8a3859d1c1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f86d55cf616199404c05f5b0c5c41b17351baa02"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49053,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:42.563,2025-03-24T17:43:58.983,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: target: tcmu: Fix possible page UAF tcmu_try_get_data_page() looks up pages under cmdr_lock, but it does not take refcount properly and just returns page pointer. When tcmu_try_get_data_page() returns, the returned page may have been freed by tcmu_blocks_release(). We need to get_page() under cmdr_lock to avoid concurrent tcmu_blocks_release().","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.14.276"",""matchCriteriaId"":""3088C36B-F9EB-4609-A0D0-EB411E2E915B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.239"",""matchCriteriaId"":""712D9B45-4B53-4563-94B5-F758AFBBFB0D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.190"",""matchCriteriaId"":""E0ADBA6D-47D8-4518-8D10-9B9196DE680B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.112"",""matchCriteriaId"":""0460A5D2-3024-497A-B799-23E025B91972""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.35"",""matchCriteriaId"":""05ABCC3F-88A9-47F9-9D40-8665747B2E43""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.4"",""matchCriteriaId"":""E22C86CB-06CD-4D16-AB2A-F21EE8199262""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""6AD94161-84BB-42E6-9882-4FC0C42E9FC1""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/a6968f7a367f128d120447360734344d5a3d5336"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a9564d84ed9f6ee71017d062d0d2182154294a4b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/aec36b98a1bbaa84bfd8299a306e4c12314af626"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b7f3b5d70c834f49f7d87a2f2ed1c6284d9a0322"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d7c5d79e50be6e06b669141e3db1f977a0dd4e8e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e3e0e067d5b34e4a68e3cc55f8eebc413f56f8ed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fb7a5115422fbd6a4d505e8844f1ef5529f10489"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49054,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:42.667,2025-02-26T07:00:42.667,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: Drivers: hv: vmbus: Deactivate sysctl_record_panic_msg by default in isolated guests hv_panic_page might contain guest-sensitive information, do not dump it over to Hyper-V by default in isolated guests. While at it, update some comments in hyperv_{panic,die}_event().",,,"[{""url"":""https://git.kernel.org/stable/c/1b576e81d31b56b248316b8ff816b1cc5c4407c7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6230bc50d6d21cae4c084766623d0a6d17958721"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9f8b577f7b43b2170628d6c537252785dcc2dcea"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49055,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:42.760,2025-03-18T19:02:42.010,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/amdkfd: Check for potential null return of kmalloc_array() As the kmalloc_array() may return null, the 'event_waiters[i].wait' would lead to null-pointer dereference. Therefore, it is better to check the return value of kmalloc_array() to avoid this confusion.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.311"",""matchCriteriaId"":""C86EFD13-93D4-4385-83E8-C665BE8F570F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.276"",""matchCriteriaId"":""6D9B028C-6313-47F9-94B7-5F8122345E49""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.239"",""matchCriteriaId"":""712D9B45-4B53-4563-94B5-F758AFBBFB0D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.190"",""matchCriteriaId"":""E0ADBA6D-47D8-4518-8D10-9B9196DE680B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.112"",""matchCriteriaId"":""0460A5D2-3024-497A-B799-23E025B91972""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.35"",""matchCriteriaId"":""05ABCC3F-88A9-47F9-9D40-8665747B2E43""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.4"",""matchCriteriaId"":""E22C86CB-06CD-4D16-AB2A-F21EE8199262""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""6AD94161-84BB-42E6-9882-4FC0C42E9FC1""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0a692c625e373fef692ffbc7fc41f8a025f01cb7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1d7a5aae884ca727d41c7ed15d4c82fdb67c040c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/32cf90a521dcc0f136db7ee5ba32bfe5f79e460e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/40bf32dbfef866c83a3e74800b81d79e52b6d20b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/94869bb0de69a812f70231b0eb480bb2f7ae73a6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c7a268b33882d5feaafd29c1734456f41ba41396"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ebbb7bb9e80305820dc2328a371c1b35679f2667"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f2658d5966bcee8c3eb487875f459756d4f7cdfc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49056,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:42.863,2025-05-20T14:15:26.397,Rejected,[],Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.,,,[],,,,,,,,,
CVE-2022-49057,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:42.957,2025-02-26T07:00:42.957,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: block: null_blk: end timed out poll request When poll request is timed out, it is removed from the poll list, but not completed, so the request is leaked, and never get chance to complete. Fix the issue by ending it in timeout handler.",,,"[{""url"":""https://git.kernel.org/stable/c/3e3876d322aef82416ecc496a4d4a587e0fdf7a3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/407d09a22f3f685fd634aa5d05840c64b23bfebc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49058,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:43.047,2025-03-18T19:08:08.200,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: cifs: potential buffer overflow in handling symlinks Smatch printed a warning: arch/x86/crypto/poly1305_glue.c:198 poly1305_update_arch() error: __memcpy() 'dctx->buf' too small (16 vs u32max) It's caused because Smatch marks 'link_len' as untrusted since it comes from sscanf(). Add a check to ensure that 'link_len' is not larger than the size of the 'link_str' buffer.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-120""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.37"",""versionEndExcluding"":""4.9.311"",""matchCriteriaId"":""4ECFAA1B-4193-4D30-B7CA-C57E2AFD1132""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.276"",""matchCriteriaId"":""6D9B028C-6313-47F9-94B7-5F8122345E49""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.239"",""matchCriteriaId"":""712D9B45-4B53-4563-94B5-F758AFBBFB0D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.190"",""matchCriteriaId"":""E0ADBA6D-47D8-4518-8D10-9B9196DE680B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.112"",""matchCriteriaId"":""0460A5D2-3024-497A-B799-23E025B91972""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.35"",""matchCriteriaId"":""05ABCC3F-88A9-47F9-9D40-8665747B2E43""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.4"",""matchCriteriaId"":""E22C86CB-06CD-4D16-AB2A-F21EE8199262""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""6AD94161-84BB-42E6-9882-4FC0C42E9FC1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""7AB06DDF-3C2B-416D-B448-E990D8FF67A9""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1316c28569a80ab3596eeab05bf5e01991e7e739"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/22d658c6c5affed10c8907e67160cef0b6c92186"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3e582749e742e662a8e9bb37cffac62dccaaa1e2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4e166a41180be2f1e66bbb6d46448e80a9a5ec05"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/515e7ba11ef043d6febe69389949c8ef5f25e9d0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/64c4a37ac04eeb43c42d272f6e6c8c12bfcf4304"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9901b07ba42b39266b34a888e48d7306fd707bee"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/eb5f51756944735ac70cd8bb38637cc202e29c91"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49059,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:43.150,2025-03-24T17:43:25.917,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: nfc: nci: add flush_workqueue to prevent uaf Our detector found a concurrent use-after-free bug when detaching an NCI device. The main reason for this bug is the unexpected scheduling between the used delayed mechanism (timer and workqueue). The race can be demonstrated below: Thread-1 Thread-2 | nci_dev_up() | nci_open_device() | __nci_request(nci_reset_req) | nci_send_cmd | queue_work(cmd_work) nci_unregister_device() | nci_close_device() | ... del_timer_sync(cmd_timer)[1] | ... | Worker nci_free_device() | nci_cmd_work() kfree(ndev)[3] | mod_timer(cmd_timer)[2] In short, the cleanup routine thought that the cmd_timer has already been detached by [1] but the mod_timer can re-attach the timer [2], even it is already released [3], resulting in UAF. This UAF is easy to trigger, crash trace by POC is like below [ 66.703713] ================================================================== [ 66.703974] BUG: KASAN: use-after-free in enqueue_timer+0x448/0x490 [ 66.703974] Write of size 8 at addr ffff888009fb7058 by task kworker/u4:1/33 [ 66.703974] [ 66.703974] CPU: 1 PID: 33 Comm: kworker/u4:1 Not tainted 5.18.0-rc2 #5 [ 66.703974] Workqueue: nfc2_nci_cmd_wq nci_cmd_work [ 66.703974] Call Trace: [ 66.703974] <TASK> [ 66.703974] dump_stack_lvl+0x57/0x7d [ 66.703974] print_report.cold+0x5e/0x5db [ 66.703974] ? enqueue_timer+0x448/0x490 [ 66.703974] kasan_report+0xbe/0x1c0 [ 66.703974] ? enqueue_timer+0x448/0x490 [ 66.703974] enqueue_timer+0x448/0x490 [ 66.703974] __mod_timer+0x5e6/0xb80 [ 66.703974] ? mark_held_locks+0x9e/0xe0 [ 66.703974] ? try_to_del_timer_sync+0xf0/0xf0 [ 66.703974] ? lockdep_hardirqs_on_prepare+0x17b/0x410 [ 66.703974] ? queue_work_on+0x61/0x80 [ 66.703974] ? lockdep_hardirqs_on+0xbf/0x130 [ 66.703974] process_one_work+0x8bb/0x1510 [ 66.703974] ? lockdep_hardirqs_on_prepare+0x410/0x410 [ 66.703974] ? pwq_dec_nr_in_flight+0x230/0x230 [ 66.703974] ? rwlock_bug.part.0+0x90/0x90 [ 66.703974] ? _raw_spin_lock_irq+0x41/0x50 [ 66.703974] worker_thread+0x575/0x1190 [ 66.703974] ? process_one_work+0x1510/0x1510 [ 66.703974] kthread+0x2a0/0x340 [ 66.703974] ? kthread_complete_and_exit+0x20/0x20 [ 66.703974] ret_from_fork+0x22/0x30 [ 66.703974] </TASK> [ 66.703974] [ 66.703974] Allocated by task 267: [ 66.703974] kasan_save_stack+0x1e/0x40 [ 66.703974] __kasan_kmalloc+0x81/0xa0 [ 66.703974] nci_allocate_device+0xd3/0x390 [ 66.703974] nfcmrvl_nci_register_dev+0x183/0x2c0 [ 66.703974] nfcmrvl_nci_uart_open+0xf2/0x1dd [ 66.703974] nci_uart_tty_ioctl+0x2c3/0x4a0 [ 66.703974] tty_ioctl+0x764/0x1310 [ 66.703974] __x64_sys_ioctl+0x122/0x190 [ 66.703974] do_syscall_64+0x3b/0x90 [ 66.703974] entry_SYSCALL_64_after_hwframe+0x44/0xae [ 66.703974] [ 66.703974] Freed by task 406: [ 66.703974] kasan_save_stack+0x1e/0x40 [ 66.703974] kasan_set_track+0x21/0x30 [ 66.703974] kasan_set_free_info+0x20/0x30 [ 66.703974] __kasan_slab_free+0x108/0x170 [ 66.703974] kfree+0xb0/0x330 [ 66.703974] nfcmrvl_nci_unregister_dev+0x90/0xd0 [ 66.703974] nci_uart_tty_close+0xdf/0x180 [ 66.703974] tty_ldisc_kill+0x73/0x110 [ 66.703974] tty_ldisc_hangup+0x281/0x5b0 [ 66.703974] __tty_hangup.part.0+0x431/0x890 [ 66.703974] tty_release+0x3a8/0xc80 [ 66.703974] __fput+0x1f0/0x8c0 [ 66.703974] task_work_run+0xc9/0x170 [ 66.703974] exit_to_user_mode_prepare+0x194/0x1a0 [ 66.703974] syscall_exit_to_user_mode+0x19/0x50 [ 66.703974] do_syscall_64+0x48/0x90 [ 66.703974] entry_SYSCALL_64_after_hwframe+0x44/0x ---truncated---","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.2"",""versionEndExcluding"":""4.9.311"",""matchCriteriaId"":""91A60DD7-6C23-4025-B18F-3CE419A63086""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.276"",""matchCriteriaId"":""6D9B028C-6313-47F9-94B7-5F8122345E49""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.239"",""matchCriteriaId"":""712D9B45-4B53-4563-94B5-F758AFBBFB0D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.190"",""matchCriteriaId"":""E0ADBA6D-47D8-4518-8D10-9B9196DE680B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.112"",""matchCriteriaId"":""0460A5D2-3024-497A-B799-23E025B91972""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.35"",""matchCriteriaId"":""05ABCC3F-88A9-47F9-9D40-8665747B2E43""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.4"",""matchCriteriaId"":""E22C86CB-06CD-4D16-AB2A-F21EE8199262""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""6AD94161-84BB-42E6-9882-4FC0C42E9FC1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""7AB06DDF-3C2B-416D-B448-E990D8FF67A9""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1a1748d0dd0f0a98535c6baeef671c8722107639"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5c63ad2b0a267a524c12c88acb1ba9c2d109a801"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/67677050cecbe0edfdd81cd508415e9636ba7c65"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7d3232214ca4ea8f7d18df264c3b254aa8089d7f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9d243aff5f7e6b04e907c617426bbdf26e996ac8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9ded5ae40f4fe37fcc28f36d76bf45df20be5432"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/edd4600120641e1714e30112e69a548cfb68e067"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ef27324e2cb7bb24542d6cb2571740eefe6b00dc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49060,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:43.257,2025-03-18T18:15:10.113,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net/smc: Fix NULL pointer dereference in smc_pnet_find_ib() dev_name() was called with dev.parent as argument but without to NULL-check it before. Solve this by checking the pointer before the call to dev_name().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.1"",""versionEndExcluding"":""5.4.190"",""matchCriteriaId"":""710BF4DC-05B8-458F-A722-601C62E5727A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.112"",""matchCriteriaId"":""0460A5D2-3024-497A-B799-23E025B91972""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.35"",""matchCriteriaId"":""05ABCC3F-88A9-47F9-9D40-8665747B2E43""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.4"",""matchCriteriaId"":""E22C86CB-06CD-4D16-AB2A-F21EE8199262""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""6AD94161-84BB-42E6-9882-4FC0C42E9FC1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""7AB06DDF-3C2B-416D-B448-E990D8FF67A9""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/22025513ced3d599ee8b24169141c95cf2467a4a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/35b91e49bc80ca944a8679c3b139ddaf2f8eea0f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3a523807f01455fe9a0c1a433f27cd4411ee400f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a05f5e26cb8bb4d07e0595545fcad1bb406f0085"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d22f4f977236f97e01255a80bca2ea93a8094fc8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49061,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:43.353,2025-03-18T18:27:09.130,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: ethernet: stmmac: fix altr_tse_pcs function when using a fixed-link When using a fixed-link, the altr_tse_pcs driver crashes due to null-pointer dereference as no phy_device is provided to tse_pcs_fix_mac_speed function. Fix this by adding a check for phy_dev before calling the tse_pcs_fix_mac_speed() function. Also clean up the tse_pcs_fix_mac_speed function a bit. There is no need to check for splitter_base and sgmii_adapter_base because the driver will fail if these 2 variables are not derived from the device tree.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.8"",""versionEndExcluding"":""5.4.190"",""matchCriteriaId"":""F4E320DD-6380-49A1-A405-A9F34A6A0EF0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.112"",""matchCriteriaId"":""0460A5D2-3024-497A-B799-23E025B91972""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.35"",""matchCriteriaId"":""05ABCC3F-88A9-47F9-9D40-8665747B2E43""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.4"",""matchCriteriaId"":""E22C86CB-06CD-4D16-AB2A-F21EE8199262""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""6AD94161-84BB-42E6-9882-4FC0C42E9FC1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""7AB06DDF-3C2B-416D-B448-E990D8FF67A9""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/08d5e3e954537931c8da7428034808d202e98299"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/62a48383ebe2e159fd68425dd3e16d4c6bd6599a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6c020f05253df04c3480b586fe188a3582740049"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7e59fdf9547c4f948d1d917ec7ffa5fb5ac53bdb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a6aaa00324240967272b451bfa772547bd576ee6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49062,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:43.450,2025-03-18T18:32:22.413,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: cachefiles: Fix KASAN slab-out-of-bounds in cachefiles_set_volume_xattr Use the actual length of volume coherency data when setting the xattr to avoid the following KASAN report. BUG: KASAN: slab-out-of-bounds in cachefiles_set_volume_xattr+0xa0/0x350 [cachefiles] Write of size 4 at addr ffff888101e02af4 by task kworker/6:0/1347 CPU: 6 PID: 1347 Comm: kworker/6:0 Kdump: loaded Not tainted 5.18.0-rc1-nfs-fscache-netfs+ #13 Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.14.0-4.fc34 04/01/2014 Workqueue: events fscache_create_volume_work [fscache] Call Trace: <TASK> dump_stack_lvl+0x45/0x5a print_report.cold+0x5e/0x5db ? __lock_text_start+0x8/0x8 ? cachefiles_set_volume_xattr+0xa0/0x350 [cachefiles] kasan_report+0xab/0x120 ? cachefiles_set_volume_xattr+0xa0/0x350 [cachefiles] kasan_check_range+0xf5/0x1d0 memcpy+0x39/0x60 cachefiles_set_volume_xattr+0xa0/0x350 [cachefiles] cachefiles_acquire_volume+0x2be/0x500 [cachefiles] ? __cachefiles_free_volume+0x90/0x90 [cachefiles] fscache_create_volume_work+0x68/0x160 [fscache] process_one_work+0x3b7/0x6a0 worker_thread+0x2c4/0x650 ? process_one_work+0x6a0/0x6a0 kthread+0x16c/0x1a0 ? kthread_complete_and_exit+0x20/0x20 ret_from_fork+0x22/0x30 </TASK> Allocated by task 1347: kasan_save_stack+0x1e/0x40 __kasan_kmalloc+0x81/0xa0 cachefiles_set_volume_xattr+0x76/0x350 [cachefiles] cachefiles_acquire_volume+0x2be/0x500 [cachefiles] fscache_create_volume_work+0x68/0x160 [fscache] process_one_work+0x3b7/0x6a0 worker_thread+0x2c4/0x650 kthread+0x16c/0x1a0 ret_from_fork+0x22/0x30 The buggy address belongs to the object at ffff888101e02af0 which belongs to the cache kmalloc-8 of size 8 The buggy address is located 4 bytes inside of 8-byte region [ffff888101e02af0, ffff888101e02af8) The buggy address belongs to the physical page: page:00000000a2292d70 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x101e02 flags: 0x17ffffc0000200(slab|node=0|zone=2|lastcpupid=0x1fffff) raw: 0017ffffc0000200 0000000000000000 dead000000000001 ffff888100042280 raw: 0000000000000000 0000000080660066 00000001ffffffff 0000000000000000 page dumped because: kasan: bad access detected Memory state around the buggy address: ffff888101e02980: fc 00 fc fc fc fc 00 fc fc fc fc 00 fc fc fc fc ffff888101e02a00: 00 fc fc fc fc 00 fc fc fc fc 00 fc fc fc fc 00 >ffff888101e02a80: fc fc fc fc 00 fc fc fc fc 00 fc fc fc fc 04 fc ^ ffff888101e02b00: fc fc fc 00 fc fc fc fc 00 fc fc fc fc 00 fc fc ffff888101e02b80: fc fc 00 fc fc fc fc 00 fc fc fc fc 00 fc fc fc ==================================================================","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-787""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.4"",""matchCriteriaId"":""62D8CC4C-A7BD-4651-8B8B-B5D5AABB585E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""6AD94161-84BB-42E6-9882-4FC0C42E9FC1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""7AB06DDF-3C2B-416D-B448-E990D8FF67A9""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/09a5df1b88c8f126c8ff9938edf160edd4e92f42"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7b2f6c306601240635c72caa61f682e74d4591b2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49063,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:43.547,2025-06-04T13:15:24.193,Modified,[],"In the Linux kernel, the following vulnerability has been resolved: ice: arfs: fix use-after-free when freeing @rx_cpu_rmap The CI testing bots triggered the following splat: [ 718.203054] BUG: KASAN: use-after-free in free_irq_cpu_rmap+0x53/0x80 [ 718.206349] Read of size 4 at addr ffff8881bd127e00 by task sh/20834 [ 718.212852] CPU: 28 PID: 20834 Comm: sh Kdump: loaded Tainted: G S W IOE 5.17.0-rc8_nextqueue-devqueue-02643-g23f3121aca93 #1 [ 718.219695] Hardware name: Intel Corporation S2600WFT/S2600WFT, BIOS SE5C620.86B.02.01.0012.070720200218 07/07/2020 [ 718.223418] Call Trace: [ 718.227139] [ 718.230783] dump_stack_lvl+0x33/0x42 [ 718.234431] print_address_description.constprop.9+0x21/0x170 [ 718.238177] ? free_irq_cpu_rmap+0x53/0x80 [ 718.241885] ? free_irq_cpu_rmap+0x53/0x80 [ 718.245539] kasan_report.cold.18+0x7f/0x11b [ 718.249197] ? free_irq_cpu_rmap+0x53/0x80 [ 718.252852] free_irq_cpu_rmap+0x53/0x80 [ 718.256471] ice_free_cpu_rx_rmap.part.11+0x37/0x50 [ice] [ 718.260174] ice_remove_arfs+0x5f/0x70 [ice] [ 718.263810] ice_rebuild_arfs+0x3b/0x70 [ice] [ 718.267419] ice_rebuild+0x39c/0xb60 [ice] [ 718.270974] ? asm_sysvec_apic_timer_interrupt+0x12/0x20 [ 718.274472] ? ice_init_phy_user_cfg+0x360/0x360 [ice] [ 718.278033] ? delay_tsc+0x4a/0xb0 [ 718.281513] ? preempt_count_sub+0x14/0xc0 [ 718.284984] ? delay_tsc+0x8f/0xb0 [ 718.288463] ice_do_reset+0x92/0xf0 [ice] [ 718.292014] ice_pci_err_resume+0x91/0xf0 [ice] [ 718.295561] pci_reset_function+0x53/0x80 <...> [ 718.393035] Allocated by task 690: [ 718.433497] Freed by task 20834: [ 718.495688] Last potentially related work creation: [ 718.568966] The buggy address belongs to the object at ffff8881bd127e00 which belongs to the cache kmalloc-96 of size 96 [ 718.574085] The buggy address is located 0 bytes inside of 96-byte region [ffff8881bd127e00, ffff8881bd127e60) [ 718.579265] The buggy address belongs to the page: [ 718.598905] Memory state around the buggy address: [ 718.601809] ffff8881bd127d00: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc [ 718.604796] ffff8881bd127d80: 00 00 00 00 00 00 00 00 00 00 fc fc fc fc fc fc [ 718.607794] >ffff8881bd127e00: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc [ 718.610811] ^ [ 718.613819] ffff8881bd127e80: 00 00 00 00 00 00 00 00 00 00 00 00 fc fc fc fc [ 718.617107] ffff8881bd127f00: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc This is due to that free_irq_cpu_rmap() is always being called *after* (devm_)free_irq() and thus it tries to work with IRQ descs already freed. For example, on device reset the driver frees the rmap right before allocating a new one (the splat above). Make rmap creation and freeing function symmetrical with {request,free}_irq() calls i.e. do that on ifup/ifdown instead of device probe/remove/resume. These operations can be performed independently from the actual device aRFS configuration. Also, make sure ice_vsi_free_irq() clears IRQ affinity notifiers only when aRFS is disabled -- otherwise, CPU rmap sets and clears its own and they must not be touched manually.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.8"",""versionEndExcluding"":""5.17.4"",""matchCriteriaId"":""FE6F929C-D6F1-42F9-9391-3FC3C81C7651""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""6AD94161-84BB-42E6-9882-4FC0C42E9FC1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""7AB06DDF-3C2B-416D-B448-E990D8FF67A9""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/618df75f2e30c7838a3e010ca32cd4893ec9fe33"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ba2f6ec28733fb6b24ed086e676df3df4c138f3f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d08d2fb6d99d82da1c63aba5c0d1c6f237e150f3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d7442f512b71fc63a99c8a801422dde4fbbf9f93"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49064,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:43.637,2025-02-26T07:00:43.637,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: cachefiles: unmark inode in use in error path Unmark inode in use if error encountered. If the in-use flag leakage occurs in cachefiles_open_file(), Cachefiles will complain ""Inode already in use"" when later another cookie with the same index key is looked up. If the in-use flag leakage occurs in cachefiles_create_tmpfile(), though the ""Inode already in use"" warning won't be triggered, fix the leakage anyway.",,,"[{""url"":""https://git.kernel.org/stable/c/b2055abafd3d4ee0376fb3eed5cae866316995a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ea5dc046127e857a7873ae55fd57c866e9e86fb2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49065,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:43.723,2025-03-18T18:45:18.623,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: SUNRPC: Fix the svc_deferred_event trace class Fix a NULL deref crash that occurs when an svc_rqst is deferred while the sunrpc tracing subsystem is enabled. svc_revisit() sets dr->xprt to NULL, so it can't be relied upon in the tracepoint to provide the remote's address. Unfortunately we can't revert the ""svc_deferred_class"" hunk in commit ece200ddd54b (""sunrpc: Save remote presentation address in svc_xprt for trace events"") because there is now a specific check of event format specifiers for unsafe dereferences. The warning that check emits is: event svc_defer_recv has unsafe dereference of argument 1 A ""%pISpc"" format specifier with a ""struct sockaddr *"" is indeed flagged by this check. Instead, take the brute-force approach used by the svcrdma_qp_error tracepoint. Convert the dr::addr field into a presentation address in the TP_fast_assign() arm of the trace event, and store that as a string. This fix can be backported to -stable kernels. In the meantime, commit c6ced22997ad (""tracing: Update print fmt check to handle new __get_sockaddr() macro"") is now in v5.18, so this wonky fix can be replaced with __sockaddr() and friends properly during the v5.19 merge window.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.17"",""versionEndExcluding"":""5.10.112"",""matchCriteriaId"":""6DEF5532-F330-4A6A-B903-C82DBA088C88""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.35"",""matchCriteriaId"":""05ABCC3F-88A9-47F9-9D40-8665747B2E43""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.4"",""matchCriteriaId"":""E22C86CB-06CD-4D16-AB2A-F21EE8199262""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""6AD94161-84BB-42E6-9882-4FC0C42E9FC1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""7AB06DDF-3C2B-416D-B448-E990D8FF67A9""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/4d5004451ab2218eab94a30e1841462c9316ba19"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/726ae7300fcc25fefa46d188cc07eb16dc908f9e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/85ee17ca21cf92989e8c923e3ea4514c291e9d38"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c2456f470eea3bd06574d988bf6089e7c3f4c5cc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49066,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:43.820,2025-02-26T07:00:43.820,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: veth: Ensure eth header is in skb's linear part After feeding a decapsulated packet to a veth device with act_mirred, skb_headlen() may be 0. But veth_xmit() calls __dev_forward_skb(), which expects at least ETH_HLEN byte of linear data (as __dev_forward_skb2() calls eth_type_trans(), which pulls ETH_HLEN bytes unconditionally). Use pskb_may_pull() to ensure veth_xmit() respects this constraint. kernel BUG at include/linux/skbuff.h:2328! RIP: 0010:eth_type_trans+0xcf/0x140 Call Trace: <IRQ> __dev_forward_skb2+0xe3/0x160 veth_xmit+0x6e/0x250 [veth] dev_hard_start_xmit+0xc7/0x200 __dev_queue_xmit+0x47f/0x520 ? skb_ensure_writable+0x85/0xa0 ? skb_mpls_pop+0x98/0x1c0 tcf_mirred_act+0x442/0x47e [act_mirred] tcf_action_exec+0x86/0x140 fl_classify+0x1d8/0x1e0 [cls_flower] ? dma_pte_clear_level+0x129/0x1a0 ? dma_pte_clear_level+0x129/0x1a0 ? prb_fill_curr_block+0x2f/0xc0 ? skb_copy_bits+0x11a/0x220 __tcf_classify+0x58/0x110 tcf_classify_ingress+0x6b/0x140 __netif_receive_skb_core.constprop.0+0x47d/0xfd0 ? __iommu_dma_unmap_swiotlb+0x44/0x90 __netif_receive_skb_one_core+0x3d/0xa0 netif_receive_skb+0x116/0x170 be_process_rx+0x22f/0x330 [be2net] be_poll+0x13c/0x370 [be2net] __napi_poll+0x2a/0x170 net_rx_action+0x22f/0x2f0 __do_softirq+0xca/0x2a8 __irq_exit_rcu+0xc1/0xe0 common_interrupt+0x83/0xa0",,,"[{""url"":""https://git.kernel.org/stable/c/1ef0088e43af1de4e3b365218c4d3179d9a37eec"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2fd90b86dff413fbf8128780c04ea9c6849c16e2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3de2a02b60a4ef0ab76263216f08c7d095fc7c42"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/46bc359fec0c6d87b70d7a008bcd9a5e30dd6f27"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/726e2c5929de841fdcef4e2bf995680688ae1b87"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/93940fc4cb81840dc0fa202de48cccb949a0261d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d417a859221f127e8edf09c14b76ab50f825e171"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d67c900f1947d64ba8a64f693504bcaab8d9000c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49067,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:43.927,2025-02-26T07:00:43.927,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: powerpc: Fix virt_addr_valid() for 64-bit Book3E & 32-bit mpe: On 64-bit Book3E vmalloc space starts at 0x8000000000000000. Because of the way __pa() works we have: __pa(0x8000000000000000) == 0, and therefore virt_to_pfn(0x8000000000000000) == 0, and therefore virt_addr_valid(0x8000000000000000) == true Which is wrong, virt_addr_valid() should be false for vmalloc space. In fact all vmalloc addresses that alias with a valid PFN will return true from virt_addr_valid(). That can cause bugs with hardened usercopy as described below by Kefeng Wang: When running ethtool eth0 on 64-bit Book3E, a BUG occurred: usercopy: Kernel memory exposure attempt detected from SLUB object not in SLUB page?! (offset 0, size 1048)! kernel BUG at mm/usercopy.c:99 ... usercopy_abort+0x64/0xa0 (unreliable) __check_heap_object+0x168/0x190 __check_object_size+0x1a0/0x200 dev_ethtool+0x2494/0x2b20 dev_ioctl+0x5d0/0x770 sock_do_ioctl+0xf0/0x1d0 sock_ioctl+0x3ec/0x5a0 __se_sys_ioctl+0xf0/0x160 system_call_exception+0xfc/0x1f0 system_call_common+0xf8/0x200 The code shows below, data = vzalloc(array_size(gstrings.len, ETH_GSTRING_LEN)); copy_to_user(useraddr, data, gstrings.len * ETH_GSTRING_LEN)) The data is alloced by vmalloc(), virt_addr_valid(ptr) will return true on 64-bit Book3E, which leads to the panic. As commit 4dd7554a6456 (""powerpc/64: Add VIRTUAL_BUG_ON checks for __va and __pa addresses"") does, make sure the virt addr above PAGE_OFFSET in the virt_addr_valid() for 64-bit, also add upper limit check to make sure the virt is below high_memory. Meanwhile, for 32-bit PAGE_OFFSET is the virtual address of the start of lowmem, high_memory is the upper low virtual address, the check is suitable for 32-bit, this will fix the issue mentioned in commit 602946ec2f90 (""powerpc: Set max_mapnr correctly"") too. On 32-bit there is a similar problem with high memory, that was fixed in commit 602946ec2f90 (""powerpc: Set max_mapnr correctly""), but that commit breaks highmem and needs to be reverted. We can't easily fix __pa(), we have code that relies on its current behaviour. So for now add extra checks to virt_addr_valid(). For 64-bit Book3S the extra checks are not necessary, the combination of virt_to_pfn() and pfn_valid() should yield the correct result, but they are harmless. [mpe: Add additional change log detail]",,,"[{""url"":""https://git.kernel.org/stable/c/a3727c25eacd7e437c4f560957fa3a376fe93e6b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cbc065efcba000ad8f615f506ebe61b6d3c5145b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d36febbcd537fcc50284e8b89609632d0146529f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/deab81144d5a043f42804207fb76cfbd8a806978"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fddb88bd266f4513abab7c36bca98935c9148a98"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ffa0b64e3be58519ae472ea29a1a1ad681e32f48"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49068,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:44.027,2025-02-26T07:00:44.027,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: btrfs: release correct delalloc amount in direct IO write path Running generic/406 causes the following WARNING in btrfs_destroy_inode() which tells there are outstanding extents left. In btrfs_get_blocks_direct_write(), we reserve a temporary outstanding extents with btrfs_delalloc_reserve_metadata() (or indirectly from btrfs_delalloc_reserve_space(()). We then release the outstanding extents with btrfs_delalloc_release_extents(). However, the ""len"" can be modified in the COW case, which releases fewer outstanding extents than expected. Fix it by calling btrfs_delalloc_release_extents() for the original length. To reproduce the warning, the filesystem should be 1 GiB. It's triggering a short-write, due to not being able to allocate a large extent and instead allocating a smaller one. WARNING: CPU: 0 PID: 757 at fs/btrfs/inode.c:8848 btrfs_destroy_inode+0x1e6/0x210 [btrfs] Modules linked in: btrfs blake2b_generic xor lzo_compress lzo_decompress raid6_pq zstd zstd_decompress zstd_compress xxhash zram zsmalloc CPU: 0 PID: 757 Comm: umount Not tainted 5.17.0-rc8+ #101 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS d55cb5a 04/01/2014 RIP: 0010:btrfs_destroy_inode+0x1e6/0x210 [btrfs] RSP: 0018:ffffc9000327bda8 EFLAGS: 00010206 RAX: 0000000000000000 RBX: ffff888100548b78 RCX: 0000000000000000 RDX: 0000000000026900 RSI: 0000000000000000 RDI: ffff888100548b78 RBP: ffff888100548940 R08: 0000000000000000 R09: ffff88810b48aba8 R10: 0000000000000001 R11: ffff8881004eb240 R12: ffff88810b48a800 R13: ffff88810b48ec08 R14: ffff88810b48ed00 R15: ffff888100490c68 FS: 00007f8549ea0b80(0000) GS:ffff888237c00000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00007f854a09e733 CR3: 000000010a2e9003 CR4: 0000000000370eb0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Call Trace: <TASK> destroy_inode+0x33/0x70 dispose_list+0x43/0x60 evict_inodes+0x161/0x1b0 generic_shutdown_super+0x2d/0x110 kill_anon_super+0xf/0x20 btrfs_kill_super+0xd/0x20 [btrfs] deactivate_locked_super+0x27/0x90 cleanup_mnt+0x12c/0x180 task_work_run+0x54/0x80 exit_to_user_mode_prepare+0x152/0x160 syscall_exit_to_user_mode+0x12/0x30 do_syscall_64+0x42/0x80 entry_SYSCALL_64_after_hwframe+0x44/0xae RIP: 0033:0x7f854a000fb7",,,"[{""url"":""https://git.kernel.org/stable/c/07cacfd9d9dc134557ac8866c73d570a59b3d1f3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6d82ad13c4110e73c7b0392f00534a1502a1b520"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a04d37ddfe4be431b9e52e8504490376ab0a39a4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49069,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:44.120,2025-02-26T07:00:44.120,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/amd/display: Fix by adding FPU protection for dcn30_internal_validate_bw [Why] Below general protection fault observed when WebGL Aquarium is run for longer duration. If drm debug logs are enabled and set to 0x1f then the issue is observed within 10 minutes of run. [ 100.717056] general protection fault, probably for non-canonical address 0x2d33302d32323032: 0000 [#1] PREEMPT SMP NOPTI [ 100.727921] CPU: 3 PID: 1906 Comm: DrmThread Tainted: G W 5.15.30 #12 d726c6a2d6ebe5cf9223931cbca6892f916fe18b [ 100.754419] RIP: 0010:CalculateSwathWidth+0x1f7/0x44f [ 100.767109] Code: 00 00 00 f2 42 0f 11 04 f0 48 8b 85 88 00 00 00 f2 42 0f 10 04 f0 48 8b 85 98 00 00 00 f2 42 0f 11 04 f0 48 8b 45 10 0f 57 c0 <f3> 42 0f 2a 04 b0 0f 57 c9 f3 43 0f 2a 0c b4 e8 8c e2 f3 ff 48 8b [ 100.781269] RSP: 0018:ffffa9230079eeb0 EFLAGS: 00010246 [ 100.812528] RAX: 2d33302d32323032 RBX: 0000000000000500 RCX: 0000000000000000 [ 100.819656] RDX: 0000000000000001 RSI: ffff99deb712c49c RDI: 0000000000000000 [ 100.826781] RBP: ffffa9230079ef50 R08: ffff99deb712460c R09: ffff99deb712462c [ 100.833907] R10: ffff99deb7124940 R11: ffff99deb7124d70 R12: ffff99deb712ae44 [ 100.841033] R13: 0000000000000001 R14: 0000000000000000 R15: ffffa9230079f0a0 [ 100.848159] FS: 00007af121212640(0000) GS:ffff99deba780000(0000) knlGS:0000000000000000 [ 100.856240] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 100.861980] CR2: 0000209000fe1000 CR3: 000000011b18c000 CR4: 0000000000350ee0 [ 100.869106] Call Trace: [ 100.871555] <TASK> [ 100.873655] ? asm_sysvec_reschedule_ipi+0x12/0x20 [ 100.878449] CalculateSwathAndDETConfiguration+0x1a3/0x6dd [ 100.883937] dml31_ModeSupportAndSystemConfigurationFull+0x2ce4/0x76da [ 100.890467] ? kallsyms_lookup_buildid+0xc8/0x163 [ 100.895173] ? kallsyms_lookup_buildid+0xc8/0x163 [ 100.899874] ? __sprint_symbol+0x80/0x135 [ 100.903883] ? dm_update_plane_state+0x3f9/0x4d2 [ 100.908500] ? symbol_string+0xb7/0xde [ 100.912250] ? number+0x145/0x29b [ 100.915566] ? vsnprintf+0x341/0x5ff [ 100.919141] ? desc_read_finalized_seq+0x39/0x87 [ 100.923755] ? update_load_avg+0x1b9/0x607 [ 100.927849] ? compute_mst_dsc_configs_for_state+0x7d/0xd5b [ 100.933416] ? fetch_pipe_params+0xa4d/0xd0c [ 100.937686] ? dc_fpu_end+0x3d/0xa8 [ 100.941175] dml_get_voltage_level+0x16b/0x180 [ 100.945619] dcn30_internal_validate_bw+0x10e/0x89b [ 100.950495] ? dcn31_validate_bandwidth+0x68/0x1fc [ 100.955285] ? resource_build_scaling_params+0x98b/0xb8c [ 100.960595] ? dcn31_validate_bandwidth+0x68/0x1fc [ 100.965384] dcn31_validate_bandwidth+0x9a/0x1fc [ 100.970001] dc_validate_global_state+0x238/0x295 [ 100.974703] amdgpu_dm_atomic_check+0x9c1/0xbce [ 100.979235] ? _printk+0x59/0x73 [ 100.982467] drm_atomic_check_only+0x403/0x78b [ 100.986912] drm_mode_atomic_ioctl+0x49b/0x546 [ 100.991358] ? drm_ioctl+0x1c1/0x3b3 [ 100.994936] ? drm_atomic_set_property+0x92a/0x92a [ 100.999725] drm_ioctl_kernel+0xdc/0x149 [ 101.003648] drm_ioctl+0x27f/0x3b3 [ 101.007051] ? drm_atomic_set_property+0x92a/0x92a [ 101.011842] amdgpu_drm_ioctl+0x49/0x7d [ 101.015679] __se_sys_ioctl+0x7c/0xb8 [ 101.015685] do_syscall_64+0x5f/0xb8 [ 101.015690] ? __irq_exit_rcu+0x34/0x96 [How] It calles populate_dml_pipes which uses doubles to initialize. Adding FPU protection avoids context switch and probable loss of vba context as there is potential contention while drm debug logs are enabled.",,,"[{""url"":""https://git.kernel.org/stable/c/76f4c5e5f99ee7084b555d9a38e8ffeb16ec65a2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ca1198849ab0e7af5efb392ef6baf1138f6fc086"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e995c5d52ec7415644eee617fc7e906b51aec7ae"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49070,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:44.217,2025-03-18T18:47:17.543,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: fbdev: Fix unregistering of framebuffers without device OF framebuffers do not have an underlying device in the Linux device hierarchy. Do a regular unregister call instead of hot unplugging such a non-existing device. Fixes a NULL dereference. An example error message on ppc64le is shown below. BUG: Kernel NULL pointer dereference on read at 0x00000060 Faulting instruction address: 0xc00000000080dfa4 Oops: Kernel access of bad area, sig: 11 [#1] LE PAGE_SIZE=64K MMU=Hash SMP NR_CPUS=2048 NUMA pSeries [...] CPU: 2 PID: 139 Comm: systemd-udevd Not tainted 5.17.0-ae085d7f9365 #1 NIP: c00000000080dfa4 LR: c00000000080df9c CTR: c000000000797430 REGS: c000000004132fe0 TRAP: 0300 Not tainted (5.17.0-ae085d7f9365) MSR: 8000000002009033 <SF,VEC,EE,ME,IR,DR,RI,LE> CR: 28228282 XER: 20000000 CFAR: c00000000000c80c DAR: 0000000000000060 DSISR: 40000000 IRQMASK: 0 GPR00: c00000000080df9c c000000004133280 c00000000169d200 0000000000000029 GPR04: 00000000ffffefff c000000004132f90 c000000004132f88 0000000000000000 GPR08: c0000000015658f8 c0000000015cd200 c0000000014f57d0 0000000048228283 GPR12: 0000000000000000 c00000003fffe300 0000000020000000 0000000000000000 GPR16: 0000000000000000 0000000113fc4a40 0000000000000005 0000000113fcfb80 GPR20: 000001000f7283b0 0000000000000000 c000000000e4a588 c000000000e4a5b0 GPR24: 0000000000000001 00000000000a0000 c008000000db0168 c0000000021f6ec0 GPR28: c0000000016d65a8 c000000004b36460 0000000000000000 c0000000016d64b0 NIP [c00000000080dfa4] do_remove_conflicting_framebuffers+0x184/0x1d0 [c000000004133280] [c00000000080df9c] do_remove_conflicting_framebuffers+0x17c/0x1d0 (unreliable) [c000000004133350] [c00000000080e4d0] remove_conflicting_framebuffers+0x60/0x150 [c0000000041333a0] [c00000000080e6f4] remove_conflicting_pci_framebuffers+0x134/0x1b0 [c000000004133450] [c008000000e70438] drm_aperture_remove_conflicting_pci_framebuffers+0x90/0x100 [drm] [c000000004133490] [c008000000da0ce4] bochs_pci_probe+0x6c/0xa64 [bochs] [...] [c000000004133db0] [c00000000002aaa0] system_call_exception+0x170/0x2d0 [c000000004133e10] [c00000000000c3cc] system_call_common+0xec/0x250 The bug [1] was introduced by commit 27599aacbaef (""fbdev: Hot-unplug firmware fb devices on forced removal""). Most firmware framebuffers have an underlying platform device, which can be hot-unplugged before loading the native graphics driver. OF framebuffers do not (yet) have that device. Fix the code by unregistering the framebuffer as before without a hot unplug. Tested with 5.17 on qemu ppc64le emulation.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.15.33:*:*:*:*:*:*:*"",""matchCriteriaId"":""6131A2B3-2D6E-458C-84F4-DD3DAA7821FF""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.16.19:*:*:*:*:*:*:*"",""matchCriteriaId"":""C2874235-06C6-40EC-97B6-C17C6985DE5D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.17.2:*:*:*:*:*:*:*"",""matchCriteriaId"":""EB6B77A5-BC82-489A-BB4D-89562A8B34E4""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0f525289ff0ddeb380813bd81e0f9bdaaa1c9078"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2388f826cdc9af2651991adc0feb79de9bdf2232"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/de33df481545974ba47c46f05194e769e4307843"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/feed87ff122b1640c221d4dd559442ab2cd50bb1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49071,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:44.323,2025-03-18T18:47:30.713,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/panel: ili9341: fix optional regulator handling If the optional regulator lookup fails, reset the pointer to NULL. Other functions such as mipi_dbi_poweron_reset_conditional() only do a NULL pointer check and will otherwise dereference the error pointer.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""918697A2-B45C-4A04-8049-AFAB4BE2444E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""6AD94161-84BB-42E6-9882-4FC0C42E9FC1""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/28dc1503a9d36654f9c61adb2915682515a30f71"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4ea189854b1e625ed5ec80d30147870f984db44c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d14eb80e27795b7b20060f7b151cdfe39722a813"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e3d982c111a6c033671dd6084b07f62fbf50f76f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49072,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:44.423,2025-02-26T07:00:44.423,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: gpio: Restrict usage of GPIO chip irq members before initialization GPIO chip irq members are exposed before they could be completely initialized and this leads to race conditions. One such issue was observed for the gc->irq.domain variable which was accessed through the I2C interface in gpiochip_to_irq() before it could be initialized by gpiochip_add_irqchip(). This resulted in Kernel NULL pointer dereference. Following are the logs for reference :- kernel: Call Trace: kernel: gpiod_to_irq+0x53/0x70 kernel: acpi_dev_gpio_irq_get_by+0x113/0x1f0 kernel: i2c_acpi_get_irq+0xc0/0xd0 kernel: i2c_device_probe+0x28a/0x2a0 kernel: really_probe+0xf2/0x460 kernel: RIP: 0010:gpiochip_to_irq+0x47/0xc0 To avoid such scenarios, restrict usage of GPIO chip irq members before they are completely initialized.",,,"[{""url"":""https://git.kernel.org/stable/c/0912cf021fb5749372b3782611d8b1de4986c13a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2c1fa3614795e2b24da1ba95de0b27b8f6ea4537"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5467801f1fcbdc46bc7298a84dbf3ca1ff2a7320"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7e88a50704b0c49ad3f2d11e8b963341cf68a89f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f8dea54f74cae8c2e4d7b2952e8fed7743a85c87"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49073,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:44.647,2025-02-26T07:00:44.647,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ata: sata_dwc_460ex: Fix crash due to OOB write the driver uses libata's ""tag"" values from in various arrays. Since the mentioned patch bumped the ATA_TAG_INTERNAL to 32, the value of the SATA_DWC_QCMD_MAX needs to account for that. Otherwise ATA_TAG_INTERNAL usage cause similar crashes like this as reported by Tice Rex on the OpenWrt Forum and reproduced (with symbols) here: | BUG: Kernel NULL pointer dereference at 0x00000000 | Faulting instruction address: 0xc03ed4b8 | Oops: Kernel access of bad area, sig: 11 [#1] | BE PAGE_SIZE=4K PowerPC 44x Platform | CPU: 0 PID: 362 Comm: scsi_eh_1 Not tainted 5.4.163 #0 | NIP: c03ed4b8 LR: c03d27e8 CTR: c03ed36c | REGS: cfa59950 TRAP: 0300 Not tainted (5.4.163) | MSR: 00021000 <CE,ME> CR: 42000222 XER: 00000000 | DEAR: 00000000 ESR: 00000000 | GPR00: c03d27e8 cfa59a08 cfa55fe0 00000000 0fa46bc0 [...] | [..] | NIP [c03ed4b8] sata_dwc_qc_issue+0x14c/0x254 | LR [c03d27e8] ata_qc_issue+0x1c8/0x2dc | Call Trace: | [cfa59a08] [c003f4e0] __cancel_work_timer+0x124/0x194 (unreliable) | [cfa59a78] [c03d27e8] ata_qc_issue+0x1c8/0x2dc | [cfa59a98] [c03d2b3c] ata_exec_internal_sg+0x240/0x524 | [cfa59b08] [c03d2e98] ata_exec_internal+0x78/0xe0 | [cfa59b58] [c03d30fc] ata_read_log_page.part.38+0x1dc/0x204 | [cfa59bc8] [c03d324c] ata_identify_page_supported+0x68/0x130 | [...] This is because sata_dwc_dma_xfer_complete() NULLs the dma_pending's next neighbour ""chan"" (a *dma_chan struct) in this '32' case right here (line ~735): > hsdevp->dma_pending[tag] = SATA_DWC_DMA_PENDING_NONE; Then the next time, a dma gets issued; dma_dwc_xfer_setup() passes the NULL'd hsdevp->chan to the dmaengine_slave_config() which then causes the crash. With this patch, SATA_DWC_QCMD_MAX is now set to ATA_MAX_QUEUE + 1. This avoids the OOB. But please note, there was a worthwhile discussion on what ATA_TAG_INTERNAL and ATA_MAX_QUEUE is. And why there should not be a ""fake"" 33 command-long queue size. Ideally, the dw driver should account for the ATA_TAG_INTERNAL. In Damien Le Moal's words: ""... having looked at the driver, it is a bigger change than just faking a 33rd ""tag"" that is in fact not a command tag at all."" BugLink: https://github.com/openwrt/openwrt/issues/9505",,,"[{""url"":""https://git.kernel.org/stable/c/234c0132f76f0676d175757f61b0025191a3d935"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3a8751c0d4e24129e72dcec0139e99833b13904a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/55e1465ba79562a191708a40eeae3f8082a209e3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/596c7efd69aae94f4b0e91172b075eb197958b99"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7aa8104a554713b685db729e66511b93d989dd6a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8a05a6952ecd59aaa62cbdcdaf523ae2c8f436e8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fc629224aa62f23849cae83717932985ac51232d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49074,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:44.750,2025-02-26T07:00:44.750,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: irqchip/gic-v3: Fix GICR_CTLR.RWP polling It turns out that our polling of RWP is totally wrong when checking for it in the redistributors, as we test the *distributor* bit index, whereas it is a different bit number in the RDs... Oopsie boo. This is embarassing. Not only because it is wrong, but also because it took *8 years* to notice the blunder... Just fix the damn thing.",,,"[{""url"":""https://git.kernel.org/stable/c/0df6664531a12cdd8fc873f0cac0dcb40243d3e9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3c07cc242baf83f0bddbbd9d7945d0bee56d8b57"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/60e1eb4811f53f5f60c788297d978515e7a2637a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6fef3e3179e6ed8fecdd004ede541674ffa7749d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7218a789abb3e033f5f3a85636ca50d9ae7b0fc9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c7daf1b4ad809692d5c26f33c02ed8a031066548"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ff24114bb08d8b90edf2aff0a4fd0689523e6c17"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49075,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:44.847,2025-02-26T07:00:44.847,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: btrfs: fix qgroup reserve overflow the qgroup limit We use extent_changeset->bytes_changed in qgroup_reserve_data() to record how many bytes we set for EXTENT_QGROUP_RESERVED state. Currently the bytes_changed is set as ""unsigned int"", and it will overflow if we try to fallocate a range larger than 4GiB. The result is we reserve less bytes and eventually break the qgroup limit. Unlike regular buffered/direct write, which we use one changeset for each ordered extent, which can never be larger than 256M. For fallocate, we use one changeset for the whole range, thus it no longer respects the 256M per extent limit, and caused the problem. The following example test script reproduces the problem: $ cat qgroup-overflow.sh #!/bin/bash DEV=/dev/sdj MNT=/mnt/sdj mkfs.btrfs -f $DEV mount $DEV $MNT # Set qgroup limit to 2GiB. btrfs quota enable $MNT btrfs qgroup limit 2G $MNT # Try to fallocate a 3GiB file. This should fail. echo echo ""Try to fallocate a 3GiB file..."" fallocate -l 3G $MNT/3G.file # Try to fallocate a 5GiB file. echo echo ""Try to fallocate a 5GiB file..."" fallocate -l 5G $MNT/5G.file # See we break the qgroup limit. echo sync btrfs qgroup show -r $MNT umount $MNT When running the test: $ ./qgroup-overflow.sh (...) Try to fallocate a 3GiB file... fallocate: fallocate failed: Disk quota exceeded Try to fallocate a 5GiB file... qgroupid rfer excl max_rfer -------- ---- ---- -------- 0/5 5.00GiB 5.00GiB 2.00GiB Since we have no control of how bytes_changed is used, it's better to set it to u64.",,,"[{""url"":""https://git.kernel.org/stable/c/0355387ea5b02d353c9415613fab908fac5c52a6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/44277c50fdba5019ca25bfad1b71e2561b0de11b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4b98799e181b4326a613108cf37acc1f55d21b45"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6bfff81286d4491f02dad7814bae5c77c9ad2320"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7941b74ed49b6db25efbef2256ebef843c11a010"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/82ae73ac963cee877ce34f7c31b2b456b516e96c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b642b52d0b50f4d398cb4293f64992d0eed2e2ce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f3d97b22a708bf9e3f3ac2ba232bcefd0b0c136b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49076,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:44.943,2025-03-24T17:42:04.283,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: RDMA/hfi1: Fix use-after-free bug for mm struct Under certain conditions, such as MPI_Abort, the hfi1 cleanup code may represent the last reference held on the task mm. hfi1_mmu_rb_unregister() then drops the last reference and the mm is freed before the final use in hfi1_release_user_pages(). A new task may allocate the mm structure while it is still being used, resulting in problems. One manifestation is corruption of the mmap_sem counter leading to a hang in down_write(). Another is corruption of an mm struct that is in use by another task.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.9.12"",""versionEndExcluding"":""5.10.111"",""matchCriteriaId"":""6B0C772B-3345-4A9D-A48A-E0EB3B5CCA85""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""D25878D3-7761-4E9F-8919-E92CD53896E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""6AD94161-84BB-42E6-9882-4FC0C42E9FC1""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0b7186d657ee55e2cdefae498f07d5c1961e8023"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2bbac98d0930e8161b1957dc0ec99de39ade1b3c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5a9a1b24ddb510715f8f621263938186579a965c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5f54364ff6cfcd14cddf5441c4a490bb28dd69f7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9ca11bd8222a612de0d2f54d050bfcf61ae2883f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49077,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:45.043,2025-02-26T07:00:45.043,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: mmmremap.c: avoid pointless invalidate_range_start/end on mremap(old_size=0) If an mremap() syscall with old_size=0 ends up in move_page_tables(), it will call invalidate_range_start()/invalidate_range_end() unnecessarily, i.e. with an empty range. This causes a WARN in KVM's mmu_notifier. In the past, empty ranges have been diagnosed to be off-by-one bugs, hence the WARNing. Given the low (so far) number of unique reports, the benefits of detecting more buggy callers seem to outweigh the cost of having to fix cases such as this one, where userspace is doing something silly. In this particular case, an early return from move_page_tables() is enough to fix the issue.",,,"[{""url"":""https://git.kernel.org/stable/c/01e67e04c28170c47700c2c226d732bbfedb1ad0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/04bc13dae4a27b8d030843c85ae452bb2f1d9c1f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2358aa84ef6dafcf544a557caaa6b91afb4a0bd2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7d659cb1763ff17d1c6ee082fa6feb4267c7a30b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a04cb99c5d4668fe3f5c0e5b6da1cecd34c3f219"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a05540f3903bd8295e8c4cd90dd3d416239a115b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c19d8de4e682ec4b0ea2b04a832cd8cc0be3bb31"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e2c328c2a8f9de8b761bd4025b66c63120c55761"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/eeaf28e2a0128147d687237e59d5407ee1b14693"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49078,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:45.153,2025-03-25T18:55:32.980,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: lz4: fix LZ4_decompress_safe_partial read out of bound When partialDecoding, it is EOF if we've either filled the output buffer or can't proceed with reading an offset for following match. In some extreme corner cases when compressed data is suitably corrupted, UAF will occur. As reported by KASAN [1], LZ4_decompress_safe_partial may lead to read out of bound problem during decoding. lz4 upstream has fixed it [2] and this issue has been disscussed here [3] before. current decompression routine was ported from lz4 v1.8.3, bumping lib/lz4 to v1.9.+ is certainly a huge work to be done later, so, we'd better fix it first. [1] https://lore.kernel.org/all/000000000000830d1205cf7f0477@google.com/ [2] https://github.com/lz4/lz4/commit/c5d6f8a8be3927c0bec91bcc58667a6cfad244ad# [3] https://lore.kernel.org/all/CC666AE8-4CA4-4951-B6FB-A2EFDE3AC03B@fb.com/","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""4AAE7A78-57E5-45A6-860D-7867DA88A45E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.111"",""matchCriteriaId"":""96258501-7BCE-4C55-8A38-8AC9D327626D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""D25878D3-7761-4E9F-8919-E92CD53896E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/467d5e200ab4486b744fe1776154a43d1aa22d4b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6adc01a7aa37445dafe8846faa0610a86029b253"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/73953dfa9d50e5c9fe98ee13fd1d3427aa12a0a3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9fb8bc6cfc58773ce95414e11c9ccc8fc6ac4927"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e64dbe97c05c769525cbca099ddbd22485630235"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/eafc0a02391b7b36617b36c97c4b5d6832cf5e24"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49079,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:45.250,2025-02-26T07:00:45.250,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: btrfs: zoned: traverse devices under chunk_mutex in btrfs_can_activate_zone btrfs_can_activate_zone() can be called with the device_list_mutex already held, which will lead to a deadlock: insert_dev_extents() // Takes device_list_mutex `-> insert_dev_extent() `-> btrfs_insert_empty_item() `-> btrfs_insert_empty_items() `-> btrfs_search_slot() `-> btrfs_cow_block() `-> __btrfs_cow_block() `-> btrfs_alloc_tree_block() `-> btrfs_reserve_extent() `-> find_free_extent() `-> find_free_extent_update_loop() `-> can_allocate_chunk() `-> btrfs_can_activate_zone() // Takes device_list_mutex again Instead of using the RCU on fs_devices->device_list we can use fs_devices->alloc_list, protected by the chunk_mutex to traverse the list of active devices. We are in the chunk allocation thread. The newer chunk allocation happens from the devices in the fs_device->alloc_list protected by the chunk_mutex. btrfs_create_chunk() lockdep_assert_held(&info->chunk_mutex); gather_device_info list_for_each_entry(device, &fs_devices->alloc_list, dev_alloc_list) Also, a device that reappears after the mount won't join the alloc_list yet and, it will be in the dev_list, which we don't want to consider in the context of the chunk alloc. [15.166572] WARNING: possible recursive locking detected [15.167117] 5.17.0-rc6-dennis #79 Not tainted [15.167487] -------------------------------------------- [15.167733] kworker/u8:3/146 is trying to acquire lock: [15.167733] ffff888102962ee0 (&fs_devs->device_list_mutex){+.+.}-{3:3}, at: find_free_extent+0x15a/0x14f0 [btrfs] [15.167733] [15.167733] but task is already holding lock: [15.167733] ffff888102962ee0 (&fs_devs->device_list_mutex){+.+.}-{3:3}, at: btrfs_create_pending_block_groups+0x20a/0x560 [btrfs] [15.167733] [15.167733] other info that might help us debug this: [15.167733] Possible unsafe locking scenario: [15.167733] [15.171834] CPU0 [15.171834] ---- [15.171834] lock(&fs_devs->device_list_mutex); [15.171834] lock(&fs_devs->device_list_mutex); [15.171834] [15.171834] *** DEADLOCK *** [15.171834] [15.171834] May be due to missing lock nesting notation [15.171834] [15.171834] 5 locks held by kworker/u8:3/146: [15.171834] #0: ffff888100050938 ((wq_completion)events_unbound){+.+.}-{0:0}, at: process_one_work+0x1c3/0x5a0 [15.171834] #1: ffffc9000067be80 ((work_completion)(&fs_info->async_data_reclaim_work)){+.+.}-{0:0}, at: process_one_work+0x1c3/0x5a0 [15.176244] #2: ffff88810521e620 (sb_internal){.+.+}-{0:0}, at: flush_space+0x335/0x600 [btrfs] [15.176244] #3: ffff888102962ee0 (&fs_devs->device_list_mutex){+.+.}-{3:3}, at: btrfs_create_pending_block_groups+0x20a/0x560 [btrfs] [15.176244] #4: ffff8881152e4b78 (btrfs-dev-00){++++}-{3:3}, at: __btrfs_tree_lock+0x27/0x130 [btrfs] [15.179641] [15.179641] stack backtrace: [15.179641] CPU: 1 PID: 146 Comm: kworker/u8:3 Not tainted 5.17.0-rc6-dennis #79 [15.179641] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1.fc35 04/01/2014 [15.179641] Workqueue: events_unbound btrfs_async_reclaim_data_space [btrfs] [15.179641] Call Trace: [15.179641] <TASK> [15.179641] dump_stack_lvl+0x45/0x59 [15.179641] __lock_acquire.cold+0x217/0x2b2 [15.179641] lock_acquire+0xbf/0x2b0 [15.183838] ? find_free_extent+0x15a/0x14f0 [btrfs] [15.183838] __mutex_lock+0x8e/0x970 [15.183838] ? find_free_extent+0x15a/0x14f0 [btrfs] [15.183838] ? find_free_extent+0x15a/0x14f0 [btrfs] [15.183838] ? lock_is_held_type+0xd7/0x130 [15.183838] ? find_free_extent+0x15a/0x14f0 [btrfs] [15.183838] find_free_extent+0x15a/0x14f0 [btrfs] [15.183838] ? _raw_spin_unlock+0x24/0x40 [15.183838] ? btrfs_get_alloc_profile+0x106/0x230 [btrfs] [15.187601] btrfs_reserve_extent+0x131/0x260 [btrfs] [15. ---truncated---",,,"[{""url"":""https://git.kernel.org/stable/c/09e65ae515af2b24d6dc23af21719a3b41de83e5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/0b9e66762aa0cda2a9c2d5542d64e04dac528fa6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/142f822bd945a7be442a2916ec6167cc102c4183"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49080,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:45.347,2025-02-26T07:00:45.347,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: mm/mempolicy: fix mpol_new leak in shared_policy_replace If mpol_new is allocated but not used in restart loop, mpol_new will be freed via mpol_put before returning to the caller. But refcnt is not initialized yet, so mpol_put could not do the right things and might leak the unused mpol_new. This would happen if mempolicy was updated on the shared shmem file while the sp->lock has been dropped during the memory allocation. This issue could be triggered easily with the below code snippet if there are many processes doing the below work at the same time: shmid = shmget((key_t)5566, 1024 * PAGE_SIZE, 0666|IPC_CREAT); shm = shmat(shmid, 0, 0); loop many times { mbind(shm, 1024 * PAGE_SIZE, MPOL_LOCAL, mask, maxnode, 0); mbind(shm + 128 * PAGE_SIZE, 128 * PAGE_SIZE, MPOL_DEFAULT, mask, maxnode, 0); }",,,"[{""url"":""https://git.kernel.org/stable/c/198932a14aeb19a15cf19e51e151d023bc4cd648"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/25f506273b6ae806fd46bfcb6fdaa5b9ec81a05b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/39a32f3c06f6d68a530bf9612afa19f50f12e93d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4ad099559b00ac01c3726e5c95dc3108ef47d03e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5e16dc5378abd749a836daa9ee4ab2c8d2668999"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6e00309ac716fa8225f0cbde2cd9c24f0e74ee21"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8510c2346d9e47a72b7f018a36ef0c39483e53d6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f7e183b0a7136b6dc9c7b9b2a85a608a8feba894"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fe39ac59dbbf893b73b24e3184161d0bd06d6651"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49081,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:45.450,2025-02-26T07:00:45.450,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: highmem: fix checks in __kmap_local_sched_{in,out} When CONFIG_DEBUG_KMAP_LOCAL is enabled __kmap_local_sched_{in,out} check that even slots in the tsk->kmap_ctrl.pteval are unmapped. The slots are initialized with 0 value, but the check is done with pte_none. 0 pte however does not necessarily mean that pte_none will return true. e.g. on xtensa it returns false, resulting in the following runtime warnings: WARNING: CPU: 0 PID: 101 at mm/highmem.c:627 __kmap_local_sched_out+0x51/0x108 CPU: 0 PID: 101 Comm: touch Not tainted 5.17.0-rc7-00010-gd3a1cdde80d2-dirty #13 Call Trace: dump_stack+0xc/0x40 __warn+0x8f/0x174 warn_slowpath_fmt+0x48/0xac __kmap_local_sched_out+0x51/0x108 __schedule+0x71a/0x9c4 preempt_schedule_irq+0xa0/0xe0 common_exception_return+0x5c/0x93 do_wp_page+0x30e/0x330 handle_mm_fault+0xa70/0xc3c do_page_fault+0x1d8/0x3c4 common_exception+0x7f/0x7f WARNING: CPU: 0 PID: 101 at mm/highmem.c:664 __kmap_local_sched_in+0x50/0xe0 CPU: 0 PID: 101 Comm: touch Tainted: G W 5.17.0-rc7-00010-gd3a1cdde80d2-dirty #13 Call Trace: dump_stack+0xc/0x40 __warn+0x8f/0x174 warn_slowpath_fmt+0x48/0xac __kmap_local_sched_in+0x50/0xe0 finish_task_switch$isra$0+0x1ce/0x2f8 __schedule+0x86e/0x9c4 preempt_schedule_irq+0xa0/0xe0 common_exception_return+0x5c/0x93 do_wp_page+0x30e/0x330 handle_mm_fault+0xa70/0xc3c do_page_fault+0x1d8/0x3c4 common_exception+0x7f/0x7f Fix it by replacing !pte_none(pteval) with pte_val(pteval) != 0.",,,"[{""url"":""https://git.kernel.org/stable/c/66f133ceab7456c789f70a242991ed1b27ba1c3d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7dd5b3b97716a611fcf67d92fd2370fcb8d50372"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/85550b0f5fa5dd3c30469ea702c44444ef242c83"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c21d040de6225414547d9bd31cd200f290991c85"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49082,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:45.540,2025-03-25T18:55:58.707,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: mpt3sas: Fix use after free in _scsih_expander_node_remove() The function mpt3sas_transport_port_remove() called in _scsih_expander_node_remove() frees the port field of the sas_expander structure, leading to the following use-after-free splat from KASAN when the ioc_info() call following that function is executed (e.g. when doing rmmod of the driver module): [ 3479.371167] ================================================================== [ 3479.378496] BUG: KASAN: use-after-free in _scsih_expander_node_remove+0x710/0x750 [mpt3sas] [ 3479.386936] Read of size 1 at addr ffff8881c037691c by task rmmod/1531 [ 3479.393524] [ 3479.395035] CPU: 18 PID: 1531 Comm: rmmod Not tainted 5.17.0-rc8+ #1436 [ 3479.401712] Hardware name: Supermicro Super Server/H12SSL-NT, BIOS 2.1 06/02/2021 [ 3479.409263] Call Trace: [ 3479.411743] <TASK> [ 3479.413875] dump_stack_lvl+0x45/0x59 [ 3479.417582] print_address_description.constprop.0+0x1f/0x120 [ 3479.423389] ? _scsih_expander_node_remove+0x710/0x750 [mpt3sas] [ 3479.429469] kasan_report.cold+0x83/0xdf [ 3479.433438] ? _scsih_expander_node_remove+0x710/0x750 [mpt3sas] [ 3479.439514] _scsih_expander_node_remove+0x710/0x750 [mpt3sas] [ 3479.445411] ? _raw_spin_unlock_irqrestore+0x2d/0x40 [ 3479.452032] scsih_remove+0x525/0xc90 [mpt3sas] [ 3479.458212] ? mpt3sas_expander_remove+0x1d0/0x1d0 [mpt3sas] [ 3479.465529] ? down_write+0xde/0x150 [ 3479.470746] ? up_write+0x14d/0x460 [ 3479.475840] ? kernfs_find_ns+0x137/0x310 [ 3479.481438] pci_device_remove+0x65/0x110 [ 3479.487013] __device_release_driver+0x316/0x680 [ 3479.493180] driver_detach+0x1ec/0x2d0 [ 3479.498499] bus_remove_driver+0xe7/0x2d0 [ 3479.504081] pci_unregister_driver+0x26/0x250 [ 3479.510033] _mpt3sas_exit+0x2b/0x6cf [mpt3sas] [ 3479.516144] __x64_sys_delete_module+0x2fd/0x510 [ 3479.522315] ? free_module+0xaa0/0xaa0 [ 3479.527593] ? __cond_resched+0x1c/0x90 [ 3479.532951] ? lockdep_hardirqs_on_prepare+0x273/0x3e0 [ 3479.539607] ? syscall_enter_from_user_mode+0x21/0x70 [ 3479.546161] ? trace_hardirqs_on+0x1c/0x110 [ 3479.551828] do_syscall_64+0x35/0x80 [ 3479.556884] entry_SYSCALL_64_after_hwframe+0x44/0xae [ 3479.563402] RIP: 0033:0x7f1fc482483b ... [ 3479.943087] ================================================================== Fix this by introducing the local variable port_id to store the port ID value before executing mpt3sas_transport_port_remove(). This local variable is then used in the call to ioc_info() instead of dereferencing the freed port structure.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""D25878D3-7761-4E9F-8919-E92CD53896E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""6AD94161-84BB-42E6-9882-4FC0C42E9FC1""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/17d66b1c92bcb41e72271ec60069d3684aaa1c9c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1bb8a7fc64d63ec818e367e1b37676ea2ef2d20c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/25c1353dca74ad7cf3fd7ce258fe7c957a147d5e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/87d663d40801dffc99a5ad3b0188ad3e2b4d1557"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49083,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:45.643,2025-02-26T07:00:45.643,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: iommu/omap: Fix regression in probe for NULL pointer dereference Commit 3f6634d997db (""iommu: Use right way to retrieve iommu_ops"") started triggering a NULL pointer dereference for some omap variants: __iommu_probe_device from probe_iommu_group+0x2c/0x38 probe_iommu_group from bus_for_each_dev+0x74/0xbc bus_for_each_dev from bus_iommu_probe+0x34/0x2e8 bus_iommu_probe from bus_set_iommu+0x80/0xc8 bus_set_iommu from omap_iommu_init+0x88/0xcc omap_iommu_init from do_one_initcall+0x44/0x24 This is caused by omap iommu probe returning 0 instead of ERR_PTR(-ENODEV) as noted by Jason Gunthorpe <jgg@ziepe.ca>. Looks like the regression already happened with an earlier commit 6785eb9105e3 (""iommu/omap: Convert to probe/release_device() call-backs"") that changed the function return type and missed converting one place.",,,"[{""url"":""https://git.kernel.org/stable/c/1d89f2b9eadbcf3ce93c6d7238f68299a1f84968"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/47e239117bd97c8556f9187af7a9a7938db4e021"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/71ff461c3f41f6465434b9e980c01782763e7ad8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bd905fed87ce01ac010011bb8f44ed0140116ceb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ea518578aa8a9a0280605b53cc33f707e10c8178"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49084,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:45.737,2025-02-26T07:00:45.737,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: qede: confirm skb is allocated before using qede_build_skb() assumes build_skb() always works and goes straight to skb_reserve(). However, build_skb() can fail under memory pressure. This results in a kernel panic because the skb to reserve is NULL. Add a check in case build_skb() failed to allocate and return NULL. The NULL return is handled correctly in callers to qede_build_skb().",,,"[{""url"":""https://git.kernel.org/stable/c/034a92c6a81048128fc7b18d278d52438a13902a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4e910dbe36508654a896d5735b318c0b88172570"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8928239e5e2e460d95b8a0b89f61671625e7ece0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9648adb1b3ece55c657d3a4f52bfee663b710dfe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b2d6b3db9d1cf80908964036dbe1c52a86b1afb1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c9bdce2359b5f4986eb38d1e81865b3586cc20d2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e1fd0c42acfa22bb34d2ab6a111484f466ab8093"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49085,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:45.833,2025-03-25T16:21:29.173,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drbd: Fix five use after free bugs in get_initial_state In get_initial_state, it calls notify_initial_state_done(skb,..) if cb->args[5]==1. If genlmsg_put() failed in notify_initial_state_done(), the skb will be freed by nlmsg_free(skb). Then get_initial_state will goto out and the freed skb will be used by return value skb->len, which is a uaf bug. What's worse, the same problem goes even further: skb can also be freed in the notify_*_state_change -> notify_*_state calls below. Thus 4 additional uaf bugs happened. My patch lets the problem callee functions: notify_initial_state_done and notify_*_state_change return an error code if errors happen. So that the error codes could be propagated and the uaf bugs can be avoid. v2 reports a compilation warning. This v3 fixed this warning and built successfully in my local environment with no additional warnings. v2: https://lore.kernel.org/patchwork/patch/1435218/","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.5"",""versionEndExcluding"":""4.9.311"",""matchCriteriaId"":""16932DCC-5EC6-4AD4-AFC9-80EA0710A84F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.276"",""matchCriteriaId"":""6D9B028C-6313-47F9-94B7-5F8122345E49""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.238"",""matchCriteriaId"":""FA28527A-11D3-41D2-9C4C-ECAC0D6A4A2D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""8CB6E8F5-C2B1-46F3-A807-0F6104AC340F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.111"",""matchCriteriaId"":""96258501-7BCE-4C55-8A38-8AC9D327626D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""D25878D3-7761-4E9F-8919-E92CD53896E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""6AD94161-84BB-42E6-9882-4FC0C42E9FC1""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0489700bfeb1e53eb2039c2291c67e71b0b40103"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/188fe6b26765edbad4055611c0f788b6870f4024"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/226e993c39405292781bfcf4b039a8db56aab362"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/594205b4936771a250f9d141e7e0fff21c3dd2d9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a972c768723359ec995579902473028fe3cd64b1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/aadb22ba2f656581b2f733deb3a467c48cc618f6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b6a4055036eed1f5e239ce3d8b0db1ce38bba447"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/dcf6be17b5c53b741898d2223b23e66d682de300"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/de63e74da2333b4068bb79983e632db730fea97e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49086,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:45.940,2025-02-26T07:00:45.940,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: openvswitch: fix leak of nested actions While parsing user-provided actions, openvswitch module may dynamically allocate memory and store pointers in the internal copy of the actions. So this memory has to be freed while destroying the actions. Currently there are only two such actions: ct() and set(). However, there are many actions that can hold nested lists of actions and ovs_nla_free_flow_actions() just jumps over them leaking the memory. For example, removal of the flow with the following actions will lead to a leak of the memory allocated by nf_ct_tmpl_alloc(): actions:clone(ct(commit),0) Non-freed set() action may also leak the 'dst' structure for the tunnel info including device references. Under certain conditions with a high rate of flow rotation that may cause significant memory leak problem (2MB per second in reporter's case). The problem is also hard to mitigate, because the user doesn't have direct control over the datapath flows generated by OVS. Fix that by iterating over all the nested actions and freeing everything that needs to be freed recursively. New build time assertion should protect us from this problem if new actions will be added in the future. Unfortunately, openvswitch module doesn't use NLA_F_NESTED, so all attributes has to be explicitly checked. sample() and clone() actions are mixing extra attributes into the user-provided action list. That prevents some code generalization too.",,,"[{""url"":""https://git.kernel.org/stable/c/1f30fb9166d4f15a1aa19449b9da871fe0ed4796"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3554c214b83ec9a839ed574263a34218f372990c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/53bce9d19b0a9d245b25cd050b81652ed974a509"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5ae05b5eb58773cfec307ff88aff4cfd843c4cff"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7438dc55c0709819b813f4778aec2c48b782990b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/837b96d8103938e35e7d92cd9db96af914ca4fff"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ef6f9ce0a79aa23b10fc5f3b3cab3814a25aac40"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49087,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:46.043,2025-03-25T16:21:12.940,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: rxrpc: fix a race in rxrpc_exit_net() Current code can lead to the following race: CPU0 CPU1 rxrpc_exit_net() rxrpc_peer_keepalive_worker() if (rxnet->live) rxnet->live = false; del_timer_sync(&rxnet->peer_keepalive_timer); timer_reduce(&rxnet->peer_keepalive_timer, jiffies + delay); cancel_work_sync(&rxnet->peer_keepalive_work); rxrpc_exit_net() exits while peer_keepalive_timer is still armed, leading to use-after-free. syzbot report was: ODEBUG: free active (active state 0) object type: timer_list hint: rxrpc_peer_keepalive_timeout+0x0/0xb0 WARNING: CPU: 0 PID: 3660 at lib/debugobjects.c:505 debug_print_object+0x16e/0x250 lib/debugobjects.c:505 Modules linked in: CPU: 0 PID: 3660 Comm: kworker/u4:6 Not tainted 5.17.0-syzkaller-13993-g88e6c0207623 #0 Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011 Workqueue: netns cleanup_net RIP: 0010:debug_print_object+0x16e/0x250 lib/debugobjects.c:505 Code: ff df 48 89 fa 48 c1 ea 03 80 3c 02 00 0f 85 af 00 00 00 48 8b 14 dd 00 1c 26 8a 4c 89 ee 48 c7 c7 00 10 26 8a e8 b1 e7 28 05 <0f> 0b 83 05 15 eb c5 09 01 48 83 c4 18 5b 5d 41 5c 41 5d 41 5e c3 RSP: 0018:ffffc9000353fb00 EFLAGS: 00010082 RAX: 0000000000000000 RBX: 0000000000000003 RCX: 0000000000000000 RDX: ffff888029196140 RSI: ffffffff815efad8 RDI: fffff520006a7f52 RBP: 0000000000000001 R08: 0000000000000000 R09: 0000000000000000 R10: ffffffff815ea4ae R11: 0000000000000000 R12: ffffffff89ce23e0 R13: ffffffff8a2614e0 R14: ffffffff816628c0 R15: dffffc0000000000 FS: 0000000000000000(0000) GS:ffff8880b9c00000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00007fe1f2908924 CR3: 0000000043720000 CR4: 00000000003506f0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Call Trace: <TASK> __debug_check_no_obj_freed lib/debugobjects.c:992 [inline] debug_check_no_obj_freed+0x301/0x420 lib/debugobjects.c:1023 kfree+0xd6/0x310 mm/slab.c:3809 ops_free_list.part.0+0x119/0x370 net/core/net_namespace.c:176 ops_free_list net/core/net_namespace.c:174 [inline] cleanup_net+0x591/0xb00 net/core/net_namespace.c:598 process_one_work+0x996/0x1610 kernel/workqueue.c:2289 worker_thread+0x665/0x1080 kernel/workqueue.c:2436 kthread+0x2e9/0x3a0 kernel/kthread.c:376 ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:298 </TASK>","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.17"",""versionEndExcluding"":""4.19.238"",""matchCriteriaId"":""E81609D6-22A9-44E6-A18A-6CEE1B7F0445""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""8CB6E8F5-C2B1-46F3-A807-0F6104AC340F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.111"",""matchCriteriaId"":""96258501-7BCE-4C55-8A38-8AC9D327626D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""D25878D3-7761-4E9F-8919-E92CD53896E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""6AD94161-84BB-42E6-9882-4FC0C42E9FC1""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/08ff0e74fab517dbc44e11b8bc683dd4ecc65950"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1946014ca3b19be9e485e780e862c375c6f98bad"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/41024a40f6c793abbb916a857f18fb009f07464c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/571d8e1d154ca18f08dcb72b69318d36e10010a0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7ee84d29f22de6f6c63fad6c54690517659862f1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/864297ee30727ae6233f80296b7fc91442620b05"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cd8aef1f30d1215648e4e6686cfb422004851429"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49088,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:46.143,2025-02-26T07:00:46.143,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: dpaa2-ptp: Fix refcount leak in dpaa2_ptp_probe This node pointer is returned by of_find_compatible_node() with refcount incremented. Calling of_node_put() to aovid the refcount leak.",,,"[{""url"":""https://git.kernel.org/stable/c/2b04bd4f03bba021959ca339314f6739710f0954"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/45fdd98b70142521739615ad1bfb760401863b73"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/46d120f7c163706d6c31ee00baa0be64c4572b78"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/599874bbc4ed832ccb578d48ac0ae7344382ef43"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ebd1e3458dbf6643aa0272da398cb5b537d492b7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fbe5f4c0dd3475178f17ddd8b8d5044ebeae0be7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49089,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:46.240,2025-02-26T07:00:46.240,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: IB/rdmavt: add lock to call to rvt_error_qp to prevent a race condition The documentation of the function rvt_error_qp says both r_lock and s_lock need to be held when calling that function. It also asserts using lockdep that both of those locks are held. However, the commit I referenced in Fixes accidentally makes the call to rvt_error_qp in rvt_ruc_loopback no longer covered by r_lock. This results in the lockdep assertion failing and also possibly in a race condition.",,,"[{""url"":""https://git.kernel.org/stable/c/43c2d7890ecabe527448a6c391fb2d9a5e6bbfe0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4d809f69695d4e7d1378b3a072fa9aef23123018"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/57800cc36e55db0547461c49acf5cd84c0f502b0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/77ffb2495a41098f9d6a14f8aefde3188da75944"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8a50937227c385a477177c9ffa122b4230e40666"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/92f1947c0d26060e978b3a9f21f32ce7c8c9cca3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49090,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:46.337,2025-02-26T07:00:46.337,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: arch/arm64: Fix topology initialization for core scheduling Arm64 systems rely on store_cpu_topology() to call update_siblings_masks() to transfer the toplogy to the various cpu masks. This needs to be done before the call to notify_cpu_starting() which tells the scheduler about each cpu found, otherwise the core scheduling data structures are setup in a way that does not match the actual topology. With smt_mask not setup correctly we bail on `cpumask_weight(smt_mask) == 1` for !leaders in: notify_cpu_starting() cpuhp_invoke_callback_range() sched_cpu_starting() sched_core_cpu_starting() which leads to rq->core not being correctly set for !leader-rq's. Without this change stress-ng (which enables core scheduling in its prctl tests in newer versions -- i.e. with PR_SCHED_CORE support) causes a warning and then a crash (trimmed for legibility): [ 1853.805168] ------------[ cut here ]------------ [ 1853.809784] task_rq(b)->core != rq->core [ 1853.809792] WARNING: CPU: 117 PID: 0 at kernel/sched/fair.c:11102 cfs_prio_less+0x1b4/0x1c4 ... [ 1854.015210] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000010 ... [ 1854.231256] Call trace: [ 1854.233689] pick_next_task+0x3dc/0x81c [ 1854.237512] __schedule+0x10c/0x4cc [ 1854.240988] schedule_idle+0x34/0x54",,,"[{""url"":""https://git.kernel.org/stable/c/5524cbb1bfcdff0cad0aaa9f94e6092002a07259"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/790c1567582bda8f1153015436e3330a7c6eb278"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/87f5d66daa5f457449bb95d6b8d18bb7596aa627"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c78a1b2d0bff678570c8dc9f14035606f5e5257d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49091,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:46.430,2025-02-26T07:00:46.430,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/imx: Fix memory leak in imx_pd_connector_get_modes Avoid leaking the display mode variable if of_get_drm_display_mode fails. Addresses-Coverity-ID: 1443943 (""Resource leak"")",,,"[{""url"":""https://git.kernel.org/stable/c/31e449302ed00c38d4068443cf0243279701ab28"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/38bf605bd8c83d942c8dcffaef3633b7d8b37549"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/41624d7c0c3df71dee170c610744aaa5909327b8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7526102d908ec5ae777aa77723d52fce12916093"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bc23c327e1a23cc3555fa1e86288e13288515442"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bce81feb03a20fca7bbdd1c4af16b4e9d5c0e1d3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c539a6a5896ed92bfb91494e46996d013f3d5967"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d2c2758cfb0262637fd93350bdc8ad485fb1dd61"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f8b0ef0a5889890b50482b6593bd8de544736351"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49092,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:46.530,2025-02-26T07:00:46.530,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: ipv4: fix route with nexthop object delete warning FRR folks have hit a kernel warning[1] while deleting routes[2] which is caused by trying to delete a route pointing to a nexthop id without specifying nhid but matching on an interface. That is, a route is found but we hit a warning while matching it. The warning is from fib_info_nh() in include/net/nexthop.h because we run it on a fib_info with nexthop object. The call chain is: inet_rtm_delroute -> fib_table_delete -> fib_nh_match (called with a nexthop fib_info and also with fc_oif set thus calling fib_info_nh on the fib_info and triggering the warning). The fix is to not do any matching in that branch if the fi has a nexthop object because those are managed separately. I.e. we should match when deleting without nh spec and should fail when deleting a nexthop route with old-style nh spec because nexthop objects are managed separately, e.g.: $ ip r show 1.2.3.4/32 1.2.3.4 nhid 12 via 192.168.11.2 dev dummy0 $ ip r del 1.2.3.4/32 $ ip r del 1.2.3.4/32 nhid 12 <both should work> $ ip r del 1.2.3.4/32 dev dummy0 <should fail with ESRCH> [1] [ 523.462226] ------------[ cut here ]------------ [ 523.462230] WARNING: CPU: 14 PID: 22893 at include/net/nexthop.h:468 fib_nh_match+0x210/0x460 [ 523.462236] Modules linked in: dummy rpcsec_gss_krb5 xt_socket nf_socket_ipv4 nf_socket_ipv6 ip6table_raw iptable_raw bpf_preload xt_statistic ip_set ip_vs_sh ip_vs_wrr ip_vs_rr ip_vs xt_mark nf_tables xt_nat veth nf_conntrack_netlink nfnetlink xt_addrtype br_netfilter overlay dm_crypt nfsv3 nfs fscache netfs vhost_net vhost vhost_iotlb tap tun xt_CHECKSUM xt_MASQUERADE xt_conntrack 8021q garp mrp ipt_REJECT nf_reject_ipv4 ip6table_mangle ip6table_nat iptable_mangle iptable_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 iptable_filter bridge stp llc rfcomm snd_seq_dummy snd_hrtimer rpcrdma rdma_cm iw_cm ib_cm ib_core ip6table_filter xt_comment ip6_tables vboxnetadp(OE) vboxnetflt(OE) vboxdrv(OE) qrtr bnep binfmt_misc xfs vfat fat squashfs loop nvidia_drm(POE) nvidia_modeset(POE) nvidia_uvm(POE) nvidia(POE) intel_rapl_msr intel_rapl_common snd_hda_codec_realtek snd_hda_codec_generic ledtrig_audio snd_hda_codec_hdmi btusb btrtl iwlmvm uvcvideo btbcm snd_hda_intel edac_mce_amd [ 523.462274] videobuf2_vmalloc videobuf2_memops btintel snd_intel_dspcfg videobuf2_v4l2 snd_intel_sdw_acpi bluetooth snd_usb_audio snd_hda_codec mac80211 snd_usbmidi_lib joydev snd_hda_core videobuf2_common kvm_amd snd_rawmidi snd_hwdep snd_seq videodev ccp snd_seq_device libarc4 ecdh_generic mc snd_pcm kvm iwlwifi snd_timer drm_kms_helper snd cfg80211 cec soundcore irqbypass rapl wmi_bmof i2c_piix4 rfkill k10temp pcspkr acpi_cpufreq nfsd auth_rpcgss nfs_acl lockd grace sunrpc drm zram ip_tables crct10dif_pclmul crc32_pclmul crc32c_intel ghash_clmulni_intel nvme sp5100_tco r8169 nvme_core wmi ipmi_devintf ipmi_msghandler fuse [ 523.462300] CPU: 14 PID: 22893 Comm: ip Tainted: P OE 5.16.18-200.fc35.x86_64 #1 [ 523.462302] Hardware name: Micro-Star International Co., Ltd. MS-7C37/MPG X570 GAMING EDGE WIFI (MS-7C37), BIOS 1.C0 10/29/2020 [ 523.462303] RIP: 0010:fib_nh_match+0x210/0x460 [ 523.462304] Code: 7c 24 20 48 8b b5 90 00 00 00 e8 bb ee f4 ff 48 8b 7c 24 20 41 89 c4 e8 ee eb f4 ff 45 85 e4 0f 85 2e fe ff ff e9 4c ff ff ff <0f> 0b e9 17 ff ff ff 3c 0a 0f 85 61 fe ff ff 48 8b b5 98 00 00 00 [ 523.462306] RSP: 0018:ffffaa53d4d87928 EFLAGS: 00010286 [ 523.462307] RAX: 0000000000000000 RBX: ffffaa53d4d87a90 RCX: ffffaa53d4d87bb0 [ 523.462308] RDX: ffff9e3d2ee6be80 RSI: ffffaa53d4d87a90 RDI: ffffffff920ed380 [ 523.462309] RBP: ffff9e3d2ee6be80 R08: 0000000000000064 R09: 0000000000000000 [ 523.462310] R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000031 [ 523.462310] R13: 0000000000000020 R14: 0000000000000000 R15: ffff9e3d331054e0 [ 523.462311] FS: 00007f2455 ---truncated---",,,"[{""url"":""https://git.kernel.org/stable/c/63ea57478aaa3e06a597081a0f537318fc04e49f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6bf92d70e690b7ff12b24f4bfff5e5434d019b82"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/907c97986d6fa77318d17659dd76c94b65dd27c5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dcd689f9e2640c992f94eae9955b106f71c6825d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f5064531c23ad646da7be8b938292b00a7e61438"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f8db5743d09523c0bb35f16e13691e3b7eb5dba0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49093,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:46.633,2025-03-25T16:20:55.483,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: skbuff: fix coalescing for page_pool fragment recycling Fix a use-after-free when using page_pool with page fragments. We encountered this problem during normal RX in the hns3 driver: (1) Initially we have three descriptors in the RX queue. The first one allocates PAGE1 through page_pool, and the other two allocate one half of PAGE2 each. Page references look like this: RX_BD1 _______ PAGE1 RX_BD2 _______ PAGE2 RX_BD3 _________/ (2) Handle RX on the first descriptor. Allocate SKB1, eventually added to the receive queue by tcp_queue_rcv(). (3) Handle RX on the second descriptor. Allocate SKB2 and pass it to netif_receive_skb(): netif_receive_skb(SKB2) ip_rcv(SKB2) SKB3 = skb_clone(SKB2) SKB2 and SKB3 share a reference to PAGE2 through skb_shinfo()->dataref. The other ref to PAGE2 is still held by RX_BD3: SKB2 ---+- PAGE2 SKB3 __/ / RX_BD3 _________/ (3b) Now while handling TCP, coalesce SKB3 with SKB1: tcp_v4_rcv(SKB3) tcp_try_coalesce(to=SKB1, from=SKB3) // succeeds kfree_skb_partial(SKB3) skb_release_data(SKB3) // drops one dataref SKB1 _____ PAGE1 \____ SKB2 _____ PAGE2 / RX_BD3 _________/ In skb_try_coalesce(), __skb_frag_ref() takes a page reference to PAGE2, where it should instead have increased the page_pool frag reference, pp_frag_count. Without coalescing, when releasing both SKB2 and SKB3, a single reference to PAGE2 would be dropped. Now when releasing SKB1 and SKB2, two references to PAGE2 will be dropped, resulting in underflow. (3c) Drop SKB2: af_packet_rcv(SKB2) consume_skb(SKB2) skb_release_data(SKB2) // drops second dataref page_pool_return_skb_page(PAGE2) // drops one pp_frag_count SKB1 _____ PAGE1 \____ PAGE2 / RX_BD3 _________/ (4) Userspace calls recvmsg() Copies SKB1 and releases it. Since SKB3 was coalesced with SKB1, we release the SKB3 page as well: tcp_eat_recv_skb(SKB1) skb_release_data(SKB1) page_pool_return_skb_page(PAGE1) page_pool_return_skb_page(PAGE2) // drops second pp_frag_count (5) PAGE2 is freed, but the third RX descriptor was still using it! In our case this causes IOMMU faults, but it would silently corrupt memory if the IOMMU was disabled. Change the logic that checks whether pp_recycle SKBs can be coalesced. We still reject differing pp_recycle between 'from' and 'to' SKBs, but in order to avoid the situation described above, we also reject coalescing when both 'from' and 'to' are pp_recycled and 'from' is cloned. The new logic allows coalescing a cloned pp_recycle SKB into a page refcounted one, because in this case the release (4) will drop the right reference, the one taken by skb_try_coalesce().","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""918697A2-B45C-4A04-8049-AFAB4BE2444E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""6AD94161-84BB-42E6-9882-4FC0C42E9FC1""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1effe8ca4e34c34cdd9318436a4232dcb582ebf4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/72bb856d16e883437023ff2ff77d0c498018728a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ba965e8605aee5387cecaa28fcf7ee9f61779a49"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c4fa19615806a9a7e518c295b39175aa47a685ac"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49094,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:46.747,2025-02-26T07:00:46.747,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net/tls: fix slab-out-of-bounds bug in decrypt_internal The memory size of tls_ctx->rx.iv for AES128-CCM is 12 setting in tls_set_sw_offload(). The return value of crypto_aead_ivsize() for ""ccm(aes)"" is 16. So memcpy() require 16 bytes from 12 bytes memory space will trigger slab-out-of-bounds bug as following: ================================================================== BUG: KASAN: slab-out-of-bounds in decrypt_internal+0x385/0xc40 [tls] Read of size 16 at addr ffff888114e84e60 by task tls/10911 Call Trace: <TASK> dump_stack_lvl+0x34/0x44 print_report.cold+0x5e/0x5db ? decrypt_internal+0x385/0xc40 [tls] kasan_report+0xab/0x120 ? decrypt_internal+0x385/0xc40 [tls] kasan_check_range+0xf9/0x1e0 memcpy+0x20/0x60 decrypt_internal+0x385/0xc40 [tls] ? tls_get_rec+0x2e0/0x2e0 [tls] ? process_rx_list+0x1a5/0x420 [tls] ? tls_setup_from_iter.constprop.0+0x2e0/0x2e0 [tls] decrypt_skb_update+0x9d/0x400 [tls] tls_sw_recvmsg+0x3c8/0xb50 [tls] Allocated by task 10911: kasan_save_stack+0x1e/0x40 __kasan_kmalloc+0x81/0xa0 tls_set_sw_offload+0x2eb/0xa20 [tls] tls_setsockopt+0x68c/0x700 [tls] __sys_setsockopt+0xfe/0x1b0 Replace the crypto_aead_ivsize() with prot->iv_size + prot->salt_size when memcpy() iv value in TLS_1_3_VERSION scenario.",,,"[{""url"":""https://git.kernel.org/stable/c/2304660ab6c425df64d95301b601424c6a50f28b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/29be1816cbab9a0dc6243120939fd10a92753756"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2b7d14c105dd8f6412eda5a91e1e6154653731e3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/589154d0f18945f41d138a5b4e49e518d294474b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6e2f1b033b17dedda51d465861b69e58317d6343"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9381fe8c849cfbe50245ac01fc077554f6eaa0e2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49095,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:46.887,2025-02-26T07:00:46.887,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: zorro7xx: Fix a resource leak in zorro7xx_remove_one() The error handling path of the probe releases a resource that is not freed in the remove function. In some cases, a ioremap() must be undone. Add the missing iounmap() call in the remove function.",,,"[{""url"":""https://git.kernel.org/stable/c/16ed828b872d12ccba8f07bcc446ae89ba662f9c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1e0c01319dedf1e63ec5df37ead048e17afd92ba"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/34a47f7ddb4fd1cbd12397aa6f7dad1de08b4050"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a845c678e094894f38cc9526d212b21933ce44c7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/aefd755a96051aa56b198cb7ecd168b22ba384f6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c5f77b595379b5191316edd365a542f8b1526066"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ce430cfad6a5385d5b7f7c1dc3fa50f10abfd41b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/db863ab2baf058ed05c7b723612e3c40c9dd6885"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/de6aee0978f164d3d0c771ce03e3066a26c371c5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49096,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:47.010,2025-03-13T21:35:06.293,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: sfc: add missing xdp queue reinitialization After rx/tx ring buffer size is changed, kernel panic occurs when it acts XDP_TX or XDP_REDIRECT. When tx/rx ring buffer size is changed(ethtool -G), sfc driver reallocates and reinitializes rx and tx queues and their buffer (tx_queue->buffer). But it misses reinitializing xdp queues(efx->xdp_tx_queues). So, while it is acting XDP_TX or XDP_REDIRECT, it uses the uninitialized tx_queue->buffer. A new function efx_set_xdp_channels() is separated from efx_set_channels() to handle only xdp queues. Splat looks like: BUG: kernel NULL pointer dereference, address: 000000000000002a #PF: supervisor write access in kernel mode #PF: error_code(0x0002) - not-present page PGD 0 P4D 0 Oops: 0002 [#4] PREEMPT SMP NOPTI RIP: 0010:efx_tx_map_chunk+0x54/0x90 [sfc] CPU: 2 PID: 0 Comm: swapper/2 Tainted: G D 5.17.0+ #55 e8beeee8289528f11357029357cf Code: 48 8b 8d a8 01 00 00 48 8d 14 52 4c 8d 2c d0 44 89 e0 48 85 c9 74 0e 44 89 e2 4c 89 f6 48 80 RSP: 0018:ffff92f121e45c60 EFLAGS: 00010297 RIP: 0010:efx_tx_map_chunk+0x54/0x90 [sfc] RAX: 0000000000000040 RBX: ffff92ea506895c0 RCX: ffffffffc0330870 RDX: 0000000000000001 RSI: 00000001139b10ce RDI: ffff92ea506895c0 RBP: ffffffffc0358a80 R08: 00000001139b110d R09: 0000000000000000 R10: 0000000000000001 R11: ffff92ea414c0088 R12: 0000000000000040 R13: 0000000000000018 R14: 00000001139b10ce R15: ffff92ea506895c0 FS: 0000000000000000(0000) GS:ffff92f121ec0000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 Code: 48 8b 8d a8 01 00 00 48 8d 14 52 4c 8d 2c d0 44 89 e0 48 85 c9 74 0e 44 89 e2 4c 89 f6 48 80 CR2: 000000000000002a CR3: 00000003e6810004 CR4: 00000000007706e0 RSP: 0018:ffff92f121e85c60 EFLAGS: 00010297 PKRU: 55555554 RAX: 0000000000000040 RBX: ffff92ea50689700 RCX: ffffffffc0330870 RDX: 0000000000000001 RSI: 00000001145a90ce RDI: ffff92ea50689700 RBP: ffffffffc0358a80 R08: 00000001145a910d R09: 0000000000000000 R10: 0000000000000001 R11: ffff92ea414c0088 R12: 0000000000000040 R13: 0000000000000018 R14: 00000001145a90ce R15: ffff92ea50689700 FS: 0000000000000000(0000) GS:ffff92f121e80000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 000000000000002a CR3: 00000003e6810005 CR4: 00000000007706e0 PKRU: 55555554 Call Trace: <IRQ> efx_xdp_tx_buffers+0x12b/0x3d0 [sfc 84c94b8e32d44d296c17e10a634d3ad454de4ba5] __efx_rx_packet+0x5c3/0x930 [sfc 84c94b8e32d44d296c17e10a634d3ad454de4ba5] efx_rx_packet+0x28c/0x2e0 [sfc 84c94b8e32d44d296c17e10a634d3ad454de4ba5] efx_ef10_ev_process+0x5f8/0xf40 [sfc 84c94b8e32d44d296c17e10a634d3ad454de4ba5] ? enqueue_task_fair+0x95/0x550 efx_poll+0xc4/0x360 [sfc 84c94b8e32d44d296c17e10a634d3ad454de4ba5]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""7B5A35FD-7C8E-453A-AA44-947D2252FADB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""6AD94161-84BB-42E6-9882-4FC0C42E9FC1""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/059a47f1da93811d37533556d67e72f2261b1127"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b8c46bc358d84701e7f7ffa054037db25f25da0e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/dcc85e1593686e42c6749ef3d356db34759d59e8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ed7a824fda8732578d1014fad1f7fb0363705090"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49097,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:47.127,2025-02-26T07:00:47.127,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: NFS: Avoid writeback threads getting stuck in mempool_alloc() In a low memory situation, allow the NFS writeback code to fail without getting stuck in infinite loops in mempool_alloc().",,,"[{""url"":""https://git.kernel.org/stable/c/0bae835b63c53f86cdc524f5962e39409585b22c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1b3fa9a3c420c31e77b406ddc28f3a627100516c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a6caeddd68977a1aaaf62fbd1955b41dd5c3c5d3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c74e2f6ecc51bd08bb5b0335477dba954a50592e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ea029e4ce760f786919d06ef52efa2e50ea92a5f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49098,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:47.247,2025-02-26T07:00:47.247,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: Drivers: hv: vmbus: Fix potential crash on module unload The vmbus driver relies on the panic notifier infrastructure to perform some operations when a panic event is detected. Since vmbus can be built as module, it is required that the driver handles both registering and unregistering such panic notifier callback. After commit 74347a99e73a (""x86/Hyper-V: Unload vmbus channel in hv panic callback"") though, the panic notifier registration is done unconditionally in the module initialization routine whereas the unregistering procedure is conditionally guarded and executes only if HV_FEATURE_GUEST_CRASH_MSR_AVAILABLE capability is set. This patch fixes that by unconditionally unregistering the panic notifier in the module's exit routine as well.",,,"[{""url"":""https://git.kernel.org/stable/c/2133c422a103cf7c7768c37b9ac382e73b691892"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3d0078f8bddd58d9bb1ad40bbe929f8633abb276"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5ea98d0f5f035c1bcf1517ccec0e024ae35a48b2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6b4c0149a56147b29169e07000d566162892722a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/792f232d57ff28bbd5f9c4abe0466b23d5879dc8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cf580d2e3884dbafd6b90269b03a24d661578624"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dcd6b1a624c0ffa21034d8b1e02e9d068458f596"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49099,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:47.347,2025-02-26T07:00:47.347,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: Drivers: hv: vmbus: Fix initialization of device object in vmbus_device_register() Initialize the device's dma_{mask,parms} pointers and the device's dma_mask value before invoking device_register(). Address the following trace with 5.17-rc7: [ 49.646839] WARNING: CPU: 0 PID: 189 at include/linux/dma-mapping.h:543 netvsc_probe+0x37a/0x3a0 [hv_netvsc] [ 49.646928] Call Trace: [ 49.646930] <TASK> [ 49.646935] vmbus_probe+0x40/0x60 [hv_vmbus] [ 49.646942] really_probe+0x1ce/0x3b0 [ 49.646948] __driver_probe_device+0x109/0x180 [ 49.646952] driver_probe_device+0x23/0xa0 [ 49.646955] __device_attach_driver+0x76/0xe0 [ 49.646958] ? driver_allows_async_probing+0x50/0x50 [ 49.646961] bus_for_each_drv+0x84/0xd0 [ 49.646964] __device_attach+0xed/0x170 [ 49.646967] device_initial_probe+0x13/0x20 [ 49.646970] bus_probe_device+0x8f/0xa0 [ 49.646973] device_add+0x41a/0x8e0 [ 49.646975] ? hrtimer_init+0x28/0x80 [ 49.646981] device_register+0x1b/0x20 [ 49.646983] vmbus_device_register+0x5e/0xf0 [hv_vmbus] [ 49.646991] vmbus_add_channel_work+0x12d/0x190 [hv_vmbus] [ 49.646999] process_one_work+0x21d/0x3f0 [ 49.647002] worker_thread+0x4a/0x3b0 [ 49.647005] ? process_one_work+0x3f0/0x3f0 [ 49.647007] kthread+0xff/0x130 [ 49.647011] ? kthread_complete_and_exit+0x20/0x20 [ 49.647015] ret_from_fork+0x22/0x30 [ 49.647020] </TASK> [ 49.647021] ---[ end trace 0000000000000000 ]---",,,"[{""url"":""https://git.kernel.org/stable/c/2fe4b8631427618175a32f125062df91a5fe3f73"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3a5469582c241abca22500f36a9cb8e9331969cf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49100,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:47.437,2025-02-26T07:00:47.437,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: virtio_console: eliminate anonymous module_init & module_exit Eliminate anonymous module_init() and module_exit(), which can lead to confusion or ambiguity when reading System.map, crashes/oops/bugs, or an initcall_debug log. Give each of these init and exit functions unique driver-specific names to eliminate the anonymous names. Example 1: (System.map) ffffffff832fc78c t init ffffffff832fc79e t init ffffffff832fc8f8 t init Example 2: (initcall_debug log) calling init+0x0/0x12 @ 1 initcall init+0x0/0x12 returned 0 after 15 usecs calling init+0x0/0x60 @ 1 initcall init+0x0/0x60 returned 0 after 2 usecs calling init+0x0/0x9a @ 1 initcall init+0x0/0x9a returned 0 after 74 usecs",,,"[{""url"":""https://git.kernel.org/stable/c/0f3d824bd70a1303464d5e93ee3e7afe7832fe89"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3504b0a177208eda85bf472bbf7c9aa77d2b8343"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3fd5dee7404ce40c79cba468bb2510115639d975"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/44c2d5fbe7b2bd1f8cb114d608a591a73a5d4ae6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/71612aee09ecea3475f8751dc841d75a011b1fd0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7deaddb704713608e0ae559e27185581b9af71a0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/93e3d88321d2274fa4e26b006e19cc10fec331c2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c69b442125bf009fce26e15aa5616caf8a3673c3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fefb8a2a941338d871e2d83fbd65fbfa068857bd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49101,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:47.533,2025-02-26T13:15:33.977,Rejected,[],Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.,,,[],,,,,,,,,
CVE-2022-49102,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:47.633,2025-03-13T21:34:36.947,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: habanalabs: fix possible memory leak in MMU DR fini This patch fixes what seems to be copy paste error. We will have a memory leak if the host-resident shadow is NULL (which will likely happen as the DR and HR are not dependent).","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""EE872F08-121D-4AE8-82B9-2B5DA905C944""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/12e49aefda2e04b07604f13e03f40027cbeb0dc6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/30058d3a83cfe8c6aacbfe5ab13c01dd0c1799e3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6d421fb7a9eddd8ce0a05641a3db97283fe20699"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/eb85eec858c1a5c11d3a0bff403f6440b05b40dc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49103,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:47.723,2025-03-13T21:34:30.150,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: NFSv4.2: fix reference count leaks in _nfs42_proc_copy_notify() [You don't often get email from xiongx18@fudan.edu.cn. Learn why this is important at http://aka.ms/LearnAboutSenderIdentification.] The reference counting issue happens in two error paths in the function _nfs42_proc_copy_notify(). In both error paths, the function simply returns the error code and forgets to balance the refcount of object `ctx`, bumped by get_nfs_open_context() earlier, which may cause refcount leaks. Fix it by balancing refcount of the `ctx` object before the function returns in both error paths.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.111"",""matchCriteriaId"":""983DAD06-CBCB-46BF-A9E0-3D277B7474DB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""D25878D3-7761-4E9F-8919-E92CD53896E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/9b9feec97c1fc7dd9bb69f62c4905cddf1801599"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b37f482ba9f0e6382c188e3fccf6c4b2fdc938eb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b7f114edd54326f730a754547e7cfb197b5bc132"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f46f632f9cfae4b2e3635fa58840a8ec584c42e3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fb73bf6305f4eb8f0cf9a61ee874d55f019d6dc4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49104,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:47.817,2025-03-13T21:34:20.867,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: staging: vchiq_core: handle NULL result of find_service_by_handle In case of an invalid handle the function find_servive_by_handle returns NULL. So take care of this and avoid a NULL pointer dereference.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.111"",""matchCriteriaId"":""983DAD06-CBCB-46BF-A9E0-3D277B7474DB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""D25878D3-7761-4E9F-8919-E92CD53896E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/04202f54dd8899e10f56a89c4c1ede0043fa22af"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3b424f6586a870b8d657c5e5419465bbe0e7b61f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/42f2142a337ee372455574809fc924580a7e51b2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/aa0b7296785312a4bfa8fac0ba8ad78698fd9fcf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ca225857faf237234d2fffe5d1919467dfadd822"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49105,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:47.910,2025-03-13T21:34:14.067,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: staging: wfx: fix an error handling in wfx_init_common() One error handler of wfx_init_common() return without calling ieee80211_free_hw(hw), which may result in memory leak. And I add one err label to unify the error handler, which is useful for the subsequent changes.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.111"",""matchCriteriaId"":""983DAD06-CBCB-46BF-A9E0-3D277B7474DB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""D25878D3-7761-4E9F-8919-E92CD53896E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/60f1d3c92dc1ef1026e5b917a329a7fa947da036"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/86efcb524ae1889ae73f2a2f0bb7fff2ec757ab0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/93498c6e775ae91732a8109dba1bdcd324908f84"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9727912e906762a63c1a667c84731d3427653f88"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ab0fed1fa744173433cfd1dbaf9239f200ded650"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49106,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:48.003,2025-03-13T21:34:06.120,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: staging: vchiq_arm: Avoid NULL ptr deref in vchiq_dump_platform_instances vchiq_get_state() can return a NULL pointer. So handle this cases and avoid a NULL pointer derefence in vchiq_dump_platform_instances.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""EE872F08-121D-4AE8-82B9-2B5DA905C944""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/176df12b38c70b0a45e6392a0ee5bc83489dfc29"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4627250cabaa80278d3ab01ad107893cea83799f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/51e5e5c34c22c0bfec0808d8c33e0b2fcf4c7c89"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/aa899e686d442c63d50f4d369cc02dbbf0941cb0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49107,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:48.093,2025-03-13T21:33:56.773,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ceph: fix memory leak in ceph_readdir when note_last_dentry returns error Reset the last_readdir at the same time, and add a comment explaining why we don't free last_readdir when dir_emit returns false.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.111"",""matchCriteriaId"":""983DAD06-CBCB-46BF-A9E0-3D277B7474DB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""D25878D3-7761-4E9F-8919-E92CD53896E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2fe82d3254029ef9ec4e7be890125d5ef4f537de"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7f740ede35132d3d5d19747cad56a511d21bb156"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e792575b902a3939ca482491ee9fb3a236f99640"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f4429786129648a8f4bb1e5faa143c4478cc5c4a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f639d9867eea647005dc824e0e24f39ffc50d4e4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49108,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:48.183,2025-03-13T21:33:48.393,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: clk: mediatek: Fix memory leaks on probe Handle the error branches to free memory where required. Addresses-Coverity-ID: 1491825 (""Resource leak"")","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""57E5D216-E993-4219-8003-6ED31E2EB652""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/02742d1d5c95cff8b6e9379aae4ab12674f7265d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7a688c91d3fd54c53e7a9edd6052cdae98dd99d8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c6a0b413398588fc2d8b174a79ea715b66413fca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49109,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:48.273,2025-02-26T07:00:48.273,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ceph: fix inode reference leakage in ceph_get_snapdir() The ceph_get_inode() will search for or insert a new inode into the hash for the given vino, and return a reference to it. If new is non-NULL, its reference is consumed. We should release the reference when in error handing cases.",,,"[{""url"":""https://git.kernel.org/stable/c/322794d3355c33adcc4feace0045d85a8e4ed813"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3ae7163598c611a8892698e0c056fe794e52b44b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9cd21981dedfb4fe9f344529e4be35727cb10940"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b2d9bb3f06abddefdfa740b0a604575b6797e1bf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49110,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:48.363,2025-02-26T07:00:48.363,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: netfilter: conntrack: revisit gc autotuning as of commit 4608fdfc07e1 (""netfilter: conntrack: collect all entries in one cycle"") conntrack gc was changed to run every 2 minutes. On systems where conntrack hash table is set to large value, most evictions happen from gc worker rather than the packet path due to hash table distribution. This causes netlink event overflows when events are collected. This change collects average expiry of scanned entries and reschedules to the average remaining value, within 1 to 60 second interval. To avoid event overflows, reschedule after each bucket and add a limit for both run time and number of evictions per run. If more entries have to be evicted, reschedule and restart 1 jiffy into the future.",,,"[{""url"":""https://git.kernel.org/stable/c/2cfadb761d3d0219412fd8150faea60c7e863833"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/58d52743ae85d28c9335c6034d6ce350b8689951"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/592e57591826f3d09c28d755a39ea8e9d13705ad"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7cd361d5e6d986c0d4cafb9ceaa803359048ae15"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49111,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:48.470,2025-03-25T16:20:37.950,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: Bluetooth: Fix use after free in hci_send_acl This fixes the following trace caused by receiving HCI_EV_DISCONN_PHY_LINK_COMPLETE which does call hci_conn_del without first checking if conn->type is in fact AMP_LINK and in case it is do properly cleanup upper layers with hci_disconn_cfm: ================================================================== BUG: KASAN: use-after-free in hci_send_acl+0xaba/0xc50 Read of size 8 at addr ffff88800e404818 by task bluetoothd/142 CPU: 0 PID: 142 Comm: bluetoothd Not tainted 5.17.0-rc5-00006-gda4022eeac1a #7 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014 Call Trace: <TASK> dump_stack_lvl+0x45/0x59 print_address_description.constprop.0+0x1f/0x150 kasan_report.cold+0x7f/0x11b hci_send_acl+0xaba/0xc50 l2cap_do_send+0x23f/0x3d0 l2cap_chan_send+0xc06/0x2cc0 l2cap_sock_sendmsg+0x201/0x2b0 sock_sendmsg+0xdc/0x110 sock_write_iter+0x20f/0x370 do_iter_readv_writev+0x343/0x690 do_iter_write+0x132/0x640 vfs_writev+0x198/0x570 do_writev+0x202/0x280 do_syscall_64+0x38/0x90 entry_SYSCALL_64_after_hwframe+0x44/0xae RSP: 002b:00007ffce8a099b8 EFLAGS: 00000246 ORIG_RAX: 0000000000000014 Code: 0f 00 f7 d8 64 89 02 48 c7 c0 ff ff ff ff eb b8 0f 1f 00 f3 0f 1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 b8 14 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 51 c3 48 83 ec 28 89 54 24 1c 48 89 74 24 10 RDX: 0000000000000001 RSI: 00007ffce8a099e0 RDI: 0000000000000015 RAX: ffffffffffffffda RBX: 00007ffce8a099e0 RCX: 00007f788fc3cf77 R10: 00007ffce8af7080 R11: 0000000000000246 R12: 000055e4ccf75580 RBP: 0000000000000015 R08: 0000000000000002 R09: 0000000000000001 </TASK> R13: 000055e4ccf754a0 R14: 000055e4ccf75cd0 R15: 000055e4ccf4a6b0 Allocated by task 45: kasan_save_stack+0x1e/0x40 __kasan_kmalloc+0x81/0xa0 hci_chan_create+0x9a/0x2f0 l2cap_conn_add.part.0+0x1a/0xdc0 l2cap_connect_cfm+0x236/0x1000 le_conn_complete_evt+0x15a7/0x1db0 hci_le_conn_complete_evt+0x226/0x2c0 hci_le_meta_evt+0x247/0x450 hci_event_packet+0x61b/0xe90 hci_rx_work+0x4d5/0xc50 process_one_work+0x8fb/0x15a0 worker_thread+0x576/0x1240 kthread+0x29d/0x340 ret_from_fork+0x1f/0x30 Freed by task 45: kasan_save_stack+0x1e/0x40 kasan_set_track+0x21/0x30 kasan_set_free_info+0x20/0x30 __kasan_slab_free+0xfb/0x130 kfree+0xac/0x350 hci_conn_cleanup+0x101/0x6a0 hci_conn_del+0x27e/0x6c0 hci_disconn_phylink_complete_evt+0xe0/0x120 hci_event_packet+0x812/0xe90 hci_rx_work+0x4d5/0xc50 process_one_work+0x8fb/0x15a0 worker_thread+0x576/0x1240 kthread+0x29d/0x340 ret_from_fork+0x1f/0x30 The buggy address belongs to the object at ffff88800c0f0500 The buggy address is located 24 bytes inside of which belongs to the cache kmalloc-128 of size 128 The buggy address belongs to the page: 128-byte region [ffff88800c0f0500, ffff88800c0f0580) flags: 0x100000000000200(slab|node=0|zone=1) page:00000000fe45cd86 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0xc0f0 raw: 0000000000000000 0000000080100010 00000001ffffffff 0000000000000000 raw: 0100000000000200 ffffea00003a2c80 dead000000000004 ffff8880078418c0 page dumped because: kasan: bad access detected ffff88800c0f0400: 00 00 00 00 00 00 00 00 00 00 00 00 00 fc fc fc Memory state around the buggy address: >ffff88800c0f0500: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb ffff88800c0f0480: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc ffff88800c0f0580: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc ---truncated---","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.311"",""matchCriteriaId"":""C86EFD13-93D4-4385-83E8-C665BE8F570F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.276"",""matchCriteriaId"":""6D9B028C-6313-47F9-94B7-5F8122345E49""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.238"",""matchCriteriaId"":""FA28527A-11D3-41D2-9C4C-ECAC0D6A4A2D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""8CB6E8F5-C2B1-46F3-A807-0F6104AC340F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.111"",""matchCriteriaId"":""96258501-7BCE-4C55-8A38-8AC9D327626D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""D25878D3-7761-4E9F-8919-E92CD53896E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2cc803804ec9a296b3156855d6c8c4ca1c6b84be"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3803d896ddd97c7c16689a5381c0960040727647"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4da302b90b96c309987eb9b37c8547f939f042d2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/643a6c26bd32e339d00ad97b8822b6db009e803c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/684e505406abaeabe0058e9776f9210bf2747953"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b3c2ea1fd444b3bb7b82bfd2c3a45418f85c2502"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c41de54b0a963e59e4dd04c029a4a6d73f45ef9c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d404765dffdbd8dcd14758695d0c96c52fb2e624"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f63d24baff787e13b723d86fe036f84bdbc35045"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49112,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:48.577,2025-02-26T07:00:48.577,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: mt76: fix monitor mode crash with sdio driver mt7921s driver may receive frames with fragment buffers. If there is a CTS packet received in monitor mode, the payload is 10 bytes only and need 6 bytes header padding after RXD buffer. However, only RXD in the first linear buffer, if we pull buffer size RXD-size+6 bytes with skb_pull(), that would trigger ""BUG_ON(skb->len < skb->data_len)"" in __skb_pull(). To avoid the nonlinear buffer issue, enlarge the RXD size from 128 to 256 to make sure all MCU operation in linear buffer. [ 52.007562] kernel BUG at include/linux/skbuff.h:2313! [ 52.007578] Internal error: Oops - BUG: 0 [#1] PREEMPT SMP [ 52.007987] pc : skb_pull+0x48/0x4c [ 52.008015] lr : mt7921_queue_rx_skb+0x494/0x890 [mt7921_common] [ 52.008361] Call trace: [ 52.008377] skb_pull+0x48/0x4c [ 52.008400] mt76s_net_worker+0x134/0x1b0 [mt76_sdio 35339a92c6eb7d4bbcc806a1d22f56365565135c] [ 52.008431] __mt76_worker_fn+0xe8/0x170 [mt76 ef716597d11a77150bc07e3fdd68eeb0f9b56917] [ 52.008449] kthread+0x148/0x3ac [ 52.008466] ret_from_fork+0x10/0x30",,,"[{""url"":""https://git.kernel.org/stable/c/123bc712b1de0805f9d683687e17b1ec2aba0b68"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/13946d5a68efd11dd6af2f6ef4c908f6b00158a5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/95e2af01669c7a3cb7a933cefa06361f9db15059"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c37b4cab3d97ef64b206fca4d9daabd9aff7356e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49113,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:48.677,2025-03-13T21:33:37.870,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: powerpc/secvar: fix refcount leak in format_show() Refcount leak will happen when format_show returns failure in multiple cases. Unified management of of_node_put can fix this problem.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.111"",""matchCriteriaId"":""983DAD06-CBCB-46BF-A9E0-3D277B7474DB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""D25878D3-7761-4E9F-8919-E92CD53896E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/02222bf4f0a27f6eba66d1f597cdb5daadd51829"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2a71e3ecd829a82013cf095c55068c61d991e885"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c105ffb6b9744158e37e9f81f0f38861951d1c1f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d05e4265d33af60b39606c20c731e3e719bfe3d6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d601fd24e6964967f115f036a840f4f28488f63f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49114,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:48.773,2025-03-25T16:19:46.613,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: libfc: Fix use after free in fc_exch_abts_resp() fc_exch_release(ep) will decrease the ep's reference count. When the reference count reaches zero, it is freed. But ep is still used in the following code, which will lead to a use after free. Return after the fc_exch_release() call to avoid use after free.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.311"",""matchCriteriaId"":""C86EFD13-93D4-4385-83E8-C665BE8F570F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.276"",""matchCriteriaId"":""6D9B028C-6313-47F9-94B7-5F8122345E49""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.238"",""matchCriteriaId"":""FA28527A-11D3-41D2-9C4C-ECAC0D6A4A2D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""8CB6E8F5-C2B1-46F3-A807-0F6104AC340F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.111"",""matchCriteriaId"":""96258501-7BCE-4C55-8A38-8AC9D327626D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""D25878D3-7761-4E9F-8919-E92CD53896E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1d7effe5fff9d28e45e18ac3a564067c7ddfe898"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/271add11994ba1a334859069367e04d2be2ebdd4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/412dd8299b02e4410fe77b8396953c1a8dde183a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/499d198494e77b6533251b9b909baf5c101129cb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4a131d4ea8b581ac9b01d3a72754db4848be3232"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5cf2ce8967b0d98c8cfa4dc42ef4fcf080f5c836"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6044ad64f41c87382cfeeca281573d1886d80cbe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/87909291762d08fdb60d19069d7a89b5b308d0ef"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f581df412bc45c95176e3c808ee2839c05b2ab0c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49115,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:48.873,2025-03-13T21:33:28.743,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: PCI: endpoint: Fix misused goto label Fix a misused goto label jump since that can result in a memory leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.111"",""matchCriteriaId"":""983DAD06-CBCB-46BF-A9E0-3D277B7474DB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""D25878D3-7761-4E9F-8919-E92CD53896E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/70236a0d2d62b081d52076de22d8d017d6cbe99f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7c657c0694ff690e361a13ce41c36b9dfb433ec8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bf8d87c076f55b8b4dfdb6bc6c6b6dc0c2ccb487"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d3642fc64276b06446290f82fd45630aeaa4b007"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/dc9d33b2d8d09e6478e8ef817a81cf26930acc3e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49116,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:48.967,2025-03-13T21:33:19.333,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: Bluetooth: use memset avoid memory leaks Use memset to initialize structs to prevent memory leaks in l2cap_ecred_connect","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.111"",""matchCriteriaId"":""983DAD06-CBCB-46BF-A9E0-3D277B7474DB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""D25878D3-7761-4E9F-8919-E92CD53896E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/42b6a39f439b6f37cc2024d91ce547d83290ff78"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9567d54e70ff58c2695c2cc2e53c86c67551d3e6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d3715b2333e9a21692ba16ef8645eda584a9515d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d588c183a971b85c775ad66da563ee6e8bc8158f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e9e55acee9b7a737ec7f5161b94a78932a5514c8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49117,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:49.057,2025-03-13T21:33:09.707,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mips: ralink: fix a refcount leak in ill_acc_of_setup() of_node_put(np) needs to be called when pdev == NULL.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""4AAE7A78-57E5-45A6-860D-7867DA88A45E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.111"",""matchCriteriaId"":""96258501-7BCE-4C55-8A38-8AC9D327626D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""D25878D3-7761-4E9F-8919-E92CD53896E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/060a485df4ec1183d543317511cb4caa43468b5d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/142ae7d4f21524acfe073e5a3da5667aa85eb970"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4a0a1436053b17e50b7c88858fb0824326641793"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5fb47ca3490813d3884d8ad0b2ce511aa3537551"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8d7f7ef7980f287ace1c15f2ac03d6754e12f071"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c74c755daed551b9aceb8388159180861474bdfe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49118,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:49.150,2025-02-26T07:00:49.150,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: hisi_sas: Free irq vectors in order for v3 HW If the driver probe fails to request the channel IRQ or fatal IRQ, the driver will free the IRQ vectors before freeing the IRQs in free_irq(), and this will cause a kernel BUG like this: ------------[ cut here ]------------ kernel BUG at drivers/pci/msi.c:369! Internal error: Oops - BUG: 0 [#1] PREEMPT SMP Call trace: free_msi_irqs+0x118/0x13c pci_disable_msi+0xfc/0x120 pci_free_irq_vectors+0x24/0x3c hisi_sas_v3_probe+0x360/0x9d0 [hisi_sas_v3_hw] local_pci_probe+0x44/0xb0 work_for_cpu_fn+0x20/0x34 process_one_work+0x1d0/0x340 worker_thread+0x2e0/0x460 kthread+0x180/0x190 ret_from_fork+0x10/0x20 ---[ end trace b88990335b610c11 ]--- So we use devm_add_action() to control the order in which we free the vectors.",,,"[{""url"":""https://git.kernel.org/stable/c/224903cc60d045576393c3b16907742f23e6c740"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/554fb72ee34f4732c7f694f56c3c6e67790352a0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8b6eab9d683bae7f88dc894b8c851f866032301c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b4cc04fa8f1fc3816c8494d77abab3f72b9d2292"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f05a0d8de2ea49af36821a20b0b501e20ced937e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49119,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:49.250,2025-03-13T21:33:01.950,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: pm8001: Fix memory leak in pm8001_chip_fw_flash_update_req() In pm8001_chip_fw_flash_update_build(), if pm8001_chip_fw_flash_update_build() fails, the struct fw_control_ex allocated must be freed.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.111"",""matchCriteriaId"":""983DAD06-CBCB-46BF-A9E0-3D277B7474DB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""D25878D3-7761-4E9F-8919-E92CD53896E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/a25ed5f21f94f9ae4bcc8dd747e978668890c921"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d83574666bac4b1462e90df393fbed6c5f57d1a3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e5ecdb01952f230921aa8163d8d7f4c97c925ed8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f792a3629f4c4aa4c3703d66b43ce1edcc3ec09a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fe5b8ea5583b5c3f6f68e06acba50387edf3b5d5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49120,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:49.350,2025-02-26T07:00:49.350,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: pm8001: Fix task leak in pm8001_send_abort_all() In pm8001_send_abort_all(), make sure to free the allocated sas task if pm8001_tag_alloc() or pm8001_mpi_build_cmd() fail.",,,"[{""url"":""https://git.kernel.org/stable/c/146cae06d2682d7563732544be334e8e6d3862b8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2051044d7901f1a9d7be95d0d32e53b88e9548f7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2290dcad6f65864dec518fb2d5fb45f67d684150"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/34c79d16ee69cb53288c202bb1ab0ba0130d9674"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f90a74892f3acf0cdec5844e90fc8686ca13e7d7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49121,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:49.450,2025-02-26T07:00:49.450,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: pm8001: Fix tag leaks on error In pm8001_chip_set_dev_state_req(), pm8001_chip_fw_flash_update_req(), pm80xx_chip_phy_ctl_req() and pm8001_chip_reg_dev_req() add missing calls to pm8001_tag_free() to free the allocated tag when pm8001_mpi_build_cmd() fails. Similarly, in pm8001_exec_internal_task_abort(), if the chip ->task_abort method fails, the tag allocated for the abort request task must be freed. Add the missing call to pm8001_tag_free().",,,"[{""url"":""https://git.kernel.org/stable/c/43c617eefab7077d69f5989ad3e2a273da1d728b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4c8f04b1905cd4b776d0b720463c091545478ef7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9cc72bcc1c096ed42c91646f130d4b4191580a4c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a0bb65eadbf942024226241d9d99fed17168940b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bdc74815f1c39905054b7d47399e0260b201b14d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49122,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:49.540,2025-02-26T07:00:49.540,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: dm ioctl: prevent potential spectre v1 gadget It appears like cmd could be a Spectre v1 gadget as it's supplied by a user and used as an array index. Prevent the contents of kernel memory from being leaked to userspace via speculative execution by using array_index_nospec.",,,"[{""url"":""https://git.kernel.org/stable/c/02cc46f397eb3691c56affbd5073e54f7a82ac32"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/0320bac5801b31407200227173205d017488f140"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/44e6cb3ab177faae840bb2c1ebda9a2539876184"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/58880025e3362024f6d8ea01cb0c7a5df6c84ba6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/71c8df33fd777c7628f6fbc09b14e84806c55914"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/76c94651005f58885facf9c973007f5ea01ab01f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7ae2c5b89da3cfaf856df880af27d3bb32a74b3d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cd9c88da171a62c4b0f1c70e50c75845969fbc18"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dd86064417de828ff2102ddc6049c829bf7585b4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49123,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:49.640,2025-03-13T21:32:37.113,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ath11k: Fix frames flush failure caused by deadlock We are seeing below warnings: kernel: [25393.301506] ath11k_pci 0000:01:00.0: failed to flush mgmt transmit queue 0 kernel: [25398.421509] ath11k_pci 0000:01:00.0: failed to flush mgmt transmit queue 0 kernel: [25398.421831] ath11k_pci 0000:01:00.0: dropping mgmt frame for vdev 0, is_started 0 this means ath11k fails to flush mgmt. frames because wmi_mgmt_tx_work has no chance to run in 5 seconds. By setting /proc/sys/kernel/hung_task_timeout_secs to 20 and increasing ATH11K_FLUSH_TIMEOUT to 50 we get below warnings: kernel: [ 120.763160] INFO: task wpa_supplicant:924 blocked for more than 20 seconds. kernel: [ 120.763169] Not tainted 5.10.90 #12 kernel: [ 120.763177] ""echo 0 > /proc/sys/kernel/hung_task_timeout_secs"" disables this message. kernel: [ 120.763186] task:wpa_supplicant state:D stack: 0 pid: 924 ppid: 1 flags:0x000043a0 kernel: [ 120.763201] Call Trace: kernel: [ 120.763214] __schedule+0x785/0x12fa kernel: [ 120.763224] ? lockdep_hardirqs_on_prepare+0xe2/0x1bb kernel: [ 120.763242] schedule+0x7e/0xa1 kernel: [ 120.763253] schedule_timeout+0x98/0xfe kernel: [ 120.763266] ? run_local_timers+0x4a/0x4a kernel: [ 120.763291] ath11k_mac_flush_tx_complete+0x197/0x2b1 [ath11k 13c3a9bf37790f4ac8103b3decf7ab4008ac314a] kernel: [ 120.763306] ? init_wait_entry+0x2e/0x2e kernel: [ 120.763343] __ieee80211_flush_queues+0x167/0x21f [mac80211 335da900954f1c5ea7f1613d92088ce83342042c] kernel: [ 120.763378] __ieee80211_recalc_idle+0x105/0x125 [mac80211 335da900954f1c5ea7f1613d92088ce83342042c] kernel: [ 120.763411] ieee80211_recalc_idle+0x14/0x27 [mac80211 335da900954f1c5ea7f1613d92088ce83342042c] kernel: [ 120.763441] ieee80211_free_chanctx+0x77/0xa2 [mac80211 335da900954f1c5ea7f1613d92088ce83342042c] kernel: [ 120.763473] __ieee80211_vif_release_channel+0x100/0x131 [mac80211 335da900954f1c5ea7f1613d92088ce83342042c] kernel: [ 120.763540] ieee80211_vif_release_channel+0x66/0x81 [mac80211 335da900954f1c5ea7f1613d92088ce83342042c] kernel: [ 120.763572] ieee80211_destroy_auth_data+0xa3/0xe6 [mac80211 335da900954f1c5ea7f1613d92088ce83342042c] kernel: [ 120.763612] ieee80211_mgd_deauth+0x178/0x29b [mac80211 335da900954f1c5ea7f1613d92088ce83342042c] kernel: [ 120.763654] cfg80211_mlme_deauth+0x1a8/0x22c [cfg80211 8945aa5bc2af5f6972336665d8ad6f9c191ad5be] kernel: [ 120.763697] nl80211_deauthenticate+0xfa/0x123 [cfg80211 8945aa5bc2af5f6972336665d8ad6f9c191ad5be] kernel: [ 120.763715] genl_rcv_msg+0x392/0x3c2 kernel: [ 120.763750] ? nl80211_associate+0x432/0x432 [cfg80211 8945aa5bc2af5f6972336665d8ad6f9c191ad5be] kernel: [ 120.763782] ? nl80211_associate+0x432/0x432 [cfg80211 8945aa5bc2af5f6972336665d8ad6f9c191ad5be] kernel: [ 120.763802] ? genl_rcv+0x36/0x36 kernel: [ 120.763814] netlink_rcv_skb+0x89/0xf7 kernel: [ 120.763829] genl_rcv+0x28/0x36 kernel: [ 120.763840] netlink_unicast+0x179/0x24b kernel: [ 120.763854] netlink_sendmsg+0x393/0x401 kernel: [ 120.763872] sock_sendmsg+0x72/0x76 kernel: [ 120.763886] ____sys_sendmsg+0x170/0x1e6 kernel: [ 120.763897] ? copy_msghdr_from_user+0x7a/0xa2 kernel: [ 120.763914] ___sys_sendmsg+0x95/0xd1 kernel: [ 120.763940] __sys_sendmsg+0x85/0xbf kernel: [ 120.763956] do_syscall_64+0x43/0x55 kernel: [ 120.763966] entry_SYSCALL_64_after_hwframe+0x44/0xa9 kernel: [ 120.763977] RIP: 0033:0x79089f3fcc83 kernel: [ 120.763986] RSP: 002b:00007ffe604f0508 EFLAGS: 00000246 ORIG_RAX: 000000000000002e kernel: [ 120.763997] RAX: ffffffffffffffda RBX: 000059b40e987690 RCX: 000079089f3fcc83 kernel: [ 120.764006] RDX: 0000000000000000 RSI: 00007ffe604f0558 RDI: 0000000000000009 kernel: [ 120.764014] RBP: 00007ffe604f0540 R08: 0000000000000004 R09: 0000000000400000 kernel: [ 120.764023] R10: 00007ffe604f0638 R11: 0000000000000246 R12: 000059b40ea04980 kernel: [ 120.764032] R13: 00007ffe604 ---truncated---","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""68AC7372-D098-4584-A82A-1F7CD731042F""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/261b07519518bd14cb168b287b17e1d195f8d0c8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/33e723dc054edfc94da90eecca3b72cb424ce4a3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49124,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:49.740,2025-02-26T07:00:49.740,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: x86/mce: Work around an erratum on fast string copy instructions A rare kernel panic scenario can happen when the following conditions are met due to an erratum on fast string copy instructions: 1) An uncorrected error. 2) That error must be in first cache line of a page. 3) Kernel must execute page_copy from the page immediately before that page. The fast string copy instructions (""REP; MOVS*"") could consume an uncorrectable memory error in the cache line _right after_ the desired region to copy and raise an MCE. Bit 0 of MSR_IA32_MISC_ENABLE can be cleared to disable fast string copy and will avoid such spurious machine checks. However, that is less preferable due to the permanent performance impact. Considering memory poison is rare, it's desirable to keep fast string copy enabled until an MCE is seen. Intel has confirmed the following: 1. The CPU erratum of fast string copy only applies to Skylake, Cascade Lake and Cooper Lake generations. Directly return from the MCE handler: 2. Will result in complete execution of the ""REP; MOVS*"" with no data loss or corruption. 3. Will not result in another MCE firing on the next poisoned cache line due to ""REP; MOVS*"". 4. Will resume execution from a correct point in code. 5. Will result in the same instruction that triggered the MCE firing a second MCE immediately for any other software recoverable data fetch errors. 6. Is not safe without disabling the fast string copy, as the next fast string copy of the same buffer on the same CPU would result in a PANIC MCE. This should mitigate the erratum completely with the only caveat that the fast string copy is disabled on the affected hyper thread thus performance degradation. This is still better than the OS crashing on MCEs raised on an irrelevant process due to ""REP; MOVS*' accesses in a kernel context, e.g., copy_page. Injected errors on 1st cache line of 8 anonymous pages of process 'proc1' and observed MCE consumption from 'proc2' with no panic (directly returned). Without the fix, the host panicked within a few minutes on a random 'proc2' process due to kernel access from copy_page. [ bp: Fix comment style + touch ups, zap an unlikely(), improve the quirk function's readability. ]",,,"[{""url"":""https://git.kernel.org/stable/c/8ca97812c3c830573f965a07bbd84223e8c5f5bd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ba37c73be3d5632f6fb9fa20b250ce45560ca85d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49125,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:49.837,2025-03-13T21:32:24.580,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/sprd: fix potential NULL dereference 'drm' could be null in sprd_drm_shutdown, and drm_warn maybe dereference it, remove this warning log. v1 -> v2: - Split checking platform_get_resource() return value to a separate patch - Use dev_warn() instead of removing the warning log","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""68AC7372-D098-4584-A82A-1F7CD731042F""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/8668658aebb0a19d877d5a81c004baf716c4aaa6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c3acc8db1bc221604e2db9807f01d8a44b97a64d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49126,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:49.927,2025-03-13T21:32:15.540,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: mpi3mr: Fix memory leaks Fix memory leaks related to operational reply queue's memory segments which are not getting freed while unloading the driver.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""EE872F08-121D-4AE8-82B9-2B5DA905C944""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/27fc9e90171ab0a94a411f3fdb3522ef5acb9537"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5d76a88b8536d75ff5362e232097e85946b8aadf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/71c7ac65a084ae7d387c3c1d02d59edfdecb009f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d44b5fefb22e139408ae12b864da1ecb9ad9d1d2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49127,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:50.023,2025-03-25T16:19:12.310,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ref_tracker: implement use-after-free detection Whenever ref_tracker_dir_init() is called, mark the struct ref_tracker_dir as dead. Test the dead status from ref_tracker_alloc() and ref_tracker_free() This should detect buggy dev_put()/dev_hold() happening too late in netdevice dismantle process.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/3743c9de303fa36c2e2ca2522ab280c52bcafbd2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e3ececfe668facd87d920b608349a32607060e66"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49128,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:50.113,2025-03-13T21:31:58.897,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/bridge: Add missing pm_runtime_put_sync pm_runtime_get_sync() will increase the rumtime PM counter even when it returns an error. Thus a pairing decrement is needed to prevent refcount leak. Fix this by replacing this API with pm_runtime_resume_and_get(), which will not change the runtime PM counter on error. Besides, a matching decrement is needed on the error handling path to keep the counter balanced.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""EE872F08-121D-4AE8-82B9-2B5DA905C944""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/46f47807738441e354873546dde0b000106c068a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/792533e54cd6e89191798ccd1abd590c62b9077e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9df80dc738926a2ea4bd1ce5993c3d0f4b0e855c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ff13c90d7f7ab606b37be6d15140d19013d6736c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49129,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:50.203,2025-03-25T16:18:59.607,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mt76: mt7921: fix crash when startup fails. If the nic fails to start, it is possible that the reset_work has already been scheduled. Ensure the work item is canceled so we do not have use-after-free crash in case cleanup is called before the work item is executed. This fixes crash on my x86_64 apu2 when mt7921k radio fails to work. Radio still fails, but OS does not crash.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.16"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""5ED7E49C-8A8C-464E-A693-B954F083C885""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/38fbe806645090c07aa97171f20fc62c3d7d3a98"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/827e7799c61b978fbc2cc9dac66cb62401b2b3f0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ac1260b661c2ef0d0a56680cdb5672b931b7be8f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c1a5e6002ec441a3b9fb4d048b4b49ae93409a46"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49130,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:50.300,2025-03-13T21:31:30.390,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ath11k: mhi: use mhi_sync_power_up() If amss.bin was missing ath11k would crash during 'rmmod ath11k_pci'. The reason for that was that we were using mhi_async_power_up() which does not check any errors. But mhi_sync_power_up() on the other hand does check for errors so let's use that to fix the crash. I was not able to find a reason why an async version was used. ath11k_mhi_start() (which enables state ATH11K_MHI_POWER_ON) is called from ath11k_hif_power_up(), which can sleep. So sync version should be safe to use here. [ 145.569731] general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC KASAN PTI [ 145.569789] KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007] [ 145.569843] CPU: 2 PID: 1628 Comm: rmmod Kdump: loaded Tainted: G W 5.16.0-wt-ath+ #567 [ 145.569898] Hardware name: Intel(R) Client Systems NUC8i7HVK/NUC8i7HVB, BIOS HNKBLi70.86A.0067.2021.0528.1339 05/28/2021 [ 145.569956] RIP: 0010:ath11k_hal_srng_access_begin+0xb5/0x2b0 [ath11k] [ 145.570028] Code: df 48 89 fa 48 c1 ea 03 80 3c 02 00 0f 85 ec 01 00 00 48 8b ab a8 00 00 00 48 b8 00 00 00 00 00 fc ff df 48 89 ea 48 c1 ea 03 <0f> b6 14 02 48 89 e8 83 e0 07 83 c0 03 45 85 ed 75 48 38 d0 7c 08 [ 145.570089] RSP: 0018:ffffc900025d7ac0 EFLAGS: 00010246 [ 145.570144] RAX: dffffc0000000000 RBX: ffff88814fca2dd8 RCX: 1ffffffff50cb455 [ 145.570196] RDX: 0000000000000000 RSI: ffff88814fca2dd8 RDI: ffff88814fca2e80 [ 145.570252] RBP: 0000000000000000 R08: 0000000000000000 R09: ffffffffa8659497 [ 145.570329] R10: fffffbfff50cb292 R11: 0000000000000001 R12: ffff88814fca0000 [ 145.570410] R13: 0000000000000000 R14: ffff88814fca2798 R15: ffff88814fca2dd8 [ 145.570465] FS: 00007fa399988540(0000) GS:ffff888233e00000(0000) knlGS:0000000000000000 [ 145.570519] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 145.570571] CR2: 00007fa399b51421 CR3: 0000000137898002 CR4: 00000000003706e0 [ 145.570623] Call Trace: [ 145.570675] <TASK> [ 145.570727] ? ath11k_ce_tx_process_cb+0x34b/0x860 [ath11k] [ 145.570797] ath11k_ce_tx_process_cb+0x356/0x860 [ath11k] [ 145.570864] ? tasklet_init+0x150/0x150 [ 145.570919] ? ath11k_ce_alloc_pipes+0x280/0x280 [ath11k] [ 145.570986] ? tasklet_clear_sched+0x42/0xe0 [ 145.571042] ? tasklet_kill+0xe9/0x1b0 [ 145.571095] ? tasklet_clear_sched+0xe0/0xe0 [ 145.571148] ? irq_has_action+0x120/0x120 [ 145.571202] ath11k_ce_cleanup_pipes+0x45a/0x580 [ath11k] [ 145.571270] ? ath11k_pci_stop+0x10e/0x170 [ath11k_pci] [ 145.571345] ath11k_core_stop+0x8a/0xc0 [ath11k] [ 145.571434] ath11k_core_deinit+0x9e/0x150 [ath11k] [ 145.571499] ath11k_pci_remove+0xd2/0x260 [ath11k_pci] [ 145.571553] pci_device_remove+0x9a/0x1c0 [ 145.571605] __device_release_driver+0x332/0x660 [ 145.571659] driver_detach+0x1e7/0x2c0 [ 145.571712] bus_remove_driver+0xe2/0x2d0 [ 145.571772] pci_unregister_driver+0x21/0x250 [ 145.571826] __do_sys_delete_module+0x30a/0x4b0 [ 145.571879] ? free_module+0xac0/0xac0 [ 145.571933] ? lockdep_hardirqs_on_prepare.part.0+0x18c/0x370 [ 145.571986] ? syscall_enter_from_user_mode+0x1d/0x50 [ 145.572039] ? lockdep_hardirqs_on+0x79/0x100 [ 145.572097] do_syscall_64+0x3b/0x90 [ 145.572153] entry_SYSCALL_64_after_hwframe+0x44/0xae Tested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03003-QCAHSPSWPL_V1_V2_SILICONZ_LITE-2","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.111"",""matchCriteriaId"":""983DAD06-CBCB-46BF-A9E0-3D277B7474DB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""D25878D3-7761-4E9F-8919-E92CD53896E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/20d01a11efde2e05e47d5c66101f5c26eaca68e2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/339bd0b55ecdd0f7f341e9357c4cfde799de9418"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3df6d74aedfdca919cca475d15dfdbc8b05c9e5d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3fd7d50384c3808b7f7fa135aa9bb5feb1cb9849"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/646d533af2911be1184eaee8c900b7eb8ecc4396"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49131,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:50.393,2025-03-13T21:31:46.303,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ath11k: fix kernel panic during unload/load ath11k modules Call netif_napi_del() from ath11k_ahb_free_ext_irq() to fix the following kernel panic when unload/load ath11k modules for few iterations. [ 971.201365] Unable to handle kernel paging request at virtual address 6d97a208 [ 971.204227] pgd = 594c2919 [ 971.211478] [6d97a208] *pgd=00000000 [ 971.214120] Internal error: Oops: 5 [#1] PREEMPT SMP ARM [ 971.412024] CPU: 2 PID: 4435 Comm: insmod Not tainted 5.4.89 #0 [ 971.434256] Hardware name: Generic DT based system [ 971.440165] PC is at napi_by_id+0x10/0x40 [ 971.445019] LR is at netif_napi_add+0x160/0x1dc [ 971.743127] (napi_by_id) from [<807d89a0>] (netif_napi_add+0x160/0x1dc) [ 971.751295] (netif_napi_add) from [<7f1209ac>] (ath11k_ahb_config_irq+0xf8/0x414 [ath11k_ahb]) [ 971.759164] (ath11k_ahb_config_irq [ath11k_ahb]) from [<7f12135c>] (ath11k_ahb_probe+0x40c/0x51c [ath11k_ahb]) [ 971.768567] (ath11k_ahb_probe [ath11k_ahb]) from [<80666864>] (platform_drv_probe+0x48/0x94) [ 971.779670] (platform_drv_probe) from [<80664718>] (really_probe+0x1c8/0x450) [ 971.789389] (really_probe) from [<80664cc4>] (driver_probe_device+0x15c/0x1b8) [ 971.797547] (driver_probe_device) from [<80664f60>] (device_driver_attach+0x44/0x60) [ 971.805795] (device_driver_attach) from [<806650a0>] (__driver_attach+0x124/0x140) [ 971.814822] (__driver_attach) from [<80662adc>] (bus_for_each_dev+0x58/0xa4) [ 971.823328] (bus_for_each_dev) from [<80663a2c>] (bus_add_driver+0xf0/0x1e8) [ 971.831662] (bus_add_driver) from [<806658a4>] (driver_register+0xa8/0xf0) [ 971.839822] (driver_register) from [<8030269c>] (do_one_initcall+0x78/0x1ac) [ 971.847638] (do_one_initcall) from [<80392524>] (do_init_module+0x54/0x200) [ 971.855968] (do_init_module) from [<803945b0>] (load_module+0x1e30/0x1ffc) [ 971.864126] (load_module) from [<803948b0>] (sys_init_module+0x134/0x17c) [ 971.871852] (sys_init_module) from [<80301000>] (ret_fast_syscall+0x0/0x50) Tested-on: IPQ8074 hw2.0 AHB WLAN.HK.2.6.0.1-00760-QCAHKSWPL_SILICONZ-1","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-noinfo""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.111"",""matchCriteriaId"":""983DAD06-CBCB-46BF-A9E0-3D277B7474DB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""D25878D3-7761-4E9F-8919-E92CD53896E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/22b59cb965f79ee1accf83172441c9ca0ecb632a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/38e488db194dc16d2eb23c77c6a8c04ff583c40d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/699e8c87e5c406af0f0606f40eeebd248c51b702"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c4b7653af62a9a5efe2856183d1f987c5429758b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c6a815f5abdf324108799829dd19ea62fef4bf95"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49132,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:50.497,2025-02-26T07:00:50.497,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ath11k: pci: fix crash on suspend if board file is not found Mario reported that the kernel was crashing on suspend if ath11k was not able to find a board file: [ 473.693286] PM: Suspending system (s2idle) [ 473.693291] printk: Suspending console(s) (use no_console_suspend to debug) [ 474.407787] BUG: unable to handle page fault for address: 0000000000002070 [ 474.407791] #PF: supervisor read access in kernel mode [ 474.407794] #PF: error_code(0x0000) - not-present page [ 474.407798] PGD 0 P4D 0 [ 474.407801] Oops: 0000 [#1] PREEMPT SMP NOPTI [ 474.407805] CPU: 2 PID: 2350 Comm: kworker/u32:14 Tainted: G W 5.16.0 #248 [...] [ 474.407868] Call Trace: [ 474.407870] <TASK> [ 474.407874] ? _raw_spin_lock_irqsave+0x2a/0x60 [ 474.407882] ? lock_timer_base+0x72/0xa0 [ 474.407889] ? _raw_spin_unlock_irqrestore+0x29/0x3d [ 474.407892] ? try_to_del_timer_sync+0x54/0x80 [ 474.407896] ath11k_dp_rx_pktlog_stop+0x49/0xc0 [ath11k] [ 474.407912] ath11k_core_suspend+0x34/0x130 [ath11k] [ 474.407923] ath11k_pci_pm_suspend+0x1b/0x50 [ath11k_pci] [ 474.407928] pci_pm_suspend+0x7e/0x170 [ 474.407935] ? pci_pm_freeze+0xc0/0xc0 [ 474.407939] dpm_run_callback+0x4e/0x150 [ 474.407947] __device_suspend+0x148/0x4c0 [ 474.407951] async_suspend+0x20/0x90 dmesg-efi-164255130401001: Oops#1 Part1 [ 474.407955] async_run_entry_fn+0x33/0x120 [ 474.407959] process_one_work+0x220/0x3f0 [ 474.407966] worker_thread+0x4a/0x3d0 [ 474.407971] kthread+0x17a/0x1a0 [ 474.407975] ? process_one_work+0x3f0/0x3f0 [ 474.407979] ? set_kthread_struct+0x40/0x40 [ 474.407983] ret_from_fork+0x22/0x30 [ 474.407991] </TASK> The issue here is that board file loading happens after ath11k_pci_probe() succesfully returns (ath11k initialisation happends asynchronously) and the suspend handler is still enabled, of course failing as ath11k is not properly initialised. Fix this by checking ATH11K_FLAG_QMI_FAIL during both suspend and resume. Tested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03003-QCAHSPSWPL_V1_V2_SILICONZ_LITE-2",,,"[{""url"":""https://git.kernel.org/stable/c/aeed776c00e804a0f7896db39c7c661cea34ee1f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b4f4c56459a5c744f7f066b9fc2b54ea995030c5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f3c5ef433da82d257337424b3647ce9dcb37d4b5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fed4cef115ab21a18faf499b3fa9b9a4b544f941"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49133,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:50.590,2025-02-26T07:00:50.590,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/amdkfd: svm range restore work deadlock when process exit kfd_process_notifier_release flush svm_range_restore_work which calls svm_range_list_lock_and_flush_work to flush deferred_list work, but if deferred_list work mmput release the last user, it will call exit_mmap -> notifier_release, it is deadlock with below backtrace. Move flush svm_range_restore_work to kfd_process_wq_release to avoid deadlock. Then svm_range_restore_work take task->mm ref to avoid mm is gone while validating and mapping ranges to GPU. Workqueue: events svm_range_deferred_list_work [amdgpu] Call Trace: wait_for_completion+0x94/0x100 __flush_work+0x12a/0x1e0 __cancel_work_timer+0x10e/0x190 cancel_delayed_work_sync+0x13/0x20 kfd_process_notifier_release+0x98/0x2a0 [amdgpu] __mmu_notifier_release+0x74/0x1f0 exit_mmap+0x170/0x200 mmput+0x5d/0x130 svm_range_deferred_list_work+0x104/0x230 [amdgpu] process_one_work+0x220/0x3c0",,,"[{""url"":""https://git.kernel.org/stable/c/6225bb3a88d22594aacea2485dc28ca12d596721"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/858822905f4bf44100d63c5e22e263109976f7cb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a6be83086e91891081e0589e4b4645bf4643e897"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49134,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:50.680,2025-03-13T21:31:21.910,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mlxsw: spectrum: Guard against invalid local ports When processing events generated by the device's firmware, the driver protects itself from events reported for non-existent local ports, but not for the CPU port (local port 0), which exists, but does not have all the fields as any local port. This can result in a NULL pointer dereference when trying access 'struct mlxsw_sp_port' fields which are not initialized for CPU port. Commit 63b08b1f6834 (""mlxsw: spectrum: Protect driver from buggy firmware"") already handled such issue by bailing early when processing a PUDE event reported for the CPU port. Generalize the approach by moving the check to a common function and making use of it in all relevant places.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""68AC7372-D098-4584-A82A-1F7CD731042F""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/4cad27ba2e5a5843a7fab5aa30de2b8e8c3db3a8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bcdfd615f83b4bd04678109bf18022d1476e4bbf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49135,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:50.770,2025-03-13T21:31:13.487,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/amd/display: Fix memory leak [why] Resource release is needed on the error handling path to prevent memory leak. [how] Fix this by adding kfree on the error handling path.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""EE872F08-121D-4AE8-82B9-2B5DA905C944""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/3ce1497add6d17b48cc9df65095bd20202d93994"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5d5c6dba2b43e28845d7d7ed32a36802329a5f52"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7e10369c72db7a0e2f77b2e306aadc07aef6b07a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9d0bef3cc22cf250278ed45b829f062a00af9e27"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49136,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:50.867,2025-03-25T16:13:39.227,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: Bluetooth: hci_sync: Fix queuing commands when HCI_UNREGISTER is set hci_cmd_sync_queue shall return an error if HCI_UNREGISTER flag has been set as that means hci_unregister_dev has been called so it will likely cause a uaf after the timeout as the hdev will be freed.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0b94f2651f56b9e4aa5f012b0d7eb57308c773cf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1c69ef84a808676cceb69210addf5df45b741323"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49137,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:50.953,2025-03-13T21:31:03.047,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/amd/amdgpu/amdgpu_cs: fix refcount leak of a dma_fence obj This issue takes place in an error path in amdgpu_cs_fence_to_handle_ioctl(). When `info->in.what` falls into default case, the function simply returns -EINVAL, forgetting to decrement the reference count of a dma_fence obj, which is bumped earlier by amdgpu_cs_get_fence(). This may result in reference count leaks. Fix it by decreasing the refcount of specific object before returning the error code.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.19.238"",""matchCriteriaId"":""E0B62342-F287-4C6B-92AA-C1BC61DDAFFA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""8CB6E8F5-C2B1-46F3-A807-0F6104AC340F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.111"",""matchCriteriaId"":""96258501-7BCE-4C55-8A38-8AC9D327626D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.34"",""matchCriteriaId"":""D25878D3-7761-4E9F-8919-E92CD53896E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.20"",""matchCriteriaId"":""ABBBA66E-0244-4621-966B-9790AF1EEB00""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/3edd8646cb7c11b57c90e026bda6f21076223f5b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4009f104b02b223d1a11d74b36b1cc083bc37028"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/72d77ddb2224ebc00648f4f78f8a9a259dccbdf7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/927beb05aaa429c883cc0ec6adc48964b187e291"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b6d1f7d97c81ebaf2cda9c4c943ee2e484fffdcf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bc2d5c0775c839e2b072884f4ee6a93ba410f107"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/dfced44f122c500004a48ecc8db516bb6a295a1b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49138,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:51.047,2025-02-26T07:00:51.047,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: Bluetooth: hci_event: Ignore multiple conn complete events When one of the three connection complete events is received multiple times for the same handle, the device is registered multiple times which leads to memory corruptions. Therefore, consequent events for a single connection are ignored. The conn->state can hold different values, therefore HCI_CONN_HANDLE_UNSET is introduced to identify new connections. To make sure the events do not contain this or another invalid handle HCI_CONN_HANDLE_MAX and checks are introduced. Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=215497",,,"[{""url"":""https://git.kernel.org/stable/c/aa1ca580e3ffe62a2c5ea1c095b609b2943c5269"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d5ebaa7c5f6f688959e8d40840b2249ede63b8ed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49139,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:51.133,2025-03-13T21:30:50.917,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: Bluetooth: fix null ptr deref on hci_sync_conn_complete_evt This event is just specified for SCO and eSCO link types. On the reception of a HCI_Synchronous_Connection_Complete for a BDADDR of an existing LE connection, LE link type and a status that triggers the second case of the packet processing a NULL pointer dereference happens, as conn->link is NULL.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.4.231"",""matchCriteriaId"":""225DA877-E1AE-4413-A221-3FE04736AC16""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.167"",""matchCriteriaId"":""3B6D1442-2F69-4ED4-9A3E-23FCDBEE6094""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.92"",""matchCriteriaId"":""82E7FA6E-E503-40DE-995C-EB8E2C9CDAE3""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""A05176F9-21B7-4E5D-9C43-DD9B04AD0742""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0f9db1209f59844839175b5b907d3778cafde93d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1c1291a84e94f6501644634c97544bb8291e9a1a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3afee2118132e93e5f6fa636dfde86201a860ab3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c1aa0dd52db4ce888be0bd820c3fa918d350ca0b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f61c23e73dc653b957781066abfa8105c3fa3f5b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49140,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:51.240,2025-02-27T02:15:09.193,Rejected,[],Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.,,,[],,,,,,,,,
CVE-2022-49141,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:51.327,2025-03-13T21:30:40.187,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: dsa: felix: fix possible NULL pointer dereference As the possible failure of the allocation, kzalloc() may return NULL pointer. Therefore, it should be better to check the 'sgi' in order to prevent the dereference of NULL pointer.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.3"",""matchCriteriaId"":""AE420AC7-1E59-4398-B84F-71F4B4337762""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/866b7a278cdb51eb158cd8513bc7438fc857804a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b7ff8b5e75d4e91ec8c62d621aac8dfb84c57aa9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49142,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:51.420,2025-02-26T07:00:51.420,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: preserve skb_end_offset() in skb_unclone_keeptruesize() syzbot found another way to trigger the infamous WARN_ON_ONCE(delta < len) in skb_try_coalesce() [1] I was able to root cause the issue to kfence. When kfence is in action, the following assertion is no longer true: int size = xxxx; void *ptr1 = kmalloc(size, gfp); void *ptr2 = kmalloc(size, gfp); if (ptr1 && ptr2) ASSERT(ksize(ptr1) == ksize(ptr2)); We attempted to fix these issues in the blamed commits, but forgot that TCP was possibly shifting data after skb_unclone_keeptruesize() has been used, notably from tcp_retrans_try_collapse(). So we not only need to keep same skb->truesize value, we also need to make sure TCP wont fill new tailroom that pskb_expand_head() was able to get from a addr = kmalloc(...) followed by ksize(addr) Split skb_unclone_keeptruesize() into two parts: 1) Inline skb_unclone_keeptruesize() for the common case, when skb is not cloned. 2) Out of line __skb_unclone_keeptruesize() for the 'slow path'. WARNING: CPU: 1 PID: 6490 at net/core/skbuff.c:5295 skb_try_coalesce+0x1235/0x1560 net/core/skbuff.c:5295 Modules linked in: CPU: 1 PID: 6490 Comm: syz-executor161 Not tainted 5.17.0-rc4-syzkaller-00229-g4f12b742eb2b #0 Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011 RIP: 0010:skb_try_coalesce+0x1235/0x1560 net/core/skbuff.c:5295 Code: bf 01 00 00 00 0f b7 c0 89 c6 89 44 24 20 e8 62 24 4e fa 8b 44 24 20 83 e8 01 0f 85 e5 f0 ff ff e9 87 f4 ff ff e8 cb 20 4e fa <0f> 0b e9 06 f9 ff ff e8 af b2 95 fa e9 69 f0 ff ff e8 95 b2 95 fa RSP: 0018:ffffc900063af268 EFLAGS: 00010293 RAX: 0000000000000000 RBX: 00000000ffffffd5 RCX: 0000000000000000 RDX: ffff88806fc05700 RSI: ffffffff872abd55 RDI: 0000000000000003 RBP: ffff88806e675500 R08: 00000000ffffffd5 R09: 0000000000000000 R10: ffffffff872ab659 R11: 0000000000000000 R12: ffff88806dd554e8 R13: ffff88806dd9bac0 R14: ffff88806dd9a2c0 R15: 0000000000000155 FS: 00007f18014f9700(0000) GS:ffff8880b9c00000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 0000000020002000 CR3: 000000006be7a000 CR4: 00000000003506f0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Call Trace: <TASK> tcp_try_coalesce net/ipv4/tcp_input.c:4651 [inline] tcp_try_coalesce+0x393/0x920 net/ipv4/tcp_input.c:4630 tcp_queue_rcv+0x8a/0x6e0 net/ipv4/tcp_input.c:4914 tcp_data_queue+0x11fd/0x4bb0 net/ipv4/tcp_input.c:5025 tcp_rcv_established+0x81e/0x1ff0 net/ipv4/tcp_input.c:5947 tcp_v4_do_rcv+0x65e/0x980 net/ipv4/tcp_ipv4.c:1719 sk_backlog_rcv include/net/sock.h:1037 [inline] __release_sock+0x134/0x3b0 net/core/sock.c:2779 release_sock+0x54/0x1b0 net/core/sock.c:3311 sk_wait_data+0x177/0x450 net/core/sock.c:2821 tcp_recvmsg_locked+0xe28/0x1fd0 net/ipv4/tcp.c:2457 tcp_recvmsg+0x137/0x610 net/ipv4/tcp.c:2572 inet_recvmsg+0x11b/0x5e0 net/ipv4/af_inet.c:850 sock_recvmsg_nosec net/socket.c:948 [inline] sock_recvmsg net/socket.c:966 [inline] sock_recvmsg net/socket.c:962 [inline] ____sys_recvmsg+0x2c4/0x600 net/socket.c:2632 ___sys_recvmsg+0x127/0x200 net/socket.c:2674 __sys_recvmsg+0xe2/0x1a0 net/socket.c:2704 do_syscall_x64 arch/x86/entry/common.c:50 [inline] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80 entry_SYSCALL_64_after_hwframe+0x44/0xae",,,"[{""url"":""https://git.kernel.org/stable/c/23629b673b780d967b88a850b1518cf0f0ffc6aa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2b88cba55883eaafbc9b7cbff0b2c7cdba71ed01"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a903e516f5df44b46d526b403d93e7be1a425538"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a9a6d30264327d8ff7f23da33e7a77ffb793fa3f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49143,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:51.513,2025-02-26T15:15:15.857,Rejected,[],Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.,,,[],,,,,,,,,
CVE-2022-49144,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:51.600,2025-03-13T22:04:12.610,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: io_uring: fix memory leak of uid in files registration When there are no files for __io_sqe_files_scm() to process in the range, it'll free everything and return. However, it forgets to put uid.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""91D3BFD0-D3F3-4018-957C-96CCBF357D79""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0853bd6885c2f293d88aaa7f7f1702c959b31680"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7fa8b228c3f30060b9f4b24bb9aaaf41b0ae83fe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b27de7011cb3ba14b047be2cee0ed8278368665b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c86d18f4aa93e0e66cda0e55827cd03eea6bc5f8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d6d7a517e81accf6ed22d55684baea763d2dbe43"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49145,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:51.693,2025-02-26T07:00:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ACPI: CPPC: Avoid out of bounds access when parsing _CPC data If the NumEntries field in the _CPC return package is less than 2, do not attempt to access the ""Revision"" element of that package, because it may not be present then. BugLink: https://lore.kernel.org/lkml/20220322143534.GC32582@xsang-OptiPlex-9020/",,,"[{""url"":""https://git.kernel.org/stable/c/28d5387c1994f5e1e0d41b30a1f3dd6e1f609252"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/40d8abf364bcab23bc715a9221a3c8623956257b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/97b5593fd1b182b3fdb180b6bbe64ec09669988b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b3f15609ffa521de12244cd6af24002030dda3f5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b80b19b32a432c9eee1cd200ef7aaddf608f54d1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cb249f8c00f40dba83b7da8207ac14ca46e9ec9e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d208ea44e25b31db5a4d5e8c31df51787a3e9303"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d7339f2a3938fb56b5f28d53f5345900b5fa0e74"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e5b681822cac1f8093759b02e16c06b2c64b6788"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49146,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:51.793,2025-02-26T07:00:51.793,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: virtio: use virtio_device_ready() in virtio_device_restore() After waking up a suspended VM, the kernel prints the following trace for virtio drivers which do not directly call virtio_device_ready() in the .restore: PM: suspend exit irq 22: nobody cared (try booting with the ""irqpoll"" option) Call Trace: <IRQ> dump_stack_lvl+0x38/0x49 dump_stack+0x10/0x12 __report_bad_irq+0x3a/0xaf note_interrupt.cold+0xb/0x60 handle_irq_event+0x71/0x80 handle_fasteoi_irq+0x95/0x1e0 __common_interrupt+0x6b/0x110 common_interrupt+0x63/0xe0 asm_common_interrupt+0x1e/0x40 ? __do_softirq+0x75/0x2f3 irq_exit_rcu+0x93/0xe0 sysvec_apic_timer_interrupt+0xac/0xd0 </IRQ> <TASK> asm_sysvec_apic_timer_interrupt+0x12/0x20 arch_cpu_idle+0x12/0x20 default_idle_call+0x39/0xf0 do_idle+0x1b5/0x210 cpu_startup_entry+0x20/0x30 start_secondary+0xf3/0x100 secondary_startup_64_no_verify+0xc3/0xcb </TASK> handlers: [<000000008f9bac49>] vp_interrupt [<000000008f9bac49>] vp_interrupt Disabling IRQ #22 This happens because we don't invoke .enable_cbs callback in virtio_device_restore(). That callback is used by some transports (e.g. virtio-pci) to enable interrupts. Let's fix it, by calling virtio_device_ready() as we do in virtio_dev_probe(). This function calls .enable_cts callback and sets DRIVER_OK status bit. This fix also avoids setting DRIVER_OK twice for those drivers that call virtio_device_ready() in the .restore.",,,"[{""url"":""https://git.kernel.org/stable/c/4ae431113179d72c668b61df320af0c06d1aa5c5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8d65bc9a5be3f23c5e2ab36b6b8ef40095165b18"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/94e9f5da39ee5f8ea31be1585de31c54f10dedce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49147,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:51.887,2025-02-26T07:00:51.887,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: block: Fix the maximum minor value is blk_alloc_ext_minor() ida_alloc_range(..., min, max, ...) returns values from min to max, inclusive. So, NR_EXT_DEVT is a valid idx returned by blk_alloc_ext_minor(). This is an issue because in device_add_disk(), this value is used in: ddev->devt = MKDEV(disk->major, disk->first_minor); and NR_EXT_DEVT is '(1 << MINORBITS)'. So, should 'disk->first_minor' be NR_EXT_DEVT, it would overflow.",,,"[{""url"":""https://git.kernel.org/stable/c/0f8cf8f5ccbad25ed6828875b222dbab29d5c272"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5b9ac3727e4abb11c9cfbe9c0781fc05dfdd7cfb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d1868328dec5ae2cf210111025fcbc71f78dd5ca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fbe2cc4525480ddd20c866bb5c0578071e01451a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49148,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:51.973,2025-03-13T22:04:33.020,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: watch_queue: Free the page array when watch_queue is dismantled Commit 7ea1a0124b6d (""watch_queue: Free the alloc bitmap when the watch_queue is torn down"") took care of the bitmap, but not the page array. BUG: memory leak unreferenced object 0xffff88810d9bc140 (size 32): comm ""syz-executor335"", pid 3603, jiffies 4294946994 (age 12.840s) hex dump (first 32 bytes): 40 a7 40 04 00 ea ff ff 00 00 00 00 00 00 00 00 @.@............. 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: kmalloc_array include/linux/slab.h:621 [inline] kcalloc include/linux/slab.h:652 [inline] watch_queue_set_size+0x12f/0x2e0 kernel/watch_queue.c:251 pipe_ioctl+0x82/0x140 fs/pipe.c:632 vfs_ioctl fs/ioctl.c:51 [inline] __do_sys_ioctl fs/ioctl.c:874 [inline] __se_sys_ioctl fs/ioctl.c:860 [inline] __x64_sys_ioctl+0xfc/0x140 fs/ioctl.c:860 do_syscall_x64 arch/x86/entry/common.c:50 [inline]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.8"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""552AD555-63DB-4D57-BBAA-86EA26658508""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/375cd2536494cfbcdda84ae8b3e35bf19d0250b9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3963a5d1ff75585bddf0c3a918566a6be09d7520"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4913daecd04addb41bc96a9175a885e1c19862a8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7169f60110915c8b53bffd43741fa020a75eb87a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b490207017ba237d97b735b2aa66dc241ccd18f5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49149,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:52.073,2025-02-26T07:00:52.073,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: rxrpc: Fix call timer start racing with call destruction The rxrpc_call struct has a timer used to handle various timed events relating to a call. This timer can get started from the packet input routines that are run in softirq mode with just the RCU read lock held. Unfortunately, because only the RCU read lock is held - and neither ref or other lock is taken - the call can start getting destroyed at the same time a packet comes in addressed to that call. This causes the timer - which was already stopped - to get restarted. Later, the timer dispatch code may then oops if the timer got deallocated first. Fix this by trying to take a ref on the rxrpc_call struct and, if successful, passing that ref along to the timer. If the timer was already running, the ref is discarded. The timer completion routine can then pass the ref along to the call's work item when it queues it. If the timer or work item where already queued/running, the extra ref is discarded.",,,"[{""url"":""https://git.kernel.org/stable/c/051360e51341cd17738d82c15a8226010c7cb7f6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4a7f62f91933c8ae5308f9127fd8ea48188b6bc3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/54df5a37f1d951ed27fd47bf9b15a42279582110"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5e3c11144e557a9dbf9a2f6abe444689ef9d8aae"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8cbf4ae7a2833767d63114573e5f9a45740cc975"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49150,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:52.203,2025-03-13T22:05:03.087,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: rtc: gamecube: Fix refcount leak in gamecube_rtc_read_offset_from_sram The of_find_compatible_node() function returns a node pointer with refcount incremented, We should use of_node_put() on it when done Add the missing of_node_put() to release the refcount.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/4b2dc39ca024990abe36ad5d145c4fe0c06afd34"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/de66e4f28dfd11f954966c447b4430529ed040a2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49151,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:52.330,2025-02-26T07:00:52.330,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: can: mcba_usb: properly check endpoint type Syzbot reported warning in usb_submit_urb() which is caused by wrong endpoint type. We should check that in endpoint is actually present to prevent this warning. Found pipes are now saved to struct mcba_priv and code uses them directly instead of making pipes in place. Fail log: | usb 5-1: BOGUS urb xfer, pipe 3 != type 1 | WARNING: CPU: 1 PID: 49 at drivers/usb/core/urb.c:502 usb_submit_urb+0xed2/0x18a0 drivers/usb/core/urb.c:502 | Modules linked in: | CPU: 1 PID: 49 Comm: kworker/1:2 Not tainted 5.17.0-rc6-syzkaller-00184-g38f80f42147f #0 | Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.14.0-2 04/01/2014 | Workqueue: usb_hub_wq hub_event | RIP: 0010:usb_submit_urb+0xed2/0x18a0 drivers/usb/core/urb.c:502 | ... | Call Trace: | <TASK> | mcba_usb_start drivers/net/can/usb/mcba_usb.c:662 [inline] | mcba_usb_probe+0x8a3/0xc50 drivers/net/can/usb/mcba_usb.c:858 | usb_probe_interface+0x315/0x7f0 drivers/usb/core/driver.c:396 | call_driver_probe drivers/base/dd.c:517 [inline]",,,"[{""url"":""https://git.kernel.org/stable/c/136bed0bfd3bc9c95c88aafff2d22ecb3a919f23"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5598442edc29e8f6f2380e4b471dc1a3fcd80508"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/88272b4a37913bdf6f339162a7920bd8e9b49de2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b48d1bb3f1ca337ad653022aefb5a40a47dfe5cd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cbd110b8dd7ad763bf413f71c0484116ae9302d4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ef0acc514123140157b19a9ff2e2de5d91d612bc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f2ec3cd0f34f8c3f94bc21fbba14868301c9c49d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fa9c1f14002dc0d5293e16a2007bd89b6e79207b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49152,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:52.440,2025-06-19T13:15:22.587,Modified,[],"In the Linux kernel, the following vulnerability has been resolved: XArray: Fix xas_create_range() when multi-order entry present If there is already an entry present that is of order >= XA_CHUNK_SHIFT when we call xas_create_range(), xas_create_range() will misinterpret that entry as a node and dereference xa_node->parent, generally leading to a crash that looks something like this: general protection fault, probably for non-canonical address 0xdffffc0000000001: 0000 [#1] PREEMPT SMP KASAN KASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f] CPU: 0 PID: 32 Comm: khugepaged Not tainted 5.17.0-rc8-syzkaller-00003-g56e337f2cf13 #0 RIP: 0010:xa_parent_locked include/linux/xarray.h:1207 [inline] RIP: 0010:xas_create_range+0x2d9/0x6e0 lib/xarray.c:725 It's deterministically reproducable once you know what the problem is, but producing it in a live kernel requires khugepaged to hit a race. While the problem has been present since xas_create_range() was introduced, I'm not aware of a way to hit it before the page cache was converted to use multi-index entries.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""4AAE7A78-57E5-45A6-860D-7867DA88A45E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""91D3BFD0-D3F3-4018-957C-96CCBF357D79""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/18f13edf3424b3b61814b69d5269b2e14584800c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3e3c658055c002900982513e289398a1aad4a488"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49153,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:52.533,2025-03-13T21:59:52.070,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: wireguard: socket: free skb in send6 when ipv6 is disabled I got a memory leak report: unreferenced object 0xffff8881191fc040 (size 232): comm ""kworker/u17:0"", pid 23193, jiffies 4295238848 (age 3464.870s) hex dump (first 32 bytes): 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [<ffffffff814c3ef4>] slab_post_alloc_hook+0x84/0x3b0 [<ffffffff814c8977>] kmem_cache_alloc_node+0x167/0x340 [<ffffffff832974fb>] __alloc_skb+0x1db/0x200 [<ffffffff82612b5d>] wg_socket_send_buffer_to_peer+0x3d/0xc0 [<ffffffff8260e94a>] wg_packet_send_handshake_initiation+0xfa/0x110 [<ffffffff8260ec81>] wg_packet_handshake_send_worker+0x21/0x30 [<ffffffff8119c558>] process_one_work+0x2e8/0x770 [<ffffffff8119ca2a>] worker_thread+0x4a/0x4b0 [<ffffffff811a88e0>] kthread+0x120/0x160 [<ffffffff8100242f>] ret_from_fork+0x1f/0x30 In function wg_socket_send_buffer_as_reply_to_skb() or wg_socket_send_ buffer_to_peer(), the semantics of send6() is required to free skb. But when CONFIG_IPV6 is disable, kfree_skb() is missing. This patch adds it to fix this bug.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.6"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""05F0A158-8722-4B5A-BEC5-245BC5E3EA9A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/096f9d35cac0a0c95ffafc00db84786b665a4837"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0b19bcb753dbfb74710d12bb2761ec5ed706c726"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/402991a9771587acc2947cf6c4d689c5397f2258"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bbbf962d9460194993ee1943a793a0a0af4a7fbf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ebcc492f4ba14bae54b898f1016a37b4282558d1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49154,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:52.627,2025-02-26T07:00:52.627,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: KVM: SVM: fix panic on out-of-bounds guest IRQ As guest_irq is coming from KVM_IRQFD API call, it may trigger crash in svm_update_pi_irte() due to out-of-bounds: crash> bt PID: 22218 TASK: ffff951a6ad74980 CPU: 73 COMMAND: ""vcpu8"" #0 [ffffb1ba6707fa40] machine_kexec at ffffffff8565b397 #1 [ffffb1ba6707fa90] __crash_kexec at ffffffff85788a6d #2 [ffffb1ba6707fb58] crash_kexec at ffffffff8578995d #3 [ffffb1ba6707fb70] oops_end at ffffffff85623c0d #4 [ffffb1ba6707fb90] no_context at ffffffff856692c9 #5 [ffffb1ba6707fbf8] exc_page_fault at ffffffff85f95b51 #6 [ffffb1ba6707fc50] asm_exc_page_fault at ffffffff86000ace [exception RIP: svm_update_pi_irte+227] RIP: ffffffffc0761b53 RSP: ffffb1ba6707fd08 RFLAGS: 00010086 RAX: ffffb1ba6707fd78 RBX: ffffb1ba66d91000 RCX: 0000000000000001 RDX: 00003c803f63f1c0 RSI: 000000000000019a RDI: ffffb1ba66db2ab8 RBP: 000000000000019a R8: 0000000000000040 R9: ffff94ca41b82200 R10: ffffffffffffffcf R11: 0000000000000001 R12: 0000000000000001 R13: 0000000000000001 R14: ffffffffffffffcf R15: 000000000000005f ORIG_RAX: ffffffffffffffff CS: 0010 SS: 0018 #7 [ffffb1ba6707fdb8] kvm_irq_routing_update at ffffffffc09f19a1 [kvm] #8 [ffffb1ba6707fde0] kvm_set_irq_routing at ffffffffc09f2133 [kvm] #9 [ffffb1ba6707fe18] kvm_vm_ioctl at ffffffffc09ef544 [kvm] RIP: 00007f143c36488b RSP: 00007f143a4e04b8 RFLAGS: 00000246 RAX: ffffffffffffffda RBX: 00007f05780041d0 RCX: 00007f143c36488b RDX: 00007f05780041d0 RSI: 000000004008ae6a RDI: 0000000000000020 RBP: 00000000000004e8 R8: 0000000000000008 R9: 00007f05780041e0 R10: 00007f0578004560 R11: 0000000000000246 R12: 00000000000004e0 R13: 000000000000001a R14: 00007f1424001c60 R15: 00007f0578003bc0 ORIG_RAX: 0000000000000010 CS: 0033 SS: 002b Vmx have been fix this in commit 3a8b0677fc61 (KVM: VMX: Do not BUG() on out-of-bounds guest IRQ), so we can just copy source from that to fix this.",,,"[{""url"":""https://git.kernel.org/stable/c/0fb470eb48892e131d10aa3be6915239e65758f3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3fa2d747960521a646fc1aad7aea82e95e139a68"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a6ffdebfb6a9c2ffeed902b544b96fe67498210e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a80ced6ea514000d34bf1239d47553de0d1ee89e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e4d153d53d9648513481eb4ef8c212e7f1f8173d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49155,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:52.717,2025-03-13T22:06:01.560,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: qla2xxx: Suppress a kernel complaint in qla_create_qpair() [ 12.323788] BUG: using smp_processor_id() in preemptible [00000000] code: systemd-udevd/1020 [ 12.332297] caller is qla2xxx_create_qpair+0x32a/0x5d0 [qla2xxx] [ 12.338417] CPU: 7 PID: 1020 Comm: systemd-udevd Tainted: G I --------- --- 5.14.0-29.el9.x86_64 #1 [ 12.348827] Hardware name: Dell Inc. PowerEdge R610/0F0XJ6, BIOS 6.6.0 05/22/2018 [ 12.356356] Call Trace: [ 12.358821] dump_stack_lvl+0x34/0x44 [ 12.362514] check_preemption_disabled+0xd9/0xe0 [ 12.367164] qla2xxx_create_qpair+0x32a/0x5d0 [qla2xxx] [ 12.372481] qla2x00_probe_one+0xa3a/0x1b80 [qla2xxx] [ 12.377617] ? _raw_spin_lock_irqsave+0x19/0x40 [ 12.384284] local_pci_probe+0x42/0x80 [ 12.390162] ? pci_match_device+0xd7/0x110 [ 12.396366] pci_device_probe+0xfd/0x1b0 [ 12.402372] really_probe+0x1e7/0x3e0 [ 12.408114] __driver_probe_device+0xfe/0x180 [ 12.414544] driver_probe_device+0x1e/0x90 [ 12.420685] __driver_attach+0xc0/0x1c0 [ 12.426536] ? __device_attach_driver+0xe0/0xe0 [ 12.433061] ? __device_attach_driver+0xe0/0xe0 [ 12.439538] bus_for_each_dev+0x78/0xc0 [ 12.445294] bus_add_driver+0x12b/0x1e0 [ 12.451021] driver_register+0x8f/0xe0 [ 12.456631] ? 0xffffffffc07bc000 [ 12.461773] qla2x00_module_init+0x1be/0x229 [qla2xxx] [ 12.468776] do_one_initcall+0x44/0x200 [ 12.474401] ? load_module+0xad3/0xba0 [ 12.479908] ? kmem_cache_alloc_trace+0x45/0x410 [ 12.486268] do_init_module+0x5c/0x280 [ 12.491730] __do_sys_init_module+0x12e/0x1b0 [ 12.497785] do_syscall_64+0x3b/0x90 [ 12.503029] entry_SYSCALL_64_after_hwframe+0x44/0xae [ 12.509764] RIP: 0033:0x7f554f73ab2e","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-noinfo""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.14.276"",""matchCriteriaId"":""3088C36B-F9EB-4609-A0D0-EB411E2E915B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.238"",""matchCriteriaId"":""FA28527A-11D3-41D2-9C4C-ECAC0D6A4A2D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""8CB6E8F5-C2B1-46F3-A807-0F6104AC340F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""91D3BFD0-D3F3-4018-957C-96CCBF357D79""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1ab81d82fb1db7ec4be4b0d04563513e6d4bcdd5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/43195a0c620761fbb88db04e2475313855b948a4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8077a7162bc3cf658dd9ff112bc77716c08458c5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9c33d49ab9f3d8bd7512b3070cd2f07c4a8849d5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a60447e7d451df42c7bde43af53b34f10f34f469"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a669a22aef0ceff706b885370af74b5a60a8ac85"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f68776f28d9134fa65056e7e63bfc734049730b7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f97316dd393bc8df1cc2af6295a97b876eecf252"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49156,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:52.823,2025-02-26T07:00:52.823,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: qla2xxx: Fix scheduling while atomic The driver makes a call into midlayer (fc_remote_port_delete) which can put the thread to sleep. The thread that originates the call is in interrupt context. The combination of the two trigger a crash. Schedule the call in non-interrupt context where it is more safe. kernel: BUG: scheduling while atomic: swapper/7/0/0x00010000 kernel: Call Trace: kernel: <IRQ> kernel: dump_stack+0x66/0x81 kernel: __schedule_bug.cold.90+0x5/0x1d kernel: __schedule+0x7af/0x960 kernel: schedule+0x28/0x80 kernel: schedule_timeout+0x26d/0x3b0 kernel: wait_for_completion+0xb4/0x140 kernel: ? wake_up_q+0x70/0x70 kernel: __wait_rcu_gp+0x12c/0x160 kernel: ? sdev_evt_alloc+0xc0/0x180 [scsi_mod] kernel: synchronize_sched+0x6c/0x80 kernel: ? call_rcu_bh+0x20/0x20 kernel: ? __bpf_trace_rcu_invoke_callback+0x10/0x10 kernel: sdev_evt_alloc+0xfd/0x180 [scsi_mod] kernel: starget_for_each_device+0x85/0xb0 [scsi_mod] kernel: ? scsi_init_io+0x360/0x3d0 [scsi_mod] kernel: scsi_init_io+0x388/0x3d0 [scsi_mod] kernel: device_for_each_child+0x54/0x90 kernel: fc_remote_port_delete+0x70/0xe0 [scsi_transport_fc] kernel: qla2x00_schedule_rport_del+0x62/0xf0 [qla2xxx] kernel: qla2x00_mark_device_lost+0x9c/0xd0 [qla2xxx] kernel: qla24xx_handle_plogi_done_event+0x55f/0x570 [qla2xxx] kernel: qla2x00_async_login_sp_done+0xd2/0x100 [qla2xxx] kernel: qla24xx_logio_entry+0x13a/0x3c0 [qla2xxx] kernel: qla24xx_process_response_queue+0x306/0x400 [qla2xxx] kernel: qla24xx_msix_rsp_q+0x3f/0xb0 [qla2xxx] kernel: __handle_irq_event_percpu+0x40/0x180 kernel: handle_irq_event_percpu+0x30/0x80 kernel: handle_irq_event+0x36/0x60",,,"[{""url"":""https://git.kernel.org/stable/c/78225d6a2a4ffdb2250ce2b7691a9e68a3f86912"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/78612f2fe8e26637476d756a44f0f05cca0d97de"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7fef50214dd04427233a2e66cd624d468e67aecb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/826a9d4a00d1424afa961504aec6298ee92d5053"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/afd438ff874ca40b74321b3fa19bd61adfd7ca0c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49157,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:52.917,2025-02-26T07:00:52.917,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: qla2xxx: Fix premature hw access after PCI error After a recoverable PCI error has been detected and recovered, qla driver needs to check to see if the error condition still persist and/or wait for the OS to give the resume signal. Sep 8 22:26:03 localhost kernel: WARNING: CPU: 9 PID: 124606 at qla_tmpl.c:440 qla27xx_fwdt_entry_t266+0x55/0x60 [qla2xxx] Sep 8 22:26:03 localhost kernel: RIP: 0010:qla27xx_fwdt_entry_t266+0x55/0x60 [qla2xxx] Sep 8 22:26:03 localhost kernel: Call Trace: Sep 8 22:26:03 localhost kernel: ? qla27xx_walk_template+0xb1/0x1b0 [qla2xxx] Sep 8 22:26:03 localhost kernel: ? qla27xx_execute_fwdt_template+0x12a/0x160 [qla2xxx] Sep 8 22:26:03 localhost kernel: ? qla27xx_fwdump+0xa0/0x1c0 [qla2xxx] Sep 8 22:26:03 localhost kernel: ? qla2xxx_pci_mmio_enabled+0xfb/0x120 [qla2xxx] Sep 8 22:26:03 localhost kernel: ? report_mmio_enabled+0x44/0x80 Sep 8 22:26:03 localhost kernel: ? report_slot_reset+0x80/0x80 Sep 8 22:26:03 localhost kernel: ? pci_walk_bus+0x70/0x90 Sep 8 22:26:03 localhost kernel: ? aer_dev_correctable_show+0xc0/0xc0 Sep 8 22:26:03 localhost kernel: ? pcie_do_recovery+0x1bb/0x240 Sep 8 22:26:03 localhost kernel: ? aer_recover_work_func+0xaa/0xd0 Sep 8 22:26:03 localhost kernel: ? process_one_work+0x1a7/0x360 .. Sep 8 22:26:03 localhost kernel: qla2xxx [0000:42:00.2]-8041:22: detected PCI disconnect. Sep 8 22:26:03 localhost kernel: qla2xxx [0000:42:00.2]-107ff:22: qla27xx_fwdt_entry_t262: dump ram MB failed. Area 5h start 198013h end 198013h Sep 8 22:26:03 localhost kernel: qla2xxx [0000:42:00.2]-107ff:22: Unable to capture FW dump Sep 8 22:26:03 localhost kernel: qla2xxx [0000:42:00.2]-1015:22: cmd=0x0, waited 5221 msecs Sep 8 22:26:03 localhost kernel: qla2xxx [0000:42:00.2]-680d:22: mmio enabled returning. Sep 8 22:26:03 localhost kernel: qla2xxx [0000:42:00.2]-d04c:22: MBX Command timeout for cmd 0, iocontrol=ffffffff jiffies=10140f2e5 mb[0-3]=[0xffff 0xffff 0xffff 0xffff]",,,"[{""url"":""https://git.kernel.org/stable/c/5ef6319f9882699613d5182fbd7929b017e8c5ab"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6c125fd5ad035777f7b471553f7ddda76e8e7136"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d7994dff9071555a959a168f9184dd9abae68a6b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e35920ab7874d5e2faeb4f958a74bfa793f1ce5a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49158,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:53.013,2025-02-26T07:00:53.013,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: qla2xxx: Fix warning message due to adisc being flushed Fix warning message due to adisc being flushed. Linux kernel triggered a warning message where a different error code type is not matching up with the expected type. Add additional translation of one error code type to another. WARNING: CPU: 2 PID: 1131623 at drivers/scsi/qla2xxx/qla_init.c:498 qla2x00_async_adisc_sp_done+0x294/0x2b0 [qla2xxx] CPU: 2 PID: 1131623 Comm: drmgr Not tainted 5.13.0-rc1-autotest #1 .. GPR28: c000000aaa9c8890 c0080000079ab678 c00000140a104800 c00000002bd19000 NIP [c00800000790857c] qla2x00_async_adisc_sp_done+0x294/0x2b0 [qla2xxx] LR [c008000007908578] qla2x00_async_adisc_sp_done+0x290/0x2b0 [qla2xxx] Call Trace: [c00000001cdc3620] [c008000007908578] qla2x00_async_adisc_sp_done+0x290/0x2b0 [qla2xxx] (unreliable) [c00000001cdc3710] [c0080000078f3080] __qla2x00_abort_all_cmds+0x1b8/0x580 [qla2xxx] [c00000001cdc3840] [c0080000078f589c] qla2x00_abort_all_cmds+0x34/0xd0 [qla2xxx] [c00000001cdc3880] [c0080000079153d8] qla2x00_abort_isp_cleanup+0x3f0/0x570 [qla2xxx] [c00000001cdc3920] [c0080000078fb7e8] qla2x00_remove_one+0x3d0/0x480 [qla2xxx] [c00000001cdc39b0] [c00000000071c274] pci_device_remove+0x64/0x120 [c00000001cdc39f0] [c0000000007fb818] device_release_driver_internal+0x168/0x2a0 [c00000001cdc3a30] [c00000000070e304] pci_stop_bus_device+0xb4/0x100 [c00000001cdc3a70] [c00000000070e4f0] pci_stop_and_remove_bus_device+0x20/0x40 [c00000001cdc3aa0] [c000000000073940] pci_hp_remove_devices+0x90/0x130 [c00000001cdc3b30] [c0080000070704d0] disable_slot+0x38/0x90 [rpaphp] [ c00000001cdc3b60] [c00000000073eb4c] power_write_file+0xcc/0x180 [c00000001cdc3be0] [c0000000007354bc] pci_slot_attr_store+0x3c/0x60 [c00000001cdc3c00] [c00000000055f820] sysfs_kf_write+0x60/0x80 [c00000001cdc3c20] [c00000000055df10] kernfs_fop_write_iter+0x1a0/0x290 [c00000001cdc3c70] [c000000000447c4c] new_sync_write+0x14c/0x1d0 [c00000001cdc3d10] [c00000000044b134] vfs_write+0x224/0x330 [c00000001cdc3d60] [c00000000044b3f4] ksys_write+0x74/0x130 [c00000001cdc3db0] [c00000000002df70] system_call_exception+0x150/0x2d0 [c00000001cdc3e10] [c00000000000d45c] system_call_common+0xec/0x278",,,"[{""url"":""https://git.kernel.org/stable/c/64f24af75b79cba3b86b0760e27e0fa904db570f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7a3457777c4f700c64836e78dc71e6ce459f62b8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b13baf97ddbc1a7e7536168383bc0d84c2204b03"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d8fb8da69e194e0249b3cdb746ef09ce823ae26b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49159,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:53.103,2025-02-26T07:00:53.103,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: qla2xxx: Implement ref count for SRB The timeout handler and the done function are racing. When qla2x00_async_iocb_timeout() starts to run it can be preempted by the normal response path (via the firmware?). qla24xx_async_gpsc_sp_done() releases the SRB unconditionally. When scheduling back to qla2x00_async_iocb_timeout() qla24xx_async_abort_cmd() will access an freed sp->qpair pointer: qla2xxx [0000:83:00.0]-2871:0: Async-gpsc timeout - hdl=63d portid=234500 50:06:0e:80:08:77:b6:21. qla2xxx [0000:83:00.0]-2853:0: Async done-gpsc res 0, WWPN 50:06:0e:80:08:77:b6:21 qla2xxx [0000:83:00.0]-2854:0: Async-gpsc OUT WWPN 20:45:00:27:f8:75:33:00 speeds=2c00 speed=0400. qla2xxx [0000:83:00.0]-28d8:0: qla24xx_handle_gpsc_event 50:06:0e:80:08:77:b6:21 DS 7 LS 6 rc 0 login 1|1 rscn 1|0 lid 5 BUG: unable to handle kernel NULL pointer dereference at 0000000000000004 IP: qla24xx_async_abort_cmd+0x1b/0x1c0 [qla2xxx] Obvious solution to this is to introduce a reference counter. One reference is taken for the normal code path (the 'good' case) and one for the timeout path. As we always race between the normal good case and the timeout/abort handler we need to serialize it. Also we cannot assume any order between the handlers. Since this is slow path we can use proper synchronization via locks. When we are able to cancel a timer (del_timer returns 1) we know there can't be any error handling in progress because the timeout handler hasn't expired yet, thus we can safely decrement the refcounter by one. If we are not able to cancel the timer, we know an abort handler is running. We have to make sure we call sp->done() in the abort handlers before calling kref_put().",,,"[{""url"":""https://git.kernel.org/stable/c/31e6cdbe0eae37badceb5e0d4f06cf051432fd77"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ceda7f794f3dfe272491e93e3e93049f8be5f07b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e140723f78ff418c8df7d990e102e07b65c87d4a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e17111dd2fda81c35f309b1e5b6ab35809a375e7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49160,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:53.190,2025-02-26T07:00:53.190,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: qla2xxx: Fix crash during module load unload test During purex packet handling the driver was incorrectly freeing a pre-allocated structure. Fix this by skipping that entry. System crashed with the following stack during a module unload test. Call Trace: sbitmap_init_node+0x7f/0x1e0 sbitmap_queue_init_node+0x24/0x150 blk_mq_init_bitmaps+0x3d/0xa0 blk_mq_init_tags+0x68/0x90 blk_mq_alloc_map_and_rqs+0x44/0x120 blk_mq_alloc_set_map_and_rqs+0x63/0x150 blk_mq_alloc_tag_set+0x11b/0x230 scsi_add_host_with_dma.cold+0x3f/0x245 qla2x00_probe_one+0xd5a/0x1b80 [qla2xxx] Call Trace with slub_debug and debug kernel: kasan_report_invalid_free+0x50/0x80 __kasan_slab_free+0x137/0x150 slab_free_freelist_hook+0xc6/0x190 kfree+0xe8/0x2e0 qla2x00_free_device+0x3bb/0x5d0 [qla2xxx] qla2x00_remove_one+0x668/0xcf0 [qla2xxx]",,,"[{""url"":""https://git.kernel.org/stable/c/0972252450f90db56dd5415a20e2aec21a08d036"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/213e57b42537f1a2e5395caa9d7189854133ed12"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/67f744f73eba870ab96411d0310e831a4adc3713"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9b7eb92dac240ab3bc83e188d83a3df834b41eb2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49161,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:53.280,2025-02-26T07:00:53.280,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: mediatek: Fix error handling in mt8183_da7219_max98357_dev_probe The device_node pointer is returned by of_parse_phandle() with refcount incremented. We should use of_node_put() on it when done. This function only calls of_node_put() in the regular path. And it will cause refcount leak in error paths. Fix this by calling of_node_put() in error handling too.",,,"[{""url"":""https://git.kernel.org/stable/c/28a265a1ee11febeec5ea73a804f30dcec3181ca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9b9f6227e8d0c7c46b6d9d7b8a5c4e0536049fcf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49162,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:53.373,2025-02-26T07:00:53.373,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: video: fbdev: sm712fb: Fix crash in smtcfb_write() When the sm712fb driver writes three bytes to the framebuffer, the driver will crash: BUG: unable to handle page fault for address: ffffc90001ffffff RIP: 0010:smtcfb_write+0x454/0x5b0 Call Trace: vfs_write+0x291/0xd60 ? do_sys_openat2+0x27d/0x350 ? __fget_light+0x54/0x340 ksys_write+0xce/0x190 do_syscall_64+0x43/0x90 entry_SYSCALL_64_after_hwframe+0x44/0xae Fix it by removing the open-coded endianness fixup-code.",,,"[{""url"":""https://git.kernel.org/stable/c/0ec746674296c94137f074309c26d17e644c0498"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1aea36a62f0a0ad67eccc945bac0bd6422ef720f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3b36c05f68ba32d0dfb63abc9016d6fe9117829f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4f01d09b2bbfbcb47b3eb305560a7f4857a32260"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/809b8cde86320698661eec677222bc5c5df76176"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/aeb635b49530b7d19e140949753409f759ba99be"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b1c28577529cdfad40c8242673285f1e1e4c314e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/eae90015d10f0c9a47fc4adccba4cd79dce664e4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fb791514acf9070225eed46e1ccbb0aa7aae5da5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49163,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:53.473,2025-02-26T07:00:53.473,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: media: imx-jpeg: fix a bug of accessing array out of bounds When error occurs in parsing jpeg, the slot isn't acquired yet, it may be the default value MXC_MAX_SLOTS. If the driver access the slot using the incorrect slot number, it will access array out of bounds. The result is the driver will change num_domains, which follows slot_data in struct mxc_jpeg_dev. Then the driver won't detach the pm domain at rmmod, which will lead to kernel panic when trying to insmod again.",,,"[{""url"":""https://git.kernel.org/stable/c/02f9f97d54ffc85b50ad77f5b1f3c8f69cd17747"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/20c8b90430c5d6c4a3936eaa7c35aac670581487"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/97558d170a1236280407e8d29a7d095d2c2ed554"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e209e6db2e527db6a93b14c2deedf969caca78fc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49164,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:53.563,2025-02-26T07:00:53.563,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: powerpc/tm: Fix more userspace r13 corruption Commit cf13435b730a (""powerpc/tm: Fix userspace r13 corruption"") fixes a problem in treclaim where a SLB miss can occur on the thread_struct->ckpt_regs while SCRATCH0 is live with the saved user r13 value, clobbering it with the kernel r13 and ultimately resulting in kernel r13 being stored in ckpt_regs. There is an equivalent problem in trechkpt where the user r13 value is loaded into r13 from chkpt_regs to be recheckpointed, but a SLB miss could occur on ckpt_regs accesses after that, which will result in r13 being clobbered with a kernel value and that will get recheckpointed and then restored to user registers. The same memory page is accessed right before this critical window where a SLB miss could cause corruption, so hitting the bug requires the SLB entry be removed within a small window of instructions, which is possible if a SLB related MCE hits there. PAPR also permits the hypervisor to discard this SLB entry (because slb_shadow->persistent is only set to SLB_NUM_BOLTED) although it's not known whether any implementations would do this (KVM does not). So this is an extremely unlikely bug, only found by inspection. Fix this by also storing user r13 in a temporary location on the kernel stack and don't change the r13 register from kernel r13 until the RI=0 critical section that does not fault. The SCRATCH0 change is not strictly part of the fix, it's only used in the RI=0 section so it does not have the same problem as the previous SCRATCH0 bug.",,,"[{""url"":""https://git.kernel.org/stable/c/5dce84f475d13b773a1a4c823581cab25044d86a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/73d8082c90f17dfba57cad4ca94db5cae323f1b1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9d71165d3934e607070c4e48458c0cf161b1baea"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49165,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:53.653,2025-02-26T07:00:53.653,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: media: imx-jpeg: Prevent decoding NV12M jpegs into single-planar buffers If the application queues an NV12M jpeg as output buffer, but then queues a single planar capture buffer, the kernel will crash with ""Unable to handle kernel NULL pointer dereference"" in mxc_jpeg_addrs, prevent this by finishing the job with error.",,,"[{""url"":""https://git.kernel.org/stable/c/417591a766b3c040c346044541ff949c0b2bb7b2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4eb591c47c82a6a6ad293ed108c3cb77115fbc25"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8d075ede7d24f19dc817c5bd517a53f0524f9031"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/eff76b180751e5e55c872d17755680c3b83ba9ab"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49166,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:53.743,2025-02-26T07:00:53.743,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ntfs: add sanity check on allocation size ntfs_read_inode_mount invokes ntfs_malloc_nofs with zero allocation size. It triggers one BUG in the __ntfs_malloc function. Fix this by adding sanity check on ni->attr_list_size.",,,"[{""url"":""https://git.kernel.org/stable/c/07793d2e55563124108762f4e5f811db92ffe02f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/115fae2c1566eacc5ad2055f72521354612e72c3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/21d490232f323ed4053eb9924615e6fea291f154"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/24ab2d4ef52c2dbb62a60844b87fc8872383407a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/714fbf2647b1a33d914edd695d4da92029c7e7c0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b230f2d9441a34c7f483d39ab78519bcf73cc2e0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bd8d7daa0e53b184a2f3c6e0d47330780d0a0650"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c641087d381a08363e5f14179bc6b0a23eca7c47"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fe41ad8be036a3de3e4bdde709551aeb4de2fe7d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49167,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:53.837,2025-02-26T07:00:53.837,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: btrfs: do not double complete bio on errors during compressed reads I hit some weird panics while fixing up the error handling from btrfs_lookup_bio_sums(). Turns out the compression path will complete the bio we use if we set up any of the compression bios and then return an error, and then btrfs_submit_data_bio() will also call bio_endio() on the bio. Fix this by making btrfs_submit_compressed_read() responsible for calling bio_endio() on the bio if there are any errors. Currently it was only doing it if we created the compression bios, otherwise it was depending on btrfs_submit_data_bio() to do the right thing. This creates the above problem, so fix up btrfs_submit_compressed_read() to always call bio_endio() in case of an error, and then simply return from btrfs_submit_data_bio() if we had to call btrfs_submit_compressed_read().",,,"[{""url"":""https://git.kernel.org/stable/c/4a4ceb2b990771c374d85d496a1a45255dde48e3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/987b5df1d10355d377315a26e7fb6c72ded83c9f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f9f15de85d74e7eef021af059ca53a15f041cdd8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49168,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:53.927,2025-05-22T13:15:52.903,Modified,[],"In the Linux kernel, the following vulnerability has been resolved: btrfs: do not clean up repair bio if submit fails The submit helper will always run bio_endio() on the bio if it fails to submit, so cleaning up the bio just leads to a variety of use-after-free and NULL pointer dereference bugs because we race with the endio function that is cleaning up the bio. Instead just return BLK_STS_OK as the repair function has to continue to process the rest of the pages, and the endio for the repair bio will do the appropriate cleanup for the page that it was given.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""18F5AF68-F1E7-4C3F-8521-ECDD471EAC43""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/7170875083254b51fcc5d67f96640977083f481e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8cbc3001a3264d998d6b6db3e23f935c158abd4d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d1cb11fb45ebbb1e7dfe5e9038b32ea72c184b14"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e76c78c48902dae6fa612749f59162bca0a79e0b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49169,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:54.017,2025-02-26T07:00:54.017,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: f2fs: use spin_lock to avoid hang [14696.634553] task:cat state:D stack: 0 pid:1613738 ppid:1613735 flags:0x00000004 [14696.638285] Call Trace: [14696.639038] <TASK> [14696.640032] __schedule+0x302/0x930 [14696.640969] schedule+0x58/0xd0 [14696.641799] schedule_preempt_disabled+0x18/0x30 [14696.642890] __mutex_lock.constprop.0+0x2fb/0x4f0 [14696.644035] ? mod_objcg_state+0x10c/0x310 [14696.645040] ? obj_cgroup_charge+0xe1/0x170 [14696.646067] __mutex_lock_slowpath+0x13/0x20 [14696.647126] mutex_lock+0x34/0x40 [14696.648070] stat_show+0x25/0x17c0 [f2fs] [14696.649218] seq_read_iter+0x120/0x4b0 [14696.650289] ? aa_file_perm+0x12a/0x500 [14696.651357] ? lru_cache_add+0x1c/0x20 [14696.652470] seq_read+0xfd/0x140 [14696.653445] full_proxy_read+0x5c/0x80 [14696.654535] vfs_read+0xa0/0x1a0 [14696.655497] ksys_read+0x67/0xe0 [14696.656502] __x64_sys_read+0x1a/0x20 [14696.657580] do_syscall_64+0x3b/0xc0 [14696.658671] entry_SYSCALL_64_after_hwframe+0x44/0xae [14696.660068] RIP: 0033:0x7efe39df1cb2 [14696.661133] RSP: 002b:00007ffc8badd948 EFLAGS: 00000246 ORIG_RAX: 0000000000000000 [14696.662958] RAX: ffffffffffffffda RBX: 0000000000020000 RCX: 00007efe39df1cb2 [14696.664757] RDX: 0000000000020000 RSI: 00007efe399df000 RDI: 0000000000000003 [14696.666542] RBP: 00007efe399df000 R08: 00007efe399de010 R09: 00007efe399de010 [14696.668363] R10: 0000000000000022 R11: 0000000000000246 R12: 0000000000000000 [14696.670155] R13: 0000000000000003 R14: 0000000000020000 R15: 0000000000020000 [14696.671965] </TASK> [14696.672826] task:umount state:D stack: 0 pid:1614985 ppid:1614984 flags:0x00004000 [14696.674930] Call Trace: [14696.675903] <TASK> [14696.676780] __schedule+0x302/0x930 [14696.677927] schedule+0x58/0xd0 [14696.679019] schedule_preempt_disabled+0x18/0x30 [14696.680412] __mutex_lock.constprop.0+0x2fb/0x4f0 [14696.681783] ? destroy_inode+0x65/0x80 [14696.683006] __mutex_lock_slowpath+0x13/0x20 [14696.684305] mutex_lock+0x34/0x40 [14696.685442] f2fs_destroy_stats+0x1e/0x60 [f2fs] [14696.686803] f2fs_put_super+0x158/0x390 [f2fs] [14696.688238] generic_shutdown_super+0x7a/0x120 [14696.689621] kill_block_super+0x27/0x50 [14696.690894] kill_f2fs_super+0x7f/0x100 [f2fs] [14696.692311] deactivate_locked_super+0x35/0xa0 [14696.693698] deactivate_super+0x40/0x50 [14696.694985] cleanup_mnt+0x139/0x190 [14696.696209] __cleanup_mnt+0x12/0x20 [14696.697390] task_work_run+0x64/0xa0 [14696.698587] exit_to_user_mode_prepare+0x1b7/0x1c0 [14696.700053] syscall_exit_to_user_mode+0x27/0x50 [14696.701418] do_syscall_64+0x48/0xc0 [14696.702630] entry_SYSCALL_64_after_hwframe+0x44/0xae",,,"[{""url"":""https://git.kernel.org/stable/c/2eff60346e7ae1a24cd868b8fdcf58e946e7dde1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/738886004bd2885ac2db0bc63b4874aa471ca87e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/98237fcda4a24e67b0a4498c17d5aa4ad4537bc7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ec4187d45cc1c2d69fffeee5fa6aa4cb62477cfb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49170,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:54.110,2025-02-26T07:00:54.110,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: f2fs: fix to do sanity check on curseg->alloc_type As Wenqing Liu reported in bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=215657 - Overview UBSAN: array-index-out-of-bounds in fs/f2fs/segment.c:3460:2 when mount and operate a corrupted image - Reproduce tested on kernel 5.17-rc4, 5.17-rc6 1. mkdir test_crash 2. cd test_crash 3. unzip tmp2.zip 4. mkdir mnt 5. ./single_test.sh f2fs 2 - Kernel dump [ 46.434454] loop0: detected capacity change from 0 to 131072 [ 46.529839] F2FS-fs (loop0): Mounted with checkpoint version = 7548c2d9 [ 46.738319] ================================================================================ [ 46.738412] UBSAN: array-index-out-of-bounds in fs/f2fs/segment.c:3460:2 [ 46.738475] index 231 is out of range for type 'unsigned int [2]' [ 46.738539] CPU: 2 PID: 939 Comm: umount Not tainted 5.17.0-rc6 #1 [ 46.738547] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.13.0-1ubuntu1.1 04/01/2014 [ 46.738551] Call Trace: [ 46.738556] <TASK> [ 46.738563] dump_stack_lvl+0x47/0x5c [ 46.738581] ubsan_epilogue+0x5/0x50 [ 46.738592] __ubsan_handle_out_of_bounds+0x68/0x80 [ 46.738604] f2fs_allocate_data_block+0xdff/0xe60 [f2fs] [ 46.738819] do_write_page+0xef/0x210 [f2fs] [ 46.738934] f2fs_do_write_node_page+0x3f/0x80 [f2fs] [ 46.739038] __write_node_page+0x2b7/0x920 [f2fs] [ 46.739162] f2fs_sync_node_pages+0x943/0xb00 [f2fs] [ 46.739293] f2fs_write_checkpoint+0x7bb/0x1030 [f2fs] [ 46.739405] kill_f2fs_super+0x125/0x150 [f2fs] [ 46.739507] deactivate_locked_super+0x60/0xc0 [ 46.739517] deactivate_super+0x70/0xb0 [ 46.739524] cleanup_mnt+0x11a/0x200 [ 46.739532] __cleanup_mnt+0x16/0x20 [ 46.739538] task_work_run+0x67/0xa0 [ 46.739547] exit_to_user_mode_prepare+0x18c/0x1a0 [ 46.739559] syscall_exit_to_user_mode+0x26/0x40 [ 46.739568] do_syscall_64+0x46/0xb0 [ 46.739584] entry_SYSCALL_64_after_hwframe+0x44/0xae The root cause is we missed to do sanity check on curseg->alloc_type, result in out-of-bound accessing on sbi->block_count[] array, fix it.",,,"[{""url"":""https://git.kernel.org/stable/c/0748a0f7dcb9d9dddc80302d73ebcecef6782ef0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/498b7088db71f9707359448cd6800bbb1882f4c3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c12765e3f129b144421c80d3383df885f85ee290"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f41ee8b91c00770d718be2ff4852a80017ae9ab3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f68caedf264a95c0b02dfd0d9f92ac2637d5848a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49171,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:54.213,2025-02-26T07:00:54.213,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ext4: don't BUG if someone dirty pages without asking ext4 first [un]pin_user_pages_remote is dirtying pages without properly warning the file system in advance. A related race was noted by Jan Kara in 2018[1]; however, more recently instead of it being a very hard-to-hit race, it could be reliably triggered by process_vm_writev(2) which was discovered by Syzbot[2]. This is technically a bug in mm/gup.c, but arguably ext4 is fragile in that if some other kernel subsystem dirty pages without properly notifying the file system using page_mkwrite(), ext4 will BUG, while other file systems will not BUG (although data will still be lost). So instead of crashing with a BUG, issue a warning (since there may be potential data loss) and just mark the page as clean to avoid unprivileged denial of service attacks until the problem can be properly fixed. More discussion and background can be found in the thread starting at [2]. [1] https://lore.kernel.org/linux-mm/20180103100430.GE4911@quack2.suse.cz [2] https://lore.kernel.org/r/Yg0m6IjcNmfaSokM@google.com",,,"[{""url"":""https://git.kernel.org/stable/c/0d3a6926f7e8be3c897fa46216ce13b119a9f56a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/330d0e44fc5a47c27df958ecdd4693a3cb1d8b81"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/343117559ef41e992e326f7a92da1a8f254dfa8c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5a016c053f426a73752c3b41b60b497b58694d48"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5db60e76edf5680ff1f3a7221036fc44b308f146"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/677c9d30e8487bee6c8e3b034070319d98f6e203"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a0856764dc1276ad2dc7891288c2e9246bf11a37"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cc5095747edfb054ca2068d01af20be3fcc3634f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d666dfaa571465a19f014534a214c255ea33f301"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49172,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:54.313,2025-02-26T07:00:54.313,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: parisc: Fix non-access data TLB cache flush faults When a page is not present, we get non-access data TLB faults from the fdc and fic instructions in flush_user_dcache_range_asm and flush_user_icache_range_asm. When these occur, the cache line is not invalidated and potentially we get memory corruption. The problem was hidden by the nullification of the flush instructions. These faults also affect performance. With pa8800/pa8900 processors, there will be 32 faults per 4 KB page since the cache line is 128 bytes. There will be more faults with earlier processors. The problem is fixed by using flush_cache_pages(). It does the flush using a tmp alias mapping. The flush_cache_pages() call in flush_cache_range() flushed too large a range. V2: Remove unnecessary preempt_disable() and preempt_enable() calls.",,,"[{""url"":""https://git.kernel.org/stable/c/b3d6adb3a49d82e4e557c5fc16f50c9ff731da5d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ddca4b82027e2a66333dd40fab21a4beff435c7e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f839e5f1cef36ce268950c387129b1bfefdaebc9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49173,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:54.407,2025-02-26T07:00:54.407,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: spi: fsi: Implement a timeout for polling status The data transfer routines must poll the status register to determine when more data can be shifted in or out. If the hardware gets into a bad state, these polling loops may never exit. Prevent this by returning an error if a timeout is exceeded.",,,"[{""url"":""https://git.kernel.org/stable/c/89b35e3f28514087d3f1e28e8f5634fbfd07c554"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d4982ceb137e6ecd2b466a6de639790a148cf19a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dac1438f347d3b8cf892105c94e254f29c5764de"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49174,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:54.503,2025-02-26T07:00:54.503,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ext4: fix ext4_mb_mark_bb() with flex_bg with fast_commit In case of flex_bg feature (which is by default enabled), extents for any given inode might span across blocks from two different block group. ext4_mb_mark_bb() only reads the buffer_head of block bitmap once for the starting block group, but it fails to read it again when the extent length boundary overflows to another block group. Then in this below loop it accesses memory beyond the block group bitmap buffer_head and results into a data abort. for (i = 0; i < clen; i++) if (!mb_test_bit(blkoff + i, bitmap_bh->b_data) == !state) already++; This patch adds this functionality for checking block group boundary in ext4_mb_mark_bb() and update the buffer_head(bitmap_bh) for every different block group. w/o this patch, I was easily able to hit a data access abort using Power platform. <...> [ 74.327662] EXT4-fs error (device loop3): ext4_mb_generate_buddy:1141: group 11, block bitmap and bg descriptor inconsistent: 21248 vs 23294 free clusters [ 74.533214] EXT4-fs (loop3): shut down requested (2) [ 74.536705] Aborting journal on device loop3-8. [ 74.702705] BUG: Unable to handle kernel data access on read at 0xc00000005e980000 [ 74.703727] Faulting instruction address: 0xc0000000007bffb8 cpu 0xd: Vector: 300 (Data Access) at [c000000015db7060] pc: c0000000007bffb8: ext4_mb_mark_bb+0x198/0x5a0 lr: c0000000007bfeec: ext4_mb_mark_bb+0xcc/0x5a0 sp: c000000015db7300 msr: 800000000280b033 dar: c00000005e980000 dsisr: 40000000 current = 0xc000000027af6880 paca = 0xc00000003ffd5200 irqmask: 0x03 irq_happened: 0x01 pid = 5167, comm = mount <...> enter ? for help [c000000015db7380] c000000000782708 ext4_ext_clear_bb+0x378/0x410 [c000000015db7400] c000000000813f14 ext4_fc_replay+0x1794/0x2000 [c000000015db7580] c000000000833f7c do_one_pass+0xe9c/0x12a0 [c000000015db7710] c000000000834504 jbd2_journal_recover+0x184/0x2d0 [c000000015db77c0] c000000000841398 jbd2_journal_load+0x188/0x4a0 [c000000015db7880] c000000000804de8 ext4_fill_super+0x2638/0x3e10 [c000000015db7a40] c0000000005f8404 get_tree_bdev+0x2b4/0x350 [c000000015db7ae0] c0000000007ef058 ext4_get_tree+0x28/0x40 [c000000015db7b00] c0000000005f6344 vfs_get_tree+0x44/0x100 [c000000015db7b70] c00000000063c408 path_mount+0xdd8/0xe70 [c000000015db7c40] c00000000063c8f0 sys_mount+0x450/0x550 [c000000015db7d50] c000000000035770 system_call_exception+0x4a0/0x4e0 [c000000015db7e10] c00000000000c74c system_call_common+0xec/0x250",,,"[{""url"":""https://git.kernel.org/stable/c/6a6beb074186a0452368a023a261c7d0eaebe838"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/803fb0e8240cc16585a5c9df76add1dfaa781773"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b07eedd0222e9548ffc568ec429bb1f61d21a39c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bfdc502a4a4c058bf4cbb1df0c297761d528f54d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cd6d719534af993210306f8a13f9cb3e615f7c8d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49175,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:54.600,2025-02-26T07:00:54.600,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: PM: core: keep irq flags in device_pm_check_callbacks() The function device_pm_check_callbacks() can be called under the spin lock (in the reported case it happens from genpd_add_device() -> dev_pm_domain_set(), when the genpd uses spinlocks rather than mutexes. However this function uncoditionally uses spin_lock_irq() / spin_unlock_irq(), thus not preserving the CPU flags. Use the irqsave/irqrestore instead. The backtrace for the reference: [ 2.752010] ------------[ cut here ]------------ [ 2.756769] raw_local_irq_restore() called with IRQs enabled [ 2.762596] WARNING: CPU: 4 PID: 1 at kernel/locking/irqflag-debug.c:10 warn_bogus_irq_restore+0x34/0x50 [ 2.772338] Modules linked in: [ 2.775487] CPU: 4 PID: 1 Comm: swapper/0 Tainted: G S 5.17.0-rc6-00384-ge330d0d82eff-dirty #684 [ 2.781384] Freeing initrd memory: 46024K [ 2.785839] pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--) [ 2.785841] pc : warn_bogus_irq_restore+0x34/0x50 [ 2.785844] lr : warn_bogus_irq_restore+0x34/0x50 [ 2.785846] sp : ffff80000805b7d0 [ 2.785847] x29: ffff80000805b7d0 x28: 0000000000000000 x27: 0000000000000002 [ 2.785850] x26: ffffd40e80930b18 x25: ffff7ee2329192b8 x24: ffff7edfc9f60800 [ 2.785853] x23: ffffd40e80930b18 x22: ffffd40e80930d30 x21: ffff7edfc0dffa00 [ 2.785856] x20: ffff7edfc09e3768 x19: 0000000000000000 x18: ffffffffffffffff [ 2.845775] x17: 6572206f74206465 x16: 6c696166203a3030 x15: ffff80008805b4f7 [ 2.853108] x14: 0000000000000000 x13: ffffd40e809550b0 x12: 00000000000003d8 [ 2.860441] x11: 0000000000000148 x10: ffffd40e809550b0 x9 : ffffd40e809550b0 [ 2.867774] x8 : 00000000ffffefff x7 : ffffd40e809ad0b0 x6 : ffffd40e809ad0b0 [ 2.875107] x5 : 000000000000bff4 x4 : 0000000000000000 x3 : 0000000000000000 [ 2.882440] x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff7edfc03a8000 [ 2.889774] Call trace: [ 2.892290] warn_bogus_irq_restore+0x34/0x50 [ 2.896770] _raw_spin_unlock_irqrestore+0x94/0xa0 [ 2.901690] genpd_unlock_spin+0x20/0x30 [ 2.905724] genpd_add_device+0x100/0x2d0 [ 2.909850] __genpd_dev_pm_attach+0xa8/0x23c [ 2.914329] genpd_dev_pm_attach_by_id+0xc4/0x190 [ 2.919167] genpd_dev_pm_attach_by_name+0x3c/0xd0 [ 2.924086] dev_pm_domain_attach_by_name+0x24/0x30 [ 2.929102] psci_dt_attach_cpu+0x24/0x90 [ 2.933230] psci_cpuidle_probe+0x2d4/0x46c [ 2.937534] platform_probe+0x68/0xe0 [ 2.941304] really_probe.part.0+0x9c/0x2fc [ 2.945605] __driver_probe_device+0x98/0x144 [ 2.950085] driver_probe_device+0x44/0x15c [ 2.954385] __device_attach_driver+0xb8/0x120 [ 2.958950] bus_for_each_drv+0x78/0xd0 [ 2.962896] __device_attach+0xd8/0x180 [ 2.966843] device_initial_probe+0x14/0x20 [ 2.971144] bus_probe_device+0x9c/0xa4 [ 2.975092] device_add+0x380/0x88c [ 2.978679] platform_device_add+0x114/0x234 [ 2.983067] platform_device_register_full+0x100/0x190 [ 2.988344] psci_idle_init+0x6c/0xb0 [ 2.992113] do_one_initcall+0x74/0x3a0 [ 2.996060] kernel_init_freeable+0x2fc/0x384 [ 3.000543] kernel_init+0x28/0x130 [ 3.004132] ret_from_fork+0x10/0x20 [ 3.007817] irq event stamp: 319826 [ 3.011404] hardirqs last enabled at (319825): [<ffffd40e7eda0268>] __up_console_sem+0x78/0x84 [ 3.020332] hardirqs last disabled at (319826): [<ffffd40e7fd6d9d8>] el1_dbg+0x24/0x8c [ 3.028458] softirqs last enabled at (318312): [<ffffd40e7ec90410>] _stext+0x410/0x588 [ 3.036678] softirqs last disabled at (318299): [<ffffd40e7ed1bf68>] __irq_exit_rcu+0x158/0x174 [ 3.045607] ---[ end trace 0000000000000000 ]---",,,"[{""url"":""https://git.kernel.org/stable/c/0cccf9d4fb45f1acbc0bbf6d7e4d8d0fb7a10416"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2add538e57a2825c61d639260386f385c75e4166"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3ec80d52b9b74b9e691997632a543c73eddfeba0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/524bb1da785a7ae43dd413cd392b5071c6c367f8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/78c4d68b952f5f537788dbd454031ea9bf50f642"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/be8bc05f38d667eda1e820bc6f69234795be7809"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c29642ba72f87c0a3d7449f7db5d6d76a7ed53c3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c7c0ec5a1dcc3eaa1e85c804c2ccf46e457788a3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ede1ef1a7de973321699736ef96d01a4b9a6fe9e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49176,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:54.717,2025-03-25T16:11:10.930,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: bfq: fix use-after-free in bfq_dispatch_request KASAN reports a use-after-free report when doing normal scsi-mq test [69832.239032] ================================================================== [69832.241810] BUG: KASAN: use-after-free in bfq_dispatch_request+0x1045/0x44b0 [69832.243267] Read of size 8 at addr ffff88802622ba88 by task kworker/3:1H/155 [69832.244656] [69832.245007] CPU: 3 PID: 155 Comm: kworker/3:1H Not tainted 5.10.0-10295-g576c6382529e #8 [69832.246626] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014 [69832.249069] Workqueue: kblockd blk_mq_run_work_fn [69832.250022] Call Trace: [69832.250541] dump_stack+0x9b/0xce [69832.251232] ? bfq_dispatch_request+0x1045/0x44b0 [69832.252243] print_address_description.constprop.6+0x3e/0x60 [69832.253381] ? __cpuidle_text_end+0x5/0x5 [69832.254211] ? vprintk_func+0x6b/0x120 [69832.254994] ? bfq_dispatch_request+0x1045/0x44b0 [69832.255952] ? bfq_dispatch_request+0x1045/0x44b0 [69832.256914] kasan_report.cold.9+0x22/0x3a [69832.257753] ? bfq_dispatch_request+0x1045/0x44b0 [69832.258755] check_memory_region+0x1c1/0x1e0 [69832.260248] bfq_dispatch_request+0x1045/0x44b0 [69832.261181] ? bfq_bfqq_expire+0x2440/0x2440 [69832.262032] ? blk_mq_delay_run_hw_queues+0xf9/0x170 [69832.263022] __blk_mq_do_dispatch_sched+0x52f/0x830 [69832.264011] ? blk_mq_sched_request_inserted+0x100/0x100 [69832.265101] __blk_mq_sched_dispatch_requests+0x398/0x4f0 [69832.266206] ? blk_mq_do_dispatch_ctx+0x570/0x570 [69832.267147] ? __switch_to+0x5f4/0xee0 [69832.267898] blk_mq_sched_dispatch_requests+0xdf/0x140 [69832.268946] __blk_mq_run_hw_queue+0xc0/0x270 [69832.269840] blk_mq_run_work_fn+0x51/0x60 [69832.278170] process_one_work+0x6d4/0xfe0 [69832.278984] worker_thread+0x91/0xc80 [69832.279726] ? __kthread_parkme+0xb0/0x110 [69832.280554] ? process_one_work+0xfe0/0xfe0 [69832.281414] kthread+0x32d/0x3f0 [69832.282082] ? kthread_park+0x170/0x170 [69832.282849] ret_from_fork+0x1f/0x30 [69832.283573] [69832.283886] Allocated by task 7725: [69832.284599] kasan_save_stack+0x19/0x40 [69832.285385] __kasan_kmalloc.constprop.2+0xc1/0xd0 [69832.286350] kmem_cache_alloc_node+0x13f/0x460 [69832.287237] bfq_get_queue+0x3d4/0x1140 [69832.287993] bfq_get_bfqq_handle_split+0x103/0x510 [69832.289015] bfq_init_rq+0x337/0x2d50 [69832.289749] bfq_insert_requests+0x304/0x4e10 [69832.290634] blk_mq_sched_insert_requests+0x13e/0x390 [69832.291629] blk_mq_flush_plug_list+0x4b4/0x760 [69832.292538] blk_flush_plug_list+0x2c5/0x480 [69832.293392] io_schedule_prepare+0xb2/0xd0 [69832.294209] io_schedule_timeout+0x13/0x80 [69832.295014] wait_for_common_io.constprop.1+0x13c/0x270 [69832.296137] submit_bio_wait+0x103/0x1a0 [69832.296932] blkdev_issue_discard+0xe6/0x160 [69832.297794] blk_ioctl_discard+0x219/0x290 [69832.298614] blkdev_common_ioctl+0x50a/0x1750 [69832.304715] blkdev_ioctl+0x470/0x600 [69832.305474] block_ioctl+0xde/0x120 [69832.306232] vfs_ioctl+0x6c/0xc0 [69832.306877] __se_sys_ioctl+0x90/0xa0 [69832.307629] do_syscall_64+0x2d/0x40 [69832.308362] entry_SYSCALL_64_after_hwframe+0x44/0xa9 [69832.309382] [69832.309701] Freed by task 155: [69832.310328] kasan_save_stack+0x19/0x40 [69832.311121] kasan_set_track+0x1c/0x30 [69832.311868] kasan_set_free_info+0x1b/0x30 [69832.312699] __kasan_slab_free+0x111/0x160 [69832.313524] kmem_cache_free+0x94/0x460 [69832.314367] bfq_put_queue+0x582/0x940 [69832.315112] __bfq_bfqd_reset_in_service+0x166/0x1d0 [69832.317275] bfq_bfqq_expire+0xb27/0x2440 [69832.318084] bfq_dispatch_request+0x697/0x44b0 [69832.318991] __blk_mq_do_dispatch_sched+0x52f/0x830 [69832.319984] __blk_mq_sched_dispatch_requests+0x398/0x4f0 [69832.321087] blk_mq_sched_dispatch_requests+0xdf/0x140 [69832.322225] __blk_mq_run_hw_queue+0xc0/0x270 [69832.323114] blk_mq_run_work_fn+0x51/0x6 ---truncated---","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.19.238"",""matchCriteriaId"":""E0B62342-F287-4C6B-92AA-C1BC61DDAFFA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""8CB6E8F5-C2B1-46F3-A807-0F6104AC340F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""91D3BFD0-D3F3-4018-957C-96CCBF357D79""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/080665e2c3cbfc68359b9a348a3546ed9b908e7a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/40b4ba0030e0b02cbacd424ebb9f4c8b0976c786"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5117c9ff4c2ebae0f5c2c262d42a25a8fbc086e6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5687958bf18f84384d809f521210d0f5deed03b0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/74e610b5ee0d95e751280567100509eb11517efa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ab552fcb17cc9e4afe0e4ac4df95fc7b30e8490a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/df6e00b1a53c57dca82c63b5ecbcad5452231bc7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49177,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:54.850,2025-03-17T18:52:13.847,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: hwrng: cavium - fix NULL but dereferenced coccicheck error Fix following coccicheck warning: ./drivers/char/hw_random/cavium-rng-vf.c:182:17-20: ERROR: pdev is NULL but dereferenced.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""23C454F5-61F7-44DC-BCFA-17E6C23CF2EB""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/e47b12f9415169eceda6770fcf45802e0c8d2a66"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e6205ad58a7ac194abfb33897585b38687d797fa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49178,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:54.947,2025-02-26T07:00:54.947,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: memstick/mspro_block: fix handling of read-only devices Use set_disk_ro to propagate the read-only state to the block layer instead of checking for it in ->open and leaking a reference in case of a read-only device.",,,"[{""url"":""https://git.kernel.org/stable/c/057b53c4f87690d626203acef8b63d52a9bf2f43"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6a0725b9d78ff6efdc95a37e4f05072e79c63918"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6dab421bfe06a59bf8f212a72e34673e8acf2018"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49179,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:55.037,2025-03-25T15:07:03.630,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: block, bfq: don't move oom_bfqq Our test report a UAF: [ 2073.019181] ================================================================== [ 2073.019188] BUG: KASAN: use-after-free in __bfq_put_async_bfqq+0xa0/0x168 [ 2073.019191] Write of size 8 at addr ffff8000ccf64128 by task rmmod/72584 [ 2073.019192] [ 2073.019196] CPU: 0 PID: 72584 Comm: rmmod Kdump: loaded Not tainted 4.19.90-yk #5 [ 2073.019198] Hardware name: QEMU KVM Virtual Machine, BIOS 0.0.0 02/06/2015 [ 2073.019200] Call trace: [ 2073.019203] dump_backtrace+0x0/0x310 [ 2073.019206] show_stack+0x28/0x38 [ 2073.019210] dump_stack+0xec/0x15c [ 2073.019216] print_address_description+0x68/0x2d0 [ 2073.019220] kasan_report+0x238/0x2f0 [ 2073.019224] __asan_store8+0x88/0xb0 [ 2073.019229] __bfq_put_async_bfqq+0xa0/0x168 [ 2073.019233] bfq_put_async_queues+0xbc/0x208 [ 2073.019236] bfq_pd_offline+0x178/0x238 [ 2073.019240] blkcg_deactivate_policy+0x1f0/0x420 [ 2073.019244] bfq_exit_queue+0x128/0x178 [ 2073.019249] blk_mq_exit_sched+0x12c/0x160 [ 2073.019252] elevator_exit+0xc8/0xd0 [ 2073.019256] blk_exit_queue+0x50/0x88 [ 2073.019259] blk_cleanup_queue+0x228/0x3d8 [ 2073.019267] null_del_dev+0xfc/0x1e0 [null_blk] [ 2073.019274] null_exit+0x90/0x114 [null_blk] [ 2073.019278] __arm64_sys_delete_module+0x358/0x5a0 [ 2073.019282] el0_svc_common+0xc8/0x320 [ 2073.019287] el0_svc_handler+0xf8/0x160 [ 2073.019290] el0_svc+0x10/0x218 [ 2073.019291] [ 2073.019294] Allocated by task 14163: [ 2073.019301] kasan_kmalloc+0xe0/0x190 [ 2073.019305] kmem_cache_alloc_node_trace+0x1cc/0x418 [ 2073.019308] bfq_pd_alloc+0x54/0x118 [ 2073.019313] blkcg_activate_policy+0x250/0x460 [ 2073.019317] bfq_create_group_hierarchy+0x38/0x110 [ 2073.019321] bfq_init_queue+0x6d0/0x948 [ 2073.019325] blk_mq_init_sched+0x1d8/0x390 [ 2073.019330] elevator_switch_mq+0x88/0x170 [ 2073.019334] elevator_switch+0x140/0x270 [ 2073.019338] elv_iosched_store+0x1a4/0x2a0 [ 2073.019342] queue_attr_store+0x90/0xe0 [ 2073.019348] sysfs_kf_write+0xa8/0xe8 [ 2073.019351] kernfs_fop_write+0x1f8/0x378 [ 2073.019359] __vfs_write+0xe0/0x360 [ 2073.019363] vfs_write+0xf0/0x270 [ 2073.019367] ksys_write+0xdc/0x1b8 [ 2073.019371] __arm64_sys_write+0x50/0x60 [ 2073.019375] el0_svc_common+0xc8/0x320 [ 2073.019380] el0_svc_handler+0xf8/0x160 [ 2073.019383] el0_svc+0x10/0x218 [ 2073.019385] [ 2073.019387] Freed by task 72584: [ 2073.019391] __kasan_slab_free+0x120/0x228 [ 2073.019394] kasan_slab_free+0x10/0x18 [ 2073.019397] kfree+0x94/0x368 [ 2073.019400] bfqg_put+0x64/0xb0 [ 2073.019404] bfqg_and_blkg_put+0x90/0xb0 [ 2073.019408] bfq_put_queue+0x220/0x228 [ 2073.019413] __bfq_put_async_bfqq+0x98/0x168 [ 2073.019416] bfq_put_async_queues+0xbc/0x208 [ 2073.019420] bfq_pd_offline+0x178/0x238 [ 2073.019424] blkcg_deactivate_policy+0x1f0/0x420 [ 2073.019429] bfq_exit_queue+0x128/0x178 [ 2073.019433] blk_mq_exit_sched+0x12c/0x160 [ 2073.019437] elevator_exit+0xc8/0xd0 [ 2073.019440] blk_exit_queue+0x50/0x88 [ 2073.019443] blk_cleanup_queue+0x228/0x3d8 [ 2073.019451] null_del_dev+0xfc/0x1e0 [null_blk] [ 2073.019459] null_exit+0x90/0x114 [null_blk] [ 2073.019462] __arm64_sys_delete_module+0x358/0x5a0 [ 2073.019467] el0_svc_common+0xc8/0x320 [ 2073.019471] el0_svc_handler+0xf8/0x160 [ 2073.019474] el0_svc+0x10/0x218 [ 2073.019475] [ 2073.019479] The buggy address belongs to the object at ffff8000ccf63f00 which belongs to the cache kmalloc-1024 of size 1024 [ 2073.019484] The buggy address is located 552 bytes inside of 1024-byte region [ffff8000ccf63f00, ffff8000ccf64300) [ 2073.019486] The buggy address belongs to the page: [ 2073.019492] page:ffff7e000333d800 count:1 mapcount:0 mapping:ffff8000c0003a00 index:0x0 compound_mapcount: 0 [ 2073.020123] flags: 0x7ffff0000008100(slab|head) [ 2073.020403] raw: 07ffff0000008100 ffff7e0003334c08 ffff7e00001f5a08 ffff8000c0003a00 [ 2073.020409] ra ---truncated---","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""4AAE7A78-57E5-45A6-860D-7867DA88A45E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""91D3BFD0-D3F3-4018-957C-96CCBF357D79""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/7507ead1e9d42957c2340f2c4a0e9d00034e3366"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8410f70977734f21b8ed45c37e925d311dfda2e7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/87fdfe8589d43e471dffb4c60f75eeb6f37afc4c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8f34dea99cd7761156a146a5258a67d045d862f7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c01fced8d38fbccc82787065229578006f28e020"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c4f5a678add58a8a0e7ee5e038496b376ea6d205"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49180,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:55.137,2025-02-26T07:00:55.137,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: LSM: general protection fault in legacy_parse_param The usual LSM hook ""bail on fail"" scheme doesn't work for cases where a security module may return an error code indicating that it does not recognize an input. In this particular case Smack sees a mount option that it recognizes, and returns 0. A call to a BPF hook follows, which returns -ENOPARAM, which confuses the caller because Smack has processed its data. The SELinux hook incorrectly returns 1 on success. There was a time when this was correct, however the current expectation is that it return 0 on success. This is repaired.",,,"[{""url"":""https://git.kernel.org/stable/c/00fc07fa0b4a004711b6e1a944f0d2e46f7093b7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2784604c8c6fc523248f8f80a421c313a9d790b7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cadae7c5e477aaafcba819b8e4a3d1c1a1503b62"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ddcdda888e14ca451b3ee83d11b65b2a9c8e783b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ecff30575b5ad0eda149aadad247b7f75411fd47"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f3f93a1aaafc3032e0a9655fb43deccfb3e953a3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49181,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:55.230,2025-02-26T13:15:34.087,Rejected,[],Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.,,,[],,,,,,,,,
CVE-2022-49182,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:55.333,2025-03-25T15:07:11.573,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: hns3: add vlan list lock to protect vlan list When adding port base VLAN, vf VLAN need to remove from HW and modify the vlan state in vf VLAN list as false. If the periodicity task is freeing the same node, it may cause ""use after free"" error. This patch adds a vlan list lock to protect the vlan list.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.1"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""C5B0B00D-6DCA-4714-B384-1EB7C214ABBE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/09e383ca97e798f9954189b741af54b5c51e7a97"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1932a624ab88ff407d1a1d567fe581faa15dc725"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/30f0ff7176efe8ac6c55f85bce26ed58bb608758"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f58af41deeab0f45c9c80adf5f2de489ebbac3dd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49183,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:55.427,2025-03-17T18:56:17.093,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net/sched: act_ct: fix ref leak when switching zones When switching zones or network namespaces without doing a ct clear in between, it is now leaking a reference to the old ct entry. That's because tcf_ct_skb_nfct_cached() returns false and tcf_ct_flow_table_lookup() may simply overwrite it. The fix is to, as the ct entry is not reusable, free it already at tcf_ct_skb_nfct_cached().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.10.103"",""versionEndExcluding"":""5.11"",""matchCriteriaId"":""C6C1F51A-A817-4CF1-9578-38216E3CF649""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15.26"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""806417E1-B697-4476-94C3-EBC38748D945""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16.12"",""versionEndIncluding"":""5.16.19"",""matchCriteriaId"":""108A78FE-B91E-44D1-8EBD-D9C4D8A649EC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndIncluding"":""5.17.2"",""matchCriteriaId"":""FD8C9932-9223-472D-A70C-42BCD470680A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/4bb42d73def9411e5cad885b9811987d72431df1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b24793a37d91aacad7cb9893b226a7924a89636a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bcb74e132a76ce0502bb33d5b65533a4ed72d159"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bcbf4e5c3b5b373cd61528392dd1ec8e9c0fd33d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49184,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:55.520,2025-03-17T18:56:24.480,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: sparx5: switchdev: fix possible NULL pointer dereference As the possible failure of the allocation, devm_kzalloc() may return NULL pointer. Therefore, it should be better to check the 'db' in order to prevent the dereference of NULL pointer.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""A2DC15C6-2357-4732-97E0-A8A511BB24BF""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0906f3a3df07835e37077d8971aac65347f2ed57"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b375ea083fa649092cd016ac1f89a2d1fd8f8e8b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c346791877e6ce923bb21e34b30c6f99326aa5a8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e7e1fff76c4c57688dc7d53a3b6212182d5628d0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49185,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:55.607,2025-03-17T18:56:46.610,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: pinctrl: nomadik: Add missing of_node_put() in nmk_pinctrl_probe This node pointer is returned by of_parse_phandle() with refcount incremented in this function. Calling of_node_put() to avoid the refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.9"",""versionEndExcluding"":""4.9.311"",""matchCriteriaId"":""221C7C1E-3FC1-434D-8269-74724D5BDBDC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.276"",""matchCriteriaId"":""6D9B028C-6313-47F9-94B7-5F8122345E49""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.238"",""matchCriteriaId"":""FA28527A-11D3-41D2-9C4C-ECAC0D6A4A2D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""8CB6E8F5-C2B1-46F3-A807-0F6104AC340F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""91D3BFD0-D3F3-4018-957C-96CCBF357D79""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0067ba448f1c29ca06e5aee00d8506889ed1f9d0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0356d4b64a03d23daf99a2a29d7d7d91d6ec2ea8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/59250d547542f1c7765a78dc97ddfe5e6b0d2ab0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/62580a40c9bef3d8a90629c64dda381344b35ffd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/669b05ff43bd7ed684379c6e2006a6dad5127b71"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9511c6018cd772668def8b034bc67269847e591a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bc1e29a35147c1ba6ea2b06a16cb0028f7c852d2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c09ac191b1f97cfa06f394dbfd7a5db07986cefc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c52703355766c347f270df222a744e0c491a02f2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49186,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:55.710,2025-03-17T18:57:09.973,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: clk: visconti: prevent array overflow in visconti_clk_register_gates() This code was using -1 to represent that there was no reset function. Unfortunately, the -1 was stored in u8 so the if (clks[i].rs_id >= 0) condition was always true. This lead to an out of bounds access in visconti_clk_register_gates().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-129""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2723543c1d60278d5aef1c4ad732dbad24b84a81"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c5601e0720ce1a3ad895f94a5838530edde01ed3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49187,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:55.803,2025-03-14T20:57:56.803,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: clk: Fix clk_hw_get_clk() when dev is NULL Any registered clk_core structure can have a NULL pointer in its dev field. While never actually documented, this is evidenced by the wide usage of clk_register and clk_hw_register with a NULL device pointer, and the fact that the core of_clk_hw_register() function also passes a NULL device pointer. A call to clk_hw_get_clk() on a clk_hw struct whose clk_core is in that case will result in a NULL pointer derefence when it calls dev_name() on that NULL device pointer. Add a test for this case and use NULL as the dev_id if the device pointer is NULL.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0c1b56df451716ba207bbf59f303473643eee4fd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/23f89fe005b105f0dcc55034c13eb89f9b570fac"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4be3e4c05d8dd1b83b75652cad88c9e752ec7054"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d183f20cf5a7b546d4108e796b98210ceb317579"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49188,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:55.897,2025-02-26T07:00:55.897,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: remoteproc: qcom_q6v5_mss: Fix some leaks in q6v5_alloc_memory_region The device_node pointer is returned by of_parse_phandle() or of_get_child_by_name() with refcount incremented. We should use of_node_put() on it when done. This function only call of_node_put(node) when of_address_to_resource succeeds, missing error cases.",,,"[{""url"":""https://git.kernel.org/stable/c/07a5dcc4bed9d7cae54adf5aa10ff9f037a3204b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a7d988735e757e111f9722de7cf1b40a84a48b1f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b9df3007b3cda4936cc50f5a7d2d30505a652828"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bd4771ba2cf9e18473a42b5b70175e50d67a64bb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f7210ca29a783c94478da02368731e4c9cf7cdb7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49189,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:55.990,2025-02-26T07:00:55.990,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: clk: qcom: clk-rcg2: Update logic to calculate D value for RCG The display pixel clock has a requirement on certain newer platforms to support M/N as (2/3) and the final D value calculated results in underflow errors. As the current implementation does not check for D value is within the accepted range for a given M & N value. Update the logic to calculate the final D value based on the range.",,,"[{""url"":""https://git.kernel.org/stable/c/334720f418f57b1d969dad2117b21f9388cb9395"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/34dca60982e93e69ae442aa2d36ce61c9a3bb563"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/52592f9afbfe01bce8f8953e4f19cbe3bcbdbd3a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/58922910add18583d5273c2edcdb9fd7bf4eca02"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/96888f0dcf351e758b9df57e015a48427ca709c1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a4e2e31971354790b0d1fa3e783452a9d135fcff"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49190,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:56.090,2025-05-02T07:15:49.450,Modified,[],"In the Linux kernel, the following vulnerability has been resolved: kernel/resource: fix kfree() of bootmem memory again Since commit ebff7d8f270d (""mem hotunplug: fix kfree() of bootmem memory""), we could get a resource allocated during boot via alloc_resource(). And it's required to release the resource using free_resource(). Howerver, many people use kfree directly which will result in kernel BUG. In order to fix this without fixing every call site, just leak a couple of bytes in such corner case.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.10"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""F1BE9A95-C2D3-4ED4-B570-6DACA61136E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0cbcc92917c5de80f15c24d033566539ad696892"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3379a60f6bb4afcd9c456e340ac525ae649d3ce7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a9e88c2618d228d7a4e7e515cf30dc0d0d813f27"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ab86020070999e758ce2e60c4348f20bf7ddba56"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d7faa04a44a0c37ac3d222fa8e0bdcbfcee9c0c8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49191,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:56.183,2025-02-26T07:00:56.183,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: mxser: fix xmit_buf leak in activate when LSR == 0xff When LSR is 0xff in ->activate() (rather unlike), we return an error. Provided ->shutdown() is not called when ->activate() fails, nothing actually frees the buffer in this case. Fix this by properly freeing the buffer in a designated label. We jump there also from the ""!info->type"" if now too.",,,"[{""url"":""https://git.kernel.org/stable/c/125b7c929fc9b1e5eaa344bceb6367dfa6fd3f9d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2cd05c38a27bee7fb42aa4d43174d68ac55dac0f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/376922045009f8ea2d20a8fa3475e95b47c41690"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/685b6d16bf89595310b5d61394c9b97cc9505c7c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6c9041b2f90c0eace73106f22350e1d2c98f5edc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6dffc2035fbaada60ca8db59e0962e34f760370a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/996291d06851a26678a0fab488b6e1f0677c0576"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b125b08dbee3611f03f53b71471813ed4ccafcdd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cd3a4907ee334b40d7aa880c7ab310b154fd5cd4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49192,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:56.287,2025-02-26T07:00:56.287,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drivers: ethernet: cpsw: fix panic when interrupt coaleceing is set via ethtool cpsw_ethtool_begin directly returns the result of pm_runtime_get_sync when successful. pm_runtime_get_sync returns -error code on failure and 0 on successful resume but also 1 when the device is already active. So the common case for cpsw_ethtool_begin is to return 1. That leads to inconsistent calls to pm_runtime_put in the call-chain so that pm_runtime_put is called one too many times and as result leaving the cpsw dev behind suspended. The suspended cpsw dev leads to an access violation later on by different parts of the cpsw driver. Fix this by calling the return-friendly pm_runtime_resume_and_get function.",,,"[{""url"":""https://git.kernel.org/stable/c/2844e2434385819f674d1fb4130c308c50ba681e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/30ad11bff021a94aff6dab1ec9236fdfd884fbff"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/459080fab12b23c0526026e5cedbf3fabb5457cc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/585dc196a08fccdcd1b7fcf473cf566b34c4b840"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49193,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:56.383,2025-02-26T07:00:56.383,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ice: fix 'scheduling while atomic' on aux critical err interrupt There's a kernel BUG splat on processing aux critical error interrupts in ice_misc_intr(): [ 2100.917085] BUG: scheduling while atomic: swapper/15/0/0x00010000 ... [ 2101.060770] Call Trace: [ 2101.063229] <IRQ> [ 2101.065252] dump_stack+0x41/0x60 [ 2101.068587] __schedule_bug.cold.100+0x4c/0x58 [ 2101.073060] __schedule+0x6a4/0x830 [ 2101.076570] schedule+0x35/0xa0 [ 2101.079727] schedule_preempt_disabled+0xa/0x10 [ 2101.084284] __mutex_lock.isra.7+0x310/0x420 [ 2101.088580] ? ice_misc_intr+0x201/0x2e0 [ice] [ 2101.093078] ice_send_event_to_aux+0x25/0x70 [ice] [ 2101.097921] ice_misc_intr+0x220/0x2e0 [ice] [ 2101.102232] __handle_irq_event_percpu+0x40/0x180 [ 2101.106965] handle_irq_event_percpu+0x30/0x80 [ 2101.111434] handle_irq_event+0x36/0x53 [ 2101.115292] handle_edge_irq+0x82/0x190 [ 2101.119148] handle_irq+0x1c/0x30 [ 2101.122480] do_IRQ+0x49/0xd0 [ 2101.125465] common_interrupt+0xf/0xf [ 2101.129146] </IRQ> ... As Andrew correctly mentioned previously[0], the following call ladder happens: ice_misc_intr() <- hardirq ice_send_event_to_aux() device_lock() mutex_lock() might_sleep() might_resched() <- oops Add a new PF state bit which indicates that an aux critical error occurred and serve it in ice_service_task() in process context. The new ice_pf::oicr_err_reg is read-write in both hardirq and process contexts, but only 3 bits of non-critical data probably aren't worth explicit synchronizing (and they're even in the same byte [31:24]). [0] https://lore.kernel.org/all/YeSRUVmrdmlUXHDn@lunn.ch",,,"[{""url"":""https://git.kernel.org/stable/c/24d7ac8426306ae7ccea7f7dd612a7368fe7201d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/32d53c0aa3a7b727243473949bad2a830b908edc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/59e88a50afad7469c55804e46bf2924b9130281f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9b77c8cf69a41d1e3851370aeaa04a9ea83b865c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49194,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:56.483,2025-02-26T07:00:56.483,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: bcmgenet: Use stronger register read/writes to assure ordering GCC12 appears to be much smarter about its dependency tracking and is aware that the relaxed variants are just normal loads and stores and this is causing problems like: [ 210.074549] ------------[ cut here ]------------ [ 210.079223] NETDEV WATCHDOG: enabcm6e4ei0 (bcmgenet): transmit queue 1 timed out [ 210.086717] WARNING: CPU: 1 PID: 0 at net/sched/sch_generic.c:529 dev_watchdog+0x234/0x240 [ 210.095044] Modules linked in: genet(E) nft_fib_inet nft_fib_ipv4 nft_fib_ipv6 nft_fib nft_reject_inet nf_reject_ipv4 nf_reject_ipv6 nft_reject nft_ct nft_chain_nat] [ 210.146561] ACPI CPPC: PCC check channel failed for ss: 0. ret=-110 [ 210.146927] CPU: 1 PID: 0 Comm: swapper/1 Tainted: G E 5.17.0-rc7G12+ #58 [ 210.153226] CPPC Cpufreq:cppc_scale_freq_workfn: failed to read perf counters [ 210.161349] Hardware name: Raspberry Pi Foundation Raspberry Pi 4 Model B/Raspberry Pi 4 Model B, BIOS EDK2-DEV 02/08/2022 [ 210.161353] pstate: 80400005 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--) [ 210.161358] pc : dev_watchdog+0x234/0x240 [ 210.161364] lr : dev_watchdog+0x234/0x240 [ 210.161368] sp : ffff8000080a3a40 [ 210.161370] x29: ffff8000080a3a40 x28: ffffcd425af87000 x27: ffff8000080a3b20 [ 210.205150] x26: ffffcd425aa00000 x25: 0000000000000001 x24: ffffcd425af8ec08 [ 210.212321] x23: 0000000000000100 x22: ffffcd425af87000 x21: ffff55b142688000 [ 210.219491] x20: 0000000000000001 x19: ffff55b1426884c8 x18: ffffffffffffffff [ 210.226661] x17: 64656d6974203120 x16: 0000000000000001 x15: 6d736e617274203a [ 210.233831] x14: 2974656e65676d63 x13: ffffcd4259c300d8 x12: ffffcd425b07d5f0 [ 210.241001] x11: 00000000ffffffff x10: ffffcd425b07d5f0 x9 : ffffcd4258bdad9c [ 210.248171] x8 : 00000000ffffdfff x7 : 000000000000003f x6 : 0000000000000000 [ 210.255341] x5 : 0000000000000000 x4 : 0000000000000000 x3 : 0000000000001000 [ 210.262511] x2 : 0000000000001000 x1 : 0000000000000005 x0 : 0000000000000044 [ 210.269682] Call trace: [ 210.272133] dev_watchdog+0x234/0x240 [ 210.275811] call_timer_fn+0x3c/0x15c [ 210.279489] __run_timers.part.0+0x288/0x310 [ 210.283777] run_timer_softirq+0x48/0x80 [ 210.287716] __do_softirq+0x128/0x360 [ 210.291392] __irq_exit_rcu+0x138/0x140 [ 210.295243] irq_exit_rcu+0x1c/0x30 [ 210.298745] el1_interrupt+0x38/0x54 [ 210.302334] el1h_64_irq_handler+0x18/0x24 [ 210.306445] el1h_64_irq+0x7c/0x80 [ 210.309857] arch_cpu_idle+0x18/0x2c [ 210.313445] default_idle_call+0x4c/0x140 [ 210.317470] cpuidle_idle_call+0x14c/0x1a0 [ 210.321584] do_idle+0xb0/0x100 [ 210.324737] cpu_startup_entry+0x30/0x8c [ 210.328675] secondary_start_kernel+0xe4/0x110 [ 210.333138] __secondary_switched+0x94/0x98 The assumption when these were relaxed seems to be that device memory would be mapped non reordering, and that other constructs (spinlocks/etc) would provide the barriers to assure that packet data and in memory rings/queues were ordered with respect to device register reads/writes. This itself seems a bit sketchy, but the real problem with GCC12 is that it is moving the actual reads/writes around at will as though they were independent operations when in truth they are not, but the compiler can't know that. When looking at the assembly dumps for many of these routines its possible to see very clean, but not strictly in program order operations occurring as the compiler would be free to do if these weren't actually register reads/write operations. Its possible to suppress the timeout with a liberal bit of dma_mb()'s sprinkled around but the device still seems unable to reliably send/receive data. A better plan is to use the safer readl/writel everywhere. Since this partially reverts an older commit, which notes the use of the relaxed variants for performance reasons. I would suggest that any performance problems ---truncated---",,,"[{""url"":""https://git.kernel.org/stable/c/06d836801cd82ded282aaf9e888ff9e7e4a88b91"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1d717816189fd68f9e089cf89ed1f7327d2c2e71"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8d3ea3d402db94b61075617e71b67459a714a502"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b26091a02093104259ca64aeca73601e56160d62"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f49769b462f282477ca801cf648f875b1c5b59db"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49195,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:56.580,2025-02-26T07:00:56.580,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: dsa: fix panic on shutdown if multi-chip tree failed to probe DSA probing is atypical because a tree of devices must probe all at once, so out of N switches which call dsa_tree_setup_routing_table() during probe, for (N - 1) of them, ""complete"" will return false and they will exit probing early. The Nth switch will set up the whole tree on their behalf. The implication is that for (N - 1) switches, the driver binds to the device successfully, without doing anything. When the driver is bound, the ->shutdown() method may run. But if the Nth switch has failed to initialize the tree, there is nothing to do for the (N - 1) driver instances, since the slave devices have not been created, etc. Moreover, dsa_switch_shutdown() expects that the calling @ds has been in fact initialized, so it jumps at dereferencing the various data structures, which is incorrect. Avoid the ensuing NULL pointer dereferences by simply checking whether the Nth switch has previously set ""ds->setup = true"" for the switch which is currently shutting down. The entire setup is serialized under dsa2_mutex which we already hold.",,,"[{""url"":""https://git.kernel.org/stable/c/8fd36358ce82382519b50b05f437493e1e00c4a9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/95df5cd5a446df6738d2d45872e08594819080e4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b6e668ff43ebd87ccc8a19e5481345c428672295"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b864d5350c18bea9369d0bdd9e7eb6f6172cc283"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49196,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:56.677,2025-03-25T15:07:33.423,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: powerpc/pseries: Fix use after free in remove_phb_dynamic() In remove_phb_dynamic() we use &phb->io_resource, after we've called device_unregister(&host_bridge->dev). But the unregister may have freed phb, because pcibios_free_controller_deferred() is the release function for the host_bridge. If there are no outstanding references when we call device_unregister() then phb will be freed out from under us. This has gone mainly unnoticed, but with slub_debug and page_poison enabled it can lead to a crash: PID: 7574 TASK: c0000000d492cb80 CPU: 13 COMMAND: ""drmgr"" #0 [c0000000e4f075a0] crash_kexec at c00000000027d7dc #1 [c0000000e4f075d0] oops_end at c000000000029608 #2 [c0000000e4f07650] __bad_page_fault at c0000000000904b4 #3 [c0000000e4f076c0] do_bad_slb_fault at c00000000009a5a8 #4 [c0000000e4f076f0] data_access_slb_common_virt at c000000000008b30 Data SLB Access [380] exception frame: R0: c000000000167250 R1: c0000000e4f07a00 R2: c000000002a46100 R3: c000000002b39ce8 R4: 00000000000000c0 R5: 00000000000000a9 R6: 3894674d000000c0 R7: 0000000000000000 R8: 00000000000000ff R9: 0000000000000100 R10: 6b6b6b6b6b6b6b6b R11: 0000000000008000 R12: c00000000023da80 R13: c0000009ffd38b00 R14: 0000000000000000 R15: 000000011c87f0f0 R16: 0000000000000006 R17: 0000000000000003 R18: 0000000000000002 R19: 0000000000000004 R20: 0000000000000005 R21: 000000011c87ede8 R22: 000000011c87c5a8 R23: 000000011c87d3a0 R24: 0000000000000000 R25: 0000000000000001 R26: c0000000e4f07cc8 R27: c00000004d1cc400 R28: c0080000031d00e8 R29: c00000004d23d800 R30: c00000004d1d2400 R31: c00000004d1d2540 NIP: c000000000167258 MSR: 8000000000009033 OR3: c000000000e9f474 CTR: 0000000000000000 LR: c000000000167250 XER: 0000000020040003 CCR: 0000000024088420 MQ: 0000000000000000 DAR: 6b6b6b6b6b6b6ba3 DSISR: c0000000e4f07920 Syscall Result: fffffffffffffff2 [NIP : release_resource+56] [LR : release_resource+48] #5 [c0000000e4f07a00] release_resource at c000000000167258 (unreliable) #6 [c0000000e4f07a30] remove_phb_dynamic at c000000000105648 #7 [c0000000e4f07ab0] dlpar_remove_slot at c0080000031a09e8 [rpadlpar_io] #8 [c0000000e4f07b50] remove_slot_store at c0080000031a0b9c [rpadlpar_io] #9 [c0000000e4f07be0] kobj_attr_store at c000000000817d8c #10 [c0000000e4f07c00] sysfs_kf_write at c00000000063e504 #11 [c0000000e4f07c20] kernfs_fop_write_iter at c00000000063d868 #12 [c0000000e4f07c70] new_sync_write at c00000000054339c #13 [c0000000e4f07d10] vfs_write at c000000000546624 #14 [c0000000e4f07d60] ksys_write at c0000000005469f4 #15 [c0000000e4f07db0] system_call_exception at c000000000030840 #16 [c0000000e4f07e10] system_call_vectored_common at c00000000000c168 To avoid it, we can take a reference to the host_bridge->dev until we're done using phb. Then when we drop the reference the phb will be freed.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.16.39"",""versionEndExcluding"":""3.17"",""matchCriteriaId"":""BA789D31-0F96-422B-81E8-27E5D87B93D0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.7.8"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""9CC2B4A2-19D0-4A85-94C5-B8A6D1F0DA6A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/33d39efb61a84e055ca2386157d39ebbdf6b7d31"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/403f9e0bc5535a0a5184d1352fa3a70e6ffacb6f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/895ca4ae1f72e0a0160ab162723e59c9f265ec93"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fe2640bd7a62f1f7c3f55fbda31084085075bc30"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49197,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:56.770,2025-02-26T07:00:56.770,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: af_netlink: Fix shift out of bounds in group mask calculation When a netlink message is received, netlink_recvmsg() fills in the address of the sender. One of the fields is the 32-bit bitfield nl_groups, which carries the multicast group on which the message was received. The least significant bit corresponds to group 1, and therefore the highest group that the field can represent is 32. Above that, the UB sanitizer flags the out-of-bounds shift attempts. Which bits end up being set in such case is implementation defined, but it's either going to be a wrong non-zero value, or zero, which is at least not misleading. Make the latter choice deterministic by always setting to 0 for higher-numbered multicast groups. To get information about membership in groups >= 32, userspace is expected to use nl_pktinfo control messages[0], which are enabled by NETLINK_PKTINFO socket option. [0] https://lwn.net/Articles/147608/ The way to trigger this issue is e.g. through monitoring the BRVLAN group: # bridge monitor vlan & # ip link add name br type bridge Which produces the following citation: UBSAN: shift-out-of-bounds in net/netlink/af_netlink.c:162:19 shift exponent 32 is too large for 32-bit type 'int'",,,"[{""url"":""https://git.kernel.org/stable/c/0caf6d9922192dd1afa8dc2131abfb4df1443b9f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/41249fff507387c3323b198d0052faed08b14de4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7409ff6393a67ff9838d0ae1bd102fb5f020d07a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ac5883a8890a11c00b32a19949a25d4afeaa2f5a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b0898362188e05b2202656058cc32d98fabf3bac"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e1c5d46f05aa23d740daae5cd3a6472145afac42"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e23e1e981247feb3c7d0236fe58aceb685f234ae"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e8aaf3134bc5e943048eefe9f2ddaabf41d92b1a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f75f4abeec4c04b600a15b50c89a481f1e7435ee"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49198,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:56.880,2025-02-26T07:00:56.880,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: mptcp: Fix crash due to tcp_tsorted_anchor was initialized before release skb Got crash when doing pressure test of mptcp: =========================================================================== dst_release: dst:ffffa06ce6e5c058 refcnt:-1 kernel tried to execute NX-protected page - exploit attempt? (uid: 0) BUG: unable to handle kernel paging request at ffffa06ce6e5c058 PGD 190a01067 P4D 190a01067 PUD 43fffb067 PMD 22e403063 PTE 8000000226e5c063 Oops: 0011 [#1] SMP PTI CPU: 7 PID: 7823 Comm: kworker/7:0 Kdump: loaded Tainted: G E Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.2.1 04/01/2014 Call Trace: ? skb_release_head_state+0x68/0x100 ? skb_release_all+0xe/0x30 ? kfree_skb+0x32/0xa0 ? mptcp_sendmsg_frag+0x57e/0x750 ? __mptcp_retrans+0x21b/0x3c0 ? __switch_to_asm+0x35/0x70 ? mptcp_worker+0x25e/0x320 ? process_one_work+0x1a7/0x360 ? worker_thread+0x30/0x390 ? create_worker+0x1a0/0x1a0 ? kthread+0x112/0x130 ? kthread_flush_work_fn+0x10/0x10 ? ret_from_fork+0x35/0x40 =========================================================================== In __mptcp_alloc_tx_skb skb was allocated and skb->tcp_tsorted_anchor will be initialized, in under memory pressure situation sk_wmem_schedule will return false and then kfree_skb. In this case skb->_skb_refdst is not null because_skb_refdst and tcp_tsorted_anchor are stored in the same mem, and kfree_skb will try to release dst and cause crash.",,,"[{""url"":""https://git.kernel.org/stable/c/3ef3905aa3b5b3e222ee6eb0210bfd999417a8cc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4d54181eba4b077fb74033a7186898ad4000a7a5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/752add6f5ce5305e55d8bda4ac8d69be3a09f14d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/af61a8f7603926c26158153d0a0755764d82657c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49199,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:56.970,2025-02-26T07:00:56.970,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: RDMA/nldev: Prevent underflow in nldev_stat_set_counter_dynamic_doit() This code checks ""index"" for an upper bound but it does not check for negatives. Change the type to unsigned to prevent underflows.",,,"[{""url"":""https://git.kernel.org/stable/c/2a495ef04d5f42e6f00eb2bec1ee9075e3d5a771"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/87e0eacb176f9500c2063d140c0a1d7fa51ab8a5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f6dd8669b8299a3a536cd92a7069152a7704da1d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49200,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:57.067,2025-02-26T07:00:57.067,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: Bluetooth: btmtksdio: Fix kernel oops in btmtksdio_interrupt Fix the following kernel oops in btmtksdio_interrrupt [ 14.339134] btmtksdio_interrupt+0x28/0x54 [ 14.339139] process_sdio_pending_irqs+0x68/0x1a0 [ 14.339144] sdio_irq_work+0x40/0x70 [ 14.339154] process_one_work+0x184/0x39c [ 14.339160] worker_thread+0x228/0x3e8 [ 14.339168] kthread+0x148/0x3ac [ 14.339176] ret_from_fork+0x10/0x30 That happened because hdev->power_on is already called before sdio_set_drvdata which btmtksdio_interrupt handler relies on is not properly set up. The details are shown as the below: hci_register_dev would run queue_work(hdev->req_workqueue, &hdev->power_on) as WQ_HIGHPRI workqueue_struct to complete the power-on sequeunce and thus hci_power_on may run before sdio_set_drvdata is done in btmtksdio_probe. The hci_dev_do_open in hci_power_on would initialize the device and enable the interrupt and thus it is possible that btmtksdio_interrupt is being called right before sdio_set_drvdata is filled out. When btmtksdio_interrupt is being called and sdio_set_drvdata is not filled , the kernel oops is going to happen because btmtksdio_interrupt access an uninitialized pointer.",,,"[{""url"":""https://git.kernel.org/stable/c/4d3d1f2c35a19988d3c5f0ee86038b525e830840"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6d7be5afbb41c918d2f12f857f8c7efa50500be2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/70a6cf749d9ff9f463490248322e5343199bc267"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/770a97d3f34b801de1b04737b43e02c55118c41a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/874eca93966a786eace87fa6dfb206c2dd9519b1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b062a0b9c1dc1ff63094337dccfe1568d5b62023"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49201,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:57.160,2025-03-18T20:12:27.870,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ibmvnic: fix race between xmit and reset There is a race between reset and the transmit paths that can lead to ibmvnic_xmit() accessing an scrq after it has been freed in the reset path. It can result in a crash like: Kernel attempted to read user page (0) - exploit attempt? (uid: 0) BUG: Kernel NULL pointer dereference on read at 0x00000000 Faulting instruction address: 0xc0080000016189f8 Oops: Kernel access of bad area, sig: 11 [#1] ... NIP [c0080000016189f8] ibmvnic_xmit+0x60/0xb60 [ibmvnic] LR [c000000000c0046c] dev_hard_start_xmit+0x11c/0x280 Call Trace: [c008000001618f08] ibmvnic_xmit+0x570/0xb60 [ibmvnic] (unreliable) [c000000000c0046c] dev_hard_start_xmit+0x11c/0x280 [c000000000c9cfcc] sch_direct_xmit+0xec/0x330 [c000000000bfe640] __dev_xmit_skb+0x3a0/0x9d0 [c000000000c00ad4] __dev_queue_xmit+0x394/0x730 [c008000002db813c] __bond_start_xmit+0x254/0x450 [bonding] [c008000002db8378] bond_start_xmit+0x40/0xc0 [bonding] [c000000000c0046c] dev_hard_start_xmit+0x11c/0x280 [c000000000c00ca4] __dev_queue_xmit+0x564/0x730 [c000000000cf97e0] neigh_hh_output+0xd0/0x180 [c000000000cfa69c] ip_finish_output2+0x31c/0x5c0 [c000000000cfd244] __ip_queue_xmit+0x194/0x4f0 [c000000000d2a3c4] __tcp_transmit_skb+0x434/0x9b0 [c000000000d2d1e0] __tcp_retransmit_skb+0x1d0/0x6a0 [c000000000d2d984] tcp_retransmit_skb+0x34/0x130 [c000000000d310e8] tcp_retransmit_timer+0x388/0x6d0 [c000000000d315ec] tcp_write_timer_handler+0x1bc/0x330 [c000000000d317bc] tcp_write_timer+0x5c/0x200 [c000000000243270] call_timer_fn+0x50/0x1c0 [c000000000243704] __run_timers.part.0+0x324/0x460 [c000000000243894] run_timer_softirq+0x54/0xa0 [c000000000ea713c] __do_softirq+0x15c/0x3e0 [c000000000166258] __irq_exit_rcu+0x158/0x190 [c000000000166420] irq_exit+0x20/0x40 [c00000000002853c] timer_interrupt+0x14c/0x2b0 [c000000000009a00] decrementer_common_virt+0x210/0x220 --- interrupt: 900 at plpar_hcall_norets_notrace+0x18/0x2c The immediate cause of the crash is the access of tx_scrq in the following snippet during a reset, where the tx_scrq can be either NULL or an address that will soon be invalid: ibmvnic_xmit() { ... tx_scrq = adapter->tx_scrq[queue_num]; txq = netdev_get_tx_queue(netdev, queue_num); ind_bufp = &tx_scrq->ind_buf; if (test_bit(0, &adapter->resetting)) { ... } But beyond that, the call to ibmvnic_xmit() itself is not safe during a reset and the reset path attempts to avoid this by stopping the queue in ibmvnic_cleanup(). However just after the queue was stopped, an in-flight ibmvnic_complete_tx() could have restarted the queue even as the reset is progressing. Since the queue was restarted we could get a call to ibmvnic_xmit() which can then access the bad tx_scrq (or other fields). We cannot however simply have ibmvnic_complete_tx() check the ->resetting bit and skip starting the queue. This can race at the ""back-end"" of a good reset which just restarted the queue but has not cleared the ->resetting bit yet. If we skip restarting the queue due to ->resetting being true, the queue would remain stopped indefinitely potentially leading to transmit timeouts. IOW ->resetting is too broad for this purpose. Instead use a new flag that indicates whether or not the queues are active. Only the open/ reset paths control when the queues are active. ibmvnic_complete_tx() and others wake up the queue only if the queue is marked active. So we will have: A. reset/open thread in ibmvnic_cleanup() and __ibmvnic_open() ->resetting = true ->tx_queues_active = false disable tx queues ... ->tx_queues_active = true start tx queues B. Tx interrupt in ibmvnic_complete_tx(): if (->tx_queues_active) netif_wake_subqueue(); To ensure that ->tx_queues_active and state of the queues are consistent, we need a lock which: - must also be taken in the interrupt path (ibmvnic_complete_tx()) - shared across the multiple ---truncated---","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""},{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""6B796901-86B9-450D-BE47-916285FBDF61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1bd58abf595b6cf1ba6dd47ec887c4c009155fc9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4219196d1f662cb10a462eb9e076633a3fc31a15"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/475f9cce98b63bc145b4efa66fa51175d4cb345f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8507c6ade73cdbbbda5c3d31d67f52f2e1cf03fe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49202,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:57.260,2025-02-26T07:00:57.260,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: Bluetooth: hci_uart: add missing NULL check in h5_enqueue Syzbot hit general protection fault in __pm_runtime_resume(). The problem was in missing NULL check. hu->serdev can be NULL and we should not blindly pass &serdev->dev somewhere, since it will cause GPF.",,,"[{""url"":""https://git.kernel.org/stable/c/32cb08e958696908a9aad5e49a78d74f7e32fffb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7235485433d290367d60ae22fcdfc565e61d42ab"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8a3896c30f542439d36303183dc96f65df8cc528"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e6b6c904c0f88588b6a3ace20e4c0d61eab124f8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49203,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:57.357,2025-03-18T20:12:03.890,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/amd/display: Fix double free during GPU reset on DC streams [Why] The issue only occurs during the GPU reset code path. We first backup the current state prior to commiting 0 streams internally from DM to DC. This state backup contains valid link encoder assignments. DC will clear the link encoder assignments as part of current state (but not the backup, since it was a copied before the commit) and free the extra stream reference it held. DC requires that the link encoder assignments remain cleared/invalid prior to commiting. Since the backup still has valid assignments we call the interface post reset to clear them. This routine also releases the extra reference that the link encoder interface held - resulting in a double free (and eventually a NULL pointer dereference). [How] We'll have to do a full DC commit anyway after GPU reset because the stream count previously went to 0. We don't need to retain the assignment that we had backed up, so just copy off of the now clean current state assignment after the reset has occcurred with the new link_enc_cfg_copy() interface.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-415""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/32685b32d825ca08c5dec826477332df886c4743"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bbfcdd6289ba6f00f0cd7d496946dce9f6c600ac"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49204,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:57.480,2025-02-26T07:00:57.480,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: bpf, sockmap: Fix more uncharged while msg has more_data In tcp_bpf_send_verdict(), if msg has more data after tcp_bpf_sendmsg_redir(): tcp_bpf_send_verdict() tosend = msg->sg.size //msg->sg.size = 22220 case __SK_REDIRECT: sk_msg_return() //uncharged msg->sg.size(22220) sk->sk_forward_alloc tcp_bpf_sendmsg_redir() //after tcp_bpf_sendmsg_redir, msg->sg.size=11000 goto more_data; tosend = msg->sg.size //msg->sg.size = 11000 case __SK_REDIRECT: sk_msg_return() //uncharged msg->sg.size(11000) to sk->sk_forward_alloc The msg->sg.size(11000) has been uncharged twice, to fix we can charge the remaining msg->sg.size before goto more data. This issue can cause the following info: WARNING: CPU: 0 PID: 9860 at net/core/stream.c:208 sk_stream_kill_queues+0xd4/0x1a0 Call Trace: <TASK> inet_csk_destroy_sock+0x55/0x110 __tcp_close+0x279/0x470 tcp_close+0x1f/0x60 inet_release+0x3f/0x80 __sock_release+0x3d/0xb0 sock_close+0x11/0x20 __fput+0x92/0x250 task_work_run+0x6a/0xa0 do_exit+0x33b/0xb60 do_group_exit+0x2f/0xa0 get_signal+0xb6/0x950 arch_do_signal_or_restart+0xac/0x2a0 ? vfs_write+0x237/0x290 exit_to_user_mode_prepare+0xa9/0x200 syscall_exit_to_user_mode+0x12/0x30 do_syscall_64+0x46/0x80 entry_SYSCALL_64_after_hwframe+0x44/0xae </TASK> WARNING: CPU: 0 PID: 2136 at net/ipv4/af_inet.c:155 inet_sock_destruct+0x13c/0x260 Call Trace: <TASK> __sk_destruct+0x24/0x1f0 sk_psock_destroy+0x19b/0x1c0 process_one_work+0x1b3/0x3c0 worker_thread+0x30/0x350 ? process_one_work+0x3c0/0x3c0 kthread+0xe6/0x110 ? kthread_complete_and_exit+0x20/0x20 ret_from_fork+0x22/0x30 </TASK>",,,"[{""url"":""https://git.kernel.org/stable/c/168ff181f5b6e7fce684c98a30d35da1dbf8f82a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/244ce90c8d0bd10ebf957da02c6f3fcd5d920bdf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7b812a369e6416ab06d83cdd39d8e3f752781dd0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/84472b436e760ba439e1969a9e3c5ae7c86de39d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/87d532d41ef937e16f61b3d2094f3a2ac49be365"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/abb4caa477a5450817d2aa1198edce66450aecf8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49205,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:57.620,2025-02-26T07:00:57.620,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: bpf, sockmap: Fix double uncharge the mem of sk_msg If tcp_bpf_sendmsg is running during a tear down operation, psock may be freed. tcp_bpf_sendmsg() tcp_bpf_send_verdict() sk_msg_return() tcp_bpf_sendmsg_redir() unlikely(!psock)) sk_msg_free() The mem of msg has been uncharged in tcp_bpf_send_verdict() by sk_msg_return(), and would be uncharged by sk_msg_free() again. When psock is null, we can simply returning an error code, this would then trigger the sk_msg_free_nocharge in the error path of __SK_REDIRECT and would have the side effect of throwing an error up to user space. This would be a slight change in behavior from user side but would look the same as an error if the redirect on the socket threw an error. This issue can cause the following info: WARNING: CPU: 0 PID: 2136 at net/ipv4/af_inet.c:155 inet_sock_destruct+0x13c/0x260 Call Trace: <TASK> __sk_destruct+0x24/0x1f0 sk_psock_destroy+0x19b/0x1c0 process_one_work+0x1b3/0x3c0 worker_thread+0x30/0x350 ? process_one_work+0x3c0/0x3c0 kthread+0xe6/0x110 ? kthread_complete_and_exit+0x20/0x20 ret_from_fork+0x22/0x30 </TASK>",,,"[{""url"":""https://git.kernel.org/stable/c/223f3c51ab163852dd4819d357dcf33039929434"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2486ab434b2c2a14e9237296db00b1e1b7ae3273"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/94c6ac22abcdede72bfaa0f4c22fb370891f4002"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ac3ecb7760c750c8e4fc09c719241d8e6e88028c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cb6f141ae705af0101e819065a79e6d029f6e393"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cd84ea3920aef936c559b63099ef0013ce6b2325"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49206,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:57.723,2025-03-18T20:11:49.133,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: RDMA/mlx5: Fix memory leak in error flow for subscribe event routine In case the second xa_insert() fails, the obj_event is not released. Fix the error unwind flow to free that memory to avoid a memory leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.3"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""464BC777-8489-4690-B4AE-BD7E95E9A4C6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""91D3BFD0-D3F3-4018-957C-96CCBF357D79""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0174a89663a5ef83617da15bf24c0af2f62b6c7f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/087f9c3f2309ed183f7e4b85ae57121d8663224d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/414b4e8738484379f18d6c4e780787c80dbf8a2c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8dd392e352d3269938fea32061a74655a613f929"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c98d903ff9e79c210beddea4e6bc15ac38e25aa5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d66498507801fd9a20307a15a0814a0a016c3cde"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49207,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:57.817,2025-03-18T20:11:31.573,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: bpf, sockmap: Fix memleak in sk_psock_queue_msg If tcp_bpf_sendmsg is running during a tear down operation we may enqueue data on the ingress msg queue while tear down is trying to free it. sk1 (redirect sk2) sk2 ------------------- --------------- tcp_bpf_sendmsg() tcp_bpf_send_verdict() tcp_bpf_sendmsg_redir() bpf_tcp_ingress() sock_map_close() lock_sock() lock_sock() ... blocking sk_psock_stop sk_psock_clear_state(psock, SK_PSOCK_TX_ENABLED); release_sock(sk); lock_sock() sk_mem_charge() get_page() sk_psock_queue_msg() sk_psock_test_state(psock, SK_PSOCK_TX_ENABLED); drop_sk_msg() release_sock() While drop_sk_msg(), the msg has charged memory form sk by sk_mem_charge and has sg pages need to put. To fix we use sk_msg_free() and then kfee() msg. This issue can cause the following info: WARNING: CPU: 0 PID: 9202 at net/core/stream.c:205 sk_stream_kill_queues+0xc8/0xe0 Call Trace: <IRQ> inet_csk_destroy_sock+0x55/0x110 tcp_rcv_state_process+0xe5f/0xe90 ? sk_filter_trim_cap+0x10d/0x230 ? tcp_v4_do_rcv+0x161/0x250 tcp_v4_do_rcv+0x161/0x250 tcp_v4_rcv+0xc3a/0xce0 ip_protocol_deliver_rcu+0x3d/0x230 ip_local_deliver_finish+0x54/0x60 ip_local_deliver+0xfd/0x110 ? ip_protocol_deliver_rcu+0x230/0x230 ip_rcv+0xd6/0x100 ? ip_local_deliver+0x110/0x110 __netif_receive_skb_one_core+0x85/0xa0 process_backlog+0xa4/0x160 __napi_poll+0x29/0x1b0 net_rx_action+0x287/0x300 __do_softirq+0xff/0x2fc do_softirq+0x79/0x90 </IRQ> WARNING: CPU: 0 PID: 531 at net/ipv4/af_inet.c:154 inet_sock_destruct+0x175/0x1b0 Call Trace: <TASK> __sk_destruct+0x24/0x1f0 sk_psock_destroy+0x19b/0x1c0 process_one_work+0x1b3/0x3c0 ? process_one_work+0x3c0/0x3c0 worker_thread+0x30/0x350 ? process_one_work+0x3c0/0x3c0 kthread+0xe6/0x110 ? kthread_complete_and_exit+0x20/0x20 ret_from_fork+0x22/0x30 </TASK>","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""FB1C7FD1-C89E-4955-B265-456A9F757302""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/03948ed6553960db62f1c33bec29e64d7c191a3f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4dd2e947d3be13a4de3b3028859b9a6497266bcf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/938d3480b92fa5e454b7734294f12a7b75126f09"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ef9785f429794567792561a584901faa9291d3ee"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49208,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:57.910,2025-03-18T20:11:17.900,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: RDMA/irdma: Prevent some integer underflows My static checker complains that: drivers/infiniband/hw/irdma/ctrl.c:3605 irdma_sc_ceq_init() warn: can subtract underflow 'info->dev->hmc_fpm_misc.max_ceqs'? It appears that ""info->dev->hmc_fpm_misc.max_ceqs"" comes from the firmware in irdma_sc_parse_fpm_query_buf() so, yes, there is a chance that it could be zero. Even if we trust the firmware, it's easy enough to change the condition just as a hardenning measure.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-191""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""FB1C7FD1-C89E-4955-B265-456A9F757302""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/6f6dbb819dfc1a35bcb8b709b5c83a3ea8beff75"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7340c3675d7ac946f4019b84cd7c64ed542dfe4c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d52dab6e03550f9c97121b0c11c0a3ed78ee76a4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f21056f15bbeacab7b4b87af232f5599d1f2bff1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49209,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:58.007,2025-03-18T20:10:46.370,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: bpf, sockmap: Fix memleak in tcp_bpf_sendmsg while sk msg is full If tcp_bpf_sendmsg() is running while sk msg is full. When sk_msg_alloc() returns -ENOMEM error, tcp_bpf_sendmsg() goes to wait_for_memory. If partial memory has been alloced by sk_msg_alloc(), that is, msg_tx->sg.size is greater than osize after sk_msg_alloc(), memleak occurs. To fix we use sk_msg_trim() to release the allocated memory, then goto wait for memory. Other call paths of sk_msg_alloc() have the similar issue, such as tls_sw_sendmsg(), so handle sk_msg_trim logic inside sk_msg_alloc(), as Cong Wang suggested. This issue can cause the following info: WARNING: CPU: 3 PID: 7950 at net/core/stream.c:208 sk_stream_kill_queues+0xd4/0x1a0 Call Trace: <TASK> inet_csk_destroy_sock+0x55/0x110 __tcp_close+0x279/0x470 tcp_close+0x1f/0x60 inet_release+0x3f/0x80 __sock_release+0x3d/0xb0 sock_close+0x11/0x20 __fput+0x92/0x250 task_work_run+0x6a/0xa0 do_exit+0x33b/0xb60 do_group_exit+0x2f/0xa0 get_signal+0xb6/0x950 arch_do_signal_or_restart+0xac/0x2a0 exit_to_user_mode_prepare+0xa9/0x200 syscall_exit_to_user_mode+0x12/0x30 do_syscall_64+0x46/0x80 entry_SYSCALL_64_after_hwframe+0x44/0xae </TASK> WARNING: CPU: 3 PID: 2094 at net/ipv4/af_inet.c:155 inet_sock_destruct+0x13c/0x260 Call Trace: <TASK> __sk_destruct+0x24/0x1f0 sk_psock_destroy+0x19b/0x1c0 process_one_work+0x1b3/0x3c0 kthread+0xe6/0x110 ret_from_fork+0x22/0x30 </TASK>","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""8CB6E8F5-C2B1-46F3-A807-0F6104AC340F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""91D3BFD0-D3F3-4018-957C-96CCBF357D79""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/6d03722c34d9603df325f67c6d30dc1b7b3c6067"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9c34e38c4a870eb30b13f42f5b44f42e9d19ccb8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bec34a91eba3483e1830c02bdd36f8f968642047"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d0b85dfc6f01d26808e2576c6537c131b590e270"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/de3a8d8fab0710186f7864ec812836d8d70da3c9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f677328f05f52d535cbdc15cb04476db49477eb4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49210,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:58.107,2025-03-18T20:10:37.433,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: MIPS: pgalloc: fix memory leak caused by pgd_free() pgd page is freed by generic implementation pgd_free() since commit f9cb654cb550 (""asm-generic: pgalloc: provide generic pgd_free()""), however, there are scenarios that the system uses more than one page as the pgd table, in such cases the generic implementation pgd_free() won't be applicable anymore. For example, when PAGE_SIZE_4KB is enabled and MIPS_VA_BITS_48 is not enabled in a 64bit system, the macro ""PGD_ORDER"" will be set as ""1"", which will cause allocating two pages as the pgd table. Well, at the same time, the generic implementation pgd_free() just free one pgd page, which will result in the memory leak. The memory leak can be easily detected by executing shell command: ""while true; do ls > /dev/null; grep MemFree /proc/meminfo; done""","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.9"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""2F97CB26-001B-4811-8A9D-40FE3DB060DB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1bf0d78c8cc3cf615a6e7bf33ada70b73592f0a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2bc5bab9a763d520937e4f3fe8df51c6a1eceb97"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5a8501d34b261906e4c76ec9da679f2cb4d309ed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d29cda15cab086d82d692de016f7249545d4b6b4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fa3d44424579972cc7c4fac3d9cf227798ebdfa0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49211,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:58.200,2025-03-18T20:10:12.477,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mips: cdmm: Fix refcount leak in mips_cdmm_phys_base The of_find_compatible_node() function returns a node pointer with refcount incremented, We should use of_node_put() on it when done Add the missing of_node_put() to release the refcount.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.9"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""2F97CB26-001B-4811-8A9D-40FE3DB060DB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/4528668ca331f7ce5999b7746657b46db5b3b785"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4680c2ac9aabda82acd23ebbd1f900fb6a889cd3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/69155dc2e04777aa94207a73a8b10f12b8428a68"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/721ab4be20d4448dd04c2cc8ed99cd4f3e45f765"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ef1728e3cb9e43f38ed10cde705a7ba2b4ad2d35"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49212,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:58.293,2025-03-18T19:31:39.623,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mtd: rawnand: atmel: fix refcount issue in atmel_nand_controller_init The reference counting issue happens in several error handling paths on a refcounted object ""nc->dmac"". In these paths, the function simply returns the error code, forgetting to balance the reference count of ""nc->dmac"", increased earlier by dma_request_channel(), which may cause refcount leaks. Fix it by decrementing the refcount of specific object in those error paths.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.12"",""versionEndExcluding"":""4.14.276"",""matchCriteriaId"":""76EDAF8B-A61C-4220-A866-7A0A933212D4""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.238"",""matchCriteriaId"":""FA28527A-11D3-41D2-9C4C-ECAC0D6A4A2D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""8CB6E8F5-C2B1-46F3-A807-0F6104AC340F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""91D3BFD0-D3F3-4018-957C-96CCBF357D79""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0856bf27057561f42b37df111603cf5a0d040294"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8baea2b96fa90af8d0f937caf4cf2105ee094d93"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9843c9c98f26c6ad843260b19bfdaa2598f2ae1e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9b08d211db4c447eb1a07df65e45e0aa772e0fa6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a3587259ae553e41d1ce8c7435351a5d6b299a11"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f1694169f3674cdf7553aed06864254635679878"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fe0e2ce5c87e9c0b9485ff566362030aa55972cf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fecbd4a317c95d73c849648c406bcf1b6a0ec1cf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49213,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:58.397,2025-03-18T19:32:04.063,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ath10k: Fix error handling in ath10k_setup_msa_resources The device_node pointer is returned by of_parse_phandle() with refcount incremented. We should use of_node_put() on it when done. This function only calls of_node_put() in the regular path. And it will cause refcount leak in error path.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.8"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""552AD555-63DB-4D57-BBAA-86EA26658508""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/315772133a4b960859e4f5efe0e738e347188cdc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/32939187f254171a5666badc058bc3787fe454af"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4ed37d611ea5d222c3ecb3549e4c2d34b8f3c335"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/74b1d41e1b6410eed5c76d00eedb262036e9eff5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9747a78d5f758a5284751a10aee13c30d02bd5f1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49214,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:58.490,2025-02-26T07:00:58.490,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: powerpc/64s: Don't use DSISR for SLB faults Since commit 46ddcb3950a2 (""powerpc/mm: Show if a bad page fault on data is read or write."") we use page_fault_is_write(regs->dsisr) in __bad_page_fault() to determine if the fault is for a read or write, and change the message printed accordingly. But SLB faults, aka Data Segment Interrupts, don't set DSISR (Data Storage Interrupt Status Register) to a useful value. All ISA versions from v2.03 through v3.1 specify that the Data Segment Interrupt sets DSISR ""to an undefined value"". As far as I can see there's no mention of SLB faults setting DSISR in any BookIV content either. This manifests as accesses that should be a read being incorrectly reported as writes, for example, using the xmon ""dump"" command: 0:mon> d 0x5deadbeef0000000 5deadbeef0000000 [359526.415354][ C6] BUG: Unable to handle kernel data access on write at 0x5deadbeef0000000 [359526.415611][ C6] Faulting instruction address: 0xc00000000010a300 cpu 0x6: Vector: 380 (Data SLB Access) at [c00000000ffbf400] pc: c00000000010a300: mread+0x90/0x190 If we disassemble the PC, we see a load instruction: 0:mon> di c00000000010a300 c00000000010a300 89490000 lbz r10,0(r9) We can also see in exceptions-64s.S that the data_access_slb block doesn't set IDSISR=1, which means it doesn't load DSISR into pt_regs. So the value we're using to determine if the fault is a read/write is some stale value in pt_regs from a previous page fault. Rework the printing logic to separate the SLB fault case out, and only print read/write in the cases where we can determine it. The result looks like eg: 0:mon> d 0x5deadbeef0000000 5deadbeef0000000 [ 721.779525][ C6] BUG: Unable to handle kernel data access at 0x5deadbeef0000000 [ 721.779697][ C6] Faulting instruction address: 0xc00000000014cbe0 cpu 0x6: Vector: 380 (Data SLB Access) at [c00000000ffbf390] 0:mon> d 0 0000000000000000 [ 742.793242][ C6] BUG: Kernel NULL pointer dereference at 0x00000000 [ 742.793316][ C6] Faulting instruction address: 0xc00000000014cbe0 cpu 0x6: Vector: 380 (Data SLB Access) at [c00000000ffbf390]",,,"[{""url"":""https://git.kernel.org/stable/c/093449bb182db885dae816d62874cccab7a4c42a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4a852ff9b7bea9c640540e2c1bc70bd3ba455d61"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a3dae36d632b2cf6eb20314273e512a96cb43c9a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d4679ac8ea2e5078704aa1c026db36580cc1bf9a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49215,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:58.590,2025-03-18T19:32:25.867,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: xsk: Fix race at socket teardown Fix a race in the xsk socket teardown code that can lead to a NULL pointer dereference splat. The current xsk unbind code in xsk_unbind_dev() starts by setting xs->state to XSK_UNBOUND, sets xs->dev to NULL and then waits for any NAPI processing to terminate using synchronize_net(). After that, the release code starts to tear down the socket state and free allocated memory. BUG: kernel NULL pointer dereference, address: 00000000000000c0 PGD 8000000932469067 P4D 8000000932469067 PUD 0 Oops: 0000 [#1] PREEMPT SMP PTI CPU: 25 PID: 69132 Comm: grpcpp_sync_ser Tainted: G I 5.16.0+ #2 Hardware name: Dell Inc. PowerEdge R730/0599V5, BIOS 1.2.10 03/09/2015 RIP: 0010:__xsk_sendmsg+0x2c/0x690 [...] RSP: 0018:ffffa2348bd13d50 EFLAGS: 00010246 RAX: 0000000000000000 RBX: 0000000000000040 RCX: ffff8d5fc632d258 RDX: 0000000000400000 RSI: ffffa2348bd13e10 RDI: ffff8d5fc5489800 RBP: ffffa2348bd13db0 R08: 0000000000000000 R09: 00007ffffffff000 R10: 0000000000000000 R11: 0000000000000000 R12: ffff8d5fc5489800 R13: ffff8d5fcb0f5140 R14: ffff8d5fcb0f5140 R15: 0000000000000000 FS: 00007f991cff9400(0000) GS:ffff8d6f1f700000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00000000000000c0 CR3: 0000000114888005 CR4: 00000000001706e0 Call Trace: <TASK> ? aa_sk_perm+0x43/0x1b0 xsk_sendmsg+0xf0/0x110 sock_sendmsg+0x65/0x70 __sys_sendto+0x113/0x190 ? debug_smp_processor_id+0x17/0x20 ? fpregs_assert_state_consistent+0x23/0x50 ? exit_to_user_mode_prepare+0xa5/0x1d0 __x64_sys_sendto+0x29/0x30 do_syscall_64+0x3b/0xc0 entry_SYSCALL_64_after_hwframe+0x44/0xae There are two problems with the current code. First, setting xs->dev to NULL before waiting for all users to stop using the socket is not correct. The entry to the data plane functions xsk_poll(), xsk_sendmsg(), and xsk_recvmsg() are all guarded by a test that xs->state is in the state XSK_BOUND and if not, it returns right away. But one process might have passed this test but still have not gotten to the point in which it uses xs->dev in the code. In this interim, a second process executing xsk_unbind_dev() might have set xs->dev to NULL which will lead to a crash for the first process. The solution here is just to get rid of this NULL assignment since it is not used anymore. Before commit 42fddcc7c64b (""xsk: use state member for socket synchronization""), xs->dev was the gatekeeper to admit processes into the data plane functions, but it was replaced with the state variable xs->state in the aforementioned commit. The second problem is that synchronize_net() does not wait for any process in xsk_poll(), xsk_sendmsg(), or xsk_recvmsg() to complete, which means that the state they rely on might be cleaned up prematurely. This can happen when the notifier gets called (at driver unload for example) as it uses xsk_unbind_dev(). Solve this by extending the RCU critical region from just the ndo_xsk_wakeup to the whole functions mentioned above, so that both the test of xs->state == XSK_BOUND and the last use of any member of xs is covered by the RCU critical section. This will guarantee that when synchronize_net() completes, there will be no processes left executing xsk_poll(), xsk_sendmsg(), or xsk_recvmsg() and state can be cleaned up safely. Note that we need to drop the RCU lock for the skb xmit path as it uses functions that might sleep. Due to this, we have to retest the xs->state after we grab the mutex that protects the skb xmit code from, among a number of things, an xsk_unbind_dev() being executed from the notifier at the same time.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""},{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""6B796901-86B9-450D-BE47-916285FBDF61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/18b1ab7aa76bde181bdb1ab19a87fa9523c32f21"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8a2dea162b92c322f3e42eae0c4a74b8d20aa7a9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ad7219cd8751bd258b9d1e69ae0654ec00f71875"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d1579253ffce39986e7a6ab757ac93b2680a665f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49216,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:58.687,2025-03-18T19:32:55.723,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/tegra: Fix reference leak in tegra_dsi_ganged_probe The reference taken by 'of_find_device_by_node()' must be released when not needed anymore. Add put_device() call to fix this.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.19"",""versionEndExcluding"":""4.9.311"",""matchCriteriaId"":""FA5195CC-9137-4570-812F-16F11DEA3646""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.276"",""matchCriteriaId"":""6D9B028C-6313-47F9-94B7-5F8122345E49""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.238"",""matchCriteriaId"":""FA28527A-11D3-41D2-9C4C-ECAC0D6A4A2D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""8CB6E8F5-C2B1-46F3-A807-0F6104AC340F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""91D3BFD0-D3F3-4018-957C-96CCBF357D79""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0e2f4e434e71dffd1085c3dccd676514bd71d316"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1e06710c43a090f14bb67714265a01cd1d7a37c5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/221e3638feb8bc42143833c9a704fa89b6c366bb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2d6ae8b747fe55f54de4a4441d636974aa53f56a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5e8fdb6392d945d33fef959eab73f8c34bc0a63b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/852c1f5f3119a38ee68e319bab10277fc1ab06b7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a725070701883fe62266ee6d2f31d67e6cdd31df"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cd78b74031cbc94133965f1017deb822657fc1a6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f3c99c686e098300c246e5e8a1474133e3dacb05"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49217,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:58.787,2025-02-26T07:00:58.787,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: pm8001: Fix abort all task initialization In pm80xx_send_abort_all(), the n_elem field of the ccb used is not initialized to 0. This missing initialization sometimes lead to the task completion path seeing the ccb with a non-zero n_elem resulting in the execution of invalid dma_unmap_sg() calls in pm8001_ccb_task_free(), causing a crash such as: [ 197.676341] RIP: 0010:iommu_dma_unmap_sg+0x6d/0x280 [ 197.700204] RSP: 0018:ffff889bbcf89c88 EFLAGS: 00010012 [ 197.705485] RAX: dffffc0000000000 RBX: 0000000000000000 RCX: ffffffff83d0bda0 [ 197.712687] RDX: 0000000000000002 RSI: 0000000000000000 RDI: ffff88810dffc0d0 [ 197.719887] RBP: 0000000000000000 R08: 0000000000000000 R09: ffff8881c790098b [ 197.727089] R10: ffffed1038f20131 R11: 0000000000000001 R12: 0000000000000000 [ 197.734296] R13: ffff88810dffc0d0 R14: 0000000000000010 R15: 0000000000000000 [ 197.741493] FS: 0000000000000000(0000) GS:ffff889bbcf80000(0000) knlGS:0000000000000000 [ 197.749659] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 197.755459] CR2: 00007f16c1b42734 CR3: 0000000004814000 CR4: 0000000000350ee0 [ 197.762656] Call Trace: [ 197.765127] <IRQ> [ 197.767162] pm8001_ccb_task_free+0x5f1/0x820 [pm80xx] [ 197.772364] ? do_raw_spin_unlock+0x54/0x220 [ 197.776680] pm8001_mpi_task_abort_resp+0x2ce/0x4f0 [pm80xx] [ 197.782406] process_oq+0xe85/0x7890 [pm80xx] [ 197.786817] ? lock_acquire+0x194/0x490 [ 197.790697] ? handle_irq_event+0x10e/0x1b0 [ 197.794920] ? mpi_sata_completion+0x2d70/0x2d70 [pm80xx] [ 197.800378] ? __wake_up_bit+0x100/0x100 [ 197.804340] ? lock_is_held_type+0x98/0x110 [ 197.808565] pm80xx_chip_isr+0x94/0x130 [pm80xx] [ 197.813243] tasklet_action_common.constprop.0+0x24b/0x2f0 [ 197.818785] __do_softirq+0x1b5/0x82d [ 197.822485] ? do_raw_spin_unlock+0x54/0x220 [ 197.826799] __irq_exit_rcu+0x17e/0x1e0 [ 197.830678] irq_exit_rcu+0xa/0x20 [ 197.834114] common_interrupt+0x78/0x90 [ 197.840051] </IRQ> [ 197.844236] <TASK> [ 197.848397] asm_common_interrupt+0x1e/0x40 Avoid this issue by always initializing the ccb n_elem field to 0 in pm8001_send_abort_all(), pm8001_send_read_log() and pm80xx_send_abort_all().",,,"[{""url"":""https://git.kernel.org/stable/c/16cd02e0951b520bef324adb9a35afcc92501caf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1824a21b2cedc5774a5adfa74f5f7b90472d8677"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/279f318bd7d6e04e6e0bc7b8cd8e190da8fa37a4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/326d894adf89f3c707b7784becbe241830daaab6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/765674e3b30121782a2b792684554baa48c61f5e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7f12845c8389855dbcc67baa068b6832dc4a396e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9914461db82caee6c519acfbe10a86fe11bcdeca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c8db786858d895ac58342f67767b4999ae6538fa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d6ec4471550cc53e96485a7124c5891e6a38d1c3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49218,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:58.890,2025-03-18T19:33:07.647,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/dp: Fix OOB read when handling Post Cursor2 register The link_status array was not large enough to read the Adjust Request Post Cursor2 register, so remove the common helper function to avoid an OOB read, found with a -Warray-bounds build: drivers/gpu/drm/drm_dp_helper.c: In function 'drm_dp_get_adjust_request_post_cursor': drivers/gpu/drm/drm_dp_helper.c:59:27: error: array subscript 10 is outside array bounds of 'const u8[6]' {aka 'const unsigned char[6]'} [-Werror=array-bounds] 59 | return link_status[r - DP_LANE0_1_STATUS]; | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~ drivers/gpu/drm/drm_dp_helper.c:147:51: note: while referencing 'link_status' 147 | u8 drm_dp_get_adjust_request_post_cursor(const u8 link_status[DP_LINK_STATUS_SIZE], | ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Replace the only user of the helper with an open-coded fetch and decode, similar to drivers/gpu/drm/amd/display/dc/core/dc_link_dp.c.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-125""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""88FA4E2D-4337-4268-BDC0-75FB6658B219""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/a2151490cc6c57b368d7974ffd447a8b36ade639"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/aeaed9a9fe694f8b1462fb81e2d33298c929180b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"",""baseScore"":7.1,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.2}]",,,,,,,,
CVE-2022-49219,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:58.977,2025-05-02T07:15:49.570,Modified,[],"In the Linux kernel, the following vulnerability has been resolved: vfio/pci: fix memory leak during D3hot to D0 transition If 'vfio_pci_core_device::needs_pm_restore' is set (PCI device does not have No_Soft_Reset bit set in its PMCSR config register), then the current PCI state will be saved locally in 'vfio_pci_core_device::pm_save' during D0->D3hot transition and same will be restored back during D3hot->D0 transition. For saving the PCI state locally, pci_store_saved_state() is being used and the pci_load_and_free_saved_state() will free the allocated memory. But for reset related IOCTLs, vfio driver calls PCI reset-related API's which will internally change the PCI power state back to D0. So, when the guest resumes, then it will get the current state as D0 and it will skip the call to vfio_pci_set_power_state() for changing the power state to D0 explicitly. In this case, the memory pointed by 'pm_save' will never be freed. In a malicious sequence, the state changing to D3hot followed by VFIO_DEVICE_RESET/VFIO_DEVICE_PCI_HOT_RESET can be run in a loop and it can cause an OOM situation. This patch frees the earlier allocated memory first before overwriting 'pm_save' to prevent the mentioned memory leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.1"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""C5B0B00D-6DCA-4714-B384-1EB7C214ABBE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/26ddd196e9eb264da8e1bdc4df8a94d62581c8b5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4319f17fb8264ba39352b611dfa913a4d8c1d1a0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c8a1f8bd586ee31020614b8d48b702ece3e2ae44"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/da426ad86027b849b877d4628b277ffbbd2f5325"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/eadf88ecf6ac7d6a9f47a76c6055d9a1987a8991"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49220,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:59.070,2025-02-26T07:00:59.070,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: dax: make sure inodes are flushed before destroy cache A bug can be triggered by following command $ modprobe nd_pmem && modprobe -r nd_pmem [ 10.060014] BUG dax_cache (Not tainted): Objects remaining in dax_cache on __kmem_cache_shutdown() [ 10.060938] Slab 0x0000000085b729ac objects=9 used=1 fp=0x000000004f5ae469 flags=0x200000000010200(slab|head|node) [ 10.062433] Call Trace: [ 10.062673] dump_stack_lvl+0x34/0x44 [ 10.062865] slab_err+0x90/0xd0 [ 10.063619] __kmem_cache_shutdown+0x13b/0x2f0 [ 10.063848] kmem_cache_destroy+0x4a/0x110 [ 10.064058] __x64_sys_delete_module+0x265/0x300 This is caused by dax_fs_exit() not flushing inodes before destroy cache. To fix this issue, call rcu_barrier() before destroy cache.",,,"[{""url"":""https://git.kernel.org/stable/c/770d42fff12d8595adda9025a0b92091f543e775"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a7e8de822e0b1979f08767c751f6c8a9c1d4ad86"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b786abe7c67c6ef71410c8e23292b3091d616ad1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e2951eaa9398415ac054b7bd80b8163b6838ead4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ec376f5c11c88c0215d173599db8449cd4196759"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f2a1e0eb70c2d954176c07d75d28742bde30e9f3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49221,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:59.167,2025-03-18T19:33:38.933,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/msm/dp: populate connector of struct dp_panel DP CTS test case 4.2.2.6 has valid edid with bad checksum on purpose and expect DP source return correct checksum. During drm edid read, correct edid checksum is calculated and stored at connector::real_edid_checksum. The problem is struct dp_panel::connector never be assigned, instead the connector is stored in struct msm_dp::connector. When we run compliance testing test case 4.2.2.6 dp_panel_handle_sink_request() won't have a valid edid set in struct dp_panel::edid so we'll try to use the connectors real_edid_checksum and hit a NULL pointer dereference error because the connector pointer is never assigned. Changes in V2: -- populate panel connector at msm_dp_modeset_init() instead of at dp_panel_read_sink_caps() Changes in V3: -- remove unhelpful kernel crash trace commit text -- remove renaming dp_display parameter to dp Changes in V4: -- add more details to commit text Changes in v10: -- group into one series Changes in v11: -- drop drm/msm/dp: dp_link_parse_sink_count() return immediately if aux read Signee-off-by: Kuogee Hsieh <quic_khsieh@quicinc.com>","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.10.67"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""E35E629A-08A5-4AA5-AAD3-0327AB394504""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.13.19"",""versionEndExcluding"":""5.14"",""matchCriteriaId"":""097A0850-FAA6-4FFF-88C2-F5B49B5CE740""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14.6"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""44ED6312-668B-40E9-985A-5399C9E479F5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/104074ebc0c3f358dd1ee944fbcde92c6e5a21dd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/413c62697b61226a236c8b1f5cd64dcf42bcc12f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5e602f5156910c7b19661699896cb6e3fb94fab9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9525b8bcae8b99188990b56484799cf4b1b43786"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fbba600f432a360b42452fee79d1fb35d3aa8aeb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49222,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:59.260,2025-02-26T07:00:59.260,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/bridge: anx7625: Fix overflow issue on reading EDID The length of EDID block can be longer than 256 bytes, so we should use `int` instead of `u8` for the `edid_pos` variable.",,,"[{""url"":""https://git.kernel.org/stable/c/64c06df2428bb7bb3d8cf5691416001af42d94dd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d5c6f647aec9ed524aedd04a3aec5ebc21d39007"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/db1c47d299298a7c52ccb201905d6be979fd7507"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f0d5d938d51af4eb08d9d8684fd9903425a0a87d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49223,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:59.363,2025-03-25T15:07:53.967,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: cxl/port: Hold port reference until decoder release KASAN + DEBUG_KOBJECT_RELEASE reports a potential use-after-free in cxl_decoder_release() where it goes to reference its parent, a cxl_port, to free its id back to port->decoder_ida. BUG: KASAN: use-after-free in to_cxl_port+0x18/0x90 [cxl_core] Read of size 8 at addr ffff888119270908 by task kworker/35:2/379 CPU: 35 PID: 379 Comm: kworker/35:2 Tainted: G OE 5.17.0-rc2+ #198 Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015 Workqueue: events kobject_delayed_cleanup Call Trace: <TASK> dump_stack_lvl+0x59/0x73 print_address_description.constprop.0+0x1f/0x150 ? to_cxl_port+0x18/0x90 [cxl_core] kasan_report.cold+0x83/0xdf ? to_cxl_port+0x18/0x90 [cxl_core] to_cxl_port+0x18/0x90 [cxl_core] cxl_decoder_release+0x2a/0x60 [cxl_core] device_release+0x5f/0x100 kobject_cleanup+0x80/0x1c0 The device core only guarantees parent lifetime until all children are unregistered. If a child needs a parent to complete its ->release() callback that child needs to hold a reference to extend the lifetime of the parent.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14"",""versionEndExcluding"":""5.15.54"",""matchCriteriaId"":""761DDEC2-EE3F-4A67-B08A-052842A9A1A5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/49f2dab77a5e1354f5da6ccdc9346a8212697be2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/518bb96367123062b48b0a9842f2864249b565f6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/74be98774dfbc5b8b795db726bd772e735d2edd4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b0022ca445d5fc4d0c89d15dcd0f855977b22c1d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49224,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:59.457,2025-03-18T19:33:58.430,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: power: supply: ab8500: Fix memory leak in ab8500_fg_sysfs_init kobject_init_and_add() takes reference even when it fails. According to the doc of kobject_init_and_add()： If this function returns an error, kobject_put() must be called to properly clean up the memory associated with the object. Fix memory leak by calling kobject_put().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.9"",""versionEndExcluding"":""4.9.311"",""matchCriteriaId"":""66BCE8B6-D07A-4643-9325-D11035393721""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.276"",""matchCriteriaId"":""6D9B028C-6313-47F9-94B7-5F8122345E49""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.238"",""matchCriteriaId"":""FA28527A-11D3-41D2-9C4C-ECAC0D6A4A2D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""8CB6E8F5-C2B1-46F3-A807-0F6104AC340F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""91D3BFD0-D3F3-4018-957C-96CCBF357D79""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/19aa3c98ed7b2616e105946cec804f897837ab84"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/261041097ab3470f1120b7733cbf472712304d1e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/31cdf7897dba1f096b74f69d840f0575b8cdb9ae"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/41ed61364285ff38bbbe9ca8a45c8372ba72921d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6a4760463dbc6b603690938c468839985189ce0a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/879356a6a05559582b0a7895d86d2d4359745c08"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c32f6b6196b6efc1c68990dfeaac36fb8eb3b8e1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/db3a61ef8e6aef3b888baa6a85926c2230c2cc56"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ffb8e92b4cef92bd25563cf3d8b4489eb22bc61f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49225,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:59.563,2025-03-18T19:26:19.173,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mt76: mt7921s: fix a possible memory leak in mt7921_load_patch Always release fw data at the end of mt7921_load_patch routine.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/11005b18f453aa192d035d410c11d07edcba5a45"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b301043384c5c2447357952be9a536c2026d8ad0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49226,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:59.650,2025-02-26T07:00:59.650,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: asix: add proper error handling of usb read errors Syzbot once again hit uninit value in asix driver. The problem still the same -- asix_read_cmd() reads less bytes, than was requested by caller. Since all read requests are performed via asix_read_cmd() let's catch usb related error there and add __must_check notation to be sure all callers actually check return value. So, this patch adds sanity check inside asix_read_cmd(), that simply checks if bytes read are not less, than was requested and adds missing error handling of asix_read_cmd() all across the driver code.",,,"[{""url"":""https://git.kernel.org/stable/c/662ff765470ad0d11a1153d6d8e99d69a98e60b4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/920a9fa27e7805499cfe78491b36fed2322c02ec"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9ea8d2fca8fea3b17005b4dc02f8ef15f7a2fb97"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b96a7265f763b37ff3138b9ca8122a950f13b00e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49227,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:59.747,2025-02-26T07:00:59.747,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: igc: avoid kernel warning when changing RX ring parameters Calling ethtool changing the RX ring parameters like this: $ ethtool -G eth0 rx 1024 on igc triggers kernel warnings like this: [ 225.198467] ------------[ cut here ]------------ [ 225.198473] Missing unregister, handled but fix driver [ 225.198485] WARNING: CPU: 7 PID: 959 at net/core/xdp.c:168 xdp_rxq_info_reg+0x79/0xd0 [...] [ 225.198601] Call Trace: [ 225.198604] <TASK> [ 225.198609] igc_setup_rx_resources+0x3f/0xe0 [igc] [ 225.198617] igc_ethtool_set_ringparam+0x30e/0x450 [igc] [ 225.198626] ethnl_set_rings+0x18a/0x250 [ 225.198631] genl_family_rcv_msg_doit+0xca/0x110 [ 225.198637] genl_rcv_msg+0xce/0x1c0 [ 225.198640] ? rings_prepare_data+0x60/0x60 [ 225.198644] ? genl_get_cmd+0xd0/0xd0 [ 225.198647] netlink_rcv_skb+0x4e/0xf0 [ 225.198652] genl_rcv+0x24/0x40 [ 225.198655] netlink_unicast+0x20e/0x330 [ 225.198659] netlink_sendmsg+0x23f/0x480 [ 225.198663] sock_sendmsg+0x5b/0x60 [ 225.198667] __sys_sendto+0xf0/0x160 [ 225.198671] ? handle_mm_fault+0xb2/0x280 [ 225.198676] ? do_user_addr_fault+0x1eb/0x690 [ 225.198680] __x64_sys_sendto+0x20/0x30 [ 225.198683] do_syscall_64+0x38/0x90 [ 225.198687] entry_SYSCALL_64_after_hwframe+0x44/0xae [ 225.198693] RIP: 0033:0x7f7ae38ac3aa igc_ethtool_set_ringparam() copies the igc_ring structure but neglects to reset the xdp_rxq_info member before calling igc_setup_rx_resources(). This in turn calls xdp_rxq_info_reg() with an already registered xdp_rxq_info. Make sure to unregister the xdp_rxq_info structure first in igc_setup_rx_resources.",,,"[{""url"":""https://git.kernel.org/stable/c/3ddb49af08094ebee250b461172ee7b8e27a35d3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/453307b569a0d41bddd07f26bf41b784cd82a4c9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/65aebcf1e05bd97d2e7ffcdff36efea1757c9450"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ab8c107470d12e7ef99030bf0911a10cdef62d16"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49228,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:59.840,2025-02-26T07:00:59.840,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: bpf: Fix a btf decl_tag bug when tagging a function syzbot reported a btf decl_tag bug with stack trace below: general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007] CPU: 0 PID: 3592 Comm: syz-executor914 Not tainted 5.16.0-syzkaller-11424-gb7892f7d5cb2 #0 Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011 RIP: 0010:btf_type_vlen include/linux/btf.h:231 [inline] RIP: 0010:btf_decl_tag_resolve+0x83e/0xaa0 kernel/bpf/btf.c:3910 ... Call Trace: <TASK> btf_resolve+0x251/0x1020 kernel/bpf/btf.c:4198 btf_check_all_types kernel/bpf/btf.c:4239 [inline] btf_parse_type_sec kernel/bpf/btf.c:4280 [inline] btf_parse kernel/bpf/btf.c:4513 [inline] btf_new_fd+0x19fe/0x2370 kernel/bpf/btf.c:6047 bpf_btf_load kernel/bpf/syscall.c:4039 [inline] __sys_bpf+0x1cbb/0x5970 kernel/bpf/syscall.c:4679 __do_sys_bpf kernel/bpf/syscall.c:4738 [inline] __se_sys_bpf kernel/bpf/syscall.c:4736 [inline] __x64_sys_bpf+0x75/0xb0 kernel/bpf/syscall.c:4736 do_syscall_x64 arch/x86/entry/common.c:50 [inline] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80 entry_SYSCALL_64_after_hwframe+0x44/0xae The kasan error is triggered with an illegal BTF like below: type 0: void type 1: int type 2: decl_tag to func type 3 type 3: func to func_proto type 8 The total number of types is 4 and the type 3 is illegal since its func_proto type is out of range. Currently, the target type of decl_tag can be struct/union, var or func. Both struct/union and var implemented their own 'resolve' callback functions and hence handled properly in kernel. But func type doesn't have 'resolve' callback function. When btf_decl_tag_resolve() tries to check func type, it tries to get vlen of its func_proto type, which triggered the above kasan error. To fix the issue, btf_decl_tag_resolve() needs to do btf_func_check() before trying to accessing func_proto type. In the current implementation, func type is checked with btf_func_check() in the main checking function btf_check_all_types(). To fix the above kasan issue, let us implement 'resolve' callback func type properly. The 'resolve' callback will be also called in btf_check_all_types() for func types.",,,"[{""url"":""https://git.kernel.org/stable/c/796d5666f6422ddadc938fb888044fcc16f2dbe3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a3bcd2110c087bc62e90fddd4a93237b049d6e68"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d7e7b42f4f956f2c68ad8cda87d750093dbba737"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49229,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:00:59.943,2025-02-26T07:00:59.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ptp: unregister virtual clocks when unregistering physical clock. When unregistering a physical clock which has some virtual clocks, unregister the virtual clocks with it. This fixes the following oops, which can be triggered by unloading a driver providing a PTP clock when it has enabled virtual clocks: BUG: unable to handle page fault for address: ffffffffc04fc4d8 Oops: 0000 [#1] PREEMPT SMP NOPTI RIP: 0010:ptp_vclock_read+0x31/0xb0 Call Trace: timecounter_read+0xf/0x50 ptp_vclock_refresh+0x2c/0x50 ? ptp_clock_release+0x40/0x40 ptp_aux_kworker+0x17/0x30 kthread_worker_fn+0x9b/0x240 ? kthread_should_park+0x30/0x30 kthread+0xe2/0x110 ? kthread_complete_and_exit+0x20/0x20 ret_from_fork+0x22/0x30",,,"[{""url"":""https://git.kernel.org/stable/c/9c796a57cbb5daf124a665689f0b2bc9262e0ced"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b2dea2a696d09163da4cd33cb598ce1f73e86597"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bfcbb76b0f595ea9ede9f7a218086fef85242f10"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c49eafe6249f844c26f9866886cc6719d81762df"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49230,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:00.037,2025-03-18T19:26:28.347,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mt76: mt7915: fix possible memory leak in mt7915_mcu_add_sta Free allocated skb in mt7915_mcu_add_sta routine in case of failures.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/a43736cd12d82913102eb49cb56787a5553e028f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b334a245ff1d76b1e97af8cea648ea6798b9eb87"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/daf02c7e3c3dc82ffa925999597bd455cf799551"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49231,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:00.130,2025-03-18T19:26:40.123,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: rtw88: fix memory overrun and memory leak during hw_scan Previously we allocated less memory than actual required, overwrite to the buffer causes the mm module to complaint and raise access violation faults. Along with potential memory leaks when returned early. Fix these by passing the correct size and proper deinit flow.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/d95984b5580dcb8b1c0036577c52b609990a1dab"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ec5da191bfcd5fd22b95459b623694f66c1cc10b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49232,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:00.217,2025-03-18T19:26:49.880,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/amd/display: Fix a NULL pointer dereference in amdgpu_dm_connector_add_common_modes() In amdgpu_dm_connector_add_common_modes(), amdgpu_dm_create_common_mode() is assigned to mode and is passed to drm_mode_probed_add() directly after that. drm_mode_probed_add() passes &mode->head to list_add_tail(), and there is a dereference of it in list_add_tail() without recoveries, which could lead to NULL pointer dereference on failure of amdgpu_dm_create_common_mode(). Fix this by adding a NULL check of mode. This bug was found by a static analyzer. Builds with 'make allyesconfig' show no new warnings, and our static analyzer no longer warns about this code.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.238"",""matchCriteriaId"":""FA28527A-11D3-41D2-9C4C-ECAC0D6A4A2D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""8CB6E8F5-C2B1-46F3-A807-0F6104AC340F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""91D3BFD0-D3F3-4018-957C-96CCBF357D79""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/19a7eba284790cfbba2945deb2363cf03ce41648"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2c729dec8c1e3e2892fde5ce8181553860914e74"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/57f4ad5e286fe4599c8fc63cf89f85f9eec7f9c9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/588a70177df3b1777484267584ef38ab2ca899a2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/639b3b9def0a6a3f316a195d705d14113236e89c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bdc7429708a0772d90c208975694f7c2133b1202"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f4eaa999fec78dec2a9c2d797438e05cbffb125b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49233,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:00.317,2025-03-18T19:27:09.697,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/amd/display: Call dc_stream_release for remove link enc assignment [Why] A porting error resulted in the stream assignment for the link being retained without being released - a memory leak. [How] Fix the porting error by adding back the dc_stream_release() intended as part of the original patch.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/a28b7b6a0c827ce672edcdb5b2b5916b0beebe03"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f2bde8349c35d01d7c50456ea06a5c7d5e0e5ed0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49234,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:00.407,2025-02-26T07:01:00.407,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: dsa: Avoid cross-chip syncing of VLAN filtering Changes to VLAN filtering are not applicable to cross-chip notifications. On a system like this: .-----. .-----. .-----. | sw1 +---+ sw2 +---+ sw3 | '-1-2-' '-1-2-' '-1-2-' Before this change, upon sw1p1 leaving a bridge, a call to dsa_port_vlan_filtering would also be made to sw2p1 and sw3p1. In this scenario: .---------. .-----. .-----. | sw1 +---+ sw2 +---+ sw3 | '-1-2-3-4-' '-1-2-' '-1-2-' When sw1p4 would leave a bridge, dsa_port_vlan_filtering would be called for sw2 and sw3 with a non-existing port - leading to array out-of-bounds accesses and crashes on mv88e6xxx.",,,"[{""url"":""https://git.kernel.org/stable/c/108dc8741c203e9d6ce4e973367f1bac20c7192b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e1f2a4dd8d433eec393d09273a78a3d3551339cf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49235,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:00.500,2025-03-18T19:27:57.093,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ath9k_htc: fix uninit value bugs Syzbot reported 2 KMSAN bugs in ath9k. All of them are caused by missing field initialization. In htc_connect_service() svc_meta_len and pad are not initialized. Based on code it looks like in current skb there is no service data, so simply initialize svc_meta_len to 0. htc_issue_send() does not initialize htc_frame_hdr::control array. Based on firmware code, it will initialize it by itself, so simply zero whole array to make KMSAN happy Fail logs: BUG: KMSAN: kernel-usb-infoleak in usb_submit_urb+0x6c1/0x2aa0 drivers/usb/core/urb.c:430 usb_submit_urb+0x6c1/0x2aa0 drivers/usb/core/urb.c:430 hif_usb_send_regout drivers/net/wireless/ath/ath9k/hif_usb.c:127 [inline] hif_usb_send+0x5f0/0x16f0 drivers/net/wireless/ath/ath9k/hif_usb.c:479 htc_issue_send drivers/net/wireless/ath/ath9k/htc_hst.c:34 [inline] htc_connect_service+0x143e/0x1960 drivers/net/wireless/ath/ath9k/htc_hst.c:275 ... Uninit was created at: slab_post_alloc_hook mm/slab.h:524 [inline] slab_alloc_node mm/slub.c:3251 [inline] __kmalloc_node_track_caller+0xe0c/0x1510 mm/slub.c:4974 kmalloc_reserve net/core/skbuff.c:354 [inline] __alloc_skb+0x545/0xf90 net/core/skbuff.c:426 alloc_skb include/linux/skbuff.h:1126 [inline] htc_connect_service+0x1029/0x1960 drivers/net/wireless/ath/ath9k/htc_hst.c:258 ... Bytes 4-7 of 18 are uninitialized Memory access of size 18 starts at ffff888027377e00 BUG: KMSAN: kernel-usb-infoleak in usb_submit_urb+0x6c1/0x2aa0 drivers/usb/core/urb.c:430 usb_submit_urb+0x6c1/0x2aa0 drivers/usb/core/urb.c:430 hif_usb_send_regout drivers/net/wireless/ath/ath9k/hif_usb.c:127 [inline] hif_usb_send+0x5f0/0x16f0 drivers/net/wireless/ath/ath9k/hif_usb.c:479 htc_issue_send drivers/net/wireless/ath/ath9k/htc_hst.c:34 [inline] htc_connect_service+0x143e/0x1960 drivers/net/wireless/ath/ath9k/htc_hst.c:275 ... Uninit was created at: slab_post_alloc_hook mm/slab.h:524 [inline] slab_alloc_node mm/slub.c:3251 [inline] __kmalloc_node_track_caller+0xe0c/0x1510 mm/slub.c:4974 kmalloc_reserve net/core/skbuff.c:354 [inline] __alloc_skb+0x545/0xf90 net/core/skbuff.c:426 alloc_skb include/linux/skbuff.h:1126 [inline] htc_connect_service+0x1029/0x1960 drivers/net/wireless/ath/ath9k/htc_hst.c:258 ... Bytes 16-17 of 18 are uninitialized Memory access of size 18 starts at ffff888027377e00","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-908""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.35"",""versionEndExcluding"":""4.9.311"",""matchCriteriaId"":""AF88BCDF-8B1F-4DB2-A7C2-8831EFD200E7""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.276"",""matchCriteriaId"":""6D9B028C-6313-47F9-94B7-5F8122345E49""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.238"",""matchCriteriaId"":""FA28527A-11D3-41D2-9C4C-ECAC0D6A4A2D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""8CB6E8F5-C2B1-46F3-A807-0F6104AC340F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""91D3BFD0-D3F3-4018-957C-96CCBF357D79""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0b700f7d06492de34964b6f414120043364f8191"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/11f11ac281f0c0b363d2940204f28bae0422ed71"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4d244b731188e0b63fc40a9d2dec72e9181fb37c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5abf2b761b998063f5e2bae93fd4ab10e2a80f10"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5c2a6a8daa17a3f65b38b9a5574bb362c13fa1d9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7da6169b6ebb75816b57be3beb829afa74f3b4b6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d1e0df1c57bd30871dd1c855742a7c346dbca853"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e352acdd378e9263cc4c6018e588f2dac7161d07"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ee4222052a76559c20e821bc3519cefb58b6d3e9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49236,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:00.600,2025-03-25T15:08:09.460,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: bpf: Fix UAF due to race between btf_try_get_module and load_module While working on code to populate kfunc BTF ID sets for module BTF from its initcall, I noticed that by the time the initcall is invoked, the module BTF can already be seen by userspace (and the BPF verifier). The existing btf_try_get_module calls try_module_get which only fails if mod->state == MODULE_STATE_GOING, i.e. it can increment module reference when module initcall is happening in parallel. Currently, BTF parsing happens from MODULE_STATE_COMING notifier callback. At this point, the module initcalls have not been invoked. The notifier callback parses and prepares the module BTF, allocates an ID, which publishes it to userspace, and then adds it to the btf_modules list allowing the kernel to invoke btf_try_get_module for the BTF. However, at this point, the module has not been fully initialized (i.e. its initcalls have not finished). The code in module.c can still fail and free the module, without caring for other users. However, nothing stops btf_try_get_module from succeeding between the state transition from MODULE_STATE_COMING to MODULE_STATE_LIVE. This leads to a use-after-free issue when BPF program loads successfully in the state transition, load_module's do_init_module call fails and frees the module, and BPF program fd on close calls module_put for the freed module. Future patch has test case to verify we don't regress in this area in future. There are multiple points after prepare_coming_module (in load_module) where failure can occur and module loading can return error. We illustrate and test for the race using the last point where it can practically occur (in module __init function). An illustration of the race: CPU 0 CPU 1 load_module notifier_call(MODULE_STATE_COMING) btf_parse_module btf_alloc_id // Published to userspace list_add(&btf_mod->list, btf_modules) mod->init(...) ... ^ bpf_check | check_pseudo_btf_id | btf_try_get_module | returns true | ... ... | module __init in progress return prog_fd | ... ... V if (ret < 0) free_module(mod) ... close(prog_fd) ... bpf_prog_free_deferred module_put(used_btf.mod) // use-after-free We fix this issue by setting a flag BTF_MODULE_F_LIVE, from the notifier callback when MODULE_STATE_LIVE state is reached for the module, so that we return NULL from btf_try_get_module for modules that are not fully formed. Since try_module_get already checks that module is not in MODULE_STATE_GOING state, and that is the only transition a live module can make before being removed from btf_modules list, this is enough to close the race and prevent the bug. A later selftest patch crafts the race condition artifically to verify that it has been fixed, and that verifier fails to load program (with ENXIO). Lastly, a couple of comments: 1. Even if this race didn't exist, it seems more appropriate to only access resources (ksyms and kfuncs) of a fully formed module which has been initialized completely. 2. This patch was born out of need for synchronization against module initcall for the next patch, so it is needed for correctness even without the aforementioned race condition. The BTF resources initialized by module initcall are set up once and then only looked up, so just waiting until the initcall has finished ensures correct behavior.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.12"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""02AF1052-DC50-47B3-B1DE-638E4BBDCCD1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0481baa2318cb1ab13277715da6cdbb657807b3f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/18688de203b47e5d8d9d0953385bf30b5949324f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/51b82141fffa454abf937a8ff0b8af89e4fd0c8f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d7fccf264b1a785525b366a5b7f8113c756187ad"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49237,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:00.700,2025-03-18T19:28:13.427,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ath11k: add missing of_node_put() to avoid leak The node pointer is returned by of_find_node_by_type() or of_parse_phandle() with refcount incremented. Calling of_node_put() to aovid the refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/3d38faef0de1756994b3d95e47b2302842f729e2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7d51cb010b20d70b16dc6e4341bf29d6c5b32564"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49238,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:00.790,2025-03-25T15:08:35.243,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ath11k: free peer for station when disconnect from AP for QCA6390/WCN6855 Commit b4a0f54156ac (""ath11k: move peer delete after vdev stop of station for QCA6390 and WCN6855"") is to fix firmware crash by changing the WMI command sequence, but actually skip all the peer delete operation, then it lead commit 58595c9874c6 (""ath11k: Fixing dangling pointer issue upon peer delete failure"") not take effect, and then happened a use-after-free warning from KASAN. because the peer->sta is not set to NULL and then used later. Change to only skip the WMI_PEER_DELETE_CMDID for QCA6390/WCN6855. log of user-after-free: [ 534.888665] BUG: KASAN: use-after-free in ath11k_dp_rx_update_peer_stats+0x912/0xc10 [ath11k] [ 534.888696] Read of size 8 at addr ffff8881396bb1b8 by task rtcwake/2860 [ 534.888705] CPU: 4 PID: 2860 Comm: rtcwake Kdump: loaded Tainted: G W 5.15.0-wt-ath+ #523 [ 534.888712] Hardware name: Intel(R) Client Systems NUC8i7HVK/NUC8i7HVB, BIOS HNKBLi70.86A.0067.2021.0528.1339 05/28/2021 [ 534.888716] Call Trace: [ 534.888720] <IRQ> [ 534.888726] dump_stack_lvl+0x57/0x7d [ 534.888736] print_address_description.constprop.0+0x1f/0x170 [ 534.888745] ? ath11k_dp_rx_update_peer_stats+0x912/0xc10 [ath11k] [ 534.888771] kasan_report.cold+0x83/0xdf [ 534.888783] ? ath11k_dp_rx_update_peer_stats+0x912/0xc10 [ath11k] [ 534.888810] ath11k_dp_rx_update_peer_stats+0x912/0xc10 [ath11k] [ 534.888840] ath11k_dp_rx_process_mon_status+0x529/0xa70 [ath11k] [ 534.888874] ? ath11k_dp_rx_mon_status_bufs_replenish+0x3f0/0x3f0 [ath11k] [ 534.888897] ? check_prev_add+0x20f0/0x20f0 [ 534.888922] ? __lock_acquire+0xb72/0x1870 [ 534.888937] ? find_held_lock+0x33/0x110 [ 534.888954] ath11k_dp_rx_process_mon_rings+0x297/0x520 [ath11k] [ 534.888981] ? rcu_read_unlock+0x40/0x40 [ 534.888990] ? ath11k_dp_rx_pdev_alloc+0xd90/0xd90 [ath11k] [ 534.889026] ath11k_dp_service_mon_ring+0x67/0xe0 [ath11k] [ 534.889053] ? ath11k_dp_rx_process_mon_rings+0x520/0x520 [ath11k] [ 534.889075] call_timer_fn+0x167/0x4a0 [ 534.889084] ? add_timer_on+0x3b0/0x3b0 [ 534.889103] ? lockdep_hardirqs_on_prepare.part.0+0x18c/0x370 [ 534.889117] __run_timers.part.0+0x539/0x8b0 [ 534.889123] ? ath11k_dp_rx_process_mon_rings+0x520/0x520 [ath11k] [ 534.889157] ? call_timer_fn+0x4a0/0x4a0 [ 534.889164] ? mark_lock_irq+0x1c30/0x1c30 [ 534.889173] ? clockevents_program_event+0xdd/0x280 [ 534.889189] ? mark_held_locks+0xa5/0xe0 [ 534.889203] run_timer_softirq+0x97/0x180 [ 534.889213] __do_softirq+0x276/0x86a [ 534.889230] __irq_exit_rcu+0x11c/0x180 [ 534.889238] irq_exit_rcu+0x5/0x20 [ 534.889244] sysvec_apic_timer_interrupt+0x8e/0xc0 [ 534.889251] </IRQ> [ 534.889254] <TASK> [ 534.889259] asm_sysvec_apic_timer_interrupt+0x12/0x20 [ 534.889265] RIP: 0010:_raw_spin_unlock_irqrestore+0x38/0x70 [ 534.889271] Code: 74 24 10 e8 ea c2 bf fd 48 89 ef e8 12 53 c0 fd 81 e3 00 02 00 00 75 25 9c 58 f6 c4 02 75 2d 48 85 db 74 01 fb bf 01 00 00 00 <e8> 13 a7 b5 fd 65 8b 05 cc d9 9c 5e 85 c0 74 0a 5b 5d c3 e8 a0 ee [ 534.889276] RSP: 0018:ffffc90002e5f880 EFLAGS: 00000206 [ 534.889284] RAX: 0000000000000006 RBX: 0000000000000200 RCX: ffffffff9f256f10 [ 534.889289] RDX: 0000000000000000 RSI: ffffffffa1c6e420 RDI: 0000000000000001 [ 534.889293] RBP: ffff8881095e6200 R08: 0000000000000001 R09: ffffffffa40d2b8f [ 534.889298] R10: fffffbfff481a571 R11: 0000000000000001 R12: ffff8881095e6e68 [ 534.889302] R13: ffffc90002e5f908 R14: 0000000000000246 R15: 0000000000000000 [ 534.889316] ? mark_lock+0xd0/0x14a0 [ 534.889332] klist_next+0x1d4/0x450 [ 534.889340] ? dpm_wait_for_subordinate+0x2d0/0x2d0 [ 534.889350] device_for_each_child+0xa8/0x140 [ 534.889360] ? device_remove_class_symlinks+0x1b0/0x1b0 [ 534.889370] ? __lock_release+0x4bd/0x9f0 [ 534.889378] ? dpm_suspend+0x26b/0x3f0 [ 534.889390] dpm_wait_for_subordinate+ ---truncated---","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/212ad7cb7d7592669c067125949e0a8e31ce6a0b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/400705c50bbf184794c885d1efad7fe9ccf1471a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49239,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:00.887,2025-03-18T19:28:26.167,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: codecs: wcd934x: Add missing of_node_put() in wcd934x_codec_parse_data The device_node pointer is returned by of_parse_phandle() with refcount incremented. We should use of_node_put() on it when done. This is similar to commit 64b92de9603f (""ASoC: wcd9335: fix a leaked reference by adding missing of_node_put"")","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.6"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""05F0A158-8722-4B5A-BEC5-245BC5E3EA9A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1f24716e38220fc9e52e208d20591d2bc9b7f020"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2f44eca78cc6d4e1779eb95765ec79e433accab4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9531a631379169d57756b2411178c6238655df88"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f3793eeb7b94a5eeed6f5c7a44bce403c6681a12"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f8e89d84ea83c51ba3ba97ff154f7aa679326760"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49240,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:00.977,2025-03-17T19:58:26.160,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: mediatek: mt8195: Fix error handling in mt8195_mt6359_rt1019_rt5682_dev_probe The device_node pointer is returned by of_parse_phandle() with refcount incremented. We should use of_node_put() on it when done. This function only calls of_node_put() in the regular path. And it will cause refcount leak in error path.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/c4b7174fe5bb875a09a78674a14a1589d1a672f3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c652f8f0875b569f8afa80b8cf9762828fd6187b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49241,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:01.063,2025-03-17T19:58:19.520,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: atmel: Fix error handling in sam9x5_wm8731_driver_probe The device_node pointer is returned by of_parse_phandle() with refcount incremented. We should use of_node_put() on it when done. This function only calls of_node_put() in the regular path. And it will cause refcount leak in error path.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.12"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""804BBEA2-D3A5-4A8C-871C-8119B98C61AC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/14228225091a0854b1de23e5b4fe8bdeeca9683b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/740dc3e846537c3743da98bf106f376023fd085c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/90ac679aa6a01841da90ec5a4aaa4b5e0badddf0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f43ad5dc43240289f4cf13c16cc506f4f7087931"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f589063b585ac6dd2081bde6c145411cf48d8d92"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49242,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:01.153,2025-03-17T19:58:10.360,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: mxs: Fix error handling in mxs_sgtl5000_probe This function only calls of_node_put() in the regular path. And it will cause refcount leak in error paths. For example, when codec_np is NULL, saif_np[0] and saif_np[1] are not NULL, it will cause leaks. of_node_put() will check if the node pointer is NULL, so we can call it directly to release the refcount of regular pointers.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.5"",""versionEndExcluding"":""4.9.311"",""matchCriteriaId"":""8979419A-6210-4E03-BAAF-436695F12548""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.276"",""matchCriteriaId"":""6D9B028C-6313-47F9-94B7-5F8122345E49""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.238"",""matchCriteriaId"":""FA28527A-11D3-41D2-9C4C-ECAC0D6A4A2D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""8CB6E8F5-C2B1-46F3-A807-0F6104AC340F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""91D3BFD0-D3F3-4018-957C-96CCBF357D79""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/44acdaf7acb60054d872bed18ce0e7db8ce900ce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/67e12f1cb2f97468c12b59e21975eaa0f332e7d2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6ae0a4d8fec551ec581d620f0eb1fe31f755551c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/790d2628e3fcc819d8f5572eb5615113fb2e727a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/86b6cf989437e694fd0a15782b5a513853a739e0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8d880226c86f37624e2a5f3c6d92ac0ec3375f96"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d2923b48d99fe663cb93d8b481c93299fcd68656"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f16ad2c0e22687f80e5981c67374023f51c204b9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f8d38056bcd220ea6f0802a5586d1a12ebcce849"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49243,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:01.250,2025-02-26T07:01:01.250,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: atmel: Add missing of_node_put() in at91sam9g20ek_audio_probe This node pointer is returned by of_parse_phandle() with refcount incremented in this function. Calling of_node_put() to avoid the refcount leak.",,,"[{""url"":""https://git.kernel.org/stable/c/0325193cf40dc3a6e27d55a5b98680936deebcd0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/32e6ceb05f36432811753852c674a301f944a24b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4793a02deb31b71b3984abc67bf1011a03c13b18"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/662ee5ac6b451aa5a27b8eebd397f2f5c7f42cec"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/81f266396237cea09a8c6322a6a78535f06ed345"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a0bc36b247dcf4d21bf820bfc4bcbaf7f6cf19b5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b0c56a0071116a37c24df998166c22a7e4684626"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f590797fa3c1bccdd19e55441592a23b46aef449"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f8b7b9a0594715ecfbe6f18db2328d992242654a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49244,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:01.350,2025-02-26T07:01:01.350,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: mediatek: mt8192-mt6359: Fix error handling in mt8192_mt6359_dev_probe The device_node pointer is returned by of_parse_phandle() with refcount incremented. We should use of_node_put() on it when done. This function only calls of_node_put() in the regular path. And it will cause refcount leak in error paths. Fix this by calling of_node_put() in error handling too.",,,"[{""url"":""https://git.kernel.org/stable/c/1765787ec02e824f4f5e672cf269280a5da09d2f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/87e04a89c31e792eef62bcba6ebb77fd323d28a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d5a38629f1aaf397fd471b27e49d55289ddc0656"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e45ac7831ff3e2934d58cce319c17c8ec763c95c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49245,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:01.450,2025-02-26T07:01:01.450,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: rockchip: Fix PM usage reference of rockchip_i2s_tdm_resume pm_runtime_get_sync will increment pm usage counter even it failed. Forgetting to putting operation will result in reference leak here. We fix it by replacing it with pm_runtime_resume_and_get to keep usage counter balanced.",,,"[{""url"":""https://git.kernel.org/stable/c/4e5510219111607b1f1875ab3c3f0485ba3c381c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5c1834aac759ddfd0f17c9f38db1b30adc8eb4e8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cc5d8ac95663a5813c696008bc524b794d471215"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49246,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:01.537,2025-02-26T07:01:01.537,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: atmel: Fix error handling in snd_proto_probe The device_node pointer is returned by of_parse_phandle() with refcount incremented. We should use of_node_put() on it when done. This function only calls of_node_put() in the regular path. And it will cause refcount leak in error paths. Fix this by calling of_node_put() in error handling too.",,,"[{""url"":""https://git.kernel.org/stable/c/0f517480d5888cd54487c5662ce4da95b30ad798"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8fa969cd8485031294f91fc7184399000cae6355"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b0bfaf0544d08d093d6211d7ef8816fb0b5b6c75"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f32ac9bf5e3f594ef9bfedb410aebc98cf784e69"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49247,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:01.623,2025-02-26T07:01:01.623,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: media: stk1160: If start stream fails, return buffers with VB2_BUF_STATE_QUEUED If the callback 'start_streaming' fails, then all queued buffers in the driver should be returned with state 'VB2_BUF_STATE_QUEUED'. Currently, they are returned with 'VB2_BUF_STATE_ERROR' which is wrong. Fix this. This also fixes the warning: [ 65.583633] WARNING: CPU: 5 PID: 593 at drivers/media/common/videobuf2/videobuf2-core.c:1612 vb2_start_streaming+0xd4/0x160 [videobuf2_common] [ 65.585027] Modules linked in: snd_usb_audio snd_hwdep snd_usbmidi_lib snd_rawmidi snd_soc_hdmi_codec dw_hdmi_i2s_audio saa7115 stk1160 videobuf2_vmalloc videobuf2_memops videobuf2_v4l2 videobuf2_common videodev mc crct10dif_ce panfrost snd_soc_simple_card snd_soc_audio_graph_card snd_soc_spdif_tx snd_soc_simple_card_utils gpu_sched phy_rockchip_pcie snd_soc_rockchip_i2s rockchipdrm analogix_dp dw_mipi_dsi dw_hdmi cec drm_kms_helper drm rtc_rk808 rockchip_saradc industrialio_triggered_buffer kfifo_buf rockchip_thermal pcie_rockchip_host ip_tables x_tables ipv6 [ 65.589383] CPU: 5 PID: 593 Comm: v4l2src0:src Tainted: G W 5.16.0-rc4-62408-g32447129cb30-dirty #14 [ 65.590293] Hardware name: Radxa ROCK Pi 4B (DT) [ 65.590696] pstate: 80000005 (Nzcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--) [ 65.591304] pc : vb2_start_streaming+0xd4/0x160 [videobuf2_common] [ 65.591850] lr : vb2_start_streaming+0x6c/0x160 [videobuf2_common] [ 65.592395] sp : ffff800012bc3ad0 [ 65.592685] x29: ffff800012bc3ad0 x28: 0000000000000000 x27: ffff800012bc3cd8 [ 65.593312] x26: 0000000000000000 x25: ffff00000d8a7800 x24: 0000000040045612 [ 65.593938] x23: ffff800011323000 x22: ffff800012bc3cd8 x21: ffff00000908a8b0 [ 65.594562] x20: ffff00000908a8c8 x19: 00000000fffffff4 x18: ffffffffffffffff [ 65.595188] x17: 000000040044ffff x16: 00400034b5503510 x15: ffff800011323f78 [ 65.595813] x14: ffff000013163886 x13: ffff000013163885 x12: 00000000000002ce [ 65.596439] x11: 0000000000000028 x10: 0000000000000001 x9 : 0000000000000228 [ 65.597064] x8 : 0101010101010101 x7 : 7f7f7f7f7f7f7f7f x6 : fefefeff726c5e78 [ 65.597690] x5 : ffff800012bc3990 x4 : 0000000000000000 x3 : ffff000009a34880 [ 65.598315] x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff000007cd99f0 [ 65.598940] Call trace: [ 65.599155] vb2_start_streaming+0xd4/0x160 [videobuf2_common] [ 65.599672] vb2_core_streamon+0x17c/0x1a8 [videobuf2_common] [ 65.600179] vb2_streamon+0x54/0x88 [videobuf2_v4l2] [ 65.600619] vb2_ioctl_streamon+0x54/0x60 [videobuf2_v4l2] [ 65.601103] v4l_streamon+0x3c/0x50 [videodev] [ 65.601521] __video_do_ioctl+0x1a4/0x428 [videodev] [ 65.601977] video_usercopy+0x320/0x828 [videodev] [ 65.602419] video_ioctl2+0x3c/0x58 [videodev] [ 65.602830] v4l2_ioctl+0x60/0x90 [videodev] [ 65.603227] __arm64_sys_ioctl+0xa8/0xe0 [ 65.603576] invoke_syscall+0x54/0x118 [ 65.603911] el0_svc_common.constprop.3+0x84/0x100 [ 65.604332] do_el0_svc+0x34/0xa0 [ 65.604625] el0_svc+0x1c/0x50 [ 65.604897] el0t_64_sync_handler+0x88/0xb0 [ 65.605264] el0t_64_sync+0x16c/0x170 [ 65.605587] ---[ end trace 578e0ba07742170d ]---",,,"[{""url"":""https://git.kernel.org/stable/c/03054f22d5abd80ad89547512c2bfbfb2714d3ed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2874122ca4ca74adec72d6d6bf8828228ec20f15"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3cc050df73e3d973f1870a8dc0e177e77670bc7f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4d68603cc4382174bc1e7d532e10675c48c6b257"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a09e9882800fdfc5aab93f77c3f0132071d2191b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f04a520a422222fc921bf035dc67414c500a286a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f66e6fd1488d26229f11d86616de1b658c70fa8a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fbe04b49a54e31f4321d632270207f0e6304cd16"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49248,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:01.727,2025-02-26T07:01:01.727,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ALSA: firewire-lib: fix uninitialized flag for AV/C deferred transaction AV/C deferred transaction was supported at a commit 00a7bb81c20f (""ALSA: firewire-lib: Add support for deferred transaction"") while 'deferrable' flag can be uninitialized for non-control/notify AV/C transactions. UBSAN reports it: kernel: ================================================================================ kernel: UBSAN: invalid-load in /build/linux-aa0B4d/linux-5.15.0/sound/firewire/fcp.c:363:9 kernel: load of value 158 is not a valid value for type '_Bool' kernel: CPU: 3 PID: 182227 Comm: irq/35-firewire Tainted: P OE 5.15.0-18-generic #18-Ubuntu kernel: Hardware name: Gigabyte Technology Co., Ltd. AX370-Gaming 5/AX370-Gaming 5, BIOS F42b 08/01/2019 kernel: Call Trace: kernel: <IRQ> kernel: show_stack+0x52/0x58 kernel: dump_stack_lvl+0x4a/0x5f kernel: dump_stack+0x10/0x12 kernel: ubsan_epilogue+0x9/0x45 kernel: __ubsan_handle_load_invalid_value.cold+0x44/0x49 kernel: fcp_response.part.0.cold+0x1a/0x2b [snd_firewire_lib] kernel: fcp_response+0x28/0x30 [snd_firewire_lib] kernel: fw_core_handle_request+0x230/0x3d0 [firewire_core] kernel: handle_ar_packet+0x1d9/0x200 [firewire_ohci] kernel: ? handle_ar_packet+0x1d9/0x200 [firewire_ohci] kernel: ? transmit_complete_callback+0x9f/0x120 [firewire_core] kernel: ar_context_tasklet+0xa8/0x2e0 [firewire_ohci] kernel: tasklet_action_common.constprop.0+0xea/0xf0 kernel: tasklet_action+0x22/0x30 kernel: __do_softirq+0xd9/0x2e3 kernel: ? irq_finalize_oneshot.part.0+0xf0/0xf0 kernel: do_softirq+0x75/0xa0 kernel: </IRQ> kernel: <TASK> kernel: __local_bh_enable_ip+0x50/0x60 kernel: irq_forced_thread_fn+0x7e/0x90 kernel: irq_thread+0xba/0x190 kernel: ? irq_thread_fn+0x60/0x60 kernel: kthread+0x11e/0x140 kernel: ? irq_thread_check_affinity+0xf0/0xf0 kernel: ? set_kthread_struct+0x50/0x50 kernel: ret_from_fork+0x22/0x30 kernel: </TASK> kernel: ================================================================================ This commit fixes the bug. The bug has no disadvantage for the non- control/notify AV/C transactions since the flag has an effect for AV/C response with INTERIM (0x0f) status which is not used for the transactions in AV/C general specification.",,,"[{""url"":""https://git.kernel.org/stable/c/39d2c4a33dc1b4402cec68a3c8f82c6588b6edce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/60e5d391805d70458a01998de00d0c28cba40bf3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7025f40690a235a118c87674cfb93072694aa66d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7e6f5786621df060f8296f074efd275eaf20361a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/99582e4b19f367fa95bdd150b3034d7ce8113342"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b2b65c9013dc28836d82e25d0f0c94d794a14aba"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bf0cd60b7e33cf221fbe1114e4acb2c828b0af0d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d07e4bbaff6fbba6f70c04b092ea7d9afcdf392e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/eab74c41612083bd627b60da650e19234e4f1051"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49249,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:01.830,2025-02-26T07:01:01.830,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: codecs: wc938x: fix accessing array out of bounds for enum type Accessing enums using integer would result in array out of bounds access on platforms like aarch64 where sizeof(long) is 8 compared to enum size which is 4 bytes. Fix this by using enumerated items instead of integers.",,,"[{""url"":""https://git.kernel.org/stable/c/adafea71b49ec4dbc44e0b84ec6eb602004a7a08"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cc587b7c8fbbe128f6bd0dad025a0caea5e6d164"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d09aee1b1da196be11ed86dd4897f228f2487613"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f03c0c94186d5876857132d97e28f20cdc100bdc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49250,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:01.920,2025-02-26T07:01:01.920,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: codecs: rx-macro: fix accessing compander for aux AUX interpolator does not have compander, so check before accessing compander data for this. Without this checkan array of out bounds access will be made in comp_enabled[] array.",,,"[{""url"":""https://git.kernel.org/stable/c/42c709c4e1ce4c136891530646c9abd5dff3524f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6aa8ef9535dbd561293406608ebe791627b10196"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/87a2b44cb3005d30c3a72234d1e47b03ae3bb29a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9208ecc703b5ed5b12d7ea13c79207f4c8456638"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49251,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:02.013,2025-02-26T07:01:02.013,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: codecs: va-macro: fix accessing array out of bounds for enum type Accessing enums using integer would result in array out of bounds access on platforms like aarch64 where sizeof(long) is 8 compared to enum size which is 4 bytes.",,,"[{""url"":""https://git.kernel.org/stable/c/0ea5eff7c6063a8f124188424f8e4c6727f35051"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4a799972a283ab4ec031041304d7e2d34e1a16eb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/966408e37d84b762d11978b7bfb03fff0c6222ad"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c0099bbf8bc85d30c4cf38220fca3c8d4253fa7f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49252,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:02.103,2025-02-26T07:01:02.103,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: codecs: rx-macro: fix accessing array out of bounds for enum type Accessing enums using integer would result in array out of bounds access on platforms like aarch64 where sizeof(long) is 8 compared to enum size which is 4 bytes.",,,"[{""url"":""https://git.kernel.org/stable/c/7e3629e256d1cabf801d00050550ade4d036cafe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/aed43e92e4b9187029903880d5db608f7fa1c53c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bcfe5f76cc4051ea3f9eb5d2c8ea621641f290a5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/eb15c6ea692fd88d70698d874d9a0d667fb4cde9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49253,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:02.200,2025-02-26T07:01:02.200,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: media: usb: go7007: s2250-board: fix leak in probe() Call i2c_unregister_device(audio) on this error path.",,,"[{""url"":""https://git.kernel.org/stable/c/14cd5a8e61c654828a1f1056d56f0b0a524d2c69"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/44973633b0064c46083833b55dd0a45e6235f8ca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/67e4550ecd6164bfbdff54c169e5bbf9ccfaf14d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/895364fa97e60749855f789bc4568883fc7a8b39"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/948ad5e5624487079c24cb5c81c74ddd02832440"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a97130cd5b0c00eec169b10a16d922b9ea67324a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b5470f3efa530b10296257bb578ce4b1769e9a04"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b7dd177225355da55f8d80d8e568928e0eec3608"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bbdd0e15738336e6b1208304ae98525117877bbd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49254,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:02.300,2025-02-26T07:01:02.300,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: media: ti-vpe: cal: Fix a NULL pointer dereference in cal_ctx_v4l2_init_formats() In cal_ctx_v4l2_init_formats(), devm_kzalloc() is assigned to ctx->active_fmt and there is a dereference of it after that, which could lead to NULL pointer dereference on failure of devm_kzalloc(). Fix this bug by adding a NULL check of ctx->active_fmt. This bug was found by a static analyzer. Builds with 'make allyesconfig' show no new warnings, and our static analyzer no longer warns about this code.",,,"[{""url"":""https://git.kernel.org/stable/c/1381f1a629a090c251965edb56f849ad648414a4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/91e2805579ab0783eed53acc2bf9fb553e939004"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/aa613ac270292e102503e9767882e39200efe608"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/abd77889851d2ead0d0c9c4d29f1808801477b00"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49255,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:02.397,2025-02-26T07:01:02.397,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: f2fs: fix missing free nid in f2fs_handle_failed_inode This patch fixes xfstests/generic/475 failure. [ 293.680694] F2FS-fs (dm-1): May loss orphan inode, run fsck to fix. [ 293.685358] Buffer I/O error on dev dm-1, logical block 8388592, async page read [ 293.691527] Buffer I/O error on dev dm-1, logical block 8388592, async page read [ 293.691764] sh (7615): drop_caches: 3 [ 293.691819] sh (7616): drop_caches: 3 [ 293.694017] Buffer I/O error on dev dm-1, logical block 1, async page read [ 293.695659] sh (7618): drop_caches: 3 [ 293.696979] sh (7617): drop_caches: 3 [ 293.700290] sh (7623): drop_caches: 3 [ 293.708621] sh (7626): drop_caches: 3 [ 293.711386] sh (7628): drop_caches: 3 [ 293.711825] sh (7627): drop_caches: 3 [ 293.716738] sh (7630): drop_caches: 3 [ 293.719613] sh (7632): drop_caches: 3 [ 293.720971] sh (7633): drop_caches: 3 [ 293.727741] sh (7634): drop_caches: 3 [ 293.730783] sh (7636): drop_caches: 3 [ 293.732681] sh (7635): drop_caches: 3 [ 293.732988] sh (7637): drop_caches: 3 [ 293.738836] sh (7639): drop_caches: 3 [ 293.740568] sh (7641): drop_caches: 3 [ 293.743053] sh (7640): drop_caches: 3 [ 293.821889] ------------[ cut here ]------------ [ 293.824654] kernel BUG at fs/f2fs/node.c:3334! [ 293.826226] invalid opcode: 0000 [#1] PREEMPT SMP PTI [ 293.828713] CPU: 0 PID: 7653 Comm: umount Tainted: G OE 5.17.0-rc1-custom #1 [ 293.830946] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014 [ 293.832526] RIP: 0010:f2fs_destroy_node_manager+0x33f/0x350 [f2fs] [ 293.833905] Code: e8 d6 3d f9 f9 48 8b 45 d0 65 48 2b 04 25 28 00 00 00 75 1a 48 81 c4 28 03 00 00 5b 41 5c 41 5d 41 5e 41 5f 5d c3 0f 0b [ 293.837783] RSP: 0018:ffffb04ec31e7a20 EFLAGS: 00010202 [ 293.839062] RAX: 0000000000000001 RBX: ffff9df947db2eb8 RCX: 0000000080aa0072 [ 293.840666] RDX: 0000000000000000 RSI: ffffe86c0432a140 RDI: ffffffffc0b72a21 [ 293.842261] RBP: ffffb04ec31e7d70 R08: ffff9df94ca85780 R09: 0000000080aa0072 [ 293.843909] R10: ffff9df94ca85700 R11: ffff9df94e1ccf58 R12: ffff9df947db2e00 [ 293.845594] R13: ffff9df947db2ed0 R14: ffff9df947db2eb8 R15: ffff9df947db2eb8 [ 293.847855] FS: 00007f5a97379800(0000) GS:ffff9dfa77c00000(0000) knlGS:0000000000000000 [ 293.850647] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 293.852940] CR2: 00007f5a97528730 CR3: 000000010bc76005 CR4: 0000000000370ef0 [ 293.854680] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 [ 293.856423] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 [ 293.858380] Call Trace: [ 293.859302] <TASK> [ 293.860311] ? ttwu_do_wakeup+0x1c/0x170 [ 293.861800] ? ttwu_do_activate+0x6d/0xb0 [ 293.863057] ? _raw_spin_unlock_irqrestore+0x29/0x40 [ 293.864411] ? try_to_wake_up+0x9d/0x5e0 [ 293.865618] ? debug_smp_processor_id+0x17/0x20 [ 293.866934] ? debug_smp_processor_id+0x17/0x20 [ 293.868223] ? free_unref_page+0xbf/0x120 [ 293.869470] ? __free_slab+0xcb/0x1c0 [ 293.870614] ? preempt_count_add+0x7a/0xc0 [ 293.871811] ? __slab_free+0xa0/0x2d0 [ 293.872918] ? __wake_up_common_lock+0x8a/0xc0 [ 293.874186] ? __slab_free+0xa0/0x2d0 [ 293.875305] ? free_inode_nonrcu+0x20/0x20 [ 293.876466] ? free_inode_nonrcu+0x20/0x20 [ 293.877650] ? debug_smp_processor_id+0x17/0x20 [ 293.878949] ? call_rcu+0x11a/0x240 [ 293.880060] ? f2fs_destroy_stats+0x59/0x60 [f2fs] [ 293.881437] ? kfree+0x1fe/0x230 [ 293.882674] f2fs_put_super+0x160/0x390 [f2fs] [ 293.883978] generic_shutdown_super+0x7a/0x120 [ 293.885274] kill_block_super+0x27/0x50 [ 293.886496] kill_f2fs_super+0x7f/0x100 [f2fs] [ 293.887806] deactivate_locked_super+0x35/0xa0 [ 293.889271] deactivate_super+0x40/0x50 [ 293.890513] cleanup_mnt+0x139/0x190 [ 293.891689] __cleanup_mnt+0x12/0x20 [ 293.892850] task_work_run+0x64/0xa0 [ 293.894035] exit_to_user_mode_prepare+0x1b7/ ---truncated---",,,"[{""url"":""https://git.kernel.org/stable/c/005f9cdab70c915702254c5eb67a8efced80e821"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1a11a873749c6375bb668953fa1a196d8538d26b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2fef99b8372c1ae3d8445ab570e888b5a358dbe9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8579b413af100ec5f3592bd6cf11559312b380c0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/aa80bf73e3b3fb7026d343c77b3ddc849e26a095"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d1eaaf6cadedf638e17017b0a04d56308405ac10"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49256,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:02.497,2025-02-26T07:01:02.497,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: watch_queue: Actually free the watch free_watch() does everything barring actually freeing the watch object. Fix this by adding the missing kfree. kmemleak produces a report something like the following. Note that as an address can be seen in the first word, the watch would appear to have gone through call_rcu(). BUG: memory leak unreferenced object 0xffff88810ce4a200 (size 96): comm ""syz-executor352"", pid 3605, jiffies 4294947473 (age 13.720s) hex dump (first 32 bytes): e0 82 48 0d 81 88 ff ff 00 00 00 00 00 00 00 00 ..H............. 80 a2 e4 0c 81 88 ff ff 00 00 00 00 00 00 00 00 ................ backtrace: [<ffffffff8214e6cc>] kmalloc include/linux/slab.h:581 [inline] [<ffffffff8214e6cc>] kzalloc include/linux/slab.h:714 [inline] [<ffffffff8214e6cc>] keyctl_watch_key+0xec/0x2e0 security/keys/keyctl.c:1800 [<ffffffff8214ec84>] __do_sys_keyctl+0x3c4/0x490 security/keys/keyctl.c:2016 [<ffffffff84493a25>] do_syscall_x64 arch/x86/entry/common.c:50 [inline] [<ffffffff84493a25>] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80 [<ffffffff84600068>] entry_SYSCALL_64_after_hwframe+0x44/0xae",,,"[{""url"":""https://git.kernel.org/stable/c/31824613a42aacdcbeb325bf07a1c8247a11ebe2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3d8dcf278b1ee1eff1e90be848fa2237db4c07a7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7e8c9b0df07a77f0d072603b8ced2677e30e1893"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9d92be1a09fbb3dd65600dbfe7eedb40e7228e4b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f69aecb49968e14196366bbe896eab0a904229f5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49257,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:02.597,2025-02-26T07:01:02.597,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: watch_queue: Fix NULL dereference in error cleanup In watch_queue_set_size(), the error cleanup code doesn't take account of the fact that __free_page() can't handle a NULL pointer when trying to free up buffer pages that did get allocated. Fix this by only calling __free_page() on the pages actually allocated. Without the fix, this can lead to something like the following: BUG: KASAN: null-ptr-deref in __free_pages+0x1f/0x1b0 mm/page_alloc.c:5473 Read of size 4 at addr 0000000000000034 by task syz-executor168/3599 ... Call Trace: <TASK> __dump_stack lib/dump_stack.c:88 [inline] dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106 __kasan_report mm/kasan/report.c:446 [inline] kasan_report.cold+0x66/0xdf mm/kasan/report.c:459 check_region_inline mm/kasan/generic.c:183 [inline] kasan_check_range+0x13d/0x180 mm/kasan/generic.c:189 instrument_atomic_read include/linux/instrumented.h:71 [inline] atomic_read include/linux/atomic/atomic-instrumented.h:27 [inline] page_ref_count include/linux/page_ref.h:67 [inline] put_page_testzero include/linux/mm.h:717 [inline] __free_pages+0x1f/0x1b0 mm/page_alloc.c:5473 watch_queue_set_size+0x499/0x630 kernel/watch_queue.c:275 pipe_ioctl+0xac/0x2b0 fs/pipe.c:632 vfs_ioctl fs/ioctl.c:51 [inline] __do_sys_ioctl fs/ioctl.c:874 [inline] __se_sys_ioctl fs/ioctl.c:860 [inline] __x64_sys_ioctl+0x193/0x200 fs/ioctl.c:860 do_syscall_x64 arch/x86/entry/common.c:50 [inline] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80 entry_SYSCALL_64_after_hwframe+0x44/0xae",,,"[{""url"":""https://git.kernel.org/stable/c/112a2f9b0a8457794095a0450598f150724ec456"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5ae75b4ed30322b42abaa75ef1b784addfdb7dc9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/695c47cea02b9101e2fc2e7d36d552128592b347"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a635415a064e77bcfbf43da413fd9dfe0bbed9cb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b6f5ad3e45d19f9c4ee3e8a2aff829f28d68591d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49258,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:02.720,2025-03-25T15:23:07.917,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: crypto: ccree - Fix use after free in cc_cipher_exit() kfree_sensitive(ctx_p->user.key) will free the ctx_p->user.key. But ctx_p->user.key is still used in the next line, which will lead to a use after free. We can call kfree_sensitive() after dev_dbg() to avoid the uaf.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.17"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""CC298721-252D-4478-BAD5-0658B7FC0413""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/25c358efee5153dfd240d4e0d3169d5bebe9cacd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/335bf1fc74f775a8255257aa3e33763f2257b676"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3d950c34074ed74d2713c3856ba01264523289e6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c93017c8d5ebf55a4e453ac7c84cc84cf92ab570"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cffb5382bd8d3cf21b874ab5b84bf7618932286b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49259,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:02.850,2025-02-26T07:01:02.850,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: block: don't delete queue kobject before its children kobjects aren't supposed to be deleted before their child kobjects are deleted. Apparently this is usually benign; however, a WARN will be triggered if one of the child kobjects has a named attribute group: sysfs group 'modes' not found for kobject 'crypto' WARNING: CPU: 0 PID: 1 at fs/sysfs/group.c:278 sysfs_remove_group+0x72/0x80 ... Call Trace: sysfs_remove_groups+0x29/0x40 fs/sysfs/group.c:312 __kobject_del+0x20/0x80 lib/kobject.c:611 kobject_cleanup+0xa4/0x140 lib/kobject.c:696 kobject_release lib/kobject.c:736 [inline] kref_put include/linux/kref.h:65 [inline] kobject_put+0x53/0x70 lib/kobject.c:753 blk_crypto_sysfs_unregister+0x10/0x20 block/blk-crypto-sysfs.c:159 blk_unregister_queue+0xb0/0x110 block/blk-sysfs.c:962 del_gendisk+0x117/0x250 block/genhd.c:610 Fix this by moving the kobject_del() and the corresponding kobject_uevent() to the correct place.",,,"[{""url"":""https://git.kernel.org/stable/c/0b5924a14d64487ebd51127b0358d06066ef5384"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/0f69288253e9fc7c495047720e523b9f1aba5712"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3d7e32c8da45957326f56937e0471c686d1a7711"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/84fe3ca6e7910beb47ec13509d484f84fa2a41ad"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b2001eb10f59363da930cdd6e086a2861986fa18"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cf0cb8686e55d9c022944bc6ba9e19e832889e83"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/efaa0e969261e97c1fdd8e0338e5dd3ba5b9219c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49260,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:02.967,2025-02-26T07:01:02.967,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: crypto: hisilicon/sec - fix the aead software fallback for engine Due to the subreq pointer misuse the private context memory. The aead soft crypto occasionally casues the OS panic as setting the 64K page. Here is fix it.",,,"[{""url"":""https://git.kernel.org/stable/c/0a2a464f863187f97e96ebc6384c052cafd4a54c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/40dba7c26e897c637e91312b35f664f1d4d0073c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5c1149e2abe0b7489300736b8277b45b113de67f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ef7b10f3cac7810ddcfd976304fd125aca33d144"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49261,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:03.057,2025-02-26T07:01:03.057,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/i915/gem: add missing boundary check in vm_access A missing bounds check in vm_access() can lead to an out-of-bounds read or write in the adjacent memory area, since the len attribute is not validated before the memcpy later in the function, potentially hitting: [ 183.637831] BUG: unable to handle page fault for address: ffffc90000c86000 [ 183.637934] #PF: supervisor read access in kernel mode [ 183.637997] #PF: error_code(0x0000) - not-present page [ 183.638059] PGD 100000067 P4D 100000067 PUD 100258067 PMD 106341067 PTE 0 [ 183.638144] Oops: 0000 [#2] PREEMPT SMP NOPTI [ 183.638201] CPU: 3 PID: 1790 Comm: poc Tainted: G D 5.17.0-rc6-ci-drm-11296+ #1 [ 183.638298] Hardware name: Intel Corporation CoffeeLake Client Platform/CoffeeLake H DDR4 RVP, BIOS CNLSFWR1.R00.X208.B00.1905301319 05/30/2019 [ 183.638430] RIP: 0010:memcpy_erms+0x6/0x10 [ 183.640213] RSP: 0018:ffffc90001763d48 EFLAGS: 00010246 [ 183.641117] RAX: ffff888109c14000 RBX: ffff888111bece40 RCX: 0000000000000ffc [ 183.642029] RDX: 0000000000001000 RSI: ffffc90000c86000 RDI: ffff888109c14004 [ 183.642946] RBP: 0000000000000ffc R08: 800000000000016b R09: 0000000000000000 [ 183.643848] R10: ffffc90000c85000 R11: 0000000000000048 R12: 0000000000001000 [ 183.644742] R13: ffff888111bed190 R14: ffff888109c14000 R15: 0000000000001000 [ 183.645653] FS: 00007fe5ef807540(0000) GS:ffff88845b380000(0000) knlGS:0000000000000000 [ 183.646570] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 183.647481] CR2: ffffc90000c86000 CR3: 000000010ff02006 CR4: 00000000003706e0 [ 183.648384] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 [ 183.649271] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 [ 183.650142] Call Trace: [ 183.650988] <TASK> [ 183.651793] vm_access+0x1f0/0x2a0 [i915] [ 183.652726] __access_remote_vm+0x224/0x380 [ 183.653561] mem_rw.isra.0+0xf9/0x190 [ 183.654402] vfs_read+0x9d/0x1b0 [ 183.655238] ksys_read+0x63/0xe0 [ 183.656065] do_syscall_64+0x38/0xc0 [ 183.656882] entry_SYSCALL_64_after_hwframe+0x44/0xae [ 183.657663] RIP: 0033:0x7fe5ef725142 [ 183.659351] RSP: 002b:00007ffe1e81c7e8 EFLAGS: 00000246 ORIG_RAX: 0000000000000000 [ 183.660227] RAX: ffffffffffffffda RBX: 0000557055dfb780 RCX: 00007fe5ef725142 [ 183.661104] RDX: 0000000000001000 RSI: 00007ffe1e81d880 RDI: 0000000000000005 [ 183.661972] RBP: 00007ffe1e81e890 R08: 0000000000000030 R09: 0000000000000046 [ 183.662832] R10: 0000557055dfc2e0 R11: 0000000000000246 R12: 0000557055dfb1c0 [ 183.663691] R13: 00007ffe1e81e980 R14: 0000000000000000 R15: 0000000000000000 Changes since v1: - Updated if condition with range_overflows_t [Chris Wilson] [mauld: tidy up the commit message and add Cc: stable] (cherry picked from commit 661412e301e2ca86799aa4f400d1cf0bd38c57c6)",,,"[{""url"":""https://git.kernel.org/stable/c/312d3d4f49e12f97260bcf972c848c3562126a18"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3886a86e7e6cc6ce2ce93c440fecd8f42aed0ce7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5f6e560e3e86ac053447524224e411034f41f5c7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/89ddcc81914ab58cc203acc844f27d55ada8ec0e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8f0ebea8f6e8c474264ed97d7a64c9c09ed4f5aa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49262,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:03.153,2025-02-26T07:01:03.153,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: crypto: octeontx2 - remove CONFIG_DM_CRYPT check No issues were found while using the driver with dm-crypt enabled. So CONFIG_DM_CRYPT check in the driver can be removed. This also fixes the NULL pointer dereference in driver release if CONFIG_DM_CRYPT is enabled. ... Unable to handle kernel NULL pointer dereference at virtual address 0000000000000008 ... Call trace: crypto_unregister_alg+0x68/0xfc crypto_unregister_skciphers+0x44/0x60 otx2_cpt_crypto_exit+0x100/0x1a0 otx2_cptvf_remove+0xf8/0x200 pci_device_remove+0x3c/0xd4 __device_release_driver+0x188/0x234 device_release_driver+0x2c/0x4c ...",,,"[{""url"":""https://git.kernel.org/stable/c/2d841af23ae8f398c85dd1ff2dc24b5ec8ba4569"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a1bf728f3388ac3a2c2dffa57e25622e90b9f6f2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a462214866eebbca87e13ff6d73092b1c4895624"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e6374086f249295121384bfaa7cdcc8d461146f0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49263,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:03.243,2025-02-26T07:01:03.243,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: brcmfmac: pcie: Release firmwares in the brcmf_pcie_setup error path This avoids leaking memory if brcmf_chip_get_raminfo fails. Note that the CLM blob is released in the device remove path.",,,"[{""url"":""https://git.kernel.org/stable/c/0347bdfdb1529994ac3a4cb425087c477a74eb2c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4e0b507597e1a86e9b4c056ab274c427223cf8ea"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5e90f0f3ead014867dade7a22f93958119f5efab"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a88337a06966f2d733ad9a97714b874469133f14"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d0ab87f8dcdfe72dc1d763be3392c1fc51a1ace2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f3820ddaf4f3ac80c7401ccc6a42e663c9317f31"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49264,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:03.337,2025-02-26T07:01:03.337,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: exec: Force single empty string when argv is empty Quoting[1] Ariadne Conill: ""In several other operating systems, it is a hard requirement that the second argument to execve(2) be the name of a program, thus prohibiting a scenario where argc < 1. POSIX 2017 also recommends this behaviour, but it is not an explicit requirement[2]: The argument arg0 should point to a filename string that is associated with the process being started by one of the exec functions. ... Interestingly, Michael Kerrisk opened an issue about this in 2008[3], but there was no consensus to support fixing this issue then. Hopefully now that CVE-2021-4034 shows practical exploitative use[4] of this bug in a shellcode, we can reconsider. This issue is being tracked in the KSPP issue tracker[5]."" While the initial code searches[6][7] turned up what appeared to be mostly corner case tests, trying to that just reject argv == NULL (or an immediately terminated pointer list) quickly started tripping[8] existing userspace programs. The next best approach is forcing a single empty string into argv and adjusting argc to match. The number of programs depending on argc == 0 seems a smaller set than those calling execve with a NULL argv. Account for the additional stack space in bprm_stack_limits(). Inject an empty string when argc == 0 (and set argc = 1). Warn about the case so userspace has some notice about the change: process './argc0' launched './argc0' with NULL argv: empty string added Additionally WARN() and reject NULL argv usage for kernel threads. [1] https://lore.kernel.org/lkml/20220127000724.15106-1-ariadne@dereferenced.org/ [2] https://pubs.opengroup.org/onlinepubs/9699919799/functions/exec.html [3] https://bugzilla.kernel.org/show_bug.cgi?id=8408 [4] https://www.qualys.com/2022/01/25/cve-2021-4034/pwnkit.txt [5] https://github.com/KSPP/linux/issues/176 [6] https://codesearch.debian.net/search?q=execve%5C+*%5C%28%5B%5E%2C%5D%2B%2C+*NULL&literal=0 [7] https://codesearch.debian.net/search?q=execlp%3F%5Cs*%5C%28%5B%5E%2C%5D%2B%2C%5Cs*NULL&literal=0 [8] https://lore.kernel.org/lkml/20220131144352.GE16385@xsang-OptiPlex-9020/",,,"[{""url"":""https://git.kernel.org/stable/c/1290eb4412aa0f0e9f3434b406dc8e255da85f9e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1fe82bfd9e4ce93399d815ca458b58505191c3e8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/27a6f495b63a1804cc71be45911065db7757a98c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/41f6ea5b9aaa28b740d47ffe995a5013211fdbb0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/98e0c7c702894987732776736c99b85ade6fba45"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a8054d3fa5deb84b215d6be1b910a978f3cb840d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b50fb8dbc8b81aaa126387de428f4c42a7c72a73"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cfbfff8ce5e3d674947581f1eb9af0a1b1807950"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dcd46d897adb70d63e025f175a00a89797d31a43"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49265,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:03.437,2025-02-26T07:01:03.437,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: PM: domains: Fix sleep-in-atomic bug caused by genpd_debug_remove() When a genpd with GENPD_FLAG_IRQ_SAFE gets removed, the following sleep-in-atomic bug will be seen, as genpd_debug_remove() will be called with a spinlock being held. [ 0.029183] BUG: sleeping function called from invalid context at kernel/locking/rwsem.c:1460 [ 0.029204] in_atomic(): 1, irqs_disabled(): 128, non_block: 0, pid: 1, name: swapper/0 [ 0.029219] preempt_count: 1, expected: 0 [ 0.029230] CPU: 1 PID: 1 Comm: swapper/0 Not tainted 5.17.0-rc4+ #489 [ 0.029245] Hardware name: Thundercomm TurboX CM2290 (DT) [ 0.029256] Call trace: [ 0.029265] dump_backtrace.part.0+0xbc/0xd0 [ 0.029285] show_stack+0x3c/0xa0 [ 0.029298] dump_stack_lvl+0x7c/0xa0 [ 0.029311] dump_stack+0x18/0x34 [ 0.029323] __might_resched+0x10c/0x13c [ 0.029338] __might_sleep+0x4c/0x80 [ 0.029351] down_read+0x24/0xd0 [ 0.029363] lookup_one_len_unlocked+0x9c/0xcc [ 0.029379] lookup_positive_unlocked+0x10/0x50 [ 0.029392] debugfs_lookup+0x68/0xac [ 0.029406] genpd_remove.part.0+0x12c/0x1b4 [ 0.029419] of_genpd_remove_last+0xa8/0xd4 [ 0.029434] psci_cpuidle_domain_probe+0x174/0x53c [ 0.029449] platform_probe+0x68/0xe0 [ 0.029462] really_probe+0x190/0x430 [ 0.029473] __driver_probe_device+0x90/0x18c [ 0.029485] driver_probe_device+0x40/0xe0 [ 0.029497] __driver_attach+0xf4/0x1d0 [ 0.029508] bus_for_each_dev+0x70/0xd0 [ 0.029523] driver_attach+0x24/0x30 [ 0.029534] bus_add_driver+0x164/0x22c [ 0.029545] driver_register+0x78/0x130 [ 0.029556] __platform_driver_register+0x28/0x34 [ 0.029569] psci_idle_init_domains+0x1c/0x28 [ 0.029583] do_one_initcall+0x50/0x1b0 [ 0.029595] kernel_init_freeable+0x214/0x280 [ 0.029609] kernel_init+0x2c/0x13c [ 0.029622] ret_from_fork+0x10/0x20 It doesn't seem necessary to call genpd_debug_remove() with the lock, so move it out from locking to fix the problem.",,,"[{""url"":""https://git.kernel.org/stable/c/2039163c30f886cf5638afd6993705ae9bb34a06"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d1b6840d8fb9b35193d45d8fe6b4d830bfd20c3c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f6bfe8b5b2c2a5ac8bd2fc7bca3706e6c3fc26d8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fee777ea77769cc5392a34805d9d73099a223fae"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49266,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:03.527,2025-02-26T07:01:03.527,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: block: fix rq-qos breakage from skipping rq_qos_done_bio() a647a524a467 (""block: don't call rq_qos_ops->done_bio if the bio isn't tracked"") made bio_endio() skip rq_qos_done_bio() if BIO_TRACKED is not set. While this fixed a potential oops, it also broke blk-iocost by skipping the done_bio callback for merged bios. Before, whether a bio goes through rq_qos_throttle() or rq_qos_merge(), rq_qos_done_bio() would be called on the bio on completion with BIO_TRACKED distinguishing the former from the latter. rq_qos_done_bio() is not called for bios which wenth through rq_qos_merge(). This royally confuses blk-iocost as the merged bios never finish and are considered perpetually in-flight. One reliably reproducible failure mode is an intermediate cgroup geting stuck active preventing its children from being activated due to the leaf-only rule, leading to loss of control. The following is from resctl-bench protection scenario which emulates isolating a web server like workload from a memory bomb run on an iocost configuration which should yield a reasonable level of protection. # cat /sys/block/nvme2n1/device/model Samsung SSD 970 PRO 512GB # cat /sys/fs/cgroup/io.cost.model 259:0 ctrl=user model=linear rbps=834913556 rseqiops=93622 rrandiops=102913 wbps=618985353 wseqiops=72325 wrandiops=71025 # cat /sys/fs/cgroup/io.cost.qos 259:0 enable=1 ctrl=user rpct=95.00 rlat=18776 wpct=95.00 wlat=8897 min=60.00 max=100.00 # resctl-bench -m 29.6G -r out.json run protection::scenario=mem-hog,loops=1 ... Memory Hog Summary ================== IO Latency: R p50=242u:336u/2.5m p90=794u:1.4m/7.5m p99=2.7m:8.0m/62.5m max=8.0m:36.4m/350m W p50=221u:323u/1.5m p90=709u:1.2m/5.5m p99=1.5m:2.5m/9.5m max=6.9m:35.9m/350m Isolation and Request Latency Impact Distributions: min p01 p05 p10 p25 p50 p75 p90 p95 p99 max mean stdev isol% 15.90 15.90 15.90 40.05 57.24 59.07 60.01 74.63 74.63 90.35 90.35 58.12 15.82 lat-imp% 0 0 0 0 0 4.55 14.68 15.54 233.5 548.1 548.1 53.88 143.6 Result: isol=58.12:15.82% lat_imp=53.88%:143.6 work_csv=100.0% missing=3.96% The isolation result of 58.12% is close to what this device would show without any IO control. Fix it by introducing a new flag BIO_QOS_MERGED to mark merged bios and calling rq_qos_done_bio() on them too. For consistency and clarity, rename BIO_TRACKED to BIO_QOS_THROTTLED. The flag checks are moved into rq_qos_done_bio() so that it's next to the code paths that set the flags. With the patch applied, the above same benchmark shows: # resctl-bench -m 29.6G -r out.json run protection::scenario=mem-hog,loops=1 ... Memory Hog Summary ================== IO Latency: R p50=123u:84.4u/985u p90=322u:256u/2.5m p99=1.6m:1.4m/9.5m max=11.1m:36.0m/350m W p50=429u:274u/995u p90=1.7m:1.3m/4.5m p99=3.4m:2.7m/11.5m max=7.9m:5.9m/26.5m Isolation and Request Latency Impact Distributions: min p01 p05 p10 p25 p50 p75 p90 p95 p99 max mean stdev isol% 84.91 84.91 89.51 90.73 92.31 94.49 96.36 98.04 98.71 100.0 100.0 94.42 2.81 lat-imp% 0 0 0 0 0 2.81 5.73 11.11 13.92 17.53 22.61 4.10 4.68 Result: isol=94.42:2.81% lat_imp=4.10%:4.68 work_csv=58.34% missing=0%",,,"[{""url"":""https://git.kernel.org/stable/c/09737db4c891eba25e6f6383a7c38afd4acc883f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/aa1b46dcdc7baaf5fec0be25782ef24b26aa209e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/af9452dfdba4bf7359ef7645eee2d243a1df0649"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dbd20bb904ad5731aaca8d009367a930d6ada111"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49267,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:03.620,2025-02-26T07:01:03.620,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: mmc: core: use sysfs_emit() instead of sprintf() sprintf() (still used in the MMC core for the sysfs output) is vulnerable to the buffer overflow. Use the new-fangled sysfs_emit() instead. Found by Linux Verification Center (linuxtesting.org) with the SVACE static analysis tool.",,,"[{""url"":""https://git.kernel.org/stable/c/659ca56b5415c7a1d05e185c36fad80ba165d063"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c4ab65738ab3e21fe519ee46b2051222bc8e32ef"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f5d8a5fe77ce933f53eb8f2e22bb7a1a2019ea11"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49268,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:03.710,2025-02-26T07:01:03.710,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: SOF: Intel: Fix NULL ptr dereference when ENOMEM Do not call snd_dma_free_pages() when snd_dma_alloc_pages() returns -ENOMEM because it leads to a NULL pointer dereference bug. The dmesg says: [ T1387] sof-audio-pci-intel-tgl 0000:00:1f.3: error: memory alloc failed: -12 [ T1387] BUG: kernel NULL pointer dereference, address: 0000000000000000 [ T1387] #PF: supervisor read access in kernel mode [ T1387] #PF: error_code(0x0000) - not-present page [ T1387] PGD 0 P4D 0 [ T1387] Oops: 0000 [#1] PREEMPT SMP NOPTI [ T1387] CPU: 6 PID: 1387 Comm: alsa-sink-HDA A Tainted: G W 5.17.0-rc4-superb-owl-00055-g80d47f5de5e3 [ T1387] Hardware name: HP HP Laptop 14s-dq2xxx/87FD, BIOS F.15 09/15/2021 [ T1387] RIP: 0010:dma_free_noncontiguous+0x37/0x80 [ T1387] Code: [... snip ...] [ T1387] RSP: 0000:ffffc90002b87770 EFLAGS: 00010246 [ T1387] RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000 [ T1387] RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff888101db30d0 [ T1387] RBP: 00000000fffffff4 R08: 0000000000000000 R09: 0000000000000000 [ T1387] R10: 0000000000000000 R11: ffffc90002b874d0 R12: 0000000000000001 [ T1387] R13: 0000000000058000 R14: ffff888105260c68 R15: ffff888105260828 [ T1387] FS: 00007f42e2ffd640(0000) GS:ffff888466b80000(0000) knlGS:0000000000000000 [ T1387] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ T1387] CR2: 0000000000000000 CR3: 000000014acf0003 CR4: 0000000000770ee0 [ T1387] PKRU: 55555554 [ T1387] Call Trace: [ T1387] <TASK> [ T1387] cl_stream_prepare+0x10a/0x120 [snd_sof_intel_hda_common 146addf995b9279ae7f509621078cccbe4f875e1] [... snip ...] [ T1387] </TASK>",,,"[{""url"":""https://git.kernel.org/stable/c/01df5f7627f1624d6bb0b8c0870a569b32adfbf8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/09eca322d4118dc26570ca6100fa34e59e5a5143"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/0c307349fe060971625b856c92f0361b8ea9a120"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/67f7bd9ff9079c1ee2de58e024fb582905c74c16"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b6094744e261083d3790c3def770ebf5060d383b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b7fb0ae09009d076964afe4c1a2bde1ee2bd88a9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49269,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:03.813,2025-02-26T07:01:03.813,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: can: isotp: sanitize CAN ID checks in isotp_bind() Syzbot created an environment that lead to a state machine status that can not be reached with a compliant CAN ID address configuration. The provided address information consisted of CAN ID 0x6000001 and 0xC28001 which both boil down to 11 bit CAN IDs 0x001 in sending and receiving. Sanitize the SFF/EFF CAN ID values before performing the address checks.",,,"[{""url"":""https://git.kernel.org/stable/c/3ea566422cbde9610c2734980d1286ab681bb40e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7b4652fc71dcec043977a6def80ef5034c913615"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cf522d741f5301223cc94b978eb1603c7590d65e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d72866a7f5326160d2a9d945a33eb6ef1883e25d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f343dbe82314ab457153c9afd970be4e9e553020"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49270,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:03.907,2025-03-25T15:23:34.137,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: dm: fix use-after-free in dm_cleanup_zoned_dev() dm_cleanup_zoned_dev() uses queue, so it must be called before blk_cleanup_disk() starts its killing: blk_cleanup_disk->blk_cleanup_queue()->kobject_put()->blk_release_queue()-> ->...RCU...->blk_free_queue_rcu()->kmem_cache_free() Otherwise, RCU callback may be executed first and dm_cleanup_zoned_dev() will touch free'd memory: BUG: KASAN: use-after-free in dm_cleanup_zoned_dev+0x33/0xd0 Read of size 8 at addr ffff88805ac6e430 by task dmsetup/681 CPU: 4 PID: 681 Comm: dmsetup Not tainted 5.17.0-rc2+ #6 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-2 04/01/2014 Call Trace: <TASK> dump_stack_lvl+0x57/0x7d print_address_description.constprop.0+0x1f/0x150 ? dm_cleanup_zoned_dev+0x33/0xd0 kasan_report.cold+0x7f/0x11b ? dm_cleanup_zoned_dev+0x33/0xd0 dm_cleanup_zoned_dev+0x33/0xd0 __dm_destroy+0x26a/0x400 ? dm_blk_ioctl+0x230/0x230 ? up_write+0xd8/0x270 dev_remove+0x156/0x1d0 ctl_ioctl+0x269/0x530 ? table_clear+0x140/0x140 ? lock_release+0xb2/0x750 ? remove_all+0x40/0x40 ? rcu_read_lock_sched_held+0x12/0x70 ? lock_downgrade+0x3c0/0x3c0 ? rcu_read_lock_sched_held+0x12/0x70 dm_ctl_ioctl+0xa/0x10 __x64_sys_ioctl+0xb9/0xf0 do_syscall_64+0x3b/0x90 entry_SYSCALL_64_after_hwframe+0x44/0xae RIP: 0033:0x7fb6dfa95c27","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""FB1C7FD1-C89E-4955-B265-456A9F757302""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0987f00a76a17aa7213da492c00ed9e5a6210c73"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/43a043aed964659bc69ef81f266912b73c80d837"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/588b7f5df0cb64f281290c7672470c006abe7160"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fdfe414ca28ddfd562c233fb27385cf820de03e8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49271,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:04.000,2025-02-26T07:01:04.000,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: cifs: prevent bad output lengths in smb2_ioctl_query_info() When calling smb2_ioctl_query_info() with smb_query_info::flags=PASSTHRU_FSCTL and smb_query_info::output_buffer_length=0, the following would return 0x10 buffer = memdup_user(arg + sizeof(struct smb_query_info), qi.output_buffer_length); if (IS_ERR(buffer)) { kfree(vars); return PTR_ERR(buffer); } rather than a valid pointer thus making IS_ERR() check fail. This would then cause a NULL ptr deference in @buffer when accessing it later in smb2_ioctl_query_ioctl(). While at it, prevent having a @buffer smaller than 8 bytes to correctly handle SMB2_SET_INFO FileEndOfFileInformation requests when smb_query_info::flags=PASSTHRU_SET_INFO. Here is a small C reproducer which triggers a NULL ptr in @buffer when passing an invalid smb_query_info::flags #include <stdio.h> #include <stdlib.h> #include <stdint.h> #include <unistd.h> #include <fcntl.h> #include <sys/ioctl.h> #define die(s) perror(s), exit(1) #define QUERY_INFO 0xc018cf07 int main(int argc, char *argv[]) { int fd; if (argc < 2) exit(1); fd = open(argv[1], O_RDONLY); if (fd == -1) die(""open""); if (ioctl(fd, QUERY_INFO, (uint32_t[]) { 0, 0, 0, 4, 0, 0}) == -1) die(""ioctl""); close(fd); return 0; } mount.cifs //srv/share /mnt -o ... gcc repro.c && ./a.out /mnt/f0 [ 114.138620] general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN NOPTI [ 114.139310] KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007] [ 114.139775] CPU: 2 PID: 995 Comm: a.out Not tainted 5.17.0-rc8 #1 [ 114.140148] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.15.0-0-g2dd4b9b-rebuilt.opensuse.org 04/01/2014 [ 114.140818] RIP: 0010:smb2_ioctl_query_info+0x206/0x410 [cifs] [ 114.141221] Code: 00 00 00 00 fc ff df 48 c1 ea 03 80 3c 02 00 0f 85 c8 01 00 00 48 b8 00 00 00 00 00 fc ff df 4c 8b 7b 28 4c 89 fa 48 c1 ea 03 <80> 3c 02 00 0f 85 9c 01 00 00 49 8b 3f e8 58 02 fb ff 48 8b 14 24 [ 114.142348] RSP: 0018:ffffc90000b47b00 EFLAGS: 00010256 [ 114.142692] RAX: dffffc0000000000 RBX: ffff888115503200 RCX: ffffffffa020580d [ 114.143119] RDX: 0000000000000000 RSI: 0000000000000004 RDI: ffffffffa043a380 [ 114.143544] RBP: ffff888115503278 R08: 0000000000000001 R09: 0000000000000003 [ 114.143983] R10: fffffbfff4087470 R11: 0000000000000001 R12: ffff888115503288 [ 114.144424] R13: 00000000ffffffea R14: ffff888115503228 R15: 0000000000000000 [ 114.144852] FS: 00007f7aeabdf740(0000) GS:ffff888151600000(0000) knlGS:0000000000000000 [ 114.145338] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 114.145692] CR2: 00007f7aeacfdf5e CR3: 000000012000e000 CR4: 0000000000350ee0 [ 114.146131] Call Trace: [ 114.146291] <TASK> [ 114.146432] ? smb2_query_reparse_tag+0x890/0x890 [cifs] [ 114.146800] ? cifs_mapchar+0x460/0x460 [cifs] [ 114.147121] ? rcu_read_lock_sched_held+0x3f/0x70 [ 114.147412] ? cifs_strndup_to_utf16+0x15b/0x250 [cifs] [ 114.147775] ? dentry_path_raw+0xa6/0xf0 [ 114.148024] ? cifs_convert_path_to_utf16+0x198/0x220 [cifs] [ 114.148413] ? smb2_check_message+0x1080/0x1080 [cifs] [ 114.148766] ? rcu_read_lock_sched_held+0x3f/0x70 [ 114.149065] cifs_ioctl+0x1577/0x3320 [cifs] [ 114.149371] ? lock_downgrade+0x6f0/0x6f0 [ 114.149631] ? cifs_readdir+0x2e60/0x2e60 [cifs] [ 114.149956] ? rcu_read_lock_sched_held+0x3f/0x70 [ 114.150250] ? __rseq_handle_notify_resume+0x80b/0xbe0 [ 114.150562] ? __up_read+0x192/0x710 [ 114.150791] ? __ia32_sys_rseq+0xf0/0xf0 [ 114.151025] ? __x64_sys_openat+0x11f/0x1d0 [ 114.151296] __x64_sys_ioctl+0x127/0x190 [ 114.151549] do_syscall_64+0x3b/0x90 [ 114.151768] entry_SYSCALL_64_after_hwframe+0x44/0xae [ 114.152079] RIP: 0033:0x7f7aead043df [ 114.152306] Code: 00 48 89 44 24 18 31 c0 48 8d 44 24 60 c7 04 24 ---truncated---",,,"[{""url"":""https://git.kernel.org/stable/c/7529fbee10d82493c5cb109e51788bf74816d1c0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9963ccea6087268e1275b992dca5d0dd4b938765"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b92e358757b91c2827af112cae9af513f26a3f34"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f143f8334fb9eb2f6c7c15b9da1472d9c965fd84"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fadddfc1dc3c6f79b21cff4a7e9a6c40b84fbc53"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49272,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:04.097,2025-02-26T07:01:04.097,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ALSA: pcm: Fix potential AB/BA lock with buffer_mutex and mmap_lock syzbot caught a potential deadlock between the PCM runtime->buffer_mutex and the mm->mmap_lock. It was brought by the recent fix to cover the racy read/write and other ioctls, and in that commit, I overlooked a (hopefully only) corner case that may take the revert lock, namely, the OSS mmap. The OSS mmap operation exceptionally allows to re-configure the parameters inside the OSS mmap syscall, where mm->mmap_mutex is already held. Meanwhile, the copy_from/to_user calls at read/write operations also take the mm->mmap_lock internally, hence it may lead to a AB/BA deadlock. A similar problem was already seen in the past and we fixed it with a refcount (in commit b248371628aa). The former fix covered only the call paths with OSS read/write and OSS ioctls, while we need to cover the concurrent access via both ALSA and OSS APIs now. This patch addresses the problem above by replacing the buffer_mutex lock in the read/write operations with a refcount similar as we've used for OSS. The new field, runtime->buffer_accessing, keeps the number of concurrent read/write operations. Unlike the former buffer_mutex protection, this protects only around the copy_from/to_user() calls; the other codes are basically protected by the PCM stream lock. The refcount can be a negative, meaning blocked by the ioctls. If a negative value is seen, the read/write aborts with -EBUSY. In the ioctl side, OTOH, they check this refcount, too, and set to a negative value for blocking unless it's already being accessed.",,,"[{""url"":""https://git.kernel.org/stable/c/40f4cffbe13a51faf136faf5f9ef6847782cd595"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7777744e92a0b30e3e0cce2758d911837011ebd9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7e9133607e1501c94881be35e118d8f84d96dcb4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9017201e8d8c6d1472273361389ed431188584a0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9661bf674d6a82b76e4ae424438a8ce1e3ed855d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/abedf0d08c79d76da0d6fa0d5dbbc98871dcbc2e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bc55cfd5718c7c23e5524582e9fa70b4d10f2433"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/be9813ad2fc8f0885f5ce6925af0d993ce5da4e5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49273,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:04.190,2025-04-14T16:53:14.150,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: rtc: pl031: fix rtc features null pointer dereference When there is no interrupt line, rtc alarm feature is disabled. The clearing of the alarm feature bit was being done prior to allocations of ldata->rtc device, resulting in a null pointer dereference. Clear RTC_FEATURE_ALARM after the rtc device is allocated.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.12"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""02AF1052-DC50-47B3-B1DE-638E4BBDCCD1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1b915703964f7e636961df04c540261dc55c6c70"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cd2722e411e8ab7e5ae41102f6925fa13dffdac5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d274ce4a3dfd0b9a292667535578359b865765cb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ea6af39f3da50c86367a71eb3cc674ade3ed244c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49274,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:04.280,2025-02-26T07:01:04.280,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ocfs2: fix crash when mount with quota enabled There is a reported crash when mounting ocfs2 with quota enabled. RIP: 0010:ocfs2_qinfo_lock_res_init+0x44/0x50 [ocfs2] Call Trace: ocfs2_local_read_info+0xb9/0x6f0 [ocfs2] dquot_load_quota_sb+0x216/0x470 dquot_load_quota_inode+0x85/0x100 ocfs2_enable_quotas+0xa0/0x1c0 [ocfs2] ocfs2_fill_super.cold+0xc8/0x1bf [ocfs2] mount_bdev+0x185/0x1b0 legacy_get_tree+0x27/0x40 vfs_get_tree+0x25/0xb0 path_mount+0x465/0xac0 __x64_sys_mount+0x103/0x140 It is caused by when initializing dqi_gqlock, the corresponding dqi_type and dqi_sb are not properly initialized. This issue is introduced by commit 6c85c2c72819, which wants to avoid accessing uninitialized variables in error cases. So make global quota info properly initialized.",,,"[{""url"":""https://git.kernel.org/stable/c/01931e1c4e3de5d777253acae64c0e8fd071a1dd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7c5312fdb1dcfdc1951b018669af88d5d6420b31"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/de19433423c7bedabbd4f9a25f7dbc62c5e78921"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/eda31f77317647b9fbf889779ee1fb6907651865"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49275,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:04.370,2025-03-25T15:24:08.757,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: can: m_can: m_can_tx_handler(): fix use after free of skb can_put_echo_skb() will clone skb then free the skb. Move the can_put_echo_skb() for the m_can version 3.0.x directly before the start of the xmit in hardware, similar to the 3.1.x branch.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.18"",""versionEndExcluding"":""4.9.324"",""matchCriteriaId"":""86D6E5BE-2946-4C39-8AB8-0AE8ED114B4D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.289"",""matchCriteriaId"":""9209AEEF-782D-43E6-AA5C-9F5B9CD6ED11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.253"",""matchCriteriaId"":""2B22ACD7-9025-4AD5-AD6E-A929DEC79B75""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.207"",""matchCriteriaId"":""C27A52F3-82C8-4F03-BE80-38D11CDBD503""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""91D3BFD0-D3F3-4018-957C-96CCBF357D79""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/08d90846e438ac22dc56fc49ec0b0d195831c5ed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2e8e79c416aae1de224c0f1860f2e3350fa171f8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/31417073493f302d26ab66b3abc098d43227b835"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4db7d6f481990dd179a9ee7126dc7aa31ea4fff3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7728d937ec403a1ceff9483023252d2cb8777f81"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/869016a2938ac44f7b2fb7fc22c89edad99eb9b3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d3892a747ab16b1eb6593a19d29f62c3b3f020ac"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d93ed9aff64968f4cdad690712eb4f48ae537bde"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f43e64076ff1b1dcb893fb77ad1204105f710a29"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49276,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:04.470,2025-04-14T17:08:00.310,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: jffs2: fix memory leak in jffs2_scan_medium If an error is returned in jffs2_scan_eraseblock() and some memory has been added to the jffs2_summary *s, we can observe the following kmemleak report: -------------------------------------------- unreferenced object 0xffff88812b889c40 (size 64): comm ""mount"", pid 692, jiffies 4294838325 (age 34.288s) hex dump (first 32 bytes): 40 48 b5 14 81 88 ff ff 01 e0 31 00 00 00 50 00 @H........1...P. 00 00 01 00 00 00 01 00 00 00 02 00 00 00 09 08 ................ backtrace: [<ffffffffae93a3a3>] __kmalloc+0x613/0x910 [<ffffffffaf423b9c>] jffs2_sum_add_dirent_mem+0x5c/0xa0 [<ffffffffb0f3afa8>] jffs2_scan_medium.cold+0x36e5/0x4794 [<ffffffffb0f3dbe1>] jffs2_do_mount_fs.cold+0xa7/0x2267 [<ffffffffaf40acf3>] jffs2_do_fill_super+0x383/0xc30 [<ffffffffaf40c00a>] jffs2_fill_super+0x2ea/0x4c0 [<ffffffffb0315d64>] mtd_get_sb+0x254/0x400 [<ffffffffb0315f5f>] mtd_get_sb_by_nr+0x4f/0xd0 [<ffffffffb0316478>] get_tree_mtd+0x498/0x840 [<ffffffffaf40bd15>] jffs2_get_tree+0x25/0x30 [<ffffffffae9f358d>] vfs_get_tree+0x8d/0x2e0 [<ffffffffaea7a98f>] path_mount+0x50f/0x1e50 [<ffffffffaea7c3d7>] do_mount+0x107/0x130 [<ffffffffaea7c5c5>] __se_sys_mount+0x1c5/0x2f0 [<ffffffffaea7c917>] __x64_sys_mount+0xc7/0x160 [<ffffffffb10142f5>] do_syscall_64+0x45/0x70 unreferenced object 0xffff888114b54840 (size 32): comm ""mount"", pid 692, jiffies 4294838325 (age 34.288s) hex dump (first 32 bytes): c0 75 b5 14 81 88 ff ff 02 e0 02 00 00 00 02 00 .u.............. 00 00 84 00 00 00 44 00 00 00 6b 6b 6b 6b 6b a5 ......D...kkkkk. backtrace: [<ffffffffae93be24>] kmem_cache_alloc_trace+0x584/0x880 [<ffffffffaf423b04>] jffs2_sum_add_inode_mem+0x54/0x90 [<ffffffffb0f3bd44>] jffs2_scan_medium.cold+0x4481/0x4794 [...] unreferenced object 0xffff888114b57280 (size 32): comm ""mount"", pid 692, jiffies 4294838393 (age 34.357s) hex dump (first 32 bytes): 10 d5 6c 11 81 88 ff ff 08 e0 05 00 00 00 01 00 ..l............. 00 00 38 02 00 00 28 00 00 00 6b 6b 6b 6b 6b a5 ..8...(...kkkkk. backtrace: [<ffffffffae93be24>] kmem_cache_alloc_trace+0x584/0x880 [<ffffffffaf423c34>] jffs2_sum_add_xattr_mem+0x54/0x90 [<ffffffffb0f3a24f>] jffs2_scan_medium.cold+0x298c/0x4794 [...] unreferenced object 0xffff8881116cd510 (size 16): comm ""mount"", pid 692, jiffies 4294838395 (age 34.355s) hex dump (first 16 bytes): 00 00 00 00 00 00 00 00 09 e0 60 02 00 00 6b a5 ..........`...k. backtrace: [<ffffffffae93be24>] kmem_cache_alloc_trace+0x584/0x880 [<ffffffffaf423cc4>] jffs2_sum_add_xref_mem+0x54/0x90 [<ffffffffb0f3b2e3>] jffs2_scan_medium.cold+0x3a20/0x4794 [...] -------------------------------------------- Therefore, we should call jffs2_sum_reset_collected(s) on exit to release the memory added in s. In addition, a new tag ""out_buf"" is added to prevent the NULL pointer reference caused by s being NULL. (thanks to Zhang Yi for this analysis)","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.15"",""versionEndExcluding"":""4.9.311"",""matchCriteriaId"":""73A8CFF5-6110-4547-8A39-17A10B5D347A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.276"",""matchCriteriaId"":""6D9B028C-6313-47F9-94B7-5F8122345E49""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.238"",""matchCriteriaId"":""FA28527A-11D3-41D2-9C4C-ECAC0D6A4A2D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""8CB6E8F5-C2B1-46F3-A807-0F6104AC340F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""91D3BFD0-D3F3-4018-957C-96CCBF357D79""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/455f4a23490bfcbedc8e5c245c463a59b19e5ddd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/51dbb5e36d59f62e34d462b801c1068248149cfe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/52ba0ab4f0a606f02a6163493378989faa1ec10a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/82462324bf35b6b553400af1c1aa265069cee28f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9b0c69182f09b70779817af4dcf89780955d5c4c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9cdd3128874f5fe759e2c4e1360ab7fb96a8d1df"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b26bbc0c122cad038831f226a4cb4de702225e16"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b36bccb04e14cc0c1e2d0e92d477fe220314fad6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e711913463af916d777a4873068f415f1fe2ad33"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49277,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:04.567,2025-04-14T17:09:03.497,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: jffs2: fix memory leak in jffs2_do_mount_fs If jffs2_build_filesystem() in jffs2_do_mount_fs() returns an error, we can observe the following kmemleak report: -------------------------------------------- unreferenced object 0xffff88811b25a640 (size 64): comm ""mount"", pid 691, jiffies 4294957728 (age 71.952s) hex dump (first 32 bytes): 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [<ffffffffa493be24>] kmem_cache_alloc_trace+0x584/0x880 [<ffffffffa5423a06>] jffs2_sum_init+0x86/0x130 [<ffffffffa5400e58>] jffs2_do_mount_fs+0x798/0xac0 [<ffffffffa540acf3>] jffs2_do_fill_super+0x383/0xc30 [<ffffffffa540c00a>] jffs2_fill_super+0x2ea/0x4c0 [...] unreferenced object 0xffff88812c760000 (size 65536): comm ""mount"", pid 691, jiffies 4294957728 (age 71.952s) hex dump (first 32 bytes): bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb ................ bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb ................ backtrace: [<ffffffffa493a449>] __kmalloc+0x6b9/0x910 [<ffffffffa5423a57>] jffs2_sum_init+0xd7/0x130 [<ffffffffa5400e58>] jffs2_do_mount_fs+0x798/0xac0 [<ffffffffa540acf3>] jffs2_do_fill_super+0x383/0xc30 [<ffffffffa540c00a>] jffs2_fill_super+0x2ea/0x4c0 [...] -------------------------------------------- This is because the resources allocated in jffs2_sum_init() are not released. Call jffs2_sum_exit() to release these resources to solve the problem.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.15"",""versionEndExcluding"":""4.9.311"",""matchCriteriaId"":""73A8CFF5-6110-4547-8A39-17A10B5D347A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.276"",""matchCriteriaId"":""6D9B028C-6313-47F9-94B7-5F8122345E49""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.238"",""matchCriteriaId"":""FA28527A-11D3-41D2-9C4C-ECAC0D6A4A2D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""8CB6E8F5-C2B1-46F3-A807-0F6104AC340F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""91D3BFD0-D3F3-4018-957C-96CCBF357D79""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0978e9af4559a171ac7a74a1b3ef21804b0a0fa9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2a9d8184458562e6bf2f40d0e677fc85e2dd3834"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4392e8aeebc5a4f8073620bccba7de1b1f6d7c88"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5f34310d1376ca5b2ed798258def2c2ab3cc6699"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/607d3aab7349f18e0d9dba4100d09d16fe27caca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9a0f6610c7daedd2eace430beeb08a8b7ac80699"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c94128470e6fe53d9bd9d16d2d3271813f9d37af"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d051cef784de4d54835f6b6836d98a8f6935772c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/dbe0d0521eaa6a3d235517319266c539bb5c5112"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49278,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:04.660,2025-02-26T07:01:04.660,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: remoteproc: Fix count check in rproc_coredump_write() Check count for 0, to avoid a potential underflow. Make the check the same as the one in rproc_recovery_write().",,,"[{""url"":""https://git.kernel.org/stable/c/11572dad9fbadbd9269a2550f7e236b5b8c2d80c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/34afac3c75fa08d6fabbab4c93f0a90618afaaa6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a8c3e53517985d69040a1b36a269e85f99cf0cea"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b97b305656a7013690e7b6e310f0e827e0bbff90"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f89672cc3681952f2d06314981a6b45f8b0045d1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49279,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:04.750,2025-04-14T20:06:29.633,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: NFSD: prevent integer overflow on 32 bit systems On a 32 bit system, the ""len * sizeof(*p)"" operation can have an integer overflow.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-190""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.19.238"",""matchCriteriaId"":""E0B62342-F287-4C6B-92AA-C1BC61DDAFFA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""8CB6E8F5-C2B1-46F3-A807-0F6104AC340F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""91D3BFD0-D3F3-4018-957C-96CCBF357D79""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/23a9dbbe0faf124fc4c139615633b9d12a3a89ef"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/303cd6173dce0a28d26526c77814eb90a41bd898"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3a2789e8ccb4a3e2a631f6817a2d3bb98b8c4fd8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/79b1c54fc6ce09ee0d5fe088bb3de26ae2150e3c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7af164fa2f1abc577d357d22d83a2f3490875d7e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ce1aa09cc14ed625104acc2d487bd92b9a88efe2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e4195d27306ea468a6dc3a27af6f586709951229"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49280,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:04.840,2025-04-14T20:09:38.570,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: NFSD: prevent underflow in nfssvc_decode_writeargs() Smatch complains: fs/nfsd/nfsxdr.c:341 nfssvc_decode_writeargs() warn: no lower bound on 'args->len' Change the type to unsigned to prevent this issue.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-191""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.311"",""matchCriteriaId"":""C86EFD13-93D4-4385-83E8-C665BE8F570F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.276"",""matchCriteriaId"":""6D9B028C-6313-47F9-94B7-5F8122345E49""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.238"",""matchCriteriaId"":""FA28527A-11D3-41D2-9C4C-ECAC0D6A4A2D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""8CB6E8F5-C2B1-46F3-A807-0F6104AC340F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""91D3BFD0-D3F3-4018-957C-96CCBF357D79""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/184416d4b98509fb4c3d8fc3d6dc1437896cc159"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1a33e0de60feda402d05ac8a6cf409c19ea3e0b3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2764af8ce0bf03cc43ee4a11897cab96bde6caae"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/413d8fefafe531a9442bb623e3fe292a38f88d65"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/438068f4912183a59fcb6b7496a06437f7fd4e2b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/614a61e1592051cc42d3c38f899c9f7bdaad8a1d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/65e21cc042f4c1518c8c55283f53bc725b78419d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/85259340fc9bd54e3d567b41b881ecb4d0055da1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9f0f048c1bfa7867d565a95fd8c28f4484ba1043"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49281,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:04.967,2025-02-26T07:01:04.967,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: cifs: fix handlecache and multiuser In multiuser each individual user has their own tcon structure for the share and thus their own handle for a cached directory. When we umount such a share we much make sure to release the pinned down dentry for each such tcon and not just the master tcon. Otherwise we will get nasty warnings on umount that dentries are still in use: [ 3459.590047] BUG: Dentry 00000000115c6f41{i=12000000019d95,n=/} still in use\ (2) [unmount of cifs cifs] ... [ 3459.590492] Call Trace: [ 3459.590500] d_walk+0x61/0x2a0 [ 3459.590518] ? shrink_lock_dentry.part.0+0xe0/0xe0 [ 3459.590526] shrink_dcache_for_umount+0x49/0x110 [ 3459.590535] generic_shutdown_super+0x1a/0x110 [ 3459.590542] kill_anon_super+0x14/0x30 [ 3459.590549] cifs_kill_sb+0xf5/0x104 [cifs] [ 3459.590773] deactivate_locked_super+0x36/0xa0 [ 3459.590782] cleanup_mnt+0x131/0x190 [ 3459.590789] task_work_run+0x5c/0x90 [ 3459.590798] exit_to_user_mode_loop+0x151/0x160 [ 3459.590809] exit_to_user_mode_prepare+0x83/0xd0 [ 3459.590818] syscall_exit_to_user_mode+0x12/0x30 [ 3459.590828] do_syscall_64+0x48/0x90 [ 3459.590833] entry_SYSCALL_64_after_hwframe+0x44/0xae",,,"[{""url"":""https://git.kernel.org/stable/c/2fafbc198613823943c106d1ec9b516da692059f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/47178c7722ac528ea08aa82c3ef9ffa178962d7a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e71f6a3a1d5c826a30384fec587ca7503ef6bde5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ffa631c4bff59dde59b598011f570e27dfba3515"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49282,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:05.073,2025-04-14T20:09:48.047,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: f2fs: quota: fix loop condition at f2fs_quota_sync() cnt should be passed to sb_has_quota_active() instead of type to check active quota properly. Moreover, when the type is -1, the compiler with enough inline knowledge can discard sb_has_quota_active() check altogether, causing a NULL pointer dereference at the following inode_lock(dqopt->files[cnt]): [ 2.796010] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000a0 [ 2.796024] Mem abort info: [ 2.796025] ESR = 0x96000005 [ 2.796028] EC = 0x25: DABT (current EL), IL = 32 bits [ 2.796029] SET = 0, FnV = 0 [ 2.796031] EA = 0, S1PTW = 0 [ 2.796032] Data abort info: [ 2.796034] ISV = 0, ISS = 0x00000005 [ 2.796035] CM = 0, WnR = 0 [ 2.796046] user pgtable: 4k pages, 39-bit VAs, pgdp=00000003370d1000 [ 2.796048] [00000000000000a0] pgd=0000000000000000, pud=0000000000000000 [ 2.796051] Internal error: Oops: 96000005 [#1] PREEMPT SMP [ 2.796056] CPU: 7 PID: 640 Comm: f2fs_ckpt-259:7 Tainted: G S 5.4.179-arter97-r8-64666-g2f16e087f9d8 #1 [ 2.796057] Hardware name: Qualcomm Technologies, Inc. Lahaina MTP lemonadep (DT) [ 2.796059] pstate: 80c00005 (Nzcv daif +PAN +UAO) [ 2.796065] pc : down_write+0x28/0x70 [ 2.796070] lr : f2fs_quota_sync+0x100/0x294 [ 2.796071] sp : ffffffa3f48ffc30 [ 2.796073] x29: ffffffa3f48ffc30 x28: 0000000000000000 [ 2.796075] x27: ffffffa3f6d718b8 x26: ffffffa415fe9d80 [ 2.796077] x25: ffffffa3f7290048 x24: 0000000000000001 [ 2.796078] x23: 0000000000000000 x22: ffffffa3f7290000 [ 2.796080] x21: ffffffa3f72904a0 x20: ffffffa3f7290110 [ 2.796081] x19: ffffffa3f77a9800 x18: ffffffc020aae038 [ 2.796083] x17: ffffffa40e38e040 x16: ffffffa40e38e6d0 [ 2.796085] x15: ffffffa40e38e6cc x14: ffffffa40e38e6d0 [ 2.796086] x13: 00000000000004f6 x12: 00162c44ff493000 [ 2.796088] x11: 0000000000000400 x10: ffffffa40e38c948 [ 2.796090] x9 : 0000000000000000 x8 : 00000000000000a0 [ 2.796091] x7 : 0000000000000000 x6 : 0000d1060f00002a [ 2.796093] x5 : ffffffa3f48ff718 x4 : 000000000000000d [ 2.796094] x3 : 00000000060c0000 x2 : 0000000000000001 [ 2.796096] x1 : 0000000000000000 x0 : 00000000000000a0 [ 2.796098] Call trace: [ 2.796100] down_write+0x28/0x70 [ 2.796102] f2fs_quota_sync+0x100/0x294 [ 2.796104] block_operations+0x120/0x204 [ 2.796106] f2fs_write_checkpoint+0x11c/0x520 [ 2.796107] __checkpoint_and_complete_reqs+0x7c/0xd34 [ 2.796109] issue_checkpoint_thread+0x6c/0xb8 [ 2.796112] kthread+0x138/0x414 [ 2.796114] ret_from_fork+0x10/0x18 [ 2.796117] Code: aa0803e0 aa1f03e1 52800022 aa0103e9 (c8e97d02) [ 2.796120] ---[ end trace 96e942e8eb6a0b53 ]--- [ 2.800116] Kernel panic - not syncing: Fatal exception [ 2.800120] SMP: stopping secondary CPUs","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4.148"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""0E799591-01A4-45D3-AF7D-4C6309AC8E7C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.10.67"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""E35E629A-08A5-4AA5-AAD3-0327AB394504""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.13.19"",""versionEndExcluding"":""5.14"",""matchCriteriaId"":""097A0850-FAA6-4FFF-88C2-F5B49B5CE740""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14.6"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""44ED6312-668B-40E9-985A-5399C9E479F5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/680af5b824a52faa819167628665804a14f0e0df"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/724469814d805820cd37ea789769dba94123ff1a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e58ee6bd939b773675240f5d0f5b88a367c037c4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e9ebf1e8fc50b6a9336f9aea1082d7845e568d0e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f1d5946d47c0827bae39e1537959ce8d6f0224c5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f9156db0987f1b426015d56505e2c58dee70c90d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49283,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:05.167,2025-02-26T07:01:05.167,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: firmware: sysfb: fix platform-device leak in error path Make sure to free the platform device also in the unlikely event that registration fails.",,,"[{""url"":""https://git.kernel.org/stable/c/202c08914ba50dd324e42d5ad99535a89f242560"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b3e38f939ab4d0d86f56bff3362c3f88c4b2ad32"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bb7fcbe80a013dc883181dc818c407d38558f76c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fed4df558b8cdb6f3beea38a7c977f118f082b0d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49284,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:05.260,2025-04-14T20:07:31.780,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: coresight: syscfg: Fix memleak on registration failure in cscfg_create_device device_register() calls device_initialize(), according to doc of device_initialize: Use put_device() to give up your reference instead of freeing * @dev directly once you have called this function. To prevent potential memleak, use put_device() for error handling.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""A2DC15C6-2357-4732-97E0-A8A511BB24BF""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.2"",""matchCriteriaId"":""210C679C-CF84-44A3-8939-E629C87E54BF""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/412225b32986d5b11c3c1ad9234c50a3f5c52c76"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a529af1f5a5c096f3e18f0d5a32cfcc3d82df1ec"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c61e2fc87f24cae4701f352fe9ecd4c5c143106c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cfa5dbcdd7aece76f3415284569f2f384aff0253"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49285,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:05.360,2025-02-26T07:01:05.360,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: iio: accel: mma8452: use the correct logic to get mma8452_data The original logic to get mma8452_data is wrong, the *dev point to the device belong to iio_dev. we can't use this dev to find the correct i2c_client. The original logic happen to work because it finally use dev->driver_data to get iio_dev. Here use the API to_i2c_client() is wrong and make reader confuse. To correct the logic, it should be like this struct mma8452_data *data = iio_priv(dev_get_drvdata(dev)); But after commit 8b7651f25962 (""iio: iio_device_alloc(): Remove unnecessary self drvdata""), the upper logic also can't work. When try to show the avialable scale in userspace, will meet kernel dump, kernel handle NULL pointer dereference. So use dev_to_iio_dev() to correct the logic. Dual fixes tags as the second reflects when the bug was exposed, whilst the first reflects when the original bug was introduced.",,,"[{""url"":""https://git.kernel.org/stable/c/4c0bb583a4444cce224e8661090cbffc98e2fe07"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c87b7b12f48db86ac9909894f4dc0107d7df6375"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d2d9ebdbff79d87d27652578e6d1638ad3b5f3bf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49286,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:05.453,2025-02-26T07:01:05.453,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: tpm: use try_get_ops() in tpm-space.c As part of the series conversion to remove nested TPM operations: https://lore.kernel.org/all/20190205224723.19671-1-jarkko.sakkinen@linux.intel.com/ exposure of the chip->tpm_mutex was removed from much of the upper level code. In this conversion, tpm2_del_space() was missed. This didn't matter much because it's usually called closely after a converted operation, so there's only a very tiny race window where the chip can be removed before the space flushing is done which causes a NULL deref on the mutex. However, there are reports of this window being hit in practice, so fix this by converting tpm2_del_space() to use tpm_try_get_ops(), which performs all the teardown checks before acquring the mutex.",,,"[{""url"":""https://git.kernel.org/stable/c/476ddd23f818fb94cf86fb5617f3bb9a7c92113d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5b1d2561a03e534064b51c50c774657833d3d2cf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/95193d12f10a8a088843b25e0f5fe1d83ec6b079"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ba84f9a48366dcc3cdef978599433efe101dd5bd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/eda1662cce964c8a65bb86321f8d9cfa6e9ceaab"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fb5abce6b2bb5cb3d628aaa63fa821da8c4600f9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49287,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:05.557,2025-03-25T15:24:24.277,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tpm: fix reference counting for struct tpm_chip The following sequence of operations results in a refcount warning: 1. Open device /dev/tpmrm. 2. Remove module tpm_tis_spi. 3. Write a TPM command to the file descriptor opened at step 1. ------------[ cut here ]------------ WARNING: CPU: 3 PID: 1161 at lib/refcount.c:25 kobject_get+0xa0/0xa4 refcount_t: addition on 0; use-after-free. Modules linked in: tpm_tis_spi tpm_tis_core tpm mdio_bcm_unimac brcmfmac sha256_generic libsha256 sha256_arm hci_uart btbcm bluetooth cfg80211 vc4 brcmutil ecdh_generic ecc snd_soc_core crc32_arm_ce libaes raspberrypi_hwmon ac97_bus snd_pcm_dmaengine bcm2711_thermal snd_pcm snd_timer genet snd phy_generic soundcore [last unloaded: spi_bcm2835] CPU: 3 PID: 1161 Comm: hold_open Not tainted 5.10.0ls-main-dirty #2 Hardware name: BCM2711 [<c0410c3c>] (unwind_backtrace) from [<c040b580>] (show_stack+0x10/0x14) [<c040b580>] (show_stack) from [<c1092174>] (dump_stack+0xc4/0xd8) [<c1092174>] (dump_stack) from [<c0445a30>] (__warn+0x104/0x108) [<c0445a30>] (__warn) from [<c0445aa8>] (warn_slowpath_fmt+0x74/0xb8) [<c0445aa8>] (warn_slowpath_fmt) from [<c08435d0>] (kobject_get+0xa0/0xa4) [<c08435d0>] (kobject_get) from [<bf0a715c>] (tpm_try_get_ops+0x14/0x54 [tpm]) [<bf0a715c>] (tpm_try_get_ops [tpm]) from [<bf0a7d6c>] (tpm_common_write+0x38/0x60 [tpm]) [<bf0a7d6c>] (tpm_common_write [tpm]) from [<c05a7ac0>] (vfs_write+0xc4/0x3c0) [<c05a7ac0>] (vfs_write) from [<c05a7ee4>] (ksys_write+0x58/0xcc) [<c05a7ee4>] (ksys_write) from [<c04001a0>] (ret_fast_syscall+0x0/0x4c) Exception stack(0xc226bfa8 to 0xc226bff0) bfa0: 00000000 000105b4 00000003 beafe664 00000014 00000000 bfc0: 00000000 000105b4 000103f8 00000004 00000000 00000000 b6f9c000 beafe684 bfe0: 0000006c beafe648 0001056c b6eb6944 ---[ end trace d4b8409def9b8b1f ]--- The reason for this warning is the attempt to get the chip->dev reference in tpm_common_write() although the reference counter is already zero. Since commit 8979b02aaf1d (""tpm: Fix reference count to main device"") the extra reference used to prevent a premature zero counter is never taken, because the required TPM_CHIP_FLAG_TPM2 flag is never set. Fix this by moving the TPM 2 character device handling from tpm_chip_alloc() to tpm_add_char_device() which is called at a later point in time when the flag has been set in case of TPM2. Commit fdc915f7f719 (""tpm: expose spaces via a device link /dev/tpmrm<n>"") already introduced function tpm_devs_release() to release the extra reference but did not implement the required put on chip->devs that results in the call of this function. Fix this by putting chip->devs in tpm_chip_unregister(). Finally move the new implementation for the TPM 2 handling into a new function to avoid multiple checks for the TPM_CHIP_FLAG_TPM2 flag in the good case and error cases.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.12"",""versionEndExcluding"":""4.14.276"",""matchCriteriaId"":""76EDAF8B-A61C-4220-A866-7A0A933212D4""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.238"",""matchCriteriaId"":""FA28527A-11D3-41D2-9C4C-ECAC0D6A4A2D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.189"",""matchCriteriaId"":""8CB6E8F5-C2B1-46F3-A807-0F6104AC340F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.110"",""matchCriteriaId"":""91D3BFD0-D3F3-4018-957C-96CCBF357D79""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.33"",""matchCriteriaId"":""27C42AE8-B387-43E2-938A-E1C8B40BE6D5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.19"",""matchCriteriaId"":""20C43679-0439-405A-B97F-685BEE50613B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.1"",""matchCriteriaId"":""3004D9BF-0093-4C9C-8560-F3E91AFAE409""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/290e05f346d1829e849662c97e42d5ad984f5258"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2f928c0d5c02dbab49e8c19d98725c822f6fc409"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/473a66f99cb8173c14138c5a5c69bfad04e8f9ac"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/662893b4f6bd466ff9e1cd454c44c26d32d554fe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6e7baf84149fb43950631415de231b3a41915aa3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7e0438f83dc769465ee663bb5dcf8cc154940712"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a27ed2f3695baf15f9b34d2d7a1f9fc105539a81"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cb64bd038beacb4331fe464a36c8b5481e8f51e2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49288,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:05.657,2025-03-25T15:24:36.203,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ALSA: pcm: Fix races among concurrent prealloc proc writes We have no protection against concurrent PCM buffer preallocation changes via proc files, and it may potentially lead to UAF or some weird problem. This patch applies the PCM open_mutex to the proc write operation for avoiding the racy proc writes and the PCM stream open (and further operations).","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.14.279"",""matchCriteriaId"":""E398D278-925B-4646-9105-4FA36B6398BD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.243"",""matchCriteriaId"":""8577DA08-190B-481F-B919-ED3DAEA3E339""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.193"",""matchCriteriaId"":""EA77E853-1F30-4942-8B6A-37B168460310""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.109"",""matchCriteriaId"":""F3E1A428-8D87-4CD4-B9CA-C621B32933F8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.32"",""matchCriteriaId"":""3191B916-53BD-46E6-AE21-58197D35768E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.18"",""matchCriteriaId"":""C86410A0-E312-4F41-93E9-929EAFB31757""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.1"",""matchCriteriaId"":""3004D9BF-0093-4C9C-8560-F3E91AFAE409""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/37b12c16beb6f6c1c3c678c1aacbc46525c250f7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/51fce708ab8986a9879ee5da946a2cc120f1036d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5ed8f8e3c4e59d0396b9ccf2e639711e24295bb6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/69534c48ba8ce552ce383b3dfdb271ffe51820c3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a21d2f323b5a978dedf9ff1d50f101f85e39b3f2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b560d670c87d7d40b3cf6949246fa4c7aa65a00a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e14dca613e0a6ddc2bf6e360f16936a9f865205b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e7786c445bb67a9a6e64f66ebd6b7215b153ff7d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49289,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:05.757,2025-02-26T07:01:05.757,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: uaccess: fix integer overflow on access_ok() Three architectures check the end of a user access against the address limit without taking a possible overflow into account. Passing a negative length or another overflow in here returns success when it should not. Use the most common correct implementation here, which optimizes for a constant 'size' argument, and turns the common case into a single comparison.",,,"[{""url"":""https://git.kernel.org/stable/c/222ca305c9fd39e5ed8104da25c09b2b79a516a8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/99801e2f457824955da4aadaa035913a6dede03a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a1ad747fc1a0e06d1bf26b996ee8a56b5c8d02d8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e65d28d4e9bf90a35ba79c06661a572a38391dec"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49290,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:05.853,2025-04-14T20:07:47.107,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mac80211: fix potential double free on mesh join While commit 6a01afcf8468 (""mac80211: mesh: Free ie data when leaving mesh"") fixed a memory leak on mesh leave / teardown it introduced a potential memory corruption caused by a double free when rejoining the mesh: ieee80211_leave_mesh() -> kfree(sdata->u.mesh.ie); ... ieee80211_join_mesh() -> copy_mesh_setup() -> old_ie = ifmsh->ie; -> kfree(old_ie); This double free / kernel panics can be reproduced by using wpa_supplicant with an encrypted mesh (if set up without encryption via ""iw"" then ifmsh->ie is always NULL, which avoids this issue). And then calling: $ iw dev mesh0 mesh leave $ iw dev mesh0 mesh join my-mesh Note that typically these commands are not used / working when using wpa_supplicant. And it seems that wpa_supplicant or wpa_cli are going through a NETDEV_DOWN/NETDEV_UP cycle between a mesh leave and mesh join where the NETDEV_UP resets the mesh.ie to NULL via a memcpy of default_mesh_setup in cfg80211_netdev_notifier_call, which then avoids the memory corruption, too. The issue was first observed in an application which was not using wpa_supplicant but ""Senf"" instead, which implements its own calls to nl80211. Fixing the issue by removing the kfree()'ing of the mesh IE in the mesh join function and leaving it solely up to the mesh leave to free the mesh IE.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-415""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.4.233"",""versionEndExcluding"":""4.5"",""matchCriteriaId"":""8B4E143B-22A3-4A08-963A-D5E42624F2E9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.9.233"",""versionEndExcluding"":""4.9.309"",""matchCriteriaId"":""14421A1A-D085-43A1-8CC3-2D6145AC0DD0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.14.192"",""versionEndExcluding"":""4.14.274"",""matchCriteriaId"":""C5F6E8E5-D867-498F-AE3A-92A6EAEE7980""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.19.137"",""versionEndExcluding"":""4.19.237"",""matchCriteriaId"":""2EAAEEBF-40FA-40A0-AF06-1DBBA2D03F1B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4.56"",""versionEndExcluding"":""5.4.188"",""matchCriteriaId"":""AC24F2DA-E1C4-4D50-8C6B-F8CFCB58136D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.7.13"",""versionEndExcluding"":""5.10.109"",""matchCriteriaId"":""1B924A24-75E2-4683-A92C-5C51F9036DEC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.32"",""matchCriteriaId"":""3191B916-53BD-46E6-AE21-58197D35768E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.18"",""matchCriteriaId"":""C86410A0-E312-4F41-93E9-929EAFB31757""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.1"",""matchCriteriaId"":""3004D9BF-0093-4C9C-8560-F3E91AFAE409""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/12e407a8ef17623823fd0c066fbd7f103953d28d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/273ebddc5fda2967492cb0b6cdd7d81cfb821b76"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3bbd0000d012f92aec423b224784fbf0f7bf40f8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/46bb87d40683337757a2f902fcd4244b32bb4e86"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4a2d4496e15ea5bb5c8e83b94ca8ca7fb045e7d3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/582d8c60c0c053684f7138875e8150d5749ffc17"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5d3ff9542a40ce034416bca03864709540a36016"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/615716af8644813355e014314a0bc1e961250f5a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c1d9c3628ef0a0ca197595d0f9e01cd3b5dda186"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49291,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:05.950,2025-03-25T14:49:23.147,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ALSA: pcm: Fix races among concurrent hw_params and hw_free calls Currently we have neither proper check nor protection against the concurrent calls of PCM hw_params and hw_free ioctls, which may result in a UAF. Since the existing PCM stream lock can't be used for protecting the whole ioctl operations, we need a new mutex to protect those racy calls. This patch introduced a new mutex, runtime->buffer_mutex, and applies it to both hw_params and hw_free ioctl code paths. Along with it, the both functions are slightly modified (the mmap_count check is moved into the state-check block) for code simplicity.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.14.279"",""matchCriteriaId"":""E398D278-925B-4646-9105-4FA36B6398BD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.243"",""matchCriteriaId"":""8577DA08-190B-481F-B919-ED3DAEA3E339""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.193"",""matchCriteriaId"":""EA77E853-1F30-4942-8B6A-37B168460310""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.109"",""matchCriteriaId"":""F3E1A428-8D87-4CD4-B9CA-C621B32933F8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.32"",""matchCriteriaId"":""3191B916-53BD-46E6-AE21-58197D35768E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.16.18"",""matchCriteriaId"":""C86410A0-E312-4F41-93E9-929EAFB31757""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.1"",""matchCriteriaId"":""3004D9BF-0093-4C9C-8560-F3E91AFAE409""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0090c13cbbdffd7da079ac56f80373a9a1be0bf8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0f6947f5f5208f6ebd4d76a82a4757e2839a23f8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1bbf82d9f961414d6c76a08f7f843ea068e0ab7b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/33061d0fba51d2bf70a2ef9645f703c33fe8e438"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/92ee3c60ec9fe64404dc035e7c41277d74aa26cb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9cb6c40a6ebe4a0cfc9d6a181958211682cffea9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a42aa926843acca96c0dfbde2e835b8137f2f092"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fbeb492694ce0441053de57699e1e2b7bc148a69"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49292,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:06.047,2025-02-26T07:01:06.047,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ALSA: oss: Fix PCM OSS buffer allocation overflow We've got syzbot reports hitting INT_MAX overflow at vmalloc() allocation that is called from snd_pcm_plug_alloc(). Although we apply the restrictions to input parameters, it's based only on the hw_params of the underlying PCM device. Since the PCM OSS layer allocates a temporary buffer for the data conversion, the size may become unexpectedly large when more channels or higher rates is given; in the reported case, it went over INT_MAX, hence it hits WARN_ON(). This patch is an attempt to avoid such an overflow and an allocation for too large buffers. First off, it adds the limit of 1MB as the upper bound for period bytes. This must be large enough for all use cases, and we really don't want to handle a larger temporary buffer than this size. The size check is performed at two places, where the original period bytes is calculated and where the plugin buffer size is calculated. In addition, the driver uses array_size() and array3_size() for multiplications to catch overflows for the converted period size and buffer bytes.",,,"[{""url"":""https://git.kernel.org/stable/c/0c4190b41a69990666b4000999e27f8f1b2a426b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5ce74ff7059341d8b2f4d01c3383491df63d1898"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7a40cbf3579a8e14849ba7ce46309c1992658d2b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a63af1baf0a5e11827db60e3127f87e437cab6e5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e74a069c6a7bb505f3ade141dddf85f4b0b5145a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/efb6402c3c4a7c26d97c92d70186424097b6e366"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fb08bf99195a87c798bc8ae1357337a981faeade"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49293,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:06.140,2025-02-26T07:01:06.140,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: netfilter: nf_tables: initialize registers in nft_do_chain() Initialize registers to avoid stack leak into userspace.",,,"[{""url"":""https://git.kernel.org/stable/c/06f0ff82c70241a766a811ae1acf07d6e2734dcb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2c74374c2e88c7b7992bf808d9f9391f7452f9d9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4c905f6740a365464e91467aa50916555b28213d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4d28522acd1c4415c85f6b33463713a268f68965"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/64f24c76dd0ce53d0fa3a0bfb9aeea507c769485"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/88791b79a1eb2ba94e95d039243e28433583a67b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a3cc32863b175168283cb0a5fde08de6a1e27df9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dd03640529204ef4b8189fbdea08217d8d98271f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fafb904156fbb8f1dd34970cd5223e00b47c33be"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49294,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:06.237,2025-04-14T20:08:00.140,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/amd/display: Check if modulo is 0 before dividing. [How & Why] If a value of 0 is read, then this will cause a divide-by-0 panic.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-369""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""30EAD0EB-B3D1-4A88-A3D8-4F8242E81A01""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/07efce8269a038c37814eb656b4de14aa3015fc6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/10ef82d6e0af5536ec64770c07f6bbabfdd6977c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/49947b906a6bd9668eaf4f9cf691973c25c26955"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/96725758eff7b3805e4e94d1443a100757412720"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49295,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:06.333,2025-04-14T20:08:12.880,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: nbd: call genl_unregister_family() first in nbd_cleanup() Otherwise there may be race between module removal and the handling of netlink command, which can lead to the oops as shown below: BUG: kernel NULL pointer dereference, address: 0000000000000098 Oops: 0002 [#1] SMP PTI CPU: 1 PID: 31299 Comm: nbd-client Tainted: G E 5.14.0-rc4 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996) RIP: 0010:down_write+0x1a/0x50 Call Trace: start_creating+0x89/0x130 debugfs_create_dir+0x1b/0x130 nbd_start_device+0x13d/0x390 [nbd] nbd_genl_connect+0x42f/0x748 [nbd] genl_family_rcv_msg_doit.isra.0+0xec/0x150 genl_rcv_msg+0xe5/0x1e0 netlink_rcv_skb+0x55/0x100 genl_rcv+0x29/0x40 netlink_unicast+0x1a8/0x250 netlink_sendmsg+0x21b/0x430 ____sys_sendmsg+0x2a4/0x2d0 ___sys_sendmsg+0x81/0xc0 __sys_sendmsg+0x62/0xb0 __x64_sys_sendmsg+0x1f/0x30 do_syscall_64+0x3b/0xc0 entry_SYSCALL_64_after_hwframe+0x44/0xae Modules linked in: nbd(E-)","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""42074657-A7B6-4740-88B7-67B440018C1C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/013a79f1b5c89290e2e97f1ebf14b14e0cf5fe5c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/06c4da89c24e7023ea448cadf8e9daf06a0aae6e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1be608e1ee1f222464b2856bda9b85ab5184a33e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3d5da1ffba3388c2ae2e6c598855a4d887d3bf79"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6f505bbb8063fd3a238a4239d2d8c165e5279f6f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8a1435c862ea09b06be7acda325128dc08458e25"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c0868f6e728c3c28bef0e8bee89d2daf86a8bbca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cbeafa7a79d08ecdb55f8f1d41a11323d0f709db"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49296,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:06.433,2025-04-14T20:08:21.310,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ceph: fix possible deadlock when holding Fwb to get inline_data 1, mount with wsync. 2, create a file with O_RDWR, and the request was sent to mds.0: ceph_atomic_open()--> ceph_mdsc_do_request(openc) finish_open(file, dentry, ceph_open)--> ceph_open()--> ceph_init_file()--> ceph_init_file_info()--> ceph_uninline_data()--> { ... if (inline_version == 1 || /* initial version, no data */ inline_version == CEPH_INLINE_NONE) goto out_unlock; ... } The inline_version will be 1, which is the initial version for the new create file. And here the ci->i_inline_version will keep with 1, it's buggy. 3, buffer write to the file immediately: ceph_write_iter()--> ceph_get_caps(file, need=Fw, want=Fb, ...); generic_perform_write()--> a_ops->write_begin()--> ceph_write_begin()--> netfs_write_begin()--> netfs_begin_read()--> netfs_rreq_submit_slice()--> netfs_read_from_server()--> rreq->netfs_ops->issue_read()--> ceph_netfs_issue_read()--> { ... if (ci->i_inline_version != CEPH_INLINE_NONE && ceph_netfs_issue_op_inline(subreq)) return; ... } ceph_put_cap_refs(ci, Fwb); The ceph_netfs_issue_op_inline() will send a getattr(Fsr) request to mds.1. 4, then the mds.1 will request the rd lock for CInode::filelock from the auth mds.0, the mds.0 will do the CInode::filelock state transation from excl --> sync, but it need to revoke the Fxwb caps back from the clients. While the kernel client has aleady held the Fwb caps and waiting for the getattr(Fsr). It's deadlock! URL: https://tracker.ceph.com/issues/55377","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.34"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""48912B8B-BDF1-422C-9CA5-2DDFDBAADC80""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/292b7a7275ce535a1abfa4dd0b2e586162aaae1e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/825978fd6a0defc3c29d8a38b6cea76a0938d21e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49297,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:06.527,2025-02-26T07:01:06.527,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: nbd: fix io hung while disconnecting device In our tests, ""qemu-nbd"" triggers a io hung: INFO: task qemu-nbd:11445 blocked for more than 368 seconds. Not tainted 5.18.0-rc3-next-20220422-00003-g2176915513ca #884 ""echo 0 > /proc/sys/kernel/hung_task_timeout_secs"" disables this message. task:qemu-nbd state:D stack: 0 pid:11445 ppid: 1 flags:0x00000000 Call Trace: <TASK> __schedule+0x480/0x1050 ? _raw_spin_lock_irqsave+0x3e/0xb0 schedule+0x9c/0x1b0 blk_mq_freeze_queue_wait+0x9d/0xf0 ? ipi_rseq+0x70/0x70 blk_mq_freeze_queue+0x2b/0x40 nbd_add_socket+0x6b/0x270 [nbd] nbd_ioctl+0x383/0x510 [nbd] blkdev_ioctl+0x18e/0x3e0 __x64_sys_ioctl+0xac/0x120 do_syscall_64+0x35/0x80 entry_SYSCALL_64_after_hwframe+0x44/0xae RIP: 0033:0x7fd8ff706577 RSP: 002b:00007fd8fcdfebf8 EFLAGS: 00000246 ORIG_RAX: 0000000000000010 RAX: ffffffffffffffda RBX: 0000000040000000 RCX: 00007fd8ff706577 RDX: 000000000000000d RSI: 000000000000ab00 RDI: 000000000000000f RBP: 000000000000000f R08: 000000000000fbe8 R09: 000055fe497c62b0 R10: 00000002aff20000 R11: 0000000000000246 R12: 000000000000006d R13: 0000000000000000 R14: 00007ffe82dc5e70 R15: 00007fd8fcdff9c0 ""qemu-ndb -d"" will call ioctl 'NBD_DISCONNECT' first, however, following message was found: block nbd0: Send disconnect failed -32 Which indicate that something is wrong with the server. Then, ""qemu-nbd -d"" will call ioctl 'NBD_CLEAR_SOCK', however ioctl can't clear requests after commit 2516ab1543fd(""nbd: only clear the queue on device teardown""). And in the meantime, request can't complete through timeout because nbd_xmit_timeout() will always return 'BLK_EH_RESET_TIMER', which means such request will never be completed in this situation. Now that the flag 'NBD_CMD_INFLIGHT' can make sure requests won't complete multiple times, switch back to call nbd_clear_sock() in nbd_clear_sock_ioctl(), so that inflight requests can be cleared.",,,"[{""url"":""https://git.kernel.org/stable/c/09dadb5985023e27d4740ebd17e6fea4640110e5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/141318e62db87105b0103fccc59c9c5940da248d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/54b06dc2a206b4d67349bb56b92d4bd32700b7b1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/62d227f67a8c25d5e16f40e5290607f9306d2188"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/67e403136a0e1a55fef6a05f103a3979a39ad3fd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/69893d6d7f5c10d8306c1b5fc64b71efc91aa6cd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c4ba982bd5084fa659ef518aaf159e4dab02ecda"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f72df77600a43e59b3189e53b47f8685739867d3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49298,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:06.630,2025-04-14T20:08:32.443,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: staging: rtl8712: fix uninit-value in r871xu_drv_init() When 'tmpU1b' returns from r8712_read8(padapter, EE_9346CR) is 0, 'mac[6]' will not be initialized. BUG: KMSAN: uninit-value in r871xu_drv_init+0x2d54/0x3070 drivers/staging/rtl8712/usb_intf.c:541 r871xu_drv_init+0x2d54/0x3070 drivers/staging/rtl8712/usb_intf.c:541 usb_probe_interface+0xf19/0x1600 drivers/usb/core/driver.c:396 really_probe+0x653/0x14b0 drivers/base/dd.c:596 __driver_probe_device+0x3e9/0x530 drivers/base/dd.c:752 driver_probe_device drivers/base/dd.c:782 [inline] __device_attach_driver+0x79f/0x1120 drivers/base/dd.c:899 bus_for_each_drv+0x2d6/0x3f0 drivers/base/bus.c:427 __device_attach+0x593/0x8e0 drivers/base/dd.c:970 device_initial_probe+0x4a/0x60 drivers/base/dd.c:1017 bus_probe_device+0x17b/0x3e0 drivers/base/bus.c:487 device_add+0x1fff/0x26e0 drivers/base/core.c:3405 usb_set_configuration+0x37e9/0x3ed0 drivers/usb/core/message.c:2170 usb_generic_driver_probe+0x13c/0x300 drivers/usb/core/generic.c:238 usb_probe_device+0x309/0x570 drivers/usb/core/driver.c:293 really_probe+0x653/0x14b0 drivers/base/dd.c:596 __driver_probe_device+0x3e9/0x530 drivers/base/dd.c:752 driver_probe_device drivers/base/dd.c:782 [inline] __device_attach_driver+0x79f/0x1120 drivers/base/dd.c:899 bus_for_each_drv+0x2d6/0x3f0 drivers/base/bus.c:427 __device_attach+0x593/0x8e0 drivers/base/dd.c:970 device_initial_probe+0x4a/0x60 drivers/base/dd.c:1017 bus_probe_device+0x17b/0x3e0 drivers/base/bus.c:487 device_add+0x1fff/0x26e0 drivers/base/core.c:3405 usb_new_device+0x1b8e/0x2950 drivers/usb/core/hub.c:2566 hub_port_connect drivers/usb/core/hub.c:5358 [inline] hub_port_connect_change drivers/usb/core/hub.c:5502 [inline] port_event drivers/usb/core/hub.c:5660 [inline] hub_event+0x58e3/0x89e0 drivers/usb/core/hub.c:5742 process_one_work+0xdb6/0x1820 kernel/workqueue.c:2307 worker_thread+0x10b3/0x21e0 kernel/workqueue.c:2454 kthread+0x3c7/0x500 kernel/kthread.c:377 ret_from_fork+0x1f/0x30 Local variable mac created at: r871xu_drv_init+0x1771/0x3070 drivers/staging/rtl8712/usb_intf.c:394 usb_probe_interface+0xf19/0x1600 drivers/usb/core/driver.c:396 KMSAN: uninit-value in r871xu_drv_init https://syzkaller.appspot.com/bug?id=3cd92b1d85428b128503bfa7a250294c9ae00bd8","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-908""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""0D4D4067-974D-4560-8320-22FDA399E3F9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0458e5428e5e959d201a40ffe71d762a79ecedc4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0b7371a22489cbb2e8e826ca03fb5ce92afb04fe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/277faa442fe0c59f418ac53f47a78e1266addd65"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/52a0d88c328098b4e9fb8f2f3877fec0eff4104b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/70df04433fd351ba72bc635bd0b5fe443d9ac964"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/76a964ad0ea8f2b10abd69a7532e174a28258283"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a6535d00a9d54ce1c2a8d86a85001ffb6844f9b2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f36e754a1f0bafb9feeea63463de78080acb6de0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ff727ab0b7d7a56b5ef281f12abd00c4b85894e9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49299,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:06.727,2025-06-19T14:15:34.170,Rejected,[],Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.,,,[],,,,,,,,,
CVE-2022-49300,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:06.830,2025-04-14T20:08:41.297,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: nbd: fix race between nbd_alloc_config() and module removal When nbd module is being removing, nbd_alloc_config() may be called concurrently by nbd_genl_connect(), although try_module_get() will return false, but nbd_alloc_config() doesn't handle it. The race may lead to the leak of nbd_config and its related resources (e.g, recv_workq) and oops in nbd_read_stat() due to the unload of nbd module as shown below: BUG: kernel NULL pointer dereference, address: 0000000000000040 Oops: 0000 [#1] SMP PTI CPU: 5 PID: 13840 Comm: kworker/u17:33 Not tainted 5.14.0+ #1 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996) Workqueue: knbd16-recv recv_work [nbd] RIP: 0010:nbd_read_stat.cold+0x130/0x1a4 [nbd] Call Trace: recv_work+0x3b/0xb0 [nbd] process_one_work+0x1ed/0x390 worker_thread+0x4a/0x3d0 kthread+0x12a/0x150 ret_from_fork+0x22/0x30 Fixing it by checking the return value of try_module_get() in nbd_alloc_config(). As nbd_alloc_config() may return ERR_PTR(-ENODEV), assign nbd->config only when nbd_alloc_config() succeeds to ensure the value of nbd->config is binary (valid or NULL). Also adding a debug message to check the reference counter of nbd_config during module removal.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""},{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""42074657-A7B6-4740-88B7-67B440018C1C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/122e4adaff2439f1cc18cc7e931980fa7560df5c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/165cf2e0019fa6cedc75b456490c41494c34abb4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2573f2375b64280be977431701ed5d33b75b9ad0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2888fa41985f93ed0a6837cfbb06bcbfd7fa2314"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/71c142f910da44421213ade601bcbd23ceae19fa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8a7da4ced236ce6637fe70f14ca18e718d4bf9e9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c55b2b983b0fa012942c3eb16384b2b722caa810"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d09525720dd5201756f698bee1076de9aefd4602"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49301,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:06.923,2025-04-14T20:08:57.483,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: staging: rtl8712: fix uninit-value in usb_read8() and friends When r8712_usbctrl_vendorreq() returns negative, 'data' in usb_read{8,16,32} will not be initialized. BUG: KMSAN: uninit-value in string_nocheck lib/vsprintf.c:643 [inline] BUG: KMSAN: uninit-value in string+0x4ec/0x6f0 lib/vsprintf.c:725 string_nocheck lib/vsprintf.c:643 [inline] string+0x4ec/0x6f0 lib/vsprintf.c:725 vsnprintf+0x2222/0x3650 lib/vsprintf.c:2806 va_format lib/vsprintf.c:1704 [inline] pointer+0x18e6/0x1f70 lib/vsprintf.c:2443 vsnprintf+0x1a9b/0x3650 lib/vsprintf.c:2810 vprintk_store+0x537/0x2150 kernel/printk/printk.c:2158 vprintk_emit+0x28b/0xab0 kernel/printk/printk.c:2256 dev_vprintk_emit+0x5ef/0x6d0 drivers/base/core.c:4604 dev_printk_emit+0x1dd/0x21f drivers/base/core.c:4615 __dev_printk+0x3be/0x440 drivers/base/core.c:4627 _dev_info+0x1ea/0x22f drivers/base/core.c:4673 r871xu_drv_init+0x1929/0x3070 drivers/staging/rtl8712/usb_intf.c:401 usb_probe_interface+0xf19/0x1600 drivers/usb/core/driver.c:396 really_probe+0x6c7/0x1350 drivers/base/dd.c:621 __driver_probe_device+0x3e9/0x530 drivers/base/dd.c:752 driver_probe_device drivers/base/dd.c:782 [inline] __device_attach_driver+0x79f/0x1120 drivers/base/dd.c:899 bus_for_each_drv+0x2d6/0x3f0 drivers/base/bus.c:427 __device_attach+0x593/0x8e0 drivers/base/dd.c:970 device_initial_probe+0x4a/0x60 drivers/base/dd.c:1017 bus_probe_device+0x17b/0x3e0 drivers/base/bus.c:487 device_add+0x1fff/0x26e0 drivers/base/core.c:3405 usb_set_configuration+0x37e9/0x3ed0 drivers/usb/core/message.c:2170 usb_generic_driver_probe+0x13c/0x300 drivers/usb/core/generic.c:238 usb_probe_device+0x309/0x570 drivers/usb/core/driver.c:293 really_probe+0x6c7/0x1350 drivers/base/dd.c:621 __driver_probe_device+0x3e9/0x530 drivers/base/dd.c:752 driver_probe_device drivers/base/dd.c:782 [inline] __device_attach_driver+0x79f/0x1120 drivers/base/dd.c:899 bus_for_each_drv+0x2d6/0x3f0 drivers/base/bus.c:427 __device_attach+0x593/0x8e0 drivers/base/dd.c:970 device_initial_probe+0x4a/0x60 drivers/base/dd.c:1017 bus_probe_device+0x17b/0x3e0 drivers/base/bus.c:487 device_add+0x1fff/0x26e0 drivers/base/core.c:3405 usb_new_device+0x1b91/0x2950 drivers/usb/core/hub.c:2566 hub_port_connect drivers/usb/core/hub.c:5363 [inline] hub_port_connect_change drivers/usb/core/hub.c:5507 [inline] port_event drivers/usb/core/hub.c:5665 [inline] hub_event+0x58e3/0x89e0 drivers/usb/core/hub.c:5747 process_one_work+0xdb6/0x1820 kernel/workqueue.c:2289 worker_thread+0x10d0/0x2240 kernel/workqueue.c:2436 kthread+0x3c7/0x500 kernel/kthread.c:376 ret_from_fork+0x1f/0x30 Local variable data created at: usb_read8+0x5d/0x130 drivers/staging/rtl8712/usb_ops.c:33 r8712_read8+0xa5/0xd0 drivers/staging/rtl8712/rtl8712_io.c:29 KMSAN: uninit-value in r871xu_drv_init https://syzkaller.appspot.com/bug?id=3cd92b1d85428b128503bfa7a250294c9ae00bd8","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-908""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""C1C86ABC-337F-46B3-BCD8-22DC5A66E45A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/33ef21d55418ab6a62a63fd550b2dbe297433372"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/58762f1c63c75cbe1dc393eed3c9cf8e38310ca1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/95b0f54f8a898072a2810c05fab34d971f23a612"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d1b57669732d09da7e13ef86d058dab0cd57f6e0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d7ed3c85da0b230bcdf5329acfe012ed093f3daa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/de075af8c404f7d59ed34df230aedd9f645fb846"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49302,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:07.027,2025-04-14T20:05:35.690,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: USB: host: isp116x: check return value after calling platform_get_resource() It will cause null-ptr-deref if platform_get_resource() returns NULL, we need check the return value.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""0D4D4067-974D-4560-8320-22FDA399E3F9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/134a3408c2d3f7e23eb0e4556e0a2d9f36c2614e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3592cfd8b848bf0c4d7740d78a87a7b8f6e1fa9a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3825db88d8c704e7992b685618a03f82bffcf2ef"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7bffda1560a6f255fdf504e059fbbdb5d46b9e44"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/804de302ada3544699c5f48c5314b249af76faa3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/82a101f14943f479fd190b1e5b40d91c77e2ac1b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/aca0cab0e9ed33b6371aafb519a6c38f2850ffc3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c91a74b1f0f2d2d7e728742ae55e3ffe9ba7853d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ee105039d3653444de4d3ede642383c92855dc1e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49303,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:07.123,2025-04-14T20:05:52.120,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drivers: staging: rtl8192eu: Fix deadlock in rtw_joinbss_event_prehandle There is a deadlock in rtw_joinbss_event_prehandle(), which is shown below: (Thread 1) | (Thread 2) | _set_timer() rtw_joinbss_event_prehandle()| mod_timer() spin_lock_bh() //(1) | (wait a time) ... | rtw_join_timeout_handler() | _rtw_join_timeout_handler() del_timer_sync() | spin_lock_bh() //(2) (wait timer to stop) | ... We hold pmlmepriv->lock in position (1) of thread 1 and use del_timer_sync() to wait timer to stop, but timer handler also need pmlmepriv->lock in position (2) of thread 2. As a result, rtw_joinbss_event_prehandle() will block forever. This patch extracts del_timer_sync() from the protection of spin_lock_bh(), which could let timer handler to obtain the needed lock. What`s more, we change spin_lock_bh() to spin_lock_irq() in _rtw_join_timeout_handler() in order to prevent deadlock.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""5607D6E0-33DF-47C1-83F1-1EF7EC1AB24B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0fcddf9c7c10202946d5b19409efbdff744fba88"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/25cf414b0610fea29d8e045f315648d9007c9a46"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49304,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:07.213,2025-04-14T20:06:02.607,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drivers: tty: serial: Fix deadlock in sa1100_set_termios() There is a deadlock in sa1100_set_termios(), which is shown below: (Thread 1) | (Thread 2) | sa1100_enable_ms() sa1100_set_termios() | mod_timer() spin_lock_irqsave() //(1) | (wait a time) ... | sa1100_timeout() del_timer_sync() | spin_lock_irqsave() //(2) (wait timer to stop) | ... We hold sport->port.lock in position (1) of thread 1 and use del_timer_sync() to wait timer to stop, but timer handler also need sport->port.lock in position (2) of thread 2. As a result, sa1100_set_termios() will block forever. This patch moves del_timer_sync() before spin_lock_irqsave() in order to prevent the deadlock.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""0D4D4067-974D-4560-8320-22FDA399E3F9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0976808d0d171ec837d4bd3e9f4ad4a00ab703b8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/09a5958a2452ad22d0cb638711ef34ea1863a829"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2cbfc38df580bff5b2fe19f21c1a7520efcc4b3b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/34d91e555e5582cffdbcbb75517bc9217866823e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/553213432ef0c295becdc08c0207d2094468f673"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/62b2caef400c1738b6d22f636c628d9f85cd4c4c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6e2273eefab54a521d9c59efb6e1114e742bdf41"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/85e20f8bd31a46d8c60103d0274a8ebe8f47f2b2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/920f0ae7a129ffee98a106e3bbdfd61a2a59e939"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49305,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:07.310,2025-04-14T20:06:16.737,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drivers: staging: rtl8192u: Fix deadlock in ieee80211_beacons_stop() There is a deadlock in ieee80211_beacons_stop(), which is shown below: (Thread 1) | (Thread 2) | ieee80211_send_beacon() ieee80211_beacons_stop() | mod_timer() spin_lock_irqsave() //(1) | (wait a time) ... | ieee80211_send_beacon_cb() del_timer_sync() | spin_lock_irqsave() //(2) (wait timer to stop) | ... We hold ieee->beacon_lock in position (1) of thread 1 and use del_timer_sync() to wait timer to stop, but timer handler also need ieee->beacon_lock in position (2) of thread 2. As a result, ieee80211_beacons_stop() will block forever. This patch extracts del_timer_sync() from the protection of spin_lock_irqsave(), which could let timer handler to obtain the needed lock.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""D050F8AE-EE13-436A-B863-56AD3787ECFB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/042915c1bfedd684c1d98a841794ee203200571a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1fbe033c52480f7954c057510040fa6286c4ea25"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/66f769762f65d957f688f3258755c6ec410bf710"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/806c7b53414934ba2a39449b31fd1a038e500273"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b34cb54923a6e5ddefbaf358c85c922c6ab456e2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b465bb2ebf666116c1ac745cb80c65154dc0d27e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ffc9cab7243f8151be37966301307bfd3cda2db3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49306,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:07.413,2025-02-26T07:01:07.413,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: usb: dwc3: host: Stop setting the ACPI companion It is no longer needed. The sysdev pointer is now used when assigning the ACPI companions to the xHCI ports and USB devices. Assigning the ACPI companion here resulted in the fwnode->secondary pointer to be replaced also for the parent dwc3 device since the primary fwnode (the ACPI companion) was shared. That was unintentional and it created potential side effects like resource leaks.",,,"[{""url"":""https://git.kernel.org/stable/c/7fd069d65da2e20b1caec3b7bcf9dfbe28c04bb2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9c185fde906a48368bd2d2a8c17d4b6fb3d670af"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d7f35934f7ab67bfd9adabc84207e59da9c19108"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49307,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:07.503,2025-03-17T19:58:04.090,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tty: synclink_gt: Fix null-pointer-dereference in slgt_clean() When the driver fails at alloc_hdlcdev(), and then we remove the driver module, we will get the following splat: [ 25.065966] general protection fault, probably for non-canonical address 0xdffffc0000000182: 0000 [#1] PREEMPT SMP KASAN PTI [ 25.066914] KASAN: null-ptr-deref in range [0x0000000000000c10-0x0000000000000c17] [ 25.069262] RIP: 0010:detach_hdlc_protocol+0x2a/0x3e0 [ 25.077709] Call Trace: [ 25.077924] <TASK> [ 25.078108] unregister_hdlc_device+0x16/0x30 [ 25.078481] slgt_cleanup+0x157/0x9f0 [synclink_gt] Fix this by checking whether the 'info->netdev' is a null pointer first.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""0D4D4067-974D-4560-8320-22FDA399E3F9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/078212ad15dbd88840c82c97f12c93d83703c8fd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1ceb4ca9543a8a788febf6bc8dad2e605e172d5e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/50c341f9a2adc4c32a8ad5a39eb99d9c4a419e0d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/689ca31c542687709ba21ec2195c1fbce34fd029"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8a95696bdc0e13f8980f05b54a3b9081963d1256"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ba08cbc5b53e151d0acf1930fb526fc65b7f3e65"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d68d5e68b7f64de7170f8e04dd9b995c36b2c71c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ddd67751ab86c6a65f95c35293c42f85a42ac05d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f6e07eb7ebec53ffe81fc2489589320fbe4a6b75"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49308,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:07.607,2025-02-26T07:01:07.607,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: extcon: Modify extcon device to be created after driver data is set Currently, someone can invoke the sysfs such as state_show() intermittently before dev_set_drvdata() is done. And it can be a cause of kernel Oops because of edev is Null at that time. So modified the driver registration to after setting drviver data. - Oops's backtrace. Backtrace: [<c067865c>] (state_show) from [<c05222e8>] (dev_attr_show) [<c05222c0>] (dev_attr_show) from [<c02c66e0>] (sysfs_kf_seq_show) [<c02c6648>] (sysfs_kf_seq_show) from [<c02c496c>] (kernfs_seq_show) [<c02c4938>] (kernfs_seq_show) from [<c025e2a0>] (seq_read) [<c025e11c>] (seq_read) from [<c02c50a0>] (kernfs_fop_read) [<c02c5064>] (kernfs_fop_read) from [<c0231cac>] (__vfs_read) [<c0231c5c>] (__vfs_read) from [<c0231ee0>] (vfs_read) [<c0231e34>] (vfs_read) from [<c0232464>] (ksys_read) [<c02323f0>] (ksys_read) from [<c02324fc>] (sys_read) [<c02324e4>] (sys_read) from [<c00091d0>] (__sys_trace_return)",,,"[{""url"":""https://git.kernel.org/stable/c/033ec4e7e59ae5e1ef1e8c10bc6552926044ed1c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/35ff1ac55d301efb3f467cf5426faaeb3452994b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/368e68ad6da4317fc4170e8d92b51c13d1bfe7a7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5dcc2afe716d69f5112ce035cb14f007461ff189"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6e721f3ad0535b24f19a62420f4da95212cf069c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/abf3b222614f49f98e606fccdd269161c0d70204"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cb81ea998c461868d1168411a867d8ffee12f23f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d472c78cc82999d07bd09193a6718016ce9cd386"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49309,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:07.700,2025-05-02T07:15:49.683,Modified,[],"In the Linux kernel, the following vulnerability has been resolved: drivers: staging: rtl8723bs: Fix deadlock in rtw_surveydone_event_callback() There is a deadlock in rtw_surveydone_event_callback(), which is shown below: (Thread 1) | (Thread 2) | _set_timer() rtw_surveydone_event_callback()| mod_timer() spin_lock_bh() //(1) | (wait a time) ... | rtw_scan_timeout_handler() del_timer_sync() | spin_lock_bh() //(2) (wait timer to stop) | ... We hold pmlmepriv->lock in position (1) of thread 1 and use del_timer_sync() to wait timer to stop, but timer handler also need pmlmepriv->lock in position (2) of thread 2. As a result, rtw_surveydone_event_callback() will block forever. This patch extracts del_timer_sync() from the protection of spin_lock_bh(), which could let timer handler to obtain the needed lock. What`s more, we change spin_lock_bh() in rtw_scan_timeout_handler() to spin_lock_irq(). Otherwise, spin_lock_bh() will also cause deadlock() in timer handler.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""30EAD0EB-B3D1-4A88-A3D8-4F8242E81A01""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2c41f5c341853f84b7bc2f32605d4e2782e8c279"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c84e5c819600ee0628f61b33d145258ae0f3d7a7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cc7ad0d77b51c872d629bcd98aea463a3c4109e7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ce129d3efd181da5fd56f4360cc8827122afa67e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f89f6c3ebf69623b8ea48200bd690e9e210335a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49310,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:07.793,2025-03-17T19:54:24.320,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: char: xillybus: fix a refcount leak in cleanup_dev() usb_get_dev is called in xillyusb_probe. So it is better to call usb_put_dev before xdev is released.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""98F36895-C3DC-4DC5-A1C6-F68015C3F425""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/21f1f167d727f3f857e26d509ef5a6d47fd31bc3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b67d19662fdee275c479d21853bc1239600a798f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bc8fceda3b89006e8a7dda8a097d36045d044c25"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e277b95acdab84cd5d2f8d537a37aef6d21e988b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49311,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:07.887,2025-03-17T19:54:09.927,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drivers: staging: rtl8192bs: Fix deadlock in rtw_joinbss_event_prehandle() There is a deadlock in rtw_joinbss_event_prehandle(), which is shown below: (Thread 1) | (Thread 2) | _set_timer() rtw_joinbss_event_prehandle()| mod_timer() spin_lock_bh() //(1) | (wait a time) ... | _rtw_join_timeout_handler() del_timer_sync() | spin_lock_bh() //(2) (wait timer to stop) | ... We hold pmlmepriv->lock in position (1) of thread 1 and use del_timer_sync() to wait timer to stop, but timer handler also need pmlmepriv->lock in position (2) of thread 2. As a result, rtw_joinbss_event_prehandle() will block forever. This patch extracts del_timer_sync() from the protection of spin_lock_bh(), which could let timer handler to obtain the needed lock. What`s more, we change spin_lock_bh() to spin_lock_irq() in _rtw_join_timeout_handler() in order to prevent deadlock.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""30EAD0EB-B3D1-4A88-A3D8-4F8242E81A01""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/041879b12ddb0c6c83ed9c0bdd10dc82a056f2fc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1f6c99b94ca3caad346876b3e22e3ca3d25bc8ee"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ae60744d5fad840b9d056d35b4b652d95e755846"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/eca9748d9267a38d532464e3305a38629e9c35a9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49312,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:07.997,2025-03-17T19:54:00.450,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: staging: rtl8712: fix a potential memory leak in r871xu_drv_init() In r871xu_drv_init(), if r8712_init_drv_sw() fails, then the memory allocated by r8712_alloc_io_queue() in r8712_usb_dvobj_init() is not properly released as there is no action will be performed by r8712_usb_dvobj_deinit(). To properly release it, we should call r8712_free_io_queue() in r8712_usb_dvobj_deinit(). Besides, in r871xu_dev_remove(), r8712_usb_dvobj_deinit() will be called by r871x_dev_unload() under condition `padapter->bup` and r8712_free_io_queue() is called by r8712_free_drv_sw(). However, r8712_usb_dvobj_deinit() does not rely on `padapter->bup` and calling r8712_free_io_queue() in r8712_free_drv_sw() is negative for better understading the code. So I move r8712_usb_dvobj_deinit() into r871xu_dev_remove(), and remove r8712_free_io_queue() from r8712_free_drv_sw().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""729BFE7A-6A28-47AD-BDEF-256C3C9BC15F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/205e039fead72e87ad2838f5e649a4c4834f648b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5a89a92efc342dd7c44b6056da87debc598f9c73"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7288ff561de650d4139fab80e9cb0da9b5b32434"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8eb42d6d10f8fe509117859defddf9e72b4fa4d0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a2882b8baad068d21c99fb2ab5a85a2bdbd5b834"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49313,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:08.143,2025-04-14T19:59:26.907,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drivers: usb: host: Fix deadlock in oxu_bus_suspend() There is a deadlock in oxu_bus_suspend(), which is shown below: (Thread 1) | (Thread 2) | timer_action() oxu_bus_suspend() | mod_timer() spin_lock_irq() //(1) | (wait a time) ... | oxu_watchdog() del_timer_sync() | spin_lock_irq() //(2) (wait timer to stop) | ... We hold oxu->lock in position (1) of thread 1, and use del_timer_sync() to wait timer to stop, but timer handler also need oxu->lock in position (2) of thread 2. As a result, oxu_bus_suspend() will block forever. This patch extracts del_timer_sync() from the protection of spin_lock_irq(), which could let timer handler to obtain the needed lock.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""0D4D4067-974D-4560-8320-22FDA399E3F9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2dcec0bc142be2096af71a5703d63237127db204"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4187b291a76664a3c03d3f0d9bfadc8322881868"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4d378f2ae58138d4c55684e1d274e7dd94aa6524"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9b58d255f27b0ed6a2e43208960864d67579db58"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a3d380188bde8900c3f604e82b56572896499124"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b97aae8b43b718314012e8170b7e03dbfd2e7677"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d888753872190abd18f68a7d77b9c7c367f0a7ab"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f8242044c91cafbba9e320b0fb31abf2429a3221"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ffe9440d698274c6462d2e304562c6ddfc8c84df"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49314,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:08.270,2025-04-14T19:59:14.600,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tty: Fix a possible resource leak in icom_probe When pci_read_config_dword failed, call pci_release_regions() and pci_disable_device() to recycle the resource previously allocated.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""0D4D4067-974D-4560-8320-22FDA399E3F9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/23e155b51d403c0ccedc60c0d6c3c452afed07fe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5f9b2e4ca88cab1a96b86ecd45544e488ca43faf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8c014373f178a4f13a08e045ef63bdb23f62e892"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9a8305f357a8d03698fc7bc855ff9c6865d5486b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a2df0b4d080cc770b4da7bff487048c803dfd07e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cb7147afd328c07edeeee287710d8d96ac0459f5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d703d912a985c1c5b50dd38c3181fc3540fa77cb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ee157a79e7c82b01ae4c25de0ac75899801f322c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f4c836d90da1ece88905d62ce2ce39a962f25d1a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49315,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:08.373,2025-03-13T22:00:36.813,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drivers: staging: rtl8192e: Fix deadlock in rtllib_beacons_stop() There is a deadlock in rtllib_beacons_stop(), which is shown below: (Thread 1) | (Thread 2) | rtllib_send_beacon() rtllib_beacons_stop() | mod_timer() spin_lock_irqsave() //(1) | (wait a time) ... | rtllib_send_beacon_cb() del_timer_sync() | spin_lock_irqsave() //(2) (wait timer to stop) | ... We hold ieee->beacon_lock in position (1) of thread 1 and use del_timer_sync() to wait timer to stop, but timer handler also need ieee->beacon_lock in position (2) of thread 2. As a result, rtllib_beacons_stop() will block forever. This patch extracts del_timer_sync() from the protection of spin_lock_irqsave(), which could let timer handler to obtain the needed lock.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""0D4D4067-974D-4560-8320-22FDA399E3F9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/08bacf871c019163ccd1389d0bc957a43324967a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0f69d7d5e918aa43423d86bd17ddb11b1b5e8ada"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/381045dc64d23a2229c47c5524c06bfc33d34446"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4681129fda9e8555392eaaadb239ec6a6e2b3e12"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/46c861009bf437a18417df24cea0d181741b7d72"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/64b05fa212c7e4d057676e8b7e7120c6eb2f615b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9b6bdbd9337de3917945847bde262a34a87a6303"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fef451f0fbbe85dbd2962b18379d02e2965610db"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ffd4c4d5293e4985092ea45ba21cad9326e2e434"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49316,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:08.470,2025-03-13T22:01:00.937,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: NFSv4: Don't hold the layoutget locks across multiple RPC calls When doing layoutget as part of the open() compound, we have to be careful to release the layout locks before we can call any further RPC calls, such as setattr(). The reason is that those calls could trigger a recall, which could deadlock.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""D050F8AE-EE13-436A-B863-56AD3787ECFB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/08d7a26d115cc7892668baa9750f64bd8baca29b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0ee5b9644f06b4d3cdcd9544f43f63312e425a4c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6949493884fe88500de4af182588e071cf1544ee"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6b3fc1496e7227cd6a39a80bbfb7588ef7c7a010"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a2b3be930e79cc5d9d829f158e31172b2043f0cd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d4c2a041ed3ba114502d5ed6ace5b1a48d637a8e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ea759ae0a9ae5acee677d722129710ac89cc59c1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49317,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:08.567,2025-03-13T22:01:27.807,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: f2fs: avoid infinite loop to flush node pages xfstests/generic/475 can give EIO all the time which give an infinite loop to flush node page like below. Let's avoid it. [16418.518551] Call Trace: [16418.518553] ? dm_submit_bio+0x48/0x400 [16418.518574] ? submit_bio_checks+0x1ac/0x5a0 [16418.525207] __submit_bio+0x1a9/0x230 [16418.525210] ? kmem_cache_alloc+0x29e/0x3c0 [16418.525223] submit_bio_noacct+0xa8/0x2b0 [16418.525226] submit_bio+0x4d/0x130 [16418.525238] __submit_bio+0x49/0x310 [f2fs] [16418.525339] ? bio_add_page+0x6a/0x90 [16418.525344] f2fs_submit_page_bio+0x134/0x1f0 [f2fs] [16418.525365] read_node_page+0x125/0x1b0 [f2fs] [16418.525388] __get_node_page.part.0+0x58/0x3f0 [f2fs] [16418.525409] __get_node_page+0x2f/0x60 [f2fs] [16418.525431] f2fs_get_dnode_of_data+0x423/0x860 [f2fs] [16418.525452] ? asm_sysvec_apic_timer_interrupt+0x12/0x20 [16418.525458] ? __mod_memcg_state.part.0+0x2a/0x30 [16418.525465] ? __mod_memcg_lruvec_state+0x27/0x40 [16418.525467] ? __xa_set_mark+0x57/0x70 [16418.525472] f2fs_do_write_data_page+0x10e/0x7b0 [f2fs] [16418.525493] f2fs_write_single_data_page+0x555/0x830 [f2fs] [16418.525514] ? sysvec_apic_timer_interrupt+0x4e/0x90 [16418.525518] ? asm_sysvec_apic_timer_interrupt+0x12/0x20 [16418.525523] f2fs_write_cache_pages+0x303/0x880 [f2fs] [16418.525545] ? blk_flush_plug_list+0x47/0x100 [16418.525548] f2fs_write_data_pages+0xfd/0x320 [f2fs] [16418.525569] do_writepages+0xd5/0x210 [16418.525648] filemap_fdatawrite_wbc+0x7d/0xc0 [16418.525655] filemap_fdatawrite+0x50/0x70 [16418.525658] f2fs_sync_dirty_inodes+0xa4/0x230 [f2fs] [16418.525679] f2fs_write_checkpoint+0x16d/0x1720 [f2fs] [16418.525699] ? ttwu_do_wakeup+0x1c/0x160 [16418.525709] ? ttwu_do_activate+0x6d/0xd0 [16418.525711] ? __wait_for_common+0x11d/0x150 [16418.525715] kill_f2fs_super+0xca/0x100 [f2fs] [16418.525733] deactivate_locked_super+0x3b/0xb0 [16418.525739] deactivate_super+0x40/0x50 [16418.525741] cleanup_mnt+0x139/0x190 [16418.525747] __cleanup_mnt+0x12/0x20 [16418.525749] task_work_run+0x6d/0xa0 [16418.525765] exit_to_user_mode_prepare+0x1ad/0x1b0 [16418.525771] syscall_exit_to_user_mode+0x27/0x50 [16418.525774] do_syscall_64+0x48/0xc0 [16418.525776] entry_SYSCALL_64_after_hwframe+0x44/0xae","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-835""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""5607D6E0-33DF-47C1-83F1-1EF7EC1AB24B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/a7b8618aa2f0f926ce85f2486ac835a85c753ca7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bd47ea5d776d8b524fb6f60de3240f95603901dd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49318,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:08.660,2025-04-14T19:59:06.820,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: f2fs: remove WARN_ON in f2fs_is_valid_blkaddr Syzbot triggers two WARNs in f2fs_is_valid_blkaddr and __is_bitmap_valid. For example, in f2fs_is_valid_blkaddr, if type is DATA_GENERIC_ENHANCE or DATA_GENERIC_ENHANCE_READ, it invokes WARN_ON if blkaddr is not in the right range. The call trace is as follows: f2fs_get_node_info+0x45f/0x1070 read_node_page+0x577/0x1190 __get_node_page.part.0+0x9e/0x10e0 __get_node_page f2fs_get_node_page+0x109/0x180 do_read_inode f2fs_iget+0x2a5/0x58b0 f2fs_fill_super+0x3b39/0x7ca0 Fix these two WARNs by replacing WARN_ON with dump_stack.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-noinfo""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""C1C86ABC-337F-46B3-BCD8-22DC5A66E45A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0a7a1fc7e71eecf2e5053a6c312c9f0dcbb9b8fd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/32bea51fe4c6e92c00403739f7547c89219bea88"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8c62c5e26345c34d199b4b8c8e69255ba3d0e751"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/99c09b298e47ebbe345a6da9f268b32a6b0f4582"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cd6374af36cc548464d8c47a93fdba7303bb82a4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/dc2f78e2d4cc844a1458653d57ce1b54d4a29f21"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49319,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:08.750,2025-03-13T22:02:01.703,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: iommu/arm-smmu-v3: check return value after calling platform_get_resource() It will cause null-ptr-deref if platform_get_resource() returns NULL, we need check the return value.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""729BFE7A-6A28-47AD-BDEF-256C3C9BC15F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/54c1e0e3bbcab2abe25b2874a43050ae5df87831"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/54cf47da0c7532d151d76e5d63f5936191698c44"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b131fa8c1d2afd05d0b7598621114674289c2fbb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/db728a891f9177b044aaca89b678f6b5e24d5cc3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fb0f1c5eb8d60b3e018ba7c87da249b52674ebe6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49320,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:08.840,2025-02-26T07:01:08.840,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: dmaengine: zynqmp_dma: In struct zynqmp_dma_chan fix desc_size data type In zynqmp_dma_alloc/free_chan_resources functions there is a potential overflow in the below expressions. dma_alloc_coherent(chan->dev, (2 * chan->desc_size * ZYNQMP_DMA_NUM_DESCS), &chan->desc_pool_p, GFP_KERNEL); dma_free_coherent(chan->dev,(2 * ZYNQMP_DMA_DESC_SIZE(chan) * ZYNQMP_DMA_NUM_DESCS), chan->desc_pool_v, chan->desc_pool_p); The arguments desc_size and ZYNQMP_DMA_NUM_DESCS were 32 bit. Though this overflow condition is not observed but it is a potential problem in the case of 32-bit multiplication. Hence fix it by changing the desc_size data type to size_t. In addition to coverity fix it also reuse ZYNQMP_DMA_DESC_SIZE macro in dma_alloc_coherent API argument. Addresses-Coverity: Event overflow_before_widen.",,,"[{""url"":""https://git.kernel.org/stable/c/4838969e4d95d2bd2995d1605b20d3144fcb3e74"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7b5488f4721fed6e121e661e165bab06ae2f8675"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/83960276ffc9bf5570d4106490346b61e61be5f3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/90aefae2e3a770a6909d339f5d8a988c0b0ceaf0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/95a0ba85c1b51b36e909841c02d205cd223ab753"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f9a9f43a62a04ec3183fb0da9226c7706eed0115"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49321,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:08.933,2025-03-13T22:02:34.573,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: xprtrdma: treat all calls not a bcall when bc_serv is NULL When a rdma server returns a fault format reply, nfs v3 client may treats it as a bcall when bc service is not exist. The debug message at rpcrdma_bc_receive_call are, [56579.837169] RPC: rpcrdma_bc_receive_call: callback XID 00000001, length=20 [56579.837174] RPC: rpcrdma_bc_receive_call: 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 After that, rpcrdma_bc_receive_call will meets NULL pointer as, [ 226.057890] BUG: unable to handle kernel NULL pointer dereference at 00000000000000c8 ... [ 226.058704] RIP: 0010:_raw_spin_lock+0xc/0x20 ... [ 226.059732] Call Trace: [ 226.059878] rpcrdma_bc_receive_call+0x138/0x327 [rpcrdma] [ 226.060011] __ib_process_cq+0x89/0x170 [ib_core] [ 226.060092] ib_cq_poll_work+0x26/0x80 [ib_core] [ 226.060257] process_one_work+0x1a7/0x360 [ 226.060367] ? create_worker+0x1a0/0x1a0 [ 226.060440] worker_thread+0x30/0x390 [ 226.060500] ? create_worker+0x1a0/0x1a0 [ 226.060574] kthread+0x116/0x130 [ 226.060661] ? kthread_flush_work_fn+0x10/0x10 [ 226.060724] ret_from_fork+0x35/0x40 ...","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""42074657-A7B6-4740-88B7-67B440018C1C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/11270e7ca268e8d61b5d9e5c3a54bd1550642c9c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8dbae5affbdbf524b48000f9d357925bb001e5f4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8e3943c50764dc7c5f25911970c3ff062ec1f18c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/90c4f73104016748533a5707ecd15930fbeff402"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/91784f3d77b73885e1b2e6b59d3cbf0de0a1126a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/998d35a2aff4b81a1c784f3aa45cd3afff6814c1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a3fc8051ee061e31db13e2fe011e8e0b71a7f815"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/da99331fa62131a38a0947a8204c5208de7b0454"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49322,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:09.030,2025-04-14T19:45:44.123,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tracing: Fix sleeping function called from invalid context on RT kernel When setting bootparams=""trace_event=initcall:initcall_start tp_printk=1"" in the cmdline, the output_printk() was called, and the spin_lock_irqsave() was called in the atomic and irq disable interrupt context suitation. On the PREEMPT_RT kernel, these locks are replaced with sleepable rt-spinlock, so the stack calltrace will be triggered. Fix it by raw_spin_lock_irqsave when PREEMPT_RT and ""trace_event=initcall:initcall_start tp_printk=1"" enabled. BUG: sleeping function called from invalid context at kernel/locking/spinlock_rt.c:46 in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 1, name: swapper/0 preempt_count: 2, expected: 0 RCU nest depth: 0, expected: 0 Preemption disabled at: [<ffffffff8992303e>] try_to_wake_up+0x7e/0xba0 CPU: 0 PID: 1 Comm: swapper/0 Not tainted 5.17.1-rt17+ #19 34c5812404187a875f32bee7977f7367f9679ea7 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-2 04/01/2014 Call Trace: <TASK> dump_stack_lvl+0x60/0x8c dump_stack+0x10/0x12 __might_resched.cold+0x11d/0x155 rt_spin_lock+0x40/0x70 trace_event_buffer_commit+0x2fa/0x4c0 ? map_vsyscall+0x93/0x93 trace_event_raw_event_initcall_start+0xbe/0x110 ? perf_trace_initcall_finish+0x210/0x210 ? probe_sched_wakeup+0x34/0x40 ? ttwu_do_wakeup+0xda/0x310 ? trace_hardirqs_on+0x35/0x170 ? map_vsyscall+0x93/0x93 do_one_initcall+0x217/0x3c0 ? trace_event_raw_event_initcall_level+0x170/0x170 ? push_cpu_stop+0x400/0x400 ? cblist_init_generic+0x241/0x290 kernel_init_freeable+0x1ac/0x347 ? _raw_spin_unlock_irq+0x65/0x80 ? rest_init+0xf0/0xf0 kernel_init+0x1e/0x150 ret_from_fork+0x22/0x30 </TASK>","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""42074657-A7B6-4740-88B7-67B440018C1C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/12025abdc8539ed9d5014e2d647a3fd1bd3de5cd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1788e6dbb61286215442b1af99e51405a6206762"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/40f9fde06b25884baa0c4bd138b909a9b67218b4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/43bfc4dccc416c964b53cbdc430e814f8b6f770b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/48c6ee7d6c614f09b2c8553a95eefef6ecf196e0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9abf3db8bdb63ab545034148ef2118f4d088ca59"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9b534640a2c6a8d88168febc82ec6d161184f2ec"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/be1f323fb9d9b14a505ca22d742d321769454de1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49323,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:09.130,2025-03-13T22:02:57.720,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: iommu/arm-smmu: fix possible null-ptr-deref in arm_smmu_device_probe() It will cause null-ptr-deref when using 'res', if platform_get_resource() returns NULL, so move using 'res' after devm_ioremap_resource() that will check it to avoid null-ptr-deref. And use devm_platform_get_and_ioremap_resource() to simplify code.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""729BFE7A-6A28-47AD-BDEF-256C3C9BC15F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/3660db29b0305f9a1d95979c7af0f5db6ea99f5d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/449fc4561762ad9ad85362d5f01f0d0df397457a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/80776a71340f57d6a4952635fc89f0342072f3ca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/98dd53a92825747395649f54d23512a13c3ed471"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d9ed8af1dee37f181096631fb03729ece98ba816"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49324,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:09.223,2025-03-13T22:03:30.573,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mips: cpc: Fix refcount leak in mips_cpc_default_phys_base Add the missing of_node_put() to release the refcount incremented by of_find_compatible_node().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""42074657-A7B6-4740-88B7-67B440018C1C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1699ec1bfb59304a788901474f6bb003f7831b61"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4107fa700f314592850e2c64608f6ede4c077476"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8f843cdfc202caaa5d67db3395d893e56362e43a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/961ee8a6eeef4632a215d995d837b204f8c7c2d4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/aae6b4bb63c694bc91714412718f15468407fe51"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bed702566dcdb6ebe300bc0c62bf3600cf4d5874"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c667b3872a4c435a3f29d4e15971cd8c378b0043"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cc0aed22d33ced9e266c50bdf1cbe668c5acfdf8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49325,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:09.323,2025-02-26T07:01:09.323,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: add accessors to read/set tp->snd_cwnd We had various bugs over the years with code breaking the assumption that tp->snd_cwnd is greater than zero. Lately, syzbot reported the WARN_ON_ONCE(!tp->prior_cwnd) added in commit 8b8a321ff72c (""tcp: fix zero cwnd in tcp_cwnd_reduction"") can trigger, and without a repro we would have to spend considerable time finding the bug. Instead of complaining too late, we want to catch where and when tp->snd_cwnd is set to an illegal value.",,,"[{""url"":""https://git.kernel.org/stable/c/3308676ec525901bf1656014003c443a60730a04"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/40570375356c874b1578e05c1dcc3ff7c1322dbe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/41e191fe72282e193a7744e2fc1786b23156c9e4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5aba0ad44fb4a7fb78c5076c313456de199a3c29"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49326,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:09.417,2025-03-13T21:50:26.567,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: rtl818x: Prevent using not initialized queues Using not existing queues can panic the kernel with rtl8180/rtl8185 cards. Ignore the skb priority for those cards, they only have one tx queue. Pierre Asselin (pa@panix.com) reported the kernel crash in the Gentoo forum: https://forums.gentoo.org/viewtopic-t-1147832-postdays-0-postorder-asc-start-25.html He also confirmed that this patch fixes the issue. In summary this happened: After updating wpa_supplicant from 2.9 to 2.10 the kernel crashed with a ""divide error: 0000"" when connecting to an AP. Control port tx now tries to use IEEE80211_AC_VO for the priority, which wpa_supplicants starts to use in 2.10. Since only the rtl8187se part of the driver supports QoS, the priority of the skb is set to IEEE80211_AC_BE (2) by mac80211 for rtl8180/rtl8185 cards. rtl8180 is then unconditionally reading out the priority and finally crashes on drivers/net/wireless/realtek/rtl818x/rtl8180/dev.c line 544 without this patch: idx = (ring->idx + skb_queue_len(&ring->queue)) % ring->entries ""ring->entries"" is zero for rtl8180/rtl8185 cards, tx_ring[2] never got initialized.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-908""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""0D4D4067-974D-4560-8320-22FDA399E3F9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/6ad81ad0cf5744738ce94c8e64051ddd80a1734c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/746285cf81dc19502ab238249d75f5990bd2d231"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/769ec2a824deae2f1268dfda14999a4d14d0d0c5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/98e55b0b876bde3353f4e074883d66ecb55c65a3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9ad1981fc4de3afb7db3e8eb5a6a52d4c7d0d577"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9d5e96cc1f1720019ce27b127a31695148d38bb0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b5dca2cd3f0239512da808598b4e70557eb4c2a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b8ce58ab80faaea015c206382041ff3bcf5495ff"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d7e30dfc166d33470bba31a42f9bbc346e5409d5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49327,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:09.510,2025-03-13T21:50:54.760,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: bcache: avoid journal no-space deadlock by reserving 1 journal bucket The journal no-space deadlock was reported time to time. Such deadlock can happen in the following situation. When all journal buckets are fully filled by active jset with heavy write I/O load, the cache set registration (after a reboot) will load all active jsets and inserting them into the btree again (which is called journal replay). If a journaled bkey is inserted into a btree node and results btree node split, new journal request might be triggered. For example, the btree grows one more level after the node split, then the root node record in cache device super block will be upgrade by bch_journal_meta() from bch_btree_set_root(). But there is no space in journal buckets, the journal replay has to wait for new journal bucket to be reclaimed after at least one journal bucket replayed. This is one example that how the journal no-space deadlock happens. The solution to avoid the deadlock is to reserve 1 journal bucket in run time, and only permit the reserved journal bucket to be used during cache set registration procedure for things like journal replay. Then the journal space will never be fully filled, there is no chance for journal no-space deadlock to happen anymore. This patch adds a new member ""bool do_reserve"" in struct journal, it is inititalized to 0 (false) when struct journal is allocated, and set to 1 (true) by bch_journal_space_reserve() when all initialization done in run_cache_set(). In the run time when journal_reclaim() tries to allocate a new journal bucket, free_journal_buckets() is called to check whether there are enough free journal buckets to use. If there is only 1 free journal bucket and journal->do_reserve is 1 (true), the last bucket is reserved and free_journal_buckets() will return 0 to indicate no free journal bucket. Then journal_reclaim() will give up, and try next time to see whetheer there is free journal bucket to allocate. By this method, there is always 1 jouranl bucket reserved in run time. During the cache set registration, journal->do_reserve is 0 (false), so the reserved journal bucket can be used to avoid the no-space deadlock.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""814C88C6-C31D-462A-BBBE-BC83E102E84C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1dda32aed6f62c163f38ff947ef5b3360e329159"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/32feee36c30ea06e38ccb8ae6e5c44c6eec790a6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5607652823ac65e2c6885e73bd46d5a4f9a20363"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/59afd4f287900c8187e968a4153ed35e6b48efce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6332ea3e35efa12dc08f0cbf5faea5e6e8eb0497"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49328,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:09.610,2025-03-25T14:50:40.570,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mt76: fix use-after-free by removing a non-RCU wcid pointer Fixes an issue caught by KASAN about use-after-free in mt76_txq_schedule by protecting mtxq->wcid with rcu_lock between mt76_txq_schedule and sta_info_[alloc, free]. [18853.876689] ================================================================== [18853.876751] BUG: KASAN: use-after-free in mt76_txq_schedule+0x204/0xaf8 [mt76] [18853.876773] Read of size 8 at addr ffffffaf989a2138 by task mt76-tx phy0/883 [18853.876786] [18853.876810] CPU: 5 PID: 883 Comm: mt76-tx phy0 Not tainted 5.10.100-fix-510-56778d365941-kasan #5 0b01fbbcf41a530f52043508fec2e31a4215 [18853.876840] Call trace: [18853.876861] dump_backtrace+0x0/0x3ec [18853.876878] show_stack+0x20/0x2c [18853.876899] dump_stack+0x11c/0x1ac [18853.876918] print_address_description+0x74/0x514 [18853.876934] kasan_report+0x134/0x174 [18853.876948] __asan_report_load8_noabort+0x44/0x50 [18853.876976] mt76_txq_schedule+0x204/0xaf8 [mt76 074e03e4640e97fe7405ee1fab547b81c4fa45d2] [18853.877002] mt76_txq_schedule_all+0x2c/0x48 [mt76 074e03e4640e97fe7405ee1fab547b81c4fa45d2] [18853.877030] mt7921_tx_worker+0xa0/0x1cc [mt7921_common f0875ebac9d7b4754e1010549e7db50fbd90a047] [18853.877054] __mt76_worker_fn+0x190/0x22c [mt76 074e03e4640e97fe7405ee1fab547b81c4fa45d2] [18853.877071] kthread+0x2f8/0x3b8 [18853.877087] ret_from_fork+0x10/0x30 [18853.877098] [18853.877112] Allocated by task 941: [18853.877131] kasan_save_stack+0x38/0x68 [18853.877147] __kasan_kmalloc+0xd4/0xfc [18853.877163] kasan_kmalloc+0x10/0x1c [18853.877177] __kmalloc+0x264/0x3c4 [18853.877294] sta_info_alloc+0x460/0xf88 [mac80211] [18853.877410] ieee80211_prep_connection+0x204/0x1ee0 [mac80211] [18853.877523] ieee80211_mgd_auth+0x6c4/0xa4c [mac80211] [18853.877635] ieee80211_auth+0x20/0x2c [mac80211] [18853.877733] rdev_auth+0x7c/0x438 [cfg80211] [18853.877826] cfg80211_mlme_auth+0x26c/0x390 [cfg80211] [18853.877919] nl80211_authenticate+0x6d4/0x904 [cfg80211] [18853.877938] genl_rcv_msg+0x748/0x93c [18853.877954] netlink_rcv_skb+0x160/0x2a8 [18853.877969] genl_rcv+0x3c/0x54 [18853.877985] netlink_unicast_kernel+0x104/0x1ec [18853.877999] netlink_unicast+0x178/0x268 [18853.878015] netlink_sendmsg+0x3cc/0x5f0 [18853.878030] sock_sendmsg+0xb4/0xd8 [18853.878043] ____sys_sendmsg+0x2f8/0x53c [18853.878058] ___sys_sendmsg+0xe8/0x150 [18853.878071] __sys_sendmsg+0xc4/0x1f4 [18853.878087] __arm64_compat_sys_sendmsg+0x88/0x9c [18853.878101] el0_svc_common+0x1b4/0x390 [18853.878115] do_el0_svc_compat+0x8c/0xdc [18853.878131] el0_svc_compat+0x10/0x1c [18853.878146] el0_sync_compat_handler+0xa8/0xcc [18853.878161] el0_sync_compat+0x188/0x1c0 [18853.878171] [18853.878183] Freed by task 10927: [18853.878200] kasan_save_stack+0x38/0x68 [18853.878215] kasan_set_track+0x28/0x3c [18853.878228] kasan_set_free_info+0x24/0x48 [18853.878244] __kasan_slab_free+0x11c/0x154 [18853.878259] kasan_slab_free+0x14/0x24 [18853.878273] slab_free_freelist_hook+0xac/0x1b0 [18853.878287] kfree+0x104/0x390 [18853.878402] sta_info_free+0x198/0x210 [mac80211] [18853.878515] __sta_info_destroy_part2+0x230/0x2d4 [mac80211] [18853.878628] __sta_info_flush+0x300/0x37c [mac80211] [18853.878740] ieee80211_set_disassoc+0x2cc/0xa7c [mac80211] [18853.878851] ieee80211_mgd_deauth+0x4a4/0x10a0 [mac80211] [18853.878962] ieee80211_deauth+0x20/0x2c [mac80211] [18853.879057] rdev_deauth+0x7c/0x438 [cfg80211] [18853.879150] cfg80211_mlme_deauth+0x274/0x414 [cfg80211] [18853.879243] cfg80211_mlme_down+0xe4/0x118 [cfg80211] [18853.879335] cfg80211_disconnect+0x218/0x2d8 [cfg80211] [18853.879427] __cfg80211_leave+0x17c/0x240 [cfg80211] [18853.879519] cfg80211_leave+0x3c/0x58 [cfg80211] [18853.879611] wiphy_suspend+0xdc/0x200 [cfg80211] [18853.879628] dpm_run_callback+0x58/0x408 [18853.879642] __device_suspend+0x4cc/0x864 [18853.879658] async_suspend+0x34/0xf4 [18 ---truncated---","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""0DFC6E4B-8C85-4056-80F1-C9129E42FE45""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/4448327b41738dbfcda680eb4935ff835568f468"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/51fb1278aa57ae0fc54adaa786e1965362bed4fb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d5f77f1dbb59feae81f88e44551e8e1d8a802d9a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e55bcdd0bf34a8b10d45ce80ebb3164c5292a17d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49329,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:09.703,2025-03-13T21:51:21.200,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: vduse: Fix NULL pointer dereference on sysfs access The control device has no drvdata. So we will get a NULL pointer dereference when accessing control device's msg_timeout attribute via sysfs: [ 132.841881][ T3644] BUG: kernel NULL pointer dereference, address: 00000000000000f8 [ 132.850619][ T3644] RIP: 0010:msg_timeout_show (drivers/vdpa/vdpa_user/vduse_dev.c:1271) [ 132.869447][ T3644] dev_attr_show (drivers/base/core.c:2094) [ 132.870215][ T3644] sysfs_kf_seq_show (fs/sysfs/file.c:59) [ 132.871164][ T3644] ? device_remove_bin_file (drivers/base/core.c:2088) [ 132.872082][ T3644] kernfs_seq_show (fs/kernfs/file.c:164) [ 132.872838][ T3644] seq_read_iter (fs/seq_file.c:230) [ 132.873578][ T3644] ? __vmalloc_area_node (mm/vmalloc.c:3041) [ 132.874532][ T3644] kernfs_fop_read_iter (fs/kernfs/file.c:238) [ 132.875513][ T3644] __kernel_read (fs/read_write.c:440 (discriminator 1)) [ 132.876319][ T3644] kernel_read (fs/read_write.c:459) [ 132.877129][ T3644] kernel_read_file (fs/kernel_read_file.c:94) [ 132.877978][ T3644] kernel_read_file_from_fd (include/linux/file.h:45 fs/kernel_read_file.c:186) [ 132.879019][ T3644] __do_sys_finit_module (kernel/module.c:4207) [ 132.879930][ T3644] __ia32_sys_finit_module (kernel/module.c:4189) [ 132.880930][ T3644] do_int80_syscall_32 (arch/x86/entry/common.c:112 arch/x86/entry/common.c:132) [ 132.881847][ T3644] entry_INT80_compat (arch/x86/entry/entry_64_compat.S:419) To fix it, don't create the unneeded attribute for control device anymore.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""B3166432-278C-4CF4-AE75-4257C99F32BD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/30fd1b56621e187346f65d01fe34870634b15188"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3a7a81f4835dfda11f39fdd27586da14331896eb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b22fdee17ec62604060fb0fda5e1414b634666e1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b27ee76c74dc831d6e092eaebc2dfc9c0beed1c9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49330,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:09.797,2025-02-26T07:01:09.797,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: fix tcp_mtup_probe_success vs wrong snd_cwnd syzbot got a new report [1] finally pointing to a very old bug, added in initial support for MTU probing. tcp_mtu_probe() has checks about starting an MTU probe if tcp_snd_cwnd(tp) >= 11. But nothing prevents tcp_snd_cwnd(tp) to be reduced later and before the MTU probe succeeds. This bug would lead to potential zero-divides. Debugging added in commit 40570375356c (""tcp: add accessors to read/set tp->snd_cwnd"") has paid off :) While we are at it, address potential overflows in this code. [1] WARNING: CPU: 1 PID: 14132 at include/net/tcp.h:1219 tcp_mtup_probe_success+0x366/0x570 net/ipv4/tcp_input.c:2712 Modules linked in: CPU: 1 PID: 14132 Comm: syz-executor.2 Not tainted 5.18.0-syzkaller-07857-gbabf0bb978e3 #0 Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011 RIP: 0010:tcp_snd_cwnd_set include/net/tcp.h:1219 [inline] RIP: 0010:tcp_mtup_probe_success+0x366/0x570 net/ipv4/tcp_input.c:2712 Code: 74 08 48 89 ef e8 da 80 17 f9 48 8b 45 00 65 48 ff 80 80 03 00 00 48 83 c4 30 5b 41 5c 41 5d 41 5e 41 5f 5d c3 e8 aa b0 c5 f8 <0f> 0b e9 16 fe ff ff 48 8b 4c 24 08 80 e1 07 38 c1 0f 8c c7 fc ff RSP: 0018:ffffc900079e70f8 EFLAGS: 00010287 RAX: ffffffff88c0f7f6 RBX: ffff8880756e7a80 RCX: 0000000000040000 RDX: ffffc9000c6c4000 RSI: 0000000000031f9e RDI: 0000000000031f9f RBP: 0000000000000000 R08: ffffffff88c0f606 R09: ffffc900079e7520 R10: ffffed101011226d R11: 1ffff1101011226c R12: 1ffff1100eadcf50 R13: ffff8880756e72c0 R14: 1ffff1100eadcf89 R15: dffffc0000000000 FS: 00007f643236e700(0000) GS:ffff8880b9b00000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00007f1ab3f1e2a0 CR3: 0000000064fe7000 CR4: 00000000003506e0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Call Trace: <TASK> tcp_clean_rtx_queue+0x223a/0x2da0 net/ipv4/tcp_input.c:3356 tcp_ack+0x1962/0x3c90 net/ipv4/tcp_input.c:3861 tcp_rcv_established+0x7c8/0x1ac0 net/ipv4/tcp_input.c:5973 tcp_v6_do_rcv+0x57b/0x1210 net/ipv6/tcp_ipv6.c:1476 sk_backlog_rcv include/net/sock.h:1061 [inline] __release_sock+0x1d8/0x4c0 net/core/sock.c:2849 release_sock+0x5d/0x1c0 net/core/sock.c:3404 sk_stream_wait_memory+0x700/0xdc0 net/core/stream.c:145 tcp_sendmsg_locked+0x111d/0x3fc0 net/ipv4/tcp.c:1410 tcp_sendmsg+0x2c/0x40 net/ipv4/tcp.c:1448 sock_sendmsg_nosec net/socket.c:714 [inline] sock_sendmsg net/socket.c:734 [inline] __sys_sendto+0x439/0x5c0 net/socket.c:2119 __do_sys_sendto net/socket.c:2131 [inline] __se_sys_sendto net/socket.c:2127 [inline] __x64_sys_sendto+0xda/0xf0 net/socket.c:2127 do_syscall_x64 arch/x86/entry/common.c:50 [inline] do_syscall_64+0x2b/0x70 arch/x86/entry/common.c:80 entry_SYSCALL_64_after_hwframe+0x46/0xb0 RIP: 0033:0x7f6431289109 Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48 RSP: 002b:00007f643236e168 EFLAGS: 00000246 ORIG_RAX: 000000000000002c RAX: ffffffffffffffda RBX: 00007f643139c100 RCX: 00007f6431289109 RDX: 00000000d0d0c2ac RSI: 0000000020000080 RDI: 000000000000000a RBP: 00007f64312e308d R08: 0000000000000000 R09: 0000000000000000 R10: 0000000000000001 R11: 0000000000000246 R12: 0000000000000000 R13: 00007fff372533af R14: 00007f643236e300 R15: 0000000000022000",,,"[{""url"":""https://git.kernel.org/stable/c/11825765291a93d8e7f44230da67b9f607c777bf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/29e13f6b38f0816af2012e0725507754e8f4569c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/38ca71a24cd4845021eed35fd2594d89dba9a5a8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/42726877453afdbe1508a8a96884ea907741d9a7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/602b338e3c3cd7f935f3f5011882961d074e5ac1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/90385f2b65d0cd2b3b1ac8909f0cc6dd31062cfc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9ba2b4ac35935f05ac98cff722f36ba07d62270e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/aa7f333efd1138a68517a6a6a69ae540dd59d800"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f2845e1504a3bc4f3381394f057e8b63cb5f3f7a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49331,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:09.900,2025-03-13T21:51:46.137,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: nfc: st21nfca: fix memory leaks in EVT_TRANSACTION handling Error paths do not free previously allocated memory. Add devm_kfree() to those failure paths.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.0"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""4700BBC4-2BBE-41CA-BE5A-337B59E1AA27""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/3eca2c42daa4659965db6817479027cbc6df7899"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/54423649bc0ed464b75807a7cf2857a5871f738f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/55904086041ba4ee4070187b36590f8f8d6df4cd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/593773088d615a46a42c97e01a0550d192bb7f74"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6fce324b530dd74750ad870699e33eeed1029ded"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/996419e0594abb311fb958553809f24f38e7abbe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d221ce54ce331c1a23be71eebf57f6a088632383"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/db836b97464d44340b568e041fd24602858713f7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f444ecd3f57f4ba5090fe8b6756933e37de4226e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49332,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:09.997,2025-03-13T21:52:08.453,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: lpfc: Address NULL pointer dereference after starget_to_rport() Calls to starget_to_rport() may return NULL. Add check for NULL rport before dereference.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/68fcff1127e4995ddbd4b6861892a25c23db3f70"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6f808bd78e8296b4ded813b7182988d57e1f6176"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49333,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:10.090,2025-02-26T07:01:10.090,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net/mlx5: E-Switch, pair only capable devices OFFLOADS paring using devcom is possible only on devices that support LAG. Filter based on lag capabilities. This fixes an issue where mlx5_get_next_phys_dev() was called without holding the interface lock. This issue was found when commit bc4c2f2e0179 (""net/mlx5: Lag, filter non compatible devices"") added an assert that verifies the interface lock is held. WARNING: CPU: 9 PID: 1706 at drivers/net/ethernet/mellanox/mlx5/core/dev.c:642 mlx5_get_next_phys_dev+0xd2/0x100 [mlx5_core] Modules linked in: mlx5_vdpa vringh vhost_iotlb vdpa mlx5_ib mlx5_core xt_conntrack xt_MASQUERADE nf_conntrack_netlink nfnetlink xt_addrtype iptable_nat nf_nat br_netfilter rpcrdma rdma_ucm ib_iser libiscsi scsi_transport_iscsi rdma_cm iw_cm ib_umad ib_ipoib ib_cm ib_uverbs ib_core overlay fuse [last unloaded: mlx5_core] CPU: 9 PID: 1706 Comm: devlink Not tainted 5.18.0-rc7+ #11 Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014 RIP: 0010:mlx5_get_next_phys_dev+0xd2/0x100 [mlx5_core] Code: 02 00 75 48 48 8b 85 80 04 00 00 5d c3 31 c0 5d c3 be ff ff ff ff 48 c7 c7 08 41 5b a0 e8 36 87 28 e3 85 c0 0f 85 6f ff ff ff <0f> 0b e9 68 ff ff ff 48 c7 c7 0c 91 cc 84 e8 cb 36 6f e1 e9 4d ff RSP: 0018:ffff88811bf47458 EFLAGS: 00010246 RAX: 0000000000000000 RBX: ffff88811b398000 RCX: 0000000000000001 RDX: 0000000080000000 RSI: ffffffffa05b4108 RDI: ffff88812daaaa78 RBP: ffff88812d050380 R08: 0000000000000001 R09: ffff88811d6b3437 R10: 0000000000000001 R11: 00000000fddd3581 R12: ffff88815238c000 R13: ffff88812d050380 R14: ffff8881018aa7e0 R15: ffff88811d6b3428 FS: 00007fc82e18ae80(0000) GS:ffff88842e080000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00007f9630d1b421 CR3: 0000000149802004 CR4: 0000000000370ea0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Call Trace: <TASK> mlx5_esw_offloads_devcom_event+0x99/0x3b0 [mlx5_core] mlx5_devcom_send_event+0x167/0x1d0 [mlx5_core] esw_offloads_enable+0x1153/0x1500 [mlx5_core] ? mlx5_esw_offloads_controller_valid+0x170/0x170 [mlx5_core] ? wait_for_completion_io_timeout+0x20/0x20 ? mlx5_rescan_drivers_locked+0x318/0x810 [mlx5_core] mlx5_eswitch_enable_locked+0x586/0xc50 [mlx5_core] ? mlx5_eswitch_disable_pf_vf_vports+0x1d0/0x1d0 [mlx5_core] ? mlx5_esw_try_lock+0x1b/0xb0 [mlx5_core] ? mlx5_eswitch_enable+0x270/0x270 [mlx5_core] ? __debugfs_create_file+0x260/0x3e0 mlx5_devlink_eswitch_mode_set+0x27e/0x870 [mlx5_core] ? mutex_lock_io_nested+0x12c0/0x12c0 ? esw_offloads_disable+0x250/0x250 [mlx5_core] ? devlink_nl_cmd_trap_get_dumpit+0x470/0x470 ? rcu_read_lock_sched_held+0x3f/0x70 devlink_nl_cmd_eswitch_set_doit+0x217/0x620",,,"[{""url"":""https://git.kernel.org/stable/c/0cef0b7eb044bb8cfdaff4c1db55a8fd442f6bc9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3008e6a0049361e731b803c60fe8f3ab44e1d73f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cdbcdddb8076a09aa6ddaf20fd911fc787dca0e5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49334,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:10.180,2025-03-13T21:52:33.047,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mm/huge_memory: Fix xarray node memory leak If xas_split_alloc() fails to allocate the necessary nodes to complete the xarray entry split, it sets the xa_state to -ENOMEM, which xas_nomem() then interprets as ""Please allocate more memory"", not as ""Please free any unnecessary memory"" (which was the intended outcome). It's confusing to use xas_nomem() to free memory in this context, so call xas_destroy() instead.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""A5433C40-FA2E-4DDC-BBD9-8C7F577788FC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/69a37a8ba1b408a1c7616494aa7018e4b3844cbe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/95c8181b4947e000f3b9b8e5918d899fce77b93d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c0c84962e297927ba57fd6ddc2bb000c9d149655"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49335,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:10.270,2025-03-13T21:53:12.400,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/amdgpu/cs: make commands with 0 chunks illegal behaviour. Submitting a cs with 0 chunks, causes an oops later, found trying to execute the wrong userspace driver. MESA_LOADER_DRIVER_OVERRIDE=v3d glxinfo [172536.665184] BUG: kernel NULL pointer dereference, address: 00000000000001d8 [172536.665188] #PF: supervisor read access in kernel mode [172536.665189] #PF: error_code(0x0000) - not-present page [172536.665191] PGD 6712a0067 P4D 6712a0067 PUD 5af9ff067 PMD 0 [172536.665195] Oops: 0000 [#1] SMP NOPTI [172536.665197] CPU: 7 PID: 2769838 Comm: glxinfo Tainted: P O 5.10.81 #1-NixOS [172536.665199] Hardware name: To be filled by O.E.M. To be filled by O.E.M./CROSSHAIR V FORMULA-Z, BIOS 2201 03/23/2015 [172536.665272] RIP: 0010:amdgpu_cs_ioctl+0x96/0x1ce0 [amdgpu] [172536.665274] Code: 75 18 00 00 4c 8b b2 88 00 00 00 8b 46 08 48 89 54 24 68 49 89 f7 4c 89 5c 24 60 31 d2 4c 89 74 24 30 85 c0 0f 85 c0 01 00 00 <48> 83 ba d8 01 00 00 00 48 8b b4 24 90 00 00 00 74 16 48 8b 46 10 [172536.665276] RSP: 0018:ffffb47c0e81bbe0 EFLAGS: 00010246 [172536.665277] RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000 [172536.665278] RDX: 0000000000000000 RSI: ffffb47c0e81be28 RDI: ffffb47c0e81bd68 [172536.665279] RBP: ffff936524080010 R08: 0000000000000000 R09: ffffb47c0e81be38 [172536.665281] R10: ffff936524080010 R11: ffff936524080000 R12: ffffb47c0e81bc40 [172536.665282] R13: ffffb47c0e81be28 R14: ffff9367bc410000 R15: ffffb47c0e81be28 [172536.665283] FS: 00007fe35e05d740(0000) GS:ffff936c1edc0000(0000) knlGS:0000000000000000 [172536.665284] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [172536.665286] CR2: 00000000000001d8 CR3: 0000000532e46000 CR4: 00000000000406e0 [172536.665287] Call Trace: [172536.665322] ? amdgpu_cs_find_mapping+0x110/0x110 [amdgpu] [172536.665332] drm_ioctl_kernel+0xaa/0xf0 [drm] [172536.665338] drm_ioctl+0x201/0x3b0 [drm] [172536.665369] ? amdgpu_cs_find_mapping+0x110/0x110 [amdgpu] [172536.665372] ? selinux_file_ioctl+0x135/0x230 [172536.665399] amdgpu_drm_ioctl+0x49/0x80 [amdgpu] [172536.665403] __x64_sys_ioctl+0x83/0xb0 [172536.665406] do_syscall_64+0x33/0x40 [172536.665409] entry_SYSCALL_64_after_hwframe+0x44/0xa9 Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/2018","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""0D4D4067-974D-4560-8320-22FDA399E3F9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/15c3bcc9b5349d40207e5f8d4d799b8b4b7d13b8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/20b947e5a3c74c5084d661c097517a554989d462"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/31ab27b14daaa75541a415c6794d6f3567fea44a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/70276460e914d560e96bfc208695a872fe9469c9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7086a23890d255bb5761604e39174b20d06231a4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8189f44270db1be78169e11eec51a3eeb980bc63"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/aa25acbe96692e4bf8482311c293f72d8c6034c0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/be585921f29df5422a39c952d188b418ad48ffab"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c12984cdb077b9042d2dc20ca18cb16a87bcc774"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49336,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:10.370,2025-02-26T07:01:10.370,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/etnaviv: check for reaped mapping in etnaviv_iommu_unmap_gem When the mapping is already reaped the unmap must be a no-op, as we would otherwise try to remove the mapping twice, corrupting the involved data structures.",,,"[{""url"":""https://git.kernel.org/stable/c/03bd455a79f69d97fee3e3b212ab754442f10e5c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/19323b3671a85788569d15685c8f83a05ec48cbb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/436cff507f2a41230baacc3e2ef1d3b2d2653f40"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/461c0fdf9434188875da9f10cfc86065866bb797"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/64f4edec081cb7c97c5e928529d0e1b0dbbffb83"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e168c25526cd0368af098095c2ded4a008007e1b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49337,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:10.457,2025-02-26T07:01:10.457,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ocfs2: dlmfs: fix error handling of user_dlm_destroy_lock When user_dlm_destroy_lock failed, it didn't clean up the flags it set before exit. For USER_LOCK_IN_TEARDOWN, if this function fails because of lock is still in used, next time when unlink invokes this function, it will return succeed, and then unlink will remove inode and dentry if lock is not in used(file closed), but the dlm lock is still linked in dlm lock resource, then when bast come in, it will trigger a panic due to user-after-free. See the following panic call trace. To fix this, USER_LOCK_IN_TEARDOWN should be reverted if fail. And also error should be returned if USER_LOCK_IN_TEARDOWN is set to let user know that unlink fail. For the case of ocfs2_dlm_unlock failure, besides USER_LOCK_IN_TEARDOWN, USER_LOCK_BUSY is also required to be cleared. Even though spin lock is released in between, but USER_LOCK_IN_TEARDOWN is still set, for USER_LOCK_BUSY, if before every place that waits on this flag, USER_LOCK_IN_TEARDOWN is checked to bail out, that will make sure no flow waits on the busy flag set by user_dlm_destroy_lock(), then we can simplely revert USER_LOCK_BUSY when ocfs2_dlm_unlock fails. Fix user_dlm_cluster_lock() which is the only function not following this. [ 941.336392] (python,26174,16):dlmfs_unlink:562 ERROR: unlink 004fb0000060000b5a90b8c847b72e1, error -16 from destroy [ 989.757536] ------------[ cut here ]------------ [ 989.757709] kernel BUG at fs/ocfs2/dlmfs/userdlm.c:173! [ 989.757876] invalid opcode: 0000 [#1] SMP [ 989.758027] Modules linked in: ksplice_2zhuk2jr_ib_ipoib_new(O) ksplice_2zhuk2jr(O) mptctl mptbase xen_netback xen_blkback xen_gntalloc xen_gntdev xen_evtchn cdc_ether usbnet mii ocfs2 jbd2 rpcsec_gss_krb5 auth_rpcgss nfsv4 nfsv3 nfs_acl nfs fscache lockd grace ocfs2_dlmfs ocfs2_stack_o2cb ocfs2_dlm ocfs2_nodemanager ocfs2_stackglue configfs bnx2fc fcoe libfcoe libfc scsi_transport_fc sunrpc ipmi_devintf bridge stp llc rds_rdma rds bonding ib_sdp ib_ipoib rdma_ucm ib_ucm ib_uverbs ib_umad rdma_cm ib_cm iw_cm falcon_lsm_serviceable(PE) falcon_nf_netcontain(PE) mlx4_vnic falcon_kal(E) falcon_lsm_pinned_13402(E) mlx4_ib ib_sa ib_mad ib_core ib_addr xenfs xen_privcmd dm_multipath iTCO_wdt iTCO_vendor_support pcspkr sb_edac edac_core i2c_i801 lpc_ich mfd_core ipmi_ssif i2c_core ipmi_si ipmi_msghandler [ 989.760686] ioatdma sg ext3 jbd mbcache sd_mod ahci libahci ixgbe dca ptp pps_core vxlan udp_tunnel ip6_udp_tunnel megaraid_sas mlx4_core crc32c_intel be2iscsi bnx2i cnic uio cxgb4i cxgb4 cxgb3i libcxgbi ipv6 cxgb3 mdio libiscsi_tcp qla4xxx iscsi_boot_sysfs libiscsi scsi_transport_iscsi wmi dm_mirror dm_region_hash dm_log dm_mod [last unloaded: ksplice_2zhuk2jr_ib_ipoib_old] [ 989.761987] CPU: 10 PID: 19102 Comm: dlm_thread Tainted: P OE 4.1.12-124.57.1.el6uek.x86_64 #2 [ 989.762290] Hardware name: Oracle Corporation ORACLE SERVER X5-2/ASM,MOTHERBOARD,1U, BIOS 30350100 06/17/2021 [ 989.762599] task: ffff880178af6200 ti: ffff88017f7c8000 task.ti: ffff88017f7c8000 [ 989.762848] RIP: e030:[<ffffffffc07d4316>] [<ffffffffc07d4316>] __user_dlm_queue_lockres.part.4+0x76/0x80 [ocfs2_dlmfs] [ 989.763185] RSP: e02b:ffff88017f7cbcb8 EFLAGS: 00010246 [ 989.763353] RAX: 0000000000000000 RBX: ffff880174d48008 RCX: 0000000000000003 [ 989.763565] RDX: 0000000000120012 RSI: 0000000000000003 RDI: ffff880174d48170 [ 989.763778] RBP: ffff88017f7cbcc8 R08: ffff88021f4293b0 R09: 0000000000000000 [ 989.763991] R10: ffff880179c8c000 R11: 0000000000000003 R12: ffff880174d48008 [ 989.764204] R13: 0000000000000003 R14: ffff880179c8c000 R15: ffff88021db7a000 [ 989.764422] FS: 0000000000000000(0000) GS:ffff880247480000(0000) knlGS:ffff880247480000 [ 989.764685] CS: e033 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 989.764865] CR2: ffff8000007f6800 CR3: 0000000001ae0000 CR4: 0000000000042660 [ 989.765081] Stack: [ 989.765167] 00000000000 ---truncated---",,,"[{""url"":""https://git.kernel.org/stable/c/02480e2e82ae0e5588374bbbcf4fa6e4959fa174"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1434cd71ad9f3a6beda3036972983b6c4869207c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2c5e26a626fe46675bceba853e12aaf13c712e10"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/337e36550788dbe03254f0593a231c1c4873b20d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/733a35c00ef363a1c774d7ea486e0735b7c13a15"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/82bf8e7271fade40184177cb406203addc34c4a0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/863e0d81b6683c4cbc588ad831f560c90e494bef"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9c96238fac045b289993d7bc5aae7b2d72b25c76"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/efb54ec548829e1d3605f0434526f86e345b1b28"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49338,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:10.560,2025-02-26T07:01:10.560,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net/mlx5e: CT: Fix cleanup of CT before cleanup of TC ct rules CT cleanup assumes that all tc rules were deleted first, and so is free to delete the CT shared resources (e.g the dr_action fwd_action which is shared for all tuples). But currently for uplink, this is happens in reverse, causing the below trace. CT cleanup is called from: mlx5e_cleanup_rep_tx()->mlx5e_cleanup_uplink_rep_tx()-> mlx5e_rep_tc_cleanup()->mlx5e_tc_esw_cleanup()-> mlx5_tc_ct_clean() Only afterwards, tc cleanup is called from: mlx5e_cleanup_rep_tx()->mlx5e_tc_ht_cleanup() which would have deleted all the tc ct rules, and so delete all the offloaded tuples. Fix this reversing the order of init and on cleanup, which will result in tc cleanup then ct cleanup. [ 9443.593347] WARNING: CPU: 2 PID: 206774 at drivers/net/ethernet/mellanox/mlx5/core/steering/dr_action.c:1882 mlx5dr_action_destroy+0x188/0x1a0 [mlx5_core] [ 9443.593349] Modules linked in: act_ct nf_flow_table rdma_ucm(O) rdma_cm(O) iw_cm(O) ib_ipoib(O) ib_cm(O) ib_umad(O) mlx5_core(O-) mlxfw(O) mlxdevm(O) auxiliary(O) ib_uverbs(O) psample ib_core(O) mlx_compat(O) ip_gre gre ip_tunnel act_vlan bonding geneve esp6_offload esp6 esp4_offload esp4 act_tunnel_key vxlan ip6_udp_tunnel udp_tunnel act_mirred act_skbedit act_gact cls_flower sch_ingress nfnetlink_cttimeout nfnetlink xfrm_user xfrm_algo 8021q garp stp ipmi_devintf mrp ipmi_msghandler llc openvswitch nsh nf_conncount nf_nat mst_pciconf(O) dm_multipath sbsa_gwdt uio_pdrv_genirq uio mlxbf_pmc mlxbf_pka mlx_trio mlx_bootctl(O) bluefield_edac sch_fq_codel ip_tables ipv6 crc_ccitt btrfs zstd_compress raid10 raid456 async_raid6_recov async_memcpy async_pq async_xor async_tx xor xor_neon raid6_pq raid1 raid0 crct10dif_ce i2c_mlxbf gpio_mlxbf2 mlxbf_gige aes_neon_bs aes_neon_blk [last unloaded: mlx5_ib] [ 9443.593419] CPU: 2 PID: 206774 Comm: modprobe Tainted: G O 5.4.0-1023.24.gc14613d-bluefield #1 [ 9443.593422] Hardware name: https://www.mellanox.com BlueField SoC/BlueField SoC, BIOS BlueField:143ebaf Jan 11 2022 [ 9443.593424] pstate: 20000005 (nzCv daif -PAN -UAO) [ 9443.593489] pc : mlx5dr_action_destroy+0x188/0x1a0 [mlx5_core] [ 9443.593545] lr : mlx5_ct_fs_smfs_destroy+0x24/0x30 [mlx5_core] [ 9443.593546] sp : ffff8000135dbab0 [ 9443.593548] x29: ffff8000135dbab0 x28: ffff0003a6ab8e80 [ 9443.593550] x27: 0000000000000000 x26: ffff0003e07d7000 [ 9443.593552] x25: ffff800009609de0 x24: ffff000397fb2120 [ 9443.593554] x23: ffff0003975c0000 x22: 0000000000000000 [ 9443.593556] x21: ffff0003975f08c0 x20: ffff800009609de0 [ 9443.593558] x19: ffff0003c8a13380 x18: 0000000000000014 [ 9443.593560] x17: 0000000067f5f125 x16: 000000006529c620 [ 9443.593561] x15: 000000000000000b x14: 0000000000000000 [ 9443.593563] x13: 0000000000000002 x12: 0000000000000001 [ 9443.593565] x11: ffff800011108868 x10: 0000000000000000 [ 9443.593567] x9 : 0000000000000000 x8 : ffff8000117fb270 [ 9443.593569] x7 : ffff0003ebc01288 x6 : 0000000000000000 [ 9443.593571] x5 : ffff800009591ab8 x4 : fffffe000f6d9a20 [ 9443.593572] x3 : 0000000080040001 x2 : fffffe000f6d9a20 [ 9443.593574] x1 : ffff8000095901d8 x0 : 0000000000000025 [ 9443.593577] Call trace: [ 9443.593634] mlx5dr_action_destroy+0x188/0x1a0 [mlx5_core] [ 9443.593688] mlx5_ct_fs_smfs_destroy+0x24/0x30 [mlx5_core] [ 9443.593743] mlx5_tc_ct_clean+0x34/0xa8 [mlx5_core] [ 9443.593797] mlx5e_tc_esw_cleanup+0x58/0x88 [mlx5_core] [ 9443.593851] mlx5e_rep_tc_cleanup+0x24/0x30 [mlx5_core] [ 9443.593905] mlx5e_cleanup_rep_tx+0x6c/0x78 [mlx5_core] [ 9443.593959] mlx5e_detach_netdev+0x74/0x98 [mlx5_core] [ 9443.594013] mlx5e_netdev_change_profile+0x70/0x180 [mlx5_core] [ 9443.594067] mlx5e_netdev_attach_nic_profile+0x34/0x40 [mlx5_core] [ 9443.594122] mlx5e_vport_rep_unload+0x15c/0x1a8 [mlx5_core] [ 9443.594177] mlx5_eswitch_unregister_vport_reps+0x228/0x298 [mlx5_core] [ 9443.594231] mlx5e_rep_remove+0x2c/0x38 ---truncated---",,,"[{""url"":""https://git.kernel.org/stable/c/11bcc79f4bcd244145e6a2c04d5dc755303492a8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/15ef9efa855cf405fadd78272e1e5d04e09a1cf3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49339,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:10.657,2025-02-26T07:01:10.657,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: ipv6: unexport __init-annotated seg6_hmac_init() EXPORT_SYMBOL and __init is a bad combination because the .init.text section is freed up after the initialization. Hence, modules cannot use symbols annotated __init. The access to a freed symbol may end up with kernel panic. modpost used to detect it, but it has been broken for a decade. Recently, I fixed modpost so it started to warn it again, then this showed up in linux-next builds. There are two ways to fix it: - Remove __init - Remove EXPORT_SYMBOL I chose the latter for this case because the caller (net/ipv6/seg6.c) and the callee (net/ipv6/seg6_hmac.c) belong to the same module. It seems an internal function call in ipv6.ko.",,,"[{""url"":""https://git.kernel.org/stable/c/1084716f76c8045eadf92a9d9a62641f3c8d8c90"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/317260b3eb6384a05a8af212308fa50f3b2e8290"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3e6de5037148c5a93a436b1e8d2edad3dac11755"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5801f064e35181c71857a80ff18af4dbec3c5f5c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5d9c1b081ad28c852a97e10dd75412546497694a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/64aef8efe96c1616142c4476a05731306fc4494e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9ba4416b831eeb4d185e88e73488d1d21288e63a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ab8b2c2de273ec1d698a18e399896a6febb5cda0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49340,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:10.753,2025-02-26T07:01:10.753,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ip_gre: test csum_start instead of transport header GRE with TUNNEL_CSUM will apply local checksum offload on CHECKSUM_PARTIAL packets. ipgre_xmit must validate csum_start after an optional skb_pull, else lco_csum may trigger an overflow. The original check was if (csum && skb_checksum_start(skb) < skb->data) return -EINVAL; This had false positives when skb_checksum_start is undefined: when ip_summed is not CHECKSUM_PARTIAL. A discussed refinement was straightforward if (csum && skb->ip_summed == CHECKSUM_PARTIAL && skb_checksum_start(skb) < skb->data) return -EINVAL; But was eventually revised more thoroughly: - restrict the check to the only branch where needed, in an uncommon GRE path that uses header_ops and calls skb_pull. - test skb_transport_header, which is set along with csum_start in skb_partial_csum_set in the normal header_ops datapath. Turns out skbs can arrive in this branch without the transport header set, e.g., through BPF redirection. Revise the check back to check csum_start directly, and only if CHECKSUM_PARTIAL. Do leave the check in the updated location. Check field regardless of whether TUNNEL_CSUM is configured.",,,"[{""url"":""https://git.kernel.org/stable/c/0c92d813c7c9ca2212ecd879232e7d87362fce98"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/0ffa268724656633af5f37a38c212326d98ebe8c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3d08bc3a5d9b2106f5c8bcf1adb73147824aa006"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7596bd7920985f7fc8579a92e48bc53ce4475b21"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8d21e9963bec1aad2280cdd034c8993033ef2948"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e6b6f98fc7605c06c0a3baa70f62c534d7b4ce58"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fbeb8dfa8b87ef259eef0c89e39b53962a3cf604"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49341,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:10.857,2025-02-26T07:01:10.857,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: bpf, arm64: Clear prog->jited_len along prog->jited syzbot reported an illegal copy_to_user() attempt from bpf_prog_get_info_by_fd() [1] There was no repro yet on this bug, but I think that commit 0aef499f3172 (""mm/usercopy: Detect vmalloc overruns"") is exposing a prior bug in bpf arm64. bpf_prog_get_info_by_fd() looks at prog->jited_len to determine if the JIT image can be copied out to user space. My theory is that syzbot managed to get a prog where prog->jited_len has been set to 43, while prog->bpf_func has ben cleared. It is not clear why copy_to_user(uinsns, NULL, ulen) is triggering this particular warning. I thought find_vma_area(NULL) would not find a vm_struct. As we do not hold vmap_area_lock spinlock, it might be possible that the found vm_struct was garbage. [1] usercopy: Kernel memory exposure attempt detected from vmalloc (offset 792633534417210172, size 43)! kernel BUG at mm/usercopy.c:101! Internal error: Oops - BUG: 0 [#1] PREEMPT SMP Modules linked in: CPU: 0 PID: 25002 Comm: syz-executor.1 Not tainted 5.18.0-syzkaller-10139-g8291eaafed36 #0 Hardware name: linux,dummy-virt (DT) pstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--) pc : usercopy_abort+0x90/0x94 mm/usercopy.c:101 lr : usercopy_abort+0x90/0x94 mm/usercopy.c:89 sp : ffff80000b773a20 x29: ffff80000b773a30 x28: faff80000b745000 x27: ffff80000b773b48 x26: 0000000000000000 x25: 000000000000002b x24: 0000000000000000 x23: 00000000000000e0 x22: ffff80000b75db67 x21: 0000000000000001 x20: 000000000000002b x19: ffff80000b75db3c x18: 00000000fffffffd x17: 2820636f6c6c616d x16: 76206d6f72662064 x15: 6574636574656420 x14: 74706d6574746120 x13: 2129333420657a69 x12: 73202c3237313031 x11: 3237313434333533 x10: 3336323937207465 x9 : 657275736f707865 x8 : ffff80000a30c550 x7 : ffff80000b773830 x6 : ffff80000b773830 x5 : 0000000000000000 x4 : ffff00007fbbaa10 x3 : 0000000000000000 x2 : 0000000000000000 x1 : f7ff000028fc0000 x0 : 0000000000000064 Call trace: usercopy_abort+0x90/0x94 mm/usercopy.c:89 check_heap_object mm/usercopy.c:186 [inline] __check_object_size mm/usercopy.c:252 [inline] __check_object_size+0x198/0x36c mm/usercopy.c:214 check_object_size include/linux/thread_info.h:199 [inline] check_copy_size include/linux/thread_info.h:235 [inline] copy_to_user include/linux/uaccess.h:159 [inline] bpf_prog_get_info_by_fd.isra.0+0xf14/0xfdc kernel/bpf/syscall.c:3993 bpf_obj_get_info_by_fd+0x12c/0x510 kernel/bpf/syscall.c:4253 __sys_bpf+0x900/0x2150 kernel/bpf/syscall.c:4956 __do_sys_bpf kernel/bpf/syscall.c:5021 [inline] __se_sys_bpf kernel/bpf/syscall.c:5019 [inline] __arm64_sys_bpf+0x28/0x40 kernel/bpf/syscall.c:5019 __invoke_syscall arch/arm64/kernel/syscall.c:38 [inline] invoke_syscall+0x48/0x114 arch/arm64/kernel/syscall.c:52 el0_svc_common.constprop.0+0x44/0xec arch/arm64/kernel/syscall.c:142 do_el0_svc+0xa0/0xc0 arch/arm64/kernel/syscall.c:206 el0_svc+0x44/0xb0 arch/arm64/kernel/entry-common.c:624 el0t_64_sync_handler+0x1ac/0x1b0 arch/arm64/kernel/entry-common.c:642 el0t_64_sync+0x198/0x19c arch/arm64/kernel/entry.S:581 Code: aa0003e3 d00038c0 91248000 97fff65f (d4210000)",,,"[{""url"":""https://git.kernel.org/stable/c/0cf7aaff290cdc4d7cee683d4a18138b0dacac48"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/10f3b29c65bb2fe0d47c2945cd0b4087be1c5218"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3f4d5e727aeaa610688d46c9f101f78b7f712583"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/41f7c4f85d402043687e863627a1a84fa867c62d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5c25a3040bc0486c41a7b63a1fb0de7cdb846ad7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/aaf61a312af63e1cfe2264c4c5b8cd4ea3626025"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e412b3d178ea4bf746f6b8ee086761613704c6be"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49342,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:10.953,2025-03-13T21:54:03.737,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: ethernet: bgmac: Fix refcount leak in bcma_mdio_mii_register of_get_child_by_name() returns a node pointer with refcount incremented, we should use of_node_put() on it when not need anymore. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.8"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""940BE09D-6DA7-42D6-81BF-3E13DC54BE57""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/7fb1fe7d9a167205413f1de8db9f7d0f82c78286"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b51996e35bbfcc7a27d94dfeed5cc2429b2c0df4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b8d91399775c55162073bb2aca061ec42e3d4bc1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49343,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:11.040,2025-02-26T07:01:11.040,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ext4: avoid cycles in directory h-tree A maliciously corrupted filesystem can contain cycles in the h-tree stored inside a directory. That can easily lead to the kernel corrupting tree nodes that were already verified under its hands while doing a node split and consequently accessing unallocated memory. Fix the problem by verifying traversed block numbers are unique.",,,"[{""url"":""https://git.kernel.org/stable/c/24b8206fec1db21d7e82f21f0b2ff5e5672cf5b3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3a3ce941645407cd0b0b7f01ad9e2ea3770f46cc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3ba733f879c2a88910744647e41edeefbc0d92b2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6084240bfc44bf265ab6ae7d96980469b05be0f1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b3ad9ff6f06c1dc6abf7437691c88ca3d6da3ac0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d5a16a6df2c16eaf4de04948553ef0089dee463f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e157c8f87e8fac112d6c955e69a60cdb9bc80a60"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ff4cafa51762da3824881a9000ca421d4b78b138"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49344,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:11.140,2025-03-13T22:07:39.830,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: af_unix: Fix a data-race in unix_dgram_peer_wake_me(). unix_dgram_poll() calls unix_dgram_peer_wake_me() without `other`'s lock held and check if its receive queue is full. Here we need to use unix_recvq_full_lockless() instead of unix_recvq_full(), otherwise KCSAN will report a data-race.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.2.75"",""versionEndExcluding"":""3.3"",""matchCriteriaId"":""5638A0E8-3156-4172-8646-A06234434789""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.4.111"",""versionEndExcluding"":""3.5"",""matchCriteriaId"":""E52E1F3C-10B4-4F40-8A2A-9594BC2B215D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.10.95"",""versionEndExcluding"":""3.11"",""matchCriteriaId"":""EC5478BC-B6FF-4B04-987C-ADAEAE43CBA8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.12.52"",""versionEndExcluding"":""3.13"",""matchCriteriaId"":""06C65A71-8C38-4C15-8A5D-CFA8D65BFCA0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.14.59"",""versionEndExcluding"":""3.15"",""matchCriteriaId"":""1A2F1110-C965-4944-9689-F1761C69A6D1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.18.26"",""versionEndExcluding"":""3.19"",""matchCriteriaId"":""830AF0C0-9263-4CB8-A52B-833DA911C43B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.1.15"",""versionEndExcluding"":""4.2"",""matchCriteriaId"":""30BD25FB-1AEB-4577-9EA8-05D01771198D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.2.8"",""versionEndExcluding"":""4.3"",""matchCriteriaId"":""ECDD7212-EFE8-403A-B34A-CE83B1E7139D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.3.3"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""AEFFC18C-45D7-41A2-B7D9-545D81B3F8D8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/556720013c36c193d9cbfb06e7b33e51f0c39fbf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/662a80946ce13633ae90a55379f1346c10f0c432"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/71e8bfc7f838cabc60cba24e09ca84c4f8321ab2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8801eb3ccd2e4e3b1a01449383e3321ae6dbd9d6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/95f0ba806277733bf6024e23e27e1be773701cca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c61848500a3fd6867dfa4834b8c7f97133eceb9f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c926ae58f24f7bd55aa2ea4add9f952032507913"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49345,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:11.237,2025-02-26T07:01:11.237,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: xfrm: unexport __init-annotated xfrm4_protocol_init() EXPORT_SYMBOL and __init is a bad combination because the .init.text section is freed up after the initialization. Hence, modules cannot use symbols annotated __init. The access to a freed symbol may end up with kernel panic. modpost used to detect it, but it has been broken for a decade. Recently, I fixed modpost so it started to warn it again, then this showed up in linux-next builds. There are two ways to fix it: - Remove __init - Remove EXPORT_SYMBOL I chose the latter for this case because the only in-tree call-site, net/ipv4/xfrm4_policy.c is never compiled as modular. (CONFIG_XFRM is boolean)",,,"[{""url"":""https://git.kernel.org/stable/c/2b253fbc9f7b5db18d716436bdcf8ecef09fd63d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/31f3c6a4dcd3260a386e62cef2d5b36e902600a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4a388f08d8784af48f352193d2b72aaf167a57a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/85a055c03691e51499123194a14a0c249cf33227"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/be3884d5cd04ccd58294b83a02d70b7c5fca19d3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c58d82a1264813e69119c13e9804e2e60b664ad5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e04d59cfe0c0129df7aba7ef7bb17b96be2a64f2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e53cd3814504b2cadaba4d5a8a07eeea9ddacd03"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ef6d2354de238b065d8799c80da4be9a6af18e39"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49346,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:11.340,2025-04-14T19:45:55.220,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: dsa: lantiq_gswip: Fix refcount leak in gswip_gphy_fw_list Every iteration of for_each_available_child_of_node() decrements the reference count of the previous node. when breaking early from a for_each_available_child_of_node() loop, we need to explicitly call of_node_put() on the gphy_fw_np. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0737e018a05e2aa352828c52bdeed3b02cff2930"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2e007ac6fa7c9c94ad84da075c5c504afad690a0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/32cd78c5610f02a929f63cac985e73692d05f33e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/54d6802c4d83fa8de7696cfec06f475d5fd92d27"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7c8df6fad43d9d5d77f281f794b2a93cd02fd1a9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c2ae49a113a5344232f1ebb93bcf18bbd11e9c39"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49347,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:11.433,2025-02-26T07:01:11.433,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ext4: fix bug_on in ext4_writepages we got issue as follows: EXT4-fs error (device loop0): ext4_mb_generate_buddy:1141: group 0, block bitmap and bg descriptor inconsistent: 25 vs 31513 free cls ------------[ cut here ]------------ kernel BUG at fs/ext4/inode.c:2708! invalid opcode: 0000 [#1] PREEMPT SMP KASAN PTI CPU: 2 PID: 2147 Comm: rep Not tainted 5.18.0-rc2-next-20220413+ #155 RIP: 0010:ext4_writepages+0x1977/0x1c10 RSP: 0018:ffff88811d3e7880 EFLAGS: 00010246 RAX: 0000000000000000 RBX: 0000000000000001 RCX: ffff88811c098000 RDX: 0000000000000000 RSI: ffff88811c098000 RDI: 0000000000000002 RBP: ffff888128140f50 R08: ffffffffb1ff6387 R09: 0000000000000000 R10: 0000000000000007 R11: ffffed10250281ea R12: 0000000000000001 R13: 00000000000000a4 R14: ffff88811d3e7bb8 R15: ffff888128141028 FS: 00007f443aed9740(0000) GS:ffff8883aef00000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 0000000020007200 CR3: 000000011c2a4000 CR4: 00000000000006e0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Call Trace: <TASK> do_writepages+0x130/0x3a0 filemap_fdatawrite_wbc+0x83/0xa0 filemap_flush+0xab/0xe0 ext4_alloc_da_blocks+0x51/0x120 __ext4_ioctl+0x1534/0x3210 __x64_sys_ioctl+0x12c/0x170 do_syscall_64+0x3b/0x90 It may happen as follows: 1. write inline_data inode vfs_write new_sync_write ext4_file_write_iter ext4_buffered_write_iter generic_perform_write ext4_da_write_begin ext4_da_write_inline_data_begin -> If inline data size too small will allocate block to write, then mapping will has dirty page ext4_da_convert_inline_data_to_extent ->clear EXT4_STATE_MAY_INLINE_DATA 2. fallocate do_vfs_ioctl ioctl_preallocate vfs_fallocate ext4_fallocate ext4_convert_inline_data ext4_convert_inline_data_nolock ext4_map_blocks -> fail will goto restore data ext4_restore_inline_data ext4_create_inline_data ext4_write_inline_data ext4_set_inode_state -> set inode EXT4_STATE_MAY_INLINE_DATA 3. writepages __ext4_ioctl ext4_alloc_da_blocks filemap_flush filemap_fdatawrite_wbc do_writepages ext4_writepages if (ext4_has_inline_data(inode)) BUG_ON(ext4_test_inode_state(inode, EXT4_STATE_MAY_INLINE_DATA)) The root cause of this issue is we destory inline data until call ext4_writepages under delay allocation mode. But there maybe already convert from inline to extent. To solve this issue, we call filemap_flush first..",,,"[{""url"":""https://git.kernel.org/stable/c/013f12bdedb96816aaa27ee04349f4433d361f52"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/18a759f7f99f0b65a08ff5b7e745fc405a42bde4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/19918ec7717d87d5ab825884a46b26b21375d7ce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1b061af037646c9cdb0afd8a8d2f1e1c06285866"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1cde35417edc0370fb0179a4e38b78a15350a8d0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/73fd5b19285197078ee8a2e651d75d5b094a4de9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b2b78f5bf2d453dda3903955efee059260787a42"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/de1732b5c1693ad489c5d254f124f67cb775f37d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ef09ed5d37b84d18562b30cf7253e57062d0db05"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49348,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:11.533,2025-02-26T07:01:11.533,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ext4: filter out EXT4_FC_REPLAY from on-disk superblock field s_state The EXT4_FC_REPLAY bit in sbi->s_mount_state is used to indicate that we are in the middle of replay the fast commit journal. This was actually a mistake, since the sbi->s_mount_info is initialized from es->s_state. Arguably s_mount_state is misleadingly named, but the name is historical --- s_mount_state and s_state dates back to ext2. What should have been used is the ext4_{set,clear,test}_mount_flag() inline functions, which sets EXT4_MF_* bits in sbi->s_mount_flags. The problem with using EXT4_FC_REPLAY is that a maliciously corrupted superblock could result in EXT4_FC_REPLAY getting set in s_mount_state. This bypasses some sanity checks, and this can trigger a BUG() in ext4_es_cache_extent(). As a easy-to-backport-fix, filter out the EXT4_FC_REPLAY bit for now. We should eventually transition away from EXT4_FC_REPLAY to something like EXT4_MF_REPLAY.",,,"[{""url"":""https://git.kernel.org/stable/c/55b4dbb29054a05d839562f6d635ce05669b016d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/af2f1932743fb52ebcb008ad7ac500d9df0aa796"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b99fd73418350dea360da8311e87a6a7b0e15a4c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c878bea3c9d724ddfa05a813f30de3d25a0ba83f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cc5b09cb6dacd4b32640537929ab4ee8fb2b9e04"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49349,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:11.623,2025-03-25T14:51:05.100,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ext4: fix use-after-free in ext4_rename_dir_prepare We got issue as follows: EXT4-fs (loop0): mounted filesystem without journal. Opts: ,errors=continue ext4_get_first_dir_block: bh->b_data=0xffff88810bee6000 len=34478 ext4_get_first_dir_block: *parent_de=0xffff88810beee6ae bh->b_data=0xffff88810bee6000 ext4_rename_dir_prepare: [1] parent_de=0xffff88810beee6ae ================================================================== BUG: KASAN: use-after-free in ext4_rename_dir_prepare+0x152/0x220 Read of size 4 at addr ffff88810beee6ae by task rep/1895 CPU: 13 PID: 1895 Comm: rep Not tainted 5.10.0+ #241 Call Trace: dump_stack+0xbe/0xf9 print_address_description.constprop.0+0x1e/0x220 kasan_report.cold+0x37/0x7f ext4_rename_dir_prepare+0x152/0x220 ext4_rename+0xf44/0x1ad0 ext4_rename2+0x11c/0x170 vfs_rename+0xa84/0x1440 do_renameat2+0x683/0x8f0 __x64_sys_renameat+0x53/0x60 do_syscall_64+0x33/0x40 entry_SYSCALL_64_after_hwframe+0x44/0xa9 RIP: 0033:0x7f45a6fc41c9 RSP: 002b:00007ffc5a470218 EFLAGS: 00000246 ORIG_RAX: 0000000000000108 RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f45a6fc41c9 RDX: 0000000000000005 RSI: 0000000020000180 RDI: 0000000000000005 RBP: 00007ffc5a470240 R08: 00007ffc5a470160 R09: 0000000020000080 R10: 00000000200001c0 R11: 0000000000000246 R12: 0000000000400bb0 R13: 00007ffc5a470320 R14: 0000000000000000 R15: 0000000000000000 The buggy address belongs to the page: page:00000000440015ce refcount:0 mapcount:0 mapping:0000000000000000 index:0x1 pfn:0x10beee flags: 0x200000000000000() raw: 0200000000000000 ffffea00043ff4c8 ffffea0004325608 0000000000000000 raw: 0000000000000001 0000000000000000 00000000ffffffff 0000000000000000 page dumped because: kasan: bad access detected Memory state around the buggy address: ffff88810beee580: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ffff88810beee600: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff >ffff88810beee680: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ^ ffff88810beee700: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ffff88810beee780: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ================================================================== Disabling lock debugging due to kernel taint ext4_rename_dir_prepare: [2] parent_de->inode=3537895424 ext4_rename_dir_prepare: [3] dir=0xffff888124170140 ext4_rename_dir_prepare: [4] ino=2 ext4_rename_dir_prepare: ent->dir->i_ino=2 parent=-757071872 Reason is first directory entry which 'rec_len' is 34478, then will get illegal parent entry. Now, we do not check directory entry after read directory block in 'ext4_get_first_dir_block'. To solve this issue, check directory entry in 'ext4_get_first_dir_block'. [ Trigger an ext4_error() instead of just warning if the directory is missing a '.' or '..' entry. Also make sure we return an error code if the file system is corrupted. -TYT ]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""0D4D4067-974D-4560-8320-22FDA399E3F9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0be698ecbe4471fcad80e81ec6a05001421041b3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0ff38b99fa075ddd246487a28cb9af049f4ceef1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/10801095224de0d0ab06ae60698680c1f883a3ae"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1a3a15bf6f9963d755270cbdb282863b84839195"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/364380c00912bed9b5d99eb485018360b0ecf64f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4a2bea60cf7ff957b3eda0b17750d483876a02fa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/97f802a652a749422dede32071d29a53cf4bd034"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/dd887f83ea54aea5b780a84527e23ab95f777fed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/eaecf7ebfd5dd09038a80b14be46b844f54cfc5c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49350,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:11.723,2025-02-26T07:01:11.723,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: mdio: unexport __init-annotated mdio_bus_init() EXPORT_SYMBOL and __init is a bad combination because the .init.text section is freed up after the initialization. Hence, modules cannot use symbols annotated __init. The access to a freed symbol may end up with kernel panic. modpost used to detect it, but it has been broken for a decade. Recently, I fixed modpost so it started to warn it again, then this showed up in linux-next builds. There are two ways to fix it: - Remove __init - Remove EXPORT_SYMBOL I chose the latter for this case because the only in-tree call-site, drivers/net/phy/phy_device.c is never compiled as modular. (CONFIG_PHYLIB is boolean)",,,"[{""url"":""https://git.kernel.org/stable/c/35b42dce619701f1300fb8498dae82c9bb1f0263"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5534bcd7c40299862237c4a8fd9c5031b3db1538"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/59fa94cddf9eef8d8dae587373eed8b8f4eb11d7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6a90a44d53428a3bf01bd80df9ba78b19959270c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7759c3222815b945a94b212bc0c6cdec475cfec2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ab64ec2c75683f30ccde9eaaf0761002f901aa12"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f2f0f8c18b60ca64ff50892ed899cf1c77864755"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f5c68137f1191ba3fcf6260ec71b30be2e2bf4c3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49351,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:11.823,2025-04-14T19:46:06.033,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: altera: Fix refcount leak in altera_tse_mdio_create Every iteration of for_each_child_of_node() decrements the reference count of the previous node. When break from a for_each_child_of_node() loop, we need to explicitly call of_node_put() on the child node when not need anymore. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.15"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""AF11B50A-98D1-4E4E-83EA-AAD2562751B4""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/11ec18b1d8d92b9df307d31950dcba0b3dd7283c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1fd12298a0e0ca23478c715e672ee64c85670584"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4f850fe0a32c3f1e19b76996a3b1ca32637a14de"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5cd0e22fa11f4a21a8c09cc258f20b1474c95801"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/803b217f1fb49a2dbb2123acdb45111b9c48b8be"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8174acbef87b8dd8bf3731eba2a5af1ac857e239"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/96bf5ed057df2d157274d4e2079002f9a9404bb8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a013fa884d8738ad8455aa1a843b8c9d80c6c833"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e31d9ba169860687dba19bdc8fccbfd34077f655"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49352,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:11.920,2025-06-19T13:15:23.173,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ext4: fix warning in ext4_handle_inode_extension We got issue as follows: EXT4-fs error (device loop0) in ext4_reserve_inode_write:5741: Out of memory EXT4-fs error (device loop0): ext4_setattr:5462: inode #13: comm syz-executor.0: mark_inode_dirty error EXT4-fs error (device loop0) in ext4_setattr:5519: Out of memory EXT4-fs error (device loop0): ext4_ind_map_blocks:595: inode #13: comm syz-executor.0: Can't allocate blocks for non-extent mapped inodes with bigalloc ------------[ cut here ]------------ WARNING: CPU: 1 PID: 4361 at fs/ext4/file.c:301 ext4_file_write_iter+0x11c9/0x1220 Modules linked in: CPU: 1 PID: 4361 Comm: syz-executor.0 Not tainted 5.10.0+ #1 RIP: 0010:ext4_file_write_iter+0x11c9/0x1220 RSP: 0018:ffff924d80b27c00 EFLAGS: 00010282 RAX: ffffffff815a3379 RBX: 0000000000000000 RCX: 000000003b000000 RDX: ffff924d81601000 RSI: 00000000000009cc RDI: 00000000000009cd RBP: 000000000000000d R08: ffffffffbc5a2c6b R09: 0000902e0e52a96f R10: ffff902e2b7c1b40 R11: ffff902e2b7c1b40 R12: 000000000000000a R13: 0000000000000001 R14: ffff902e0e52aa10 R15: ffffffffffffff8b FS: 00007f81a7f65700(0000) GS:ffff902e3bc80000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: ffffffffff600400 CR3: 000000012db88001 CR4: 00000000003706e0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Call Trace: do_iter_readv_writev+0x2e5/0x360 do_iter_write+0x112/0x4c0 do_pwritev+0x1e5/0x390 __x64_sys_pwritev2+0x7e/0xa0 do_syscall_64+0x37/0x50 entry_SYSCALL_64_after_hwframe+0x44/0xa9 Above issue may happen as follows: Assume inode.i_size=4096 EXT4_I(inode)->i_disksize=4096 step 1: set inode->i_isize = 8192 ext4_setattr if (attr->ia_size != inode->i_size) EXT4_I(inode)->i_disksize = attr->ia_size; rc = ext4_mark_inode_dirty ext4_reserve_inode_write ext4_get_inode_loc __ext4_get_inode_loc sb_getblk --> return -ENOMEM ... if (!error) ->will not update i_size i_size_write(inode, attr->ia_size); Now: inode.i_size=4096 EXT4_I(inode)->i_disksize=8192 step 2: Direct write 4096 bytes ext4_file_write_iter ext4_dio_write_iter iomap_dio_rw ->return error if (extend) ext4_handle_inode_extension WARN_ON_ONCE(i_size_read(inode) < EXT4_I(inode)->i_disksize); ->Then trigger warning. To solve above issue, if mark inode dirty failed in ext4_setattr just set 'EXT4_I(inode)->i_disksize' with old value.",,,"[{""url"":""https://git.kernel.org/stable/c/1bcce88da60eccc946c0f4ed942b0f08cd565778"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/adf490083ca52ebfb0b2fe64ff1ead00c0452dd7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b81d2ff6885e38fc745eeaf9565775055778fc0b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e383c2aa5f02ab571530dc5c5696479672478c25"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f4534c9fc94d22383f187b9409abb3f9df2e3db3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49353,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:12.013,2025-04-14T19:45:00.240,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: powerpc/papr_scm: don't requests stats with '0' sized stats buffer Sachin reported [1] that on a POWER-10 lpar he is seeing a kernel panic being reported with vPMEM when papr_scm probe is being called. The panic is of the form below and is observed only with following option disabled(profile) for the said LPAR 'Enable Performance Information Collection' in the HMC: Kernel attempted to write user page (1c) - exploit attempt? (uid: 0) BUG: Kernel NULL pointer dereference on write at 0x0000001c Faulting instruction address: 0xc008000001b90844 Oops: Kernel access of bad area, sig: 11 [#1] <snip> NIP [c008000001b90844] drc_pmem_query_stats+0x5c/0x270 [papr_scm] LR [c008000001b92794] papr_scm_probe+0x2ac/0x6ec [papr_scm] Call Trace: 0xc00000000941bca0 (unreliable) papr_scm_probe+0x2ac/0x6ec [papr_scm] platform_probe+0x98/0x150 really_probe+0xfc/0x510 __driver_probe_device+0x17c/0x230 <snip> ---[ end trace 0000000000000000 ]--- Kernel panic - not syncing: Fatal exception On investigation looks like this panic was caused due to a 'stat_buffer' of size==0 being provided to drc_pmem_query_stats() to fetch all performance stats-ids of an NVDIMM. However drc_pmem_query_stats() shouldn't have been called since the vPMEM NVDIMM doesn't support and performance stat-id's. This was caused due to missing check for 'p->stat_buffer_len' at the beginning of papr_scm_pmu_check_events() which indicates that the NVDIMM doesn't support performance-stats. Fix this by introducing the check for 'p->stat_buffer_len' at the beginning of papr_scm_pmu_check_events(). [1] https://lore.kernel.org/all/6B3A522A-6A5F-4CC9-B268-0C63AA6E07D3@linux.ibm.com","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.18.3:*:*:*:*:*:*:*"",""matchCriteriaId"":""1F3E9542-4AD8-4E33-8FFD-E0DC34E99EA1""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/07bf9431b1590d1cd7a8d62075d0b50b073f0495"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e1295aab2ebcda1c1a9ed342baedc080e5c393e5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49354,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:12.103,2025-04-14T19:44:14.093,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ata: pata_octeon_cf: Fix refcount leak in octeon_cf_probe of_find_device_by_node() takes reference, we should use put_device() to release it when not need anymore. Add missing put_device() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.8"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""24FAA318-690B-47AA-B767-63041A5296DC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/10d6bdf532902be1d8aa5900b3c03c5671612aa2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/19cb3ece14547cb1ca2021798aaf49a3f82643d1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7bd85c5ba1687daf54e3b6907673c3604b1e75cf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/888312dc297a8a103f6371ef668c7e04f57a7679"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8d8ad067b90f231b8fdb14acee673ca4012f6045"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a4d3e5f1d7d4f8b5e3834fec0f057a762c55806b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c9782e1b21bee4b783a64b2a91e7e71406c21a21"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d5a1e7f33c88780b279835d63665d7e38ccb671f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fb2cb409b504bb3a69e65a17f3120328c8e50219"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49355,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:12.200,2025-02-26T13:15:34.157,Rejected,[],Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.,,,[],,,,,,,,,
CVE-2022-49356,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:12.300,2025-02-26T07:01:12.300,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: SUNRPC: Trap RDMA segment overflows Prevent svc_rdma_build_writes() from walking off the end of a Write chunk's segment array. Caught with KASAN. The test that this fix replaces is invalid, and might have been left over from an earlier prototype of the PCL work.",,,"[{""url"":""https://git.kernel.org/stable/c/659f7568e09593945c221bf20217a82ebdfe1328"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/812c13521d4a72469c78ce06d8cdc8dc5b5557b5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ea26bf5eca1459b5a7824997d7823409ce38214e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f012e95b377c73c0283f009823c633104dedb337"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49357,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:12.390,2025-02-26T07:01:12.390,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: efi: Do not import certificates from UEFI Secure Boot for T2 Macs On Apple T2 Macs, when Linux attempts to read the db and dbx efi variables at early boot to load UEFI Secure Boot certificates, a page fault occurs in Apple firmware code and EFI runtime services are disabled with the following logs: [Firmware Bug]: Page fault caused by firmware at PA: 0xffffb1edc0068000 WARNING: CPU: 3 PID: 104 at arch/x86/platform/efi/quirks.c:735 efi_crash_gracefully_on_page_fault+0x50/0xf0 (Removed some logs from here) Call Trace: <TASK> page_fault_oops+0x4f/0x2c0 ? search_bpf_extables+0x6b/0x80 ? search_module_extables+0x50/0x80 ? search_exception_tables+0x5b/0x60 kernelmode_fixup_or_oops+0x9e/0x110 __bad_area_nosemaphore+0x155/0x190 bad_area_nosemaphore+0x16/0x20 do_kern_addr_fault+0x8c/0xa0 exc_page_fault+0xd8/0x180 asm_exc_page_fault+0x1e/0x30 (Removed some logs from here) ? __efi_call+0x28/0x30 ? switch_mm+0x20/0x30 ? efi_call_rts+0x19a/0x8e0 ? process_one_work+0x222/0x3f0 ? worker_thread+0x4a/0x3d0 ? kthread+0x17a/0x1a0 ? process_one_work+0x3f0/0x3f0 ? set_kthread_struct+0x40/0x40 ? ret_from_fork+0x22/0x30 </TASK> ---[ end trace 1f82023595a5927f ]--- efi: Froze efi_rts_wq and disabled EFI Runtime Services integrity: Couldn't get size: 0x8000000000000015 integrity: MODSIGN: Couldn't get UEFI db list efi: EFI Runtime Services are disabled! integrity: Couldn't get size: 0x8000000000000015 integrity: Couldn't get UEFI dbx list integrity: Couldn't get size: 0x8000000000000015 integrity: Couldn't get mokx list integrity: Couldn't get size: 0x80000000 So we avoid reading these UEFI variables and thus prevent the crash.",,,"[{""url"":""https://git.kernel.org/stable/c/155ca952c7ca19aa32ecfb7373a32bbc2e1ec6eb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1f7264f0510f519b4e4f575a8f0579ea65e7592e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/65237307f88f5200782ae7f243bdd385e37cde5d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b1cda6dd2c44771f042d65f0d17bec322ef99a0a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b34786b25d75f9c119696e6bdf3827f54ae3601b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c072cab98bac11f6ef9db640fb51834d9552e2e6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49358,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:12.487,2025-04-14T19:44:01.833,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: netfilter: nf_tables: memleak flow rule from commit path Abort path release flow rule object, however, commit path does not. Update code to destroy these objects before releasing the transaction.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.3"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""9C4F7493-E51F-47D3-9A59-0B528168B495""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/330c0c6cd2150a2d7f47af16aa590078b0d2f736"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5b8d63489c3b701eb2a76f848ec94d8cbc9373b9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/80de9ea1f5b808a6601e91111fae601df2b26369"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9dd732e0bdf538b1b76dc7c157e2b5e560ff30d3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ab9f34a30c23f656e76f4c5b83125a4e7b53c86e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e33d9bd563e71f6c6528b96008d65524a459c4dc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49359,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:12.583,2025-03-25T14:51:30.127,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/panfrost: Job should reference MMU not file_priv For a while now it's been allowed for a MMU context to outlive it's corresponding panfrost_priv, however the job structure still references panfrost_priv to get hold of the MMU context. If panfrost_priv has been freed this is a use-after-free which I've been able to trigger resulting in a splat. To fix this, drop the reference to panfrost_priv in the job structure and add a direct reference to the MMU structure which is what's actually needed.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.10.67"",""versionEndExcluding"":""5.11"",""matchCriteriaId"":""7A76EA36-1A32-42E8-93FC-BF561EE04439""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.13.19"",""versionEndExcluding"":""5.14"",""matchCriteriaId"":""097A0850-FAA6-4FFF-88C2-F5B49B5CE740""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14.6"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""87B23815-EF6B-44C0-93AF-C7D1ABA2C903""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/472dd7ea5e19a1aeabf1711ddc756777e05ee7c2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6e516faf04317db2c46cbec4e3b78b4653a5b109"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8c8e8cc91a6ffc79865108279a74fd57d9070a17"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49360,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:12.677,2025-02-26T07:01:12.677,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: f2fs: fix to do sanity check on total_data_blocks As Yanming reported in bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=215916 The kernel message is shown below: kernel BUG at fs/f2fs/segment.c:2560! Call Trace: allocate_segment_by_default+0x228/0x440 f2fs_allocate_data_block+0x13d1/0x31f0 do_write_page+0x18d/0x710 f2fs_outplace_write_data+0x151/0x250 f2fs_do_write_data_page+0xef9/0x1980 move_data_page+0x6af/0xbc0 do_garbage_collect+0x312f/0x46f0 f2fs_gc+0x6b0/0x3bc0 f2fs_balance_fs+0x921/0x2260 f2fs_write_single_data_page+0x16be/0x2370 f2fs_write_cache_pages+0x428/0xd00 f2fs_write_data_pages+0x96e/0xd50 do_writepages+0x168/0x550 __writeback_single_inode+0x9f/0x870 writeback_sb_inodes+0x47d/0xb20 __writeback_inodes_wb+0xb2/0x200 wb_writeback+0x4bd/0x660 wb_workfn+0x5f3/0xab0 process_one_work+0x79f/0x13e0 worker_thread+0x89/0xf60 kthread+0x26a/0x300 ret_from_fork+0x22/0x30 RIP: 0010:new_curseg+0xe8d/0x15f0 The root cause is: ckpt.valid_block_count is inconsistent with SIT table, stat info indicates filesystem has free blocks, but SIT table indicates filesystem has no free segment. So that during garbage colloection, it triggers panic when LFS allocator fails to find free segment. This patch tries to fix this issue by checking consistency in between ckpt.valid_block_count and block accounted from SIT.",,,"[{""url"":""https://git.kernel.org/stable/c/071b1269a3b3ad9cec16ed76a48015bfffd9aee8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6b8beca0edd32075a769bfe4178ca00c0dcd22a9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c9e4cd5b0ccd7168801d6a811919171b185c5cf8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cc8c9df19971e59ebbe669ce710080e347dfec32"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ef221b738b26d8c9f7e7967f4586db2dd3bd5288"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49361,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:12.770,2025-02-26T07:01:12.770,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: f2fs: fix to do sanity check for inline inode Yanming reported a kernel bug in Bugzilla kernel [1], which can be reproduced. The bug message is: The kernel message is shown below: kernel BUG at fs/inode.c:611! Call Trace: evict+0x282/0x4e0 __dentry_kill+0x2b2/0x4d0 dput+0x2dd/0x720 do_renameat2+0x596/0x970 __x64_sys_rename+0x78/0x90 do_syscall_64+0x3b/0x90 [1] https://bugzilla.kernel.org/show_bug.cgi?id=215895 The bug is due to fuzzed inode has both inline_data and encrypted flags. During f2fs_evict_inode(), as the inode was deleted by rename(), it will cause inline data conversion due to conflicting flags. The page cache will be polluted and the panic will be triggered in clear_inode(). Try fixing the bug by doing more sanity checks for inline data inode in sanity_check_inode().",,,"[{""url"":""https://git.kernel.org/stable/c/11c1cd032df85df3c096a57a7f27d57819956e4a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/198fd9faa271dd54dca6fc8eb6873f42dfd3b4d8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/677a82b44ebf263d4f9a0cfbd576a6ade797a07b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7cfe2d43becaf76e562b9617d2c2d9b445f86761"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/efdefbe8b7564602ab446474788225a1f2a323b5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49362,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:12.860,2025-03-25T14:51:55.130,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: NFSD: Fix potential use-after-free in nfsd_file_put() nfsd_file_put_noref() can free @nf, so don't dereference @nf immediately upon return from nfsd_file_put_noref().","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/261eabe19cb28e4a8587a4442d257b543d7c2d57"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/333dcc94ebf53f79f3dc0e7a7c16700bc7ff7e57"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ada1757b259f353cade47037ee0a0249b4cddad3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b6c71c66b0ad8f2b59d9bc08c7a5079b110bec01"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49363,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:12.953,2025-02-26T07:01:12.953,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: f2fs: fix to do sanity check on block address in f2fs_do_zero_range() As Yanming reported in bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=215894 I have encountered a bug in F2FS file system in kernel v5.17. I have uploaded the system call sequence as case.c, and a fuzzed image can be found in google net disk The kernel should enable CONFIG_KASAN=y and CONFIG_KASAN_INLINE=y. You can reproduce the bug by running the following commands: kernel BUG at fs/f2fs/segment.c:2291! Call Trace: f2fs_invalidate_blocks+0x193/0x2d0 f2fs_fallocate+0x2593/0x4a70 vfs_fallocate+0x2a5/0xac0 ksys_fallocate+0x35/0x70 __x64_sys_fallocate+0x8e/0xf0 do_syscall_64+0x3b/0x90 entry_SYSCALL_64_after_hwframe+0x44/0xae The root cause is, after image was fuzzed, block mapping info in inode will be inconsistent with SIT table, so in f2fs_fallocate(), it will cause panic when updating SIT with invalid blkaddr. Let's fix the issue by adding sanity check on block address before updating SIT table with it.",,,"[{""url"":""https://git.kernel.org/stable/c/25f8236213a91efdf708b9d77e9e51b6fc3e141c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/470493be19a5730ed432e3ac0f29a2ee7fc6c557"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7361c9f2bd6a8f0cbb41cdea9aff04765ff23f67"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/805b48b234a2803cb7daec7f158af12f0fbaefac"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a34d7b49894b0533222188a52e2958750f830efd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f2e1c38b5ac64eb1a16a89c52fb419409d12c25b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49364,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:13.043,2025-02-26T07:01:13.043,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: f2fs: fix to clear dirty inode in f2fs_evict_inode() As Yanming reported in bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=215904 The kernel message is shown below: kernel BUG at fs/f2fs/inode.c:825! Call Trace: evict+0x282/0x4e0 __dentry_kill+0x2b2/0x4d0 shrink_dentry_list+0x17c/0x4f0 shrink_dcache_parent+0x143/0x1e0 do_one_tree+0x9/0x30 shrink_dcache_for_umount+0x51/0x120 generic_shutdown_super+0x5c/0x3a0 kill_block_super+0x90/0xd0 kill_f2fs_super+0x225/0x310 deactivate_locked_super+0x78/0xc0 cleanup_mnt+0x2b7/0x480 task_work_run+0xc8/0x150 exit_to_user_mode_prepare+0x14a/0x150 syscall_exit_to_user_mode+0x1d/0x40 do_syscall_64+0x48/0x90 The root cause is: inode node and dnode node share the same nid, so during f2fs_evict_inode(), dnode node truncation will invalidate its NAT entry, so when truncating inode node, it fails due to invalid NAT entry, result in inode is still marked as dirty, fix this issue by clearing dirty for inode and setting SBI_NEED_FSCK flag in filesystem. output from dump.f2fs: [print_node_info: 354] Node ID [0xf:15] is inode i_nid[0] [0x f : 15]",,,"[{""url"":""https://git.kernel.org/stable/c/03c9373b15fa1c245ec99b2b5e7ba209eae4ef42"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/54c116615c99e22aa08aa950757ed726e2f60821"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c469953917b319d415fd621b9e5d0ea5203565cd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c9196d21359be8c7ee231029d13682273925fd00"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ccd58045beb997544b94558a9156be4742628491"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f2db71053dc0409fae785096ad19cce4c8a95af7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49365,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:13.140,2025-04-14T20:41:50.480,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/amdgpu: Off by one in dm_dmub_outbox1_low_irq() The > ARRAY_SIZE() should be >= ARRAY_SIZE() to prevent an out of bounds access.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-193""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/607c5cd1a08e196d9f2bd3b25a8083ed27ad7ceb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a35faec3db0e13aac8ea720bc1a3503081dd5a3d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b0808b7a04157b3f56e919f27023fec37a075fad"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ec9ec3bc08b18c5b1b2feafd306ea7c348013898"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49366,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:13.230,2025-04-14T20:42:02.230,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ksmbd: fix reference count leak in smb_check_perm_dacl() The issue happens in a specific path in smb_check_perm_dacl(). When ""id"" and ""uid"" have the same value, the function simply jumps out of the loop without decrementing the reference count of the object ""posix_acls"", which is increased by get_acl() earlier. This may result in memory leaks. Fix it by decreasing the reference count of ""posix_acls"" before jumping to label ""check_access_bits"".","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""B3166432-278C-4CF4-AE75-4257C99F32BD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/248d71b440aef829f5cc5f6545ca113ef5062900"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9758a6653c27867d810de02b4e5697163dda9883"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cf824b95c12a1abacadbc2d069931963221a3414"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d21a580dafc69aa04f46e6099616146a536b0724"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49367,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:13.353,2025-04-14T20:42:13.070,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: dsa: mv88e6xxx: Fix refcount leak in mv88e6xxx_mdios_register of_get_child_by_name() returns a node pointer with refcount incremented, we should use of_node_put() on it when done. mv88e6xxx_mdio_register() pass the device node to of_mdiobus_register(). We don't need the device node after it. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.11"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""FF98449F-152A-4015-820F-25898203A48F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/02ded5a173619b11728b8bf75a3fd995a2c1ff28"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/42658e47f1abbbe592007d3ba303de466114d0bb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/86c3c5f8e4bd1325e24f6fba9017cade29933377"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8a1a1255152da4fb934290e7ababc66f24985520"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a101793994c0a14c70bb4e44c7fda597eeebba0a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c1df9cb756e5a9ba1841648c44ee5d92306b9c65"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/dc1cf8c6f9793546696fded437a5b4c84944c48b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e0d763d0c7665c7897e4f5a0847ab0c82543345f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49368,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:13.483,2025-04-14T20:42:24.610,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: ethernet: mtk_eth_soc: out of bounds read in mtk_hwlro_get_fdir_entry() The ""fsp->location"" variable comes from user via ethtool_get_rxnfc(). Check that it is valid to prevent an out of bounds read.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-125""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.9"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""F66DA60C-48FB-4C0A-A8BD-EE00CAEBAAF6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0b238f75b65ed4462ef4cdfa718cac0ac7fce3b8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2bd1faedb74dc2a2be3972abcd4239b75a3e7b00"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4cde554c70d7397cfa2e4116bacb4accdfb6fd48"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5ba81f82607ead85fe36f50869fc4f5661359ab8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/657e7174603f0aab2cdedc64ac81edffd2a87afe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/71ae30662ec610b92644d13f79c78f76f17873b3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b24ca1cf846273361d5bd73a35de95a486a54b6d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b4f0e57ea0d867aacffad7999527e48bd4ea9293"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e7e7104e2d5ddf3806a28695670f21bef471f1e1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"",""baseScore"":7.1,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.2}]",,,,,,,,
CVE-2022-49369,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:13.583,2025-04-14T20:42:35.247,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: amt: fix possible memory leak in amt_rcv() If an amt receives packets and it finds socket. If it can't find a socket, it should free a received skb. But it doesn't. So, a memory leak would possibly occur.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1a1a0e80e005cbdc2c250fc858e1d8570f4e4acb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4b8032d39b276c52db57ff834c300405b9da2691"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/60d9c020c69977e138727b3577bc6a0458325e9c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49370,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:13.677,2025-04-14T20:42:48.657,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: firmware: dmi-sysfs: Fix memory leak in dmi_sysfs_register_handle kobject_init_and_add() takes reference even when it fails. According to the doc of kobject_init_and_add() If this function returns an error, kobject_put() must be called to properly clean up the memory associated with the object. Fix this issue by calling kobject_put().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.39"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""2B2FD5BE-8325-43F4-8461-95741F3A6006""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/3ba359ebe914ac3f8c6c832b28007c14c39d3766"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/660ba678f9998aca6db74f2dd912fa5124f0fa31"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/985706bd3bbeffc8737bc05965ca8d24837bc7db"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a724634b2a49f6ff0177a9e19a5a92fc1545e1b7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a9bfb37d6ba7c376b0d53337a4c5f5ff324bd725"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c66cc3c62870a27ea8f060a7e4c1ad8d26dd3f0d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ec752973aa721ee281d5441e497364637c626c7b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ed38d04342dfbe9e5aca745c8b5eb4188a74f0ef"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fdffa4ad8f6bf1ece877edfb807f2b2c729d8578"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49371,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:13.777,2025-04-14T20:43:02.437,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: driver core: fix deadlock in __device_attach In __device_attach function, The lock holding logic is as follows: ... __device_attach device_lock(dev) // get lock dev async_schedule_dev(__device_attach_async_helper, dev); // func async_schedule_node async_schedule_node_domain(func) entry = kzalloc(sizeof(struct async_entry), GFP_ATOMIC); /* when fail or work limit, sync to execute func, but __device_attach_async_helper will get lock dev as well, which will lead to A-A deadlock. */ if (!entry || atomic_read(&entry_count) > MAX_WORK) { func; else queue_work_node(node, system_unbound_wq, &entry->work) device_unlock(dev) As shown above, when it is allowed to do async probes, because of out of memory or work limit, async work is not allowed, to do sync execute instead. it will lead to A-A deadlock because of __device_attach_async_helper getting lock dev. To fix the deadlock, move the async_schedule_dev outside device_lock, as we can see, in async_schedule_node_domain, the parameter of queue_work_node is system_unbound_wq, so it can accept concurrent operations. which will also not change the code logic, and will not lead to deadlock.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.2"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""5D0E4D0F-E8FA-4FE1-8C0B-A3401C482CE8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/34fdd9b7def9d2fcb71bb7b0bc4848dd7313767e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/36ee9ffca8ef56c302f2855c4a5fccf61c0c1ada"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/593b595332bd2d65e1a5c1ae7897996c157f5468"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b232b02bf3c205b13a26dcec08e53baddd8e59ed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d53a227bfcd5160ce1b61d9954901968a20651e7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/df6de52b80aa3b46f5ac804412355ffe2e1df93e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49372,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:13.870,2025-02-26T07:01:13.870,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: tcp_rtx_synack() can be called from process context Laurent reported the enclosed report [1] This bug triggers with following coditions: 0) Kernel built with CONFIG_DEBUG_PREEMPT=y 1) A new passive FastOpen TCP socket is created. This FO socket waits for an ACK coming from client to be a complete ESTABLISHED one. 2) A socket operation on this socket goes through lock_sock() release_sock() dance. 3) While the socket is owned by the user in step 2), a retransmit of the SYN is received and stored in socket backlog. 4) At release_sock() time, the socket backlog is processed while in process context. 5) A SYNACK packet is cooked in response of the SYN retransmit. 6) -> tcp_rtx_synack() is called in process context. Before blamed commit, tcp_rtx_synack() was always called from BH handler, from a timer handler. Fix this by using TCP_INC_STATS() & NET_INC_STATS() which do not assume caller is in non preemptible context. [1] BUG: using __this_cpu_add() in preemptible [00000000] code: epollpep/2180 caller is tcp_rtx_synack.part.0+0x36/0xc0 CPU: 10 PID: 2180 Comm: epollpep Tainted: G OE 5.16.0-0.bpo.4-amd64 #1 Debian 5.16.12-1~bpo11+1 Hardware name: Supermicro SYS-5039MC-H8TRF/X11SCD-F, BIOS 1.7 11/23/2021 Call Trace: <TASK> dump_stack_lvl+0x48/0x5e check_preemption_disabled+0xde/0xe0 tcp_rtx_synack.part.0+0x36/0xc0 tcp_rtx_synack+0x8d/0xa0 ? kmem_cache_alloc+0x2e0/0x3e0 ? apparmor_file_alloc_security+0x3b/0x1f0 inet_rtx_syn_ack+0x16/0x30 tcp_check_req+0x367/0x610 tcp_rcv_state_process+0x91/0xf60 ? get_nohz_timer_target+0x18/0x1a0 ? lock_timer_base+0x61/0x80 ? preempt_count_add+0x68/0xa0 tcp_v4_do_rcv+0xbd/0x270 __release_sock+0x6d/0xb0 release_sock+0x2b/0x90 sock_setsockopt+0x138/0x1140 ? __sys_getsockname+0x7e/0xc0 ? aa_sk_perm+0x3e/0x1a0 __sys_setsockopt+0x198/0x1e0 __x64_sys_setsockopt+0x21/0x30 do_syscall_64+0x38/0xc0 entry_SYSCALL_64_after_hwframe+0x44/0xae",,,"[{""url"":""https://git.kernel.org/stable/c/0a0f7f84148445c9f02f226928803a870139d820"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/0a375c822497ed6ad6b5da0792a12a6f1af10c0b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3db889f883e65bbd3b1401279bfc1e9ed255c481"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/58bd38cbc961fd799842b7be8c5222310f04b908"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/88cd232146207ff1d41dededed5e77c0d4438113"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bdc28a8fb43cc476e33b11519235adb816ce00e8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c348b0f8d035fc4bdc040796889beec7218bd1b8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d05c2fdf8e10528bb6751bd95243e862d5402a9b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d8e1bc6029acac796293310aacef7b7336f35b6a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49373,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:13.970,2025-04-14T20:37:24.720,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: watchdog: ts4800_wdt: Fix refcount leak in ts4800_wdt_probe of_parse_phandle() returns a node pointer with refcount incremented, we should use of_node_put() on it when done. Add missing of_node_put() in some error paths.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.5"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""0FBD3258-24F4-4576-BF8D-CC6649E04DE3""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/5b110d940417942bc87d9e4bea6d4f24e05ed483"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5d24df3d690809952528e7a19a43d84bc5b99d44"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7a4afd8a003d6abf1f5d159c2bb67e6b7cbde253"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/910b1cdf6c50ae8fb222e46657d04fb181577017"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/91fa5aa53f68b85e779164b3127c7e23cad5c457"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f067b5286edfd83d2d3903e8578b561599d62539"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49374,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:14.060,2025-04-14T20:37:37.157,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tipc: check attribute length for bearer name syzbot reported uninit-value: ===================================================== BUG: KMSAN: uninit-value in string_nocheck lib/vsprintf.c:644 [inline] BUG: KMSAN: uninit-value in string+0x4f9/0x6f0 lib/vsprintf.c:725 string_nocheck lib/vsprintf.c:644 [inline] string+0x4f9/0x6f0 lib/vsprintf.c:725 vsnprintf+0x2222/0x3650 lib/vsprintf.c:2806 vprintk_store+0x537/0x2150 kernel/printk/printk.c:2158 vprintk_emit+0x28b/0xab0 kernel/printk/printk.c:2256 vprintk_default+0x86/0xa0 kernel/printk/printk.c:2283 vprintk+0x15f/0x180 kernel/printk/printk_safe.c:50 _printk+0x18d/0x1cf kernel/printk/printk.c:2293 tipc_enable_bearer net/tipc/bearer.c:371 [inline] __tipc_nl_bearer_enable+0x2022/0x22a0 net/tipc/bearer.c:1033 tipc_nl_bearer_enable+0x6c/0xb0 net/tipc/bearer.c:1042 genl_family_rcv_msg_doit net/netlink/genetlink.c:731 [inline] - Do sanity check the attribute length for TIPC_NLA_BEARER_NAME. - Do not use 'illegal name' in printing message.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-908""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.17"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""1D618A3C-AEC5-4520-BBDB-002AC8CA3FED""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/292be63c382ce20673ee61dff1ee9ed4a3dcaae7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3af15272cde28fe5c8489174b8624e232c1775ec"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7f36f798f89bf32c0164049cb0e3fd1af613d0bb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8b91d0dfc839e67708c905648cd0e7507a2263e5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/92a930fcf4250fe961f6238b99af0bc405799f39"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b8fac8e321044a9ac50f7185b4e9d91a7745e4b0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f07670871f4d19e613740eebe210e7e9ea535973"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49375,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:14.160,2025-04-14T20:37:47.483,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: rtc: mt6397: check return value after calling platform_get_resource() It will cause null-ptr-deref if platform_get_resource() returns NULL, we need check the return value.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.2"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""63B36856-FC1B-4124-B9BC-AF4563D72449""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/3867f0bbb94773d41e789257abec0d14f37da217"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/58a729c55ce3a432eb827fdaa24c7909cd3b0a6b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6ecd4d5c28408df36a1a6f0b1973f633c949ac1f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/79fa3f5758d8712df0678df98161f948fc4370e5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/82bfea344e8f7e9a0e0b1bf9af27552baa756620"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/865051de2d9eaa50630e055b73921ceaf3c4a7fc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d3b43eb505bffb8e4cdf6800c15660c001553fe6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d77f28c1bc9d3043a52069fe42e4a26fbf961ebd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/da38e86d6cf6dd3bc65c602d998f357145aa1a0b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49376,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:14.260,2025-04-14T20:37:57.360,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: sd: Fix potential NULL pointer dereference If sd_probe() sees an early error before sdkp->device is initialized, sd_zbc_release_disk() is called. This causes a NULL pointer dereference when sd_is_zoned() is called inside that function. Avoid this by removing the call to sd_zbc_release_disk() in sd_probe() error path. This change is safe and does not result in zone information memory leakage because the zone information for a zoned disk is allocated only when sd_revalidate_disk() is called, at which point sdkp->disk_dev is fully set, resulting in sd_disk_release() being called when needed to cleanup a disk zone information using sd_zbc_release_disk().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""C71A126B-2D4C-4FFE-BAA7-EF05A007AF5C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/05fbde3a77a4f1d62e4c4428f384288c1f1a0be5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0fcb0b131cc90c8f523a293d84c58d0c7273c96f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3733439593ad12f7b54ae35c273ea6f15d692de3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/78f8e96df06e2d04d82d4071c299b59d28744f47"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c1f0187025905e9981000d44a92e159468b561a8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49377,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:14.357,2025-03-25T14:58:01.213,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: blk-mq: don't touch ->tagset in blk_mq_get_sq_hctx blk_mq_run_hw_queues() could be run when there isn't queued request and after queue is cleaned up, at that time tagset is freed, because tagset lifetime is covered by driver, and often freed after blk_cleanup_queue() returns. So don't touch ->tagset for figuring out current default hctx by the mapping built in request queue, so use-after-free on tagset can be avoided. Meantime this way should be fast than retrieving mapping from tagset.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.12"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""E8CE53EB-22BF-479D-A782-6BDD74CD210E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/460aa288c5cd0544dcf933a2f0ad0e8c6d2d35ff"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5d05426e2d5fd7df8afc866b78c36b37b00188b7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/70fdd922c7bf8949f8df109cf2635dff64c90392"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b140bac470b4f707cda59c7266214246238661df"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49378,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:14.450,2025-02-26T07:01:14.450,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: sfc: fix considering that all channels have TX queues Normally, all channels have RX and TX queues, but this is not true if modparam efx_separate_tx_channels=1 is used. In that cases, some channels only have RX queues and others only TX queues (or more preciselly, they have them allocated, but not initialized). Fix efx_channel_has_tx_queues to return the correct value for this case too. Messages shown at probe time before the fix: sfc 0000:03:00.0 ens6f0np0: MC command 0x82 inlen 544 failed rc=-22 (raw=0) arg=0 ------------[ cut here ]------------ netdevice: ens6f0np0: failed to initialise TXQ -1 WARNING: CPU: 1 PID: 626 at drivers/net/ethernet/sfc/ef10.c:2393 efx_ef10_tx_init+0x201/0x300 [sfc] [...] stripped RIP: 0010:efx_ef10_tx_init+0x201/0x300 [sfc] [...] stripped Call Trace: efx_init_tx_queue+0xaa/0xf0 [sfc] efx_start_channels+0x49/0x120 [sfc] efx_start_all+0x1f8/0x430 [sfc] efx_net_open+0x5a/0xe0 [sfc] __dev_open+0xd0/0x190 __dev_change_flags+0x1b3/0x220 dev_change_flags+0x21/0x60 [...] stripped Messages shown at remove time before the fix: sfc 0000:03:00.0 ens6f0np0: failed to flush 10 queues sfc 0000:03:00.0 ens6f0np0: failed to flush queues",,,"[{""url"":""https://git.kernel.org/stable/c/2e102b53f8a778f872dc137f4c7ac548705817aa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5567d69b95b9c07e1c56f15cf0301251d12e5f97"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8f81a4113e1e574d2cbde4f2cd599380a9189c0f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/913d45f02d346ce41c4aad057eaf53a8ed449dc3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e7e8d5e25dc762b70f9c88ec6b7d451d0816eead"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49379,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:14.543,2025-02-26T07:01:14.543,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: driver core: Fix wait_for_device_probe() & deferred_probe_timeout interaction Mounting NFS rootfs was timing out when deferred_probe_timeout was non-zero [1]. This was because ip_auto_config() initcall times out waiting for the network interfaces to show up when deferred_probe_timeout was non-zero. While ip_auto_config() calls wait_for_device_probe() to make sure any currently running deferred probe work or asynchronous probe finishes, that wasn't sufficient to account for devices being deferred until deferred_probe_timeout. Commit 35a672363ab3 (""driver core: Ensure wait_for_device_probe() waits until the deferred_probe_timeout fires"") tried to fix that by making sure wait_for_device_probe() waits for deferred_probe_timeout to expire before returning. However, if wait_for_device_probe() is called from the kernel_init() context: - Before deferred_probe_initcall() [2], it causes the boot process to hang due to a deadlock. - After deferred_probe_initcall() [3], it blocks kernel_init() from continuing till deferred_probe_timeout expires and beats the point of deferred_probe_timeout that's trying to wait for userspace to load modules. Neither of this is good. So revert the changes to wait_for_device_probe(). [1] - https://lore.kernel.org/lkml/TYAPR01MB45443DF63B9EF29054F7C41FD8C60@TYAPR01MB4544.jpnprd01.prod.outlook.com/ [2] - https://lore.kernel.org/lkml/YowHNo4sBjr9ijZr@dev-arch.thelio-3990X/ [3] - https://lore.kernel.org/lkml/Yo3WvGnNk3LvLb7R@linutronix.de/",,,"[{""url"":""https://git.kernel.org/stable/c/29357883a89193863f3cc6a2c5e0b42ceb022761"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4ad6af07efcca85369c21e4897b3020cff2c170b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/528229474e1cbb1b3451cb713d94aecb5f6ee264"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5ee76c256e928455212ab759c51d198fedbe7523"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/71cbce75031aed26c72c2dc8a83111d181685f1b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49380,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:14.633,2025-02-26T07:01:14.633,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: f2fs: fix to avoid f2fs_bug_on() in dec_valid_node_count() As Yanming reported in bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=215897 I have encountered a bug in F2FS file system in kernel v5.17. The kernel should enable CONFIG_KASAN=y and CONFIG_KASAN_INLINE=y. You can reproduce the bug by running the following commands: The kernel message is shown below: kernel BUG at fs/f2fs/f2fs.h:2511! Call Trace: f2fs_remove_inode_page+0x2a2/0x830 f2fs_evict_inode+0x9b7/0x1510 evict+0x282/0x4e0 do_unlinkat+0x33a/0x540 __x64_sys_unlinkat+0x8e/0xd0 do_syscall_64+0x3b/0x90 entry_SYSCALL_64_after_hwframe+0x44/0xae The root cause is: .total_valid_block_count or .total_valid_node_count could fuzzed to zero, then once dec_valid_node_count() was called, it will cause BUG_ON(), this patch fixes to print warning info and set SBI_NEED_FSCK into CP instead of panic.",,,"[{""url"":""https://git.kernel.org/stable/c/2766ddaf45b69252bb8fe526b5b6e56904a9ae7a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4d17e6fe9293d57081ffdc11e1cf313e25e8fd9e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/89d9a48d0cd30429463ea4e37ca83be6773ed5eb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bce859358d3d5940aa858e40ceee70ee6e76130e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ccffa99ae6a1f44797b57444c6a80382a42928fe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f8b3c3fcf33105bc1ee7788e3b51b0a1ae42ae53"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49381,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:14.727,2025-04-14T20:38:11.710,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: jffs2: fix memory leak in jffs2_do_fill_super If jffs2_iget() or d_make_root() in jffs2_do_fill_super() returns an error, we can observe the following kmemleak report: -------------------------------------------- unreferenced object 0xffff888105a65340 (size 64): comm ""mount"", pid 710, jiffies 4302851558 (age 58.239s) hex dump (first 32 bytes): 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [<ffffffff859c45e5>] kmem_cache_alloc_trace+0x475/0x8a0 [<ffffffff86160146>] jffs2_sum_init+0x96/0x1a0 [<ffffffff86140e25>] jffs2_do_mount_fs+0x745/0x2120 [<ffffffff86149fec>] jffs2_do_fill_super+0x35c/0x810 [<ffffffff8614aae9>] jffs2_fill_super+0x2b9/0x3b0 [...] unreferenced object 0xffff8881bd7f0000 (size 65536): comm ""mount"", pid 710, jiffies 4302851558 (age 58.239s) hex dump (first 32 bytes): bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb ................ bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb ................ backtrace: [<ffffffff858579ba>] kmalloc_order+0xda/0x110 [<ffffffff85857a11>] kmalloc_order_trace+0x21/0x130 [<ffffffff859c2ed1>] __kmalloc+0x711/0x8a0 [<ffffffff86160189>] jffs2_sum_init+0xd9/0x1a0 [<ffffffff86140e25>] jffs2_do_mount_fs+0x745/0x2120 [<ffffffff86149fec>] jffs2_do_fill_super+0x35c/0x810 [<ffffffff8614aae9>] jffs2_fill_super+0x2b9/0x3b0 [...] -------------------------------------------- This is because the resources allocated in jffs2_sum_init() are not released. Call jffs2_sum_exit() to release these resources to solve the problem.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.15"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""0DED0F6A-FC03-4637-B95D-CCE9C053BD2B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/28048a4cf3813b7cf5cc8cce629dfdc7951cb1c2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3252d327f977b14663a10967f3b0930d6c325687"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4ba7bbeab8009faf3a726e565d98816593ddd5b0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4da8763a3d2b684c773b72ed80fad40bc264bc40"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/69295267c481545f636b69ff341b8db75aa136b9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c14adb1cf70a984ed081c67e9d27bc3caad9537c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cf9db013e167bc8fc2ecd7a13ed97a37df0c9dab"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d3a4fff1e7e408c32649030daa7c2c42a7e19a95"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ecc53e58596542791e82eff00702f8af7a313f70"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49382,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:14.823,2025-04-17T20:43:37.670,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: soc: rockchip: Fix refcount leak in rockchip_grf_init of_find_matching_node_and_match returns a node pointer with refcount incremented, we should use of_node_put() on it when done. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.11"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""FF98449F-152A-4015-820F-25898203A48F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/042571fe1d171773655ad706715ecc865913d9a4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/28133325526b92921f3269fdf97a20d90b92b217"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5b3e990f85eb034faa461e691e719e8ce9e2a3c8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/69a30b2ed620c2206cbbd1e9c112e4fc584e02bd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8f64e84924604bb969ee1fbc4b8d7d09b9214889"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9b59588d8be91c96bfb0371e912ceb4f16315dbf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/aab25b669cb9fd3698c2631be4435f4fe92d9e59"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d5422f323858cad3ac3581075f9a3a5e0d41c0d8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49383,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:14.917,2025-02-26T07:01:14.917,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: watchdog: rzg2l_wdt: Fix 'BUG: Invalid wait context' This patch fixes the issue 'BUG: Invalid wait context' during restart() callback by using clk_prepare_enable() instead of pm_runtime_get_sync() for turning on the clocks during restart. This issue is noticed when testing with renesas_defconfig. [ 42.213802] reboot: Restarting system [ 42.217860] [ 42.219364] ============================= [ 42.223368] [ BUG: Invalid wait context ] [ 42.227372] 5.17.0-rc5-arm64-renesas-00002-g10393723e35e #522 Not tainted [ 42.234153] ----------------------------- [ 42.238155] systemd-shutdow/1 is trying to lock: [ 42.242766] ffff00000a650828 (&genpd->mlock){+.+.}-{3:3}, at: genpd_lock_mtx+0x14/0x20 [ 42.250709] other info that might help us debug this: [ 42.255753] context-{4:4} [ 42.258368] 2 locks held by systemd-shutdow/1: [ 42.262806] #0: ffff80000944e1c8 (system_transition_mutex#2){+.+.}-{3:3}, at: __do_sys_reboot+0xd0/0x250 [ 42.272388] #1: ffff8000094c4e40 (rcu_read_lock){....}-{1:2}, at: atomic_notifier_call_chain+0x0/0x150 [ 42.281795] stack backtrace: [ 42.284672] CPU: 0 PID: 1 Comm: systemd-shutdow Not tainted 5.17.0-rc5-arm64-renesas-00002-g10393723e35e #522 [ 42.294577] Hardware name: Renesas SMARC EVK based on r9a07g044c2 (DT) [ 42.301096] Call trace: [ 42.303538] dump_backtrace+0xcc/0xd8 [ 42.307203] show_stack+0x14/0x30 [ 42.310517] dump_stack_lvl+0x88/0xb0 [ 42.314180] dump_stack+0x14/0x2c [ 42.317492] __lock_acquire+0x1b24/0x1b50 [ 42.321502] lock_acquire+0x120/0x3a8 [ 42.325162] __mutex_lock+0x84/0x8f8 [ 42.328737] mutex_lock_nested+0x30/0x58 [ 42.332658] genpd_lock_mtx+0x14/0x20 [ 42.336319] genpd_runtime_resume+0xc4/0x228 [ 42.340587] __rpm_callback+0x44/0x170 [ 42.344337] rpm_callback+0x64/0x70 [ 42.347824] rpm_resume+0x4e0/0x6b8 [ 42.351310] __pm_runtime_resume+0x50/0x78 [ 42.355404] rzg2l_wdt_restart+0x28/0x68 [ 42.359329] watchdog_restart_notifier+0x1c/0x30 [ 42.363943] atomic_notifier_call_chain+0x94/0x150 [ 42.368732] do_kernel_restart+0x24/0x30 [ 42.372652] machine_restart+0x44/0x70 [ 42.376399] kernel_restart+0x3c/0x60 [ 42.380058] __do_sys_reboot+0x228/0x250 [ 42.383977] __arm64_sys_reboot+0x20/0x28 [ 42.387983] invoke_syscall+0x40/0xf8",,,"[{""url"":""https://git.kernel.org/stable/c/0a635239cd5484d8f2e702713ccc49ec82aa7594"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6505541e5298cea2b79da68ee626f583f8e18784"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e4cf89596c1f1e33309556699f910ced4abbaf44"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49384,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:15.007,2025-04-17T20:46:22.857,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: md: fix double free of io_acct_set bioset Now io_acct_set is alloc and free in personality. Remove the codes that free io_acct_set in md_free and md_stop.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-415""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15.17"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""AF862C56-763E-4CF4-815B-F3DE178BA5BB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16.3"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""F4B0E194-E4BB-42EF-AD72-E601CF20599D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/36a2fc44c574a59ee3b5e2cb327182f227b2b07e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/42b805af102471f53e3c7867b8c2b502ea4eef7e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ea7d7bd90079d96f9c86bdaf0b106e0cd2a70661"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f99d5b5dc8a42c807b5f1176b925aa45d61962ab"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49385,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:15.103,2025-03-25T14:58:25.690,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: driver: base: fix UAF when driver_attach failed When driver_attach(drv); failed, the driver_private will be freed. But it has been added to the bus, which caused a UAF. To fix it, we need to delete it from the bus when failed.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.9"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""289EB399-F22E-4F49-A013-FDAA898FE70E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/310862e574001a97ad02272bac0fd13f75f42a27"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5389101257828d1913d713d9a40acbe14f5961df"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5d709f58c743166fe1c6914b9de0ae8868600d9b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/823f24f2e329babd0330200d0b74882516fe57f4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c059665c84feab46b7173d3a1bf36c2fb7f9df86"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cdf1a683a01583bca4b618dd16223cbd6e462e21"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49386,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:15.233,2025-04-17T20:46:32.953,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: ethernet: ti: am65-cpsw-nuss: Fix some refcount leaks of_get_child_by_name() returns a node pointer with refcount incremented, we should use of_node_put() on it when not need anymore. am65_cpsw_init_cpts() and am65_cpsw_nuss_probe() don't release the refcount in error case. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.7"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""B3847246-7313-4AED-A858-E8131022F58E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2e44f21c384503562713b7d3b673c40bed20af3d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5dd89d2fc438457811cbbec07999ce0d80051ff5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/78aca10a16f001c9f49f1cc4dadfee8d444bb173"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a4b7ef3b159805ba6be061d0cd2403d84b9b0063"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f7ba2cc57f404d2d9f26fb85bd3833d35a477829"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49387,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:15.343,2025-04-17T20:46:46.433,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: watchdog: rzg2l_wdt: Fix 32bit overflow issue The value of timer_cycle_us can be 0 due to 32bit overflow. For eg:- If we assign the counter value ""0xfff"" for computing maxval. This patch fixes this issue by appending ULL to 1024, so that it is promoted to 64bit. This patch also fixes the warning message, 'watchdog: Invalid min and max timeout values, resetting to 0!'.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-190""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""A5433C40-FA2E-4DDC-BBD9-8C7F577788FC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/b95a47667d34e76c2c9013f8e3b1e5039a5a0b76"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e07b9fa0dc32b492de85528caaf9f0c605d8424f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ea2949df22a533cdf75e4583c00b1ce94cd5a83b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49388,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:15.430,2025-03-25T14:59:13.997,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ubi: ubi_create_volume: Fix use-after-free when volume creation failed There is an use-after-free problem for 'eba_tbl' in ubi_create_volume()'s error handling path: ubi_eba_replace_table(vol, eba_tbl) vol->eba_tbl = tbl out_mapping: ubi_eba_destroy_table(eba_tbl) // Free 'eba_tbl' out_unlock: put_device(&vol->dev) vol_release kfree(tbl->entries) // UAF Fix it by removing redundant 'eba_tbl' releasing. Fetch a reproducer in [Link].","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.12"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""C1826012-E991-4F57-B5A8-B3B6949796C0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1174ab8ba36a48025b68b5ff1085000b1e510217"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/25ff1e3a1351c0d936dd1ac2f9e58231ea1510c9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5ff2514e4fb55dcf3d88294686040ca73ea0c1a2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6d8d3f68cbecfd31925796f0fb668eb21ab06734"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8302620aeb940f386817321d272b12411ae7d39f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8c03a1c21d72210f81cb369cc528e3fde4b45411"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/abb67043060f2bf4c03d7c3debb9ae980e2b6db3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e27ecf325e51abd06aaefba57a6322a46fa4178b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49389,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:15.527,2025-04-17T20:47:02.810,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: usb: usbip: fix a refcount leak in stub_probe() usb_get_dev() is called in stub_device_alloc(). When stub_probe() fails after that, usb_put_dev() needs to be called to release the reference. Fix this by moving usb_put_dev() to sdev_free error path handling. Find this by code review.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.16.58"",""versionEndExcluding"":""3.17"",""matchCriteriaId"":""C1981AEB-4867-4AB9-8168-BAB8D6567131""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.18.110"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""176B105C-69C3-48BA-9FEE-EDA73C23AD32""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.122"",""matchCriteriaId"":""1B42AA01-44D8-4572-95E6-FF8E374CF9C5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""FC042EE3-4864-4325-BE0B-4BCDBF11AA61""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/11c65408bd0ba1d9cd1307caa38169292de9cdfb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/247d3809e45a34d9e1a3a2bb7012e31ed8b46031"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2f0ae93ec33c8456cdfbf7876b80403a6318ebce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/51422046be504515eb5a591adf0f424b62f46804"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6bafee2f18af5e5ac125e42960bc65496d0e56a0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8afb048800919d0ab10c57983940eba956339f21"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9ec4cbf1cc55d126759051acfe328d489c5d6e60"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bcbb795a9e78180d74c6ab21518da87e803dfdce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f20d2d3b3364ce6525c050a8b6b4c54c8c19674d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49390,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:15.620,2025-03-25T13:48:09.850,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: macsec: fix UAF bug for real_dev Create a new macsec device but not get reference to real_dev. That can not ensure that real_dev is freed after macsec. That will trigger the UAF bug for real_dev as following: ================================================================== BUG: KASAN: use-after-free in macsec_get_iflink+0x5f/0x70 drivers/net/macsec.c:3662 Call Trace: ... macsec_get_iflink+0x5f/0x70 drivers/net/macsec.c:3662 dev_get_iflink+0x73/0xe0 net/core/dev.c:637 default_operstate net/core/link_watch.c:42 [inline] rfc2863_policy+0x233/0x2d0 net/core/link_watch.c:54 linkwatch_do_dev+0x2a/0x150 net/core/link_watch.c:161 Allocated by task 22209: ... alloc_netdev_mqs+0x98/0x1100 net/core/dev.c:10549 rtnl_create_link+0x9d7/0xc00 net/core/rtnetlink.c:3235 veth_newlink+0x20e/0xa90 drivers/net/veth.c:1748 Freed by task 8: ... kfree+0xd6/0x4d0 mm/slub.c:4552 kvfree+0x42/0x50 mm/util.c:615 device_release+0x9f/0x240 drivers/base/core.c:2229 kobject_cleanup lib/kobject.c:673 [inline] kobject_release lib/kobject.c:704 [inline] kref_put include/linux/kref.h:65 [inline] kobject_put+0x1c8/0x540 lib/kobject.c:721 netdev_run_todo+0x72e/0x10b0 net/core/dev.c:10327 After commit faab39f63c1f (""net: allow out-of-order netdev unregistration"") and commit e5f80fcf869a (""ipv6: give an IPv6 dev to blackhole_netdev""), we can add dev_hold_track() in macsec_dev_init() and dev_put_track() in macsec_free_netdev() to fix the problem.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.14.154"",""versionEndExcluding"":""4.15"",""matchCriteriaId"":""344FEFB4-E393-4E04-905A-4734AC267EC1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.19.84"",""versionEndExcluding"":""4.20"",""matchCriteriaId"":""B7EACEB9-7173-47F4-83A4-AE06CE74D78B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.3.11"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""ADA13345-8170-4521-B0CB-44DDF2C0713F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/196a888ca6571deb344468e1d7138e3273206335"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/78933cbc143b82d02330e00900d2fd08f2682f4e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d130282179aa6051449ac8f8df1115769998a665"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49391,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:15.713,2025-04-17T20:47:41.367,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: remoteproc: mtk_scp: Fix a potential double free 'scp->rproc' is allocated using devm_rproc_alloc(), so there is no need to free it explicitly in the remove function.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-415""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/adc02700236613b344a947a897fc2741d52a43b9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/eac3e5b1c12f85732e60f5f8b985444d273866bb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49392,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:15.803,2025-04-17T20:48:19.663,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: serial: 8250_aspeed_vuart: Fix potential NULL dereference in aspeed_vuart_probe platform_get_resource() may fail and return NULL, so we should better check it's return value to avoid a NULL pointer dereference.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14"",""versionEndExcluding"":""5.15.47"",""matchCriteriaId"":""98F36895-C3DC-4DC5-A1C6-F68015C3F425""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.15"",""matchCriteriaId"":""53E7AA2E-2FB4-45CA-A22B-08B4EDBB51AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.4"",""matchCriteriaId"":""FA6D643C-6D6A-4821-8A8D-B5776B8F0103""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0e0fd55719fa081de6f9e5d9e6cef48efb04d34a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/90a6b6fc52bfdcfe9698454bf5bea26112abbcd1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/923d34ce069e8e51a4d003caa6b66a8cd6ecd0ed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d5f1275f101e0e8a172d300d897f5a12e87e3485"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49393,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:15.890,2025-02-26T07:01:15.890,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: misc: fastrpc: fix list iterator in fastrpc_req_mem_unmap_impl This is another instance of incorrect use of list iterator and checking it for NULL. The list iterator value 'map' will *always* be set and non-NULL by list_for_each_entry(), so it is incorrect to assume that the iterator value will be NULL if the list is empty (in this case, the check 'if (!map) {' will always be false and never exit as expected). To fix the bug, use a new variable 'iter' as the list iterator, while use the original variable 'map' as a dedicated pointer to point to the found element. Without this patch, Kernel crashes with below trace: Unable to handle kernel access to user memory outside uaccess routines at virtual address 0000ffff7fb03750 ... Call trace: fastrpc_map_create+0x70/0x290 [fastrpc] fastrpc_req_mem_map+0xf0/0x2dc [fastrpc] fastrpc_device_ioctl+0x138/0xc60 [fastrpc] __arm64_sys_ioctl+0xa8/0xec invoke_syscall+0x48/0x114 el0_svc_common.constprop.0+0xd4/0xfc do_el0_svc+0x28/0x90 el0_svc+0x3c/0x130 el0t_64_sync_handler+0xa4/0x130 el0t_64_sync+0x18c/0x190 Code: 14000016 f94000a5 eb05029f 54000260 (b94018a6) ---[ end trace 0000000000000000 ]---",,,"[{""url"":""https://git.kernel.org/stable/c/2d12905aad462383f4e7a5fdb024d2b7ae2d10cf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c5c07c5958cf0c9af6e76813e6de15d42ee49822"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49394,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:15.983,2025-02-26T07:01:15.983,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: blk-iolatency: Fix inflight count imbalances and IO hangs on offline iolatency needs to track the number of inflight IOs per cgroup. As this tracking can be expensive, it is disabled when no cgroup has iolatency configured for the device. To ensure that the inflight counters stay balanced, iolatency_set_limit() freezes the request_queue while manipulating the enabled counter, which ensures that no IO is in flight and thus all counters are zero. Unfortunately, iolatency_set_limit() isn't the only place where the enabled counter is manipulated. iolatency_pd_offline() can also dec the counter and trigger disabling. As this disabling happens without freezing the q, this can easily happen while some IOs are in flight and thus leak the counts. This can be easily demonstrated by turning on iolatency on an one empty cgroup while IOs are in flight in other cgroups and then removing the cgroup. Note that iolatency shouldn't have been enabled elsewhere in the system to ensure that removing the cgroup disables iolatency for the whole device. The following keeps flipping on and off iolatency on sda: echo +io > /sys/fs/cgroup/cgroup.subtree_control while true; do mkdir -p /sys/fs/cgroup/test echo '8:0 target=100000' > /sys/fs/cgroup/test/io.latency sleep 1 rmdir /sys/fs/cgroup/test sleep 1 done and there's concurrent fio generating direct rand reads: fio --name test --filename=/dev/sda --direct=1 --rw=randread \ --runtime=600 --time_based --iodepth=256 --numjobs=4 --bs=4k while monitoring with the following drgn script: while True: for css in css_for_each_descendant_pre(prog['blkcg_root'].css.address_of_()): for pos in hlist_for_each(container_of(css, 'struct blkcg', 'css').blkg_list): blkg = container_of(pos, 'struct blkcg_gq', 'blkcg_node') pd = blkg.pd[prog['blkcg_policy_iolatency'].plid] if pd.value_() == 0: continue iolat = container_of(pd, 'struct iolatency_grp', 'pd') inflight = iolat.rq_wait.inflight.counter.value_() if inflight: print(f'inflight={inflight} {disk_name(blkg.q.disk).decode(""utf-8"")} ' f'{cgroup_path(css.cgroup).decode(""utf-8"")}') time.sleep(1) The monitoring output looks like the following: inflight=1 sda /user.slice inflight=1 sda /user.slice ... inflight=14 sda /user.slice inflight=13 sda /user.slice inflight=17 sda /user.slice inflight=15 sda /user.slice inflight=18 sda /user.slice inflight=17 sda /user.slice inflight=20 sda /user.slice inflight=19 sda /user.slice <- fio stopped, inflight stuck at 19 inflight=19 sda /user.slice inflight=19 sda /user.slice If a cgroup with stuck inflight ends up getting throttled, the throttled IOs will never get issued as there's no completion event to wake it up leading to an indefinite hang. This patch fixes the bug by unifying enable handling into a work item which is automatically kicked off from iolatency_set_min_lat_nsec() which is called from both iolatency_set_limit() and iolatency_pd_offline() paths. Punting to a work item is necessary as iolatency_pd_offline() is called under spinlocks while freezing a request_queue requires a sleepable context. This also simplifies the code reducing LOC sans the comments and avoids the unnecessary freezes which were happening whenever a cgroup's latency target is newly set or cleared.",,,"[{""url"":""https://git.kernel.org/stable/c/515d077ee3085ae343b6bea7fd031f9906645f38"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5b0ff3ebbef791341695b718f8d2870869cf1d01"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/77692c02e1517c54f2fd0535f41aa4286ac9f140"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8a177a36da6c54c98b8685d4f914cb3637d53c0d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/968f7a239c590454ffba79c126fbe0e963a0ba78"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a30acbb5dfb7bcc813ad6a18ca31011ac44e5547"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d19fa8f252000d141f9199ca32959c50314e1f05"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49395,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:16.080,2025-04-17T20:48:39.660,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: um: Fix out-of-bounds read in LDT setup syscall_stub_data() expects the data_count parameter to be the number of longs, not bytes. ================================================================== BUG: KASAN: stack-out-of-bounds in syscall_stub_data+0x70/0xe0 Read of size 128 at addr 000000006411f6f0 by task swapper/1 CPU: 0 PID: 1 Comm: swapper Not tainted 5.18.0+ #18 Call Trace: show_stack.cold+0x166/0x2a7 __dump_stack+0x3a/0x43 dump_stack_lvl+0x1f/0x27 print_report.cold+0xdb/0xf81 kasan_report+0x119/0x1f0 kasan_check_range+0x3a3/0x440 memcpy+0x52/0x140 syscall_stub_data+0x70/0xe0 write_ldt_entry+0xac/0x190 init_new_ldt+0x515/0x960 init_new_context+0x2c4/0x4d0 mm_init.constprop.0+0x5ed/0x760 mm_alloc+0x118/0x170 0x60033f48 do_one_initcall+0x1d7/0x860 0x60003e7b kernel_init+0x6e/0x3d4 new_thread_handler+0x1e7/0x2c0 The buggy address belongs to stack of task swapper/1 and is located at offset 64 in frame: init_new_ldt+0x0/0x960 This frame has 2 objects: [32, 40) 'addr' [64, 80) 'desc' ==================================================================","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-125""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.15"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""0DED0F6A-FC03-4637-B95D-CCE9C053BD2B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/10995a382271254bd276627ec74136da4a23c4a6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/24ca648bf5f72ed8878cf09b5d4431935779681e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2a4a62a14be1947fa945c5c11ebf67326381a568"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3549ab4b962cf619e8c55484a0d870a34b3f845f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/668ca34a428d6ffc0f99a1a6a9b661a288d4183b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/91e5ba2af2d729d5126aefd5aa3eadc69b8426e5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9caad70819aef3431abaf73ba5163b55b161aba0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cf0dabc37446c5ee538ae7b4c467ab0e53fa5463"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ef1dc929a1e5fa1b2d842256db9fb8710d3be910"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"",""baseScore"":7.1,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.2}]",,,,,,,,
CVE-2022-49396,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:16.173,2025-02-26T07:01:16.173,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: phy: qcom-qmp: fix reset-controller leak on probe errors Make sure to release the lane reset controller in case of a late probe error (e.g. probe deferral). Note that due to the reset controller being defined in devicetree in ""lane"" child nodes, devm_reset_control_get_exclusive() cannot be used directly.",,,"[{""url"":""https://git.kernel.org/stable/c/2156dc390402043ba5982489c6625adcb0b0975c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4d2900f20edfe541f75756a00deeb2ffe7c66bc1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7ac21b24af859c097eb4034e93430056068f8f31"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8c03eb0c8982677b4e17174073a011788891304d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a39d9eccb333b8c07c43ebea1c6dfda122378a0f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b7b5fbcaac5355e2e695dc0c08a0fcf248250388"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ba173a6f8d8dffed64bb13ab23081bdddfb464f0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/feb05b10b3ed3ae21b851520a0d0b71685439517"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49397,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:16.270,2025-02-26T07:01:16.270,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: phy: qcom-qmp: fix struct clk leak on probe errors Make sure to release the pipe clock reference in case of a late probe error (e.g. probe deferral).",,,"[{""url"":""https://git.kernel.org/stable/c/1668ad103679306ba2ef37f758d704e58a3ef1a0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/621a4bcfb7aa031e7760d7b156bad7a45df58387"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6f3673c8d8eff0c4ab5a5ee0d3ca9717d85419b4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ad9b0fad02f9b3a06ad5ac7df11f244e316a6254"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b246695636a861a09f0e2cde92bb2dd8f114f024"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b999d48b0869b8599de532ff6081575a7ab5358a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f0a4bc38a12f5a0cc5ad68670d9480e91e6a94df"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f8d23895a41243c6a8dbf392e531fff9497bb023"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49398,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:16.377,2025-02-26T07:01:16.377,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: usb: dwc3: gadget: Replace list_for_each_entry_safe() if using giveback The list_for_each_entry_safe() macro saves the current item (n) and the item after (n+1), so that n can be safely removed without corrupting the list. However, when traversing the list and removing items using gadget giveback, the DWC3 lock is briefly released, allowing other routines to execute. There is a situation where, while items are being removed from the cancelled_list using dwc3_gadget_ep_cleanup_cancelled_requests(), the pullup disable routine is running in parallel (due to UDC unbind). As the cleanup routine removes n, and the pullup disable removes n+1, once the cleanup retakes the DWC3 lock, it references a request who was already removed/handled. With list debug enabled, this leads to a panic. Ensure all instances of the macro are replaced where gadget giveback is used. Example call stack: Thread#1: __dwc3_gadget_ep_set_halt() - CLEAR HALT -> dwc3_gadget_ep_cleanup_cancelled_requests() ->list_for_each_entry_safe() ->dwc3_gadget_giveback(n) ->dwc3_gadget_del_and_unmap_request()- n deleted[cancelled_list] ->spin_unlock ->Thread#2 executes ... ->dwc3_gadget_giveback(n+1) ->Already removed! Thread#2: dwc3_gadget_pullup() ->waiting for dwc3 spin_lock ... ->Thread#1 released lock ->dwc3_stop_active_transfers() ->dwc3_remove_requests() ->fetches n+1 item from cancelled_list (n removed by Thread#1) ->dwc3_gadget_giveback() ->dwc3_gadget_del_and_unmap_request()- n+1 deleted[cancelled_list] ->spin_unlock",,,"[{""url"":""https://git.kernel.org/stable/c/1c6e5dc3b639c96e6839a8d1b8e951923fdfd34a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2424307cdf421ac72075a1384eae4e4199ab6457"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/26a7e6832afe9d9a991cfd9015177f083cf959cc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bf594d1d0c1d7b895954018043536ffd327844f9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49399,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:16.470,2025-02-26T07:01:16.470,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: tty: goldfish: Use tty_port_destroy() to destroy port In goldfish_tty_probe(), the port initialized through tty_port_init() should be destroyed in error paths.In goldfish_tty_remove(), qtty->port also should be destroyed or else might leak resources. Fix the above by calling tty_port_destroy().",,,"[{""url"":""https://git.kernel.org/stable/c/241fcb79dd1df276d80b19f5f6acc9eaaaa63309"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/326192b99c903a2193d820c30ed936cc2402382c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/45f6ce70abfb7ccf9d787781cbc4c03294a775a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4639d1b992de8f37d66f698056875c274efcd45f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/507b05063d1b7a1fcb9f7d7c47586fc4f3508f98"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9ae3d073f7db5578ae1907544f0c15947e9678e6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/da64f419d7f78272bfe40dde1262602d4ff6b32c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ee6c33b29e624f515202a31bf6ef0437f26a1867"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49400,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:16.570,2025-04-17T20:49:08.000,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: md: Don't set mddev private to NULL in raid0 pers->free In normal stop process, it does like this: do_md_stop | __md_stop (pers->free(); mddev->private=NULL) | md_free (free mddev) __md_stop sets mddev->private to NULL after pers->free. The raid device will be stopped and mddev memory is free. But in reshape, it doesn't free the mddev and mddev will still be used in new raid. In reshape, it first sets mddev->private to new_pers and then runs old_pers->free(). Now raid0 sets mddev->private to NULL in raid0_free. The new raid can't work anymore. It will panic when dereference mddev->private because of NULL pointer dereference. It can panic like this: [63010.814972] kernel BUG at drivers/md/raid10.c:928! [63010.819778] invalid opcode: 0000 [#1] PREEMPT SMP NOPTI [63010.825011] CPU: 3 PID: 44437 Comm: md0_resync Kdump: loaded Not tainted 5.14.0-86.el9.x86_64 #1 [63010.833789] Hardware name: Dell Inc. PowerEdge R6415/07YXFK, BIOS 1.15.0 09/11/2020 [63010.841440] RIP: 0010:raise_barrier+0x161/0x170 [raid10] [63010.865508] RSP: 0018:ffffc312408bbc10 EFLAGS: 00010246 [63010.870734] RAX: 0000000000000000 RBX: ffffa00bf7d39800 RCX: 0000000000000000 [63010.877866] RDX: 0000000000000000 RSI: 0000000000000001 RDI: ffffa00bf7d39800 [63010.884999] RBP: 0000000000000000 R08: fffffa4945e74400 R09: 0000000000000000 [63010.892132] R10: ffffa00eed02f798 R11: 0000000000000000 R12: ffffa00bbc435200 [63010.899266] R13: ffffa00bf7d39800 R14: 0000000000000400 R15: 0000000000000003 [63010.906399] FS: 0000000000000000(0000) GS:ffffa00eed000000(0000) knlGS:0000000000000000 [63010.914485] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [63010.920229] CR2: 00007f5cfbe99828 CR3: 0000000105efe000 CR4: 00000000003506e0 [63010.927363] Call Trace: [63010.929822] ? bio_reset+0xe/0x40 [63010.933144] ? raid10_alloc_init_r10buf+0x60/0xa0 [raid10] [63010.938629] raid10_sync_request+0x756/0x1610 [raid10] [63010.943770] md_do_sync.cold+0x3e4/0x94c [63010.947698] md_thread+0xab/0x160 [63010.951024] ? md_write_inc+0x50/0x50 [63010.954688] kthread+0x149/0x170 [63010.957923] ? set_kthread_struct+0x40/0x40 [63010.962107] ret_from_fork+0x22/0x30 Removing the code that sets mddev->private to NULL in raid0 can fix problem.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15.17"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""AF862C56-763E-4CF4-815B-F3DE178BA5BB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16.3"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""F4B0E194-E4BB-42EF-AD72-E601CF20599D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0f2571ad7a30ff6b33cde142439f9378669f8b4f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7da3454a65f8a56e65dfb44fa0ccac08cbc2f5a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b7a51df785031cc49caf1c59766ca89cfa97b54b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f63fd1e0e0fc158023cc67ea6a07e278019061ba"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49401,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:16.660,2025-02-26T07:01:16.660,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: mm/page_owner: use strscpy() instead of strlcpy() current->comm[] is not a string (no guarantee for a zero byte in it). strlcpy(s1, s2, l) is calling strlen(s2), potentially causing out-of-bound access, as reported by syzbot: detected buffer overflow in __fortify_strlen ------------[ cut here ]------------ kernel BUG at lib/string_helpers.c:980! invalid opcode: 0000 [#1] PREEMPT SMP KASAN CPU: 0 PID: 4087 Comm: dhcpcd-run-hooks Not tainted 5.18.0-rc3-syzkaller-01537-g20b87e7c29df #0 Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011 RIP: 0010:fortify_panic+0x18/0x1a lib/string_helpers.c:980 Code: 8c e8 c5 ba e1 fa e9 23 0f bf fa e8 0b 5d 8c f8 eb db 55 48 89 fd e8 e0 49 40 f8 48 89 ee 48 c7 c7 80 f5 26 8a e8 99 09 f1 ff <0f> 0b e8 ca 49 40 f8 48 8b 54 24 18 4c 89 f1 48 c7 c7 00 00 27 8a RSP: 0018:ffffc900000074a8 EFLAGS: 00010286 RAX: 000000000000002c RBX: ffff88801226b728 RCX: 0000000000000000 RDX: ffff8880198e0000 RSI: ffffffff81600458 RDI: fffff52000000e87 RBP: ffffffff89da2aa0 R08: 000000000000002c R09: 0000000000000000 R10: ffffffff815fae2e R11: 0000000000000000 R12: ffff88801226b700 R13: ffff8880198e0830 R14: 0000000000000000 R15: 0000000000000000 FS: 0000000000000000(0000) GS:ffff8880b9c00000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00007f5876ad6ff8 CR3: 000000001a48c000 CR4: 00000000003506f0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000600 Call Trace: <IRQ> __fortify_strlen include/linux/fortify-string.h:128 [inline] strlcpy include/linux/fortify-string.h:143 [inline] __set_page_owner_handle+0x2b1/0x3e0 mm/page_owner.c:171 __set_page_owner+0x3e/0x50 mm/page_owner.c:190 prep_new_page mm/page_alloc.c:2441 [inline] get_page_from_freelist+0xba2/0x3e00 mm/page_alloc.c:4182 __alloc_pages+0x1b2/0x500 mm/page_alloc.c:5408 alloc_pages+0x1aa/0x310 mm/mempolicy.c:2272 alloc_slab_page mm/slub.c:1799 [inline] allocate_slab+0x26c/0x3c0 mm/slub.c:1944 new_slab mm/slub.c:2004 [inline] ___slab_alloc+0x8df/0xf20 mm/slub.c:3005 __slab_alloc.constprop.0+0x4d/0xa0 mm/slub.c:3092 slab_alloc_node mm/slub.c:3183 [inline] slab_alloc mm/slub.c:3225 [inline] __kmem_cache_alloc_lru mm/slub.c:3232 [inline] kmem_cache_alloc+0x360/0x3b0 mm/slub.c:3242 dst_alloc+0x146/0x1f0 net/core/dst.c:92",,,"[{""url"":""https://git.kernel.org/stable/c/5cd9900a1ac8b0a4ff3cd97d4d77b7711be435bf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cd8c1fd8cdd14158f2d8bea2d1bfe8015dccfa3a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49402,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:16.750,2025-02-26T07:01:16.750,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ftrace: Clean up hash direct_functions on register failures We see the following GPF when register_ftrace_direct fails: [ ] general protection fault, probably for non-canonical address \ 0x200000000000010: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC PTI [...] [ ] RIP: 0010:ftrace_find_rec_direct+0x53/0x70 [ ] Code: 48 c1 e0 03 48 03 42 08 48 8b 10 31 c0 48 85 d2 74 [...] [ ] RSP: 0018:ffffc9000138bc10 EFLAGS: 00010206 [ ] RAX: 0000000000000000 RBX: ffffffff813e0df0 RCX: 000000000000003b [ ] RDX: 0200000000000000 RSI: 000000000000000c RDI: ffffffff813e0df0 [ ] RBP: ffffffffa00a3000 R08: ffffffff81180ce0 R09: 0000000000000001 [ ] R10: ffffc9000138bc18 R11: 0000000000000001 R12: ffffffff813e0df0 [ ] R13: ffffffff813e0df0 R14: ffff888171b56400 R15: 0000000000000000 [ ] FS: 00007fa9420c7780(0000) GS:ffff888ff6a00000(0000) knlGS:000000000 [ ] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ ] CR2: 000000000770d000 CR3: 0000000107d50003 CR4: 0000000000370ee0 [ ] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 [ ] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 [ ] Call Trace: [ ] <TASK> [ ] register_ftrace_direct+0x54/0x290 [ ] ? render_sigset_t+0xa0/0xa0 [ ] bpf_trampoline_update+0x3f5/0x4a0 [ ] ? 0xffffffffa00a3000 [ ] bpf_trampoline_link_prog+0xa9/0x140 [ ] bpf_tracing_prog_attach+0x1dc/0x450 [ ] bpf_raw_tracepoint_open+0x9a/0x1e0 [ ] ? find_held_lock+0x2d/0x90 [ ] ? lock_release+0x150/0x430 [ ] __sys_bpf+0xbd6/0x2700 [ ] ? lock_is_held_type+0xd8/0x130 [ ] __x64_sys_bpf+0x1c/0x20 [ ] do_syscall_64+0x3a/0x80 [ ] entry_SYSCALL_64_after_hwframe+0x44/0xae [ ] RIP: 0033:0x7fa9421defa9 [ ] Code: 00 c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 9 f8 [...] [ ] RSP: 002b:00007ffed743bd78 EFLAGS: 00000246 ORIG_RAX: 0000000000000141 [ ] RAX: ffffffffffffffda RBX: 00000000069d2480 RCX: 00007fa9421defa9 [ ] RDX: 0000000000000078 RSI: 00007ffed743bd80 RDI: 0000000000000011 [ ] RBP: 00007ffed743be00 R08: 0000000000bb7270 R09: 0000000000000000 [ ] R10: 00000000069da210 R11: 0000000000000246 R12: 0000000000000001 [ ] R13: 00007ffed743c4b0 R14: 00000000069d2480 R15: 0000000000000001 [ ] </TASK> [ ] Modules linked in: klp_vm(OK) [ ] ---[ end trace 0000000000000000 ]--- One way to trigger this is: 1. load a livepatch that patches kernel function xxx; 2. run bpftrace -e 'kfunc:xxx {}', this will fail (expected for now); 3. repeat #2 => gpf. This is because the entry is added to direct_functions, but not removed. Fix this by remove the entry from direct_functions when register_ftrace_direct fails. Also remove the last trailing space from ftrace.c, so we don't have to worry about it anymore.",,,"[{""url"":""https://git.kernel.org/stable/c/7d54c15cb89a29a5f59e5ffc9ee62e6591769ef1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/805e87af946d8d2954171361e64d143ff37a441b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/82c888e51c2176a06f8b4541cf748ee81aac6e7e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a0392833a178cf109a57c2a9d4d531bdfc6cd98f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cae2978d6907ef2c08b9b15f704e783f7c284713"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49403,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:16.847,2025-04-17T20:28:43.913,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: lib/string_helpers: fix not adding strarray to device's resource list Add allocated strarray to device's resource list. This is a must to automatically release strarray when the device disappears. Without this fix we have a memory leak in the few drivers which use devm_kasprintf_strarray().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""C48ED8B1-C02B-4764-9298-070E29EF1F88""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/a152eb42fcecfe41239c3c6695342f3a128593e7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bf29edab0c9ff3d2633b8306a67d04c357e2a385"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cd290a9839cee2f6641558877e707bd373c8f6f1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49404,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:16.937,2025-04-17T20:28:49.200,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: RDMA/hfi1: Fix potential integer multiplication overflow errors When multiplying of different types, an overflow is possible even when storing the result in a larger type. This is because the conversion is done after the multiplication. So arithmetic overflow and thus in incorrect value is possible. Correct an instance of this in the inter packet delay calculation. Fix by ensuring one of the operands is u64 which will promote the other to u64 as well ensuring no overflow.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-190""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.3"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""F1C012DB-8F29-4B2B-BD28-40BDE97C3304""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/06039d8afefdbac05bcea5f397188407eba2996d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/252f4afd4557a2e7075f793a5c80fe6dd9e9ee4a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/31dca00d0cc9f4133320d72eb7e3720badc6d6e6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3f09ec80f115d2875d747ed28adc1773037e0f8b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/79c164e61f818054cd6012e9035701840d895c51"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8858284dd74906fa00f04f0252c75df4893a7959"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a89cb7ddf6a89bab6012e19da38b7cdb26175c19"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ef5ab2e48a5f9960e2352332b7cdb7064bb49032"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f93e91a0372c922c20d5bee260b0f43b4b8a1bee"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49405,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:17.037,2025-02-26T07:01:17.037,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: staging: r8188eu: prevent ->Ssid overflow in rtw_wx_set_scan() This code has a check to prevent read overflow but it needs another check to prevent writing beyond the end of the ->Ssid[] array.",,,"[{""url"":""https://git.kernel.org/stable/c/476bfda0be0f9669add92bff604ca78226cf53d1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ac2eab7de458f5e1210ce1237afab40a307075c8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bc10916e890948d8927a5c8c40fb5dc44be5e1b8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c4bd6b72df4f01aa866ceb298466d6d07a6bd525"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49406,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:17.123,2025-04-17T20:29:18.050,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: block: Fix potential deadlock in blk_ia_range_sysfs_show() When being read, a sysfs attribute is already protected against removal with the kobject node active reference counter. As a result, in blk_ia_range_sysfs_show(), there is no need to take the queue sysfs lock when reading the value of a range attribute. Using the queue sysfs lock in this function creates a potential deadlock situation with the disk removal, something that a lockdep signals with a splat when the device is removed: [ 760.703551] Possible unsafe locking scenario: [ 760.703551] [ 760.703554] CPU0 CPU1 [ 760.703556] ---- ---- [ 760.703558] lock(&q->sysfs_lock); [ 760.703565] lock(kn->active#385); [ 760.703573] lock(&q->sysfs_lock); [ 760.703579] lock(kn->active#385); [ 760.703587] [ 760.703587] *** DEADLOCK *** Solve this by removing the mutex_lock()/mutex_unlock() calls from blk_ia_range_sysfs_show().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/41e46b3c2aa24f755b2ae9ec4ce931ba5f0d8532"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/717b078bc745ba9a262abebed9806a17e8bbb77b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/dc107c805cde709866b59867ef72b9390199205e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49407,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:17.217,2025-02-26T07:01:17.217,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: dlm: fix plock invalid read This patch fixes an invalid read showed by KASAN. A unlock will allocate a ""struct plock_op"" and a followed send_op() will append it to a global send_list data structure. In some cases a followed dev_read() moves it to recv_list and dev_write() will cast it to ""struct plock_xop"" and access fields which are only available in those structures. At this point an invalid read happens by accessing those fields. To fix this issue the ""callback"" field is moved to ""struct plock_op"" to indicate that a cast to ""plock_xop"" is allowed and does the additional ""plock_xop"" handling if set. Example of the KASAN output which showed the invalid read: [ 2064.296453] ================================================================== [ 2064.304852] BUG: KASAN: slab-out-of-bounds in dev_write+0x52b/0x5a0 [dlm] [ 2064.306491] Read of size 8 at addr ffff88800ef227d8 by task dlm_controld/7484 [ 2064.308168] [ 2064.308575] CPU: 0 PID: 7484 Comm: dlm_controld Kdump: loaded Not tainted 5.14.0+ #9 [ 2064.310292] Hardware name: Red Hat KVM, BIOS 0.5.1 01/01/2011 [ 2064.311618] Call Trace: [ 2064.312218] dump_stack_lvl+0x56/0x7b [ 2064.313150] print_address_description.constprop.8+0x21/0x150 [ 2064.314578] ? dev_write+0x52b/0x5a0 [dlm] [ 2064.315610] ? dev_write+0x52b/0x5a0 [dlm] [ 2064.316595] kasan_report.cold.14+0x7f/0x11b [ 2064.317674] ? dev_write+0x52b/0x5a0 [dlm] [ 2064.318687] dev_write+0x52b/0x5a0 [dlm] [ 2064.319629] ? dev_read+0x4a0/0x4a0 [dlm] [ 2064.320713] ? bpf_lsm_kernfs_init_security+0x10/0x10 [ 2064.321926] vfs_write+0x17e/0x930 [ 2064.322769] ? __fget_light+0x1aa/0x220 [ 2064.323753] ksys_write+0xf1/0x1c0 [ 2064.324548] ? __ia32_sys_read+0xb0/0xb0 [ 2064.325464] do_syscall_64+0x3a/0x80 [ 2064.326387] entry_SYSCALL_64_after_hwframe+0x44/0xae [ 2064.327606] RIP: 0033:0x7f807e4ba96f [ 2064.328470] Code: 89 54 24 18 48 89 74 24 10 89 7c 24 08 e8 39 87 f8 ff 48 8b 54 24 18 48 8b 74 24 10 41 89 c0 8b 7c 24 08 b8 01 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 31 44 89 c7 48 89 44 24 08 e8 7c 87 f8 ff 48 [ 2064.332902] RSP: 002b:00007ffd50cfe6e0 EFLAGS: 00000293 ORIG_RAX: 0000000000000001 [ 2064.334658] RAX: ffffffffffffffda RBX: 000055cc3886eb30 RCX: 00007f807e4ba96f [ 2064.336275] RDX: 0000000000000040 RSI: 00007ffd50cfe7e0 RDI: 0000000000000010 [ 2064.337980] RBP: 00007ffd50cfe7e0 R08: 0000000000000000 R09: 0000000000000001 [ 2064.339560] R10: 000055cc3886eb30 R11: 0000000000000293 R12: 000055cc3886eb80 [ 2064.341237] R13: 000055cc3886eb00 R14: 000055cc3886f590 R15: 0000000000000001 [ 2064.342857] [ 2064.343226] Allocated by task 12438: [ 2064.344057] kasan_save_stack+0x1c/0x40 [ 2064.345079] __kasan_kmalloc+0x84/0xa0 [ 2064.345933] kmem_cache_alloc_trace+0x13b/0x220 [ 2064.346953] dlm_posix_unlock+0xec/0x720 [dlm] [ 2064.348811] do_lock_file_wait.part.32+0xca/0x1d0 [ 2064.351070] fcntl_setlk+0x281/0xbc0 [ 2064.352879] do_fcntl+0x5e4/0xfe0 [ 2064.354657] __x64_sys_fcntl+0x11f/0x170 [ 2064.356550] do_syscall_64+0x3a/0x80 [ 2064.358259] entry_SYSCALL_64_after_hwframe+0x44/0xae [ 2064.360745] [ 2064.361511] Last potentially related work creation: [ 2064.363957] kasan_save_stack+0x1c/0x40 [ 2064.365811] __kasan_record_aux_stack+0xaf/0xc0 [ 2064.368100] call_rcu+0x11b/0xf70 [ 2064.369785] dlm_process_incoming_buffer+0x47d/0xfd0 [dlm] [ 2064.372404] receive_from_sock+0x290/0x770 [dlm] [ 2064.374607] process_recv_sockets+0x32/0x40 [dlm] [ 2064.377290] process_one_work+0x9a8/0x16e0 [ 2064.379357] worker_thread+0x87/0xbf0 [ 2064.381188] kthread+0x3ac/0x490 [ 2064.383460] ret_from_fork+0x22/0x30 [ 2064.385588] [ 2064.386518] Second to last potentially related work creation: [ 2064.389219] kasan_save_stack+0x1c/0x40 [ 2064.391043] __kasan_record_aux_stack+0xaf/0xc0 [ 2064.393303] call_rcu+0x11b/0xf70 [ 2064.394885] dlm_process_incoming_buffer+0x47d/0xfd0 [dlm] [ 2064.397694] receive_from_sock+0x290/0x770 ---truncated---",,,"[{""url"":""https://git.kernel.org/stable/c/2c55155cc365861044d9e6e80e342693e8805e33"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/42252d0d2aa9b94d168241710a761588b3959019"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/49cd9eb7b9a7b88124b31e31f8e539acaf1b3a6d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/56aa8d1fbd02357f3bf81bdfba1cde87ce8402fc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5a1765adf9855cf0f6d3f7e0eb4b78ca66f70dee"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/72f2f68970f9bdc252d59e119b385a6441b0b155"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/899bc4429174861122f0c236588700a4710c1fec"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/acdad5bc9827922ec2f2e84fd198718aa8e8ab92"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e421872fa17542cf33747071fb141b0130ce9ef7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49408,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:17.323,2025-04-17T20:29:52.707,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ext4: fix memory leak in parse_apply_sb_mount_options() If processing the on-disk mount options fails after any memory was allocated in the ext4_fs_context, e.g. s_qf_names, then this memory is leaked. Fix this by calling ext4_fc_free() instead of kfree() directly. Reproducer: mkfs.ext4 -F /dev/vdc tune2fs /dev/vdc -E mount_opts=usrjquota=file echo clear > /sys/kernel/debug/kmemleak mount /dev/vdc /vdc echo scan > /sys/kernel/debug/kmemleak sleep 5 echo scan > /sys/kernel/debug/kmemleak cat /sys/kernel/debug/kmemleak","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""C48ED8B1-C02B-4764-9298-070E29EF1F88""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/9ea3e6168948189cec31d0678d2b55b395f88491"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c069db76ed7b681c69159f44be96d2137e9ca989"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f92ded66e9d0aa20b883a2a5183973abc8f41815"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49409,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:17.420,2025-02-26T07:01:17.420,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ext4: fix bug_on in __es_tree_search Hulk Robot reported a BUG_ON: ================================================================== kernel BUG at fs/ext4/extents_status.c:199! [...] RIP: 0010:ext4_es_end fs/ext4/extents_status.c:199 [inline] RIP: 0010:__es_tree_search+0x1e0/0x260 fs/ext4/extents_status.c:217 [...] Call Trace: ext4_es_cache_extent+0x109/0x340 fs/ext4/extents_status.c:766 ext4_cache_extents+0x239/0x2e0 fs/ext4/extents.c:561 ext4_find_extent+0x6b7/0xa20 fs/ext4/extents.c:964 ext4_ext_map_blocks+0x16b/0x4b70 fs/ext4/extents.c:4384 ext4_map_blocks+0xe26/0x19f0 fs/ext4/inode.c:567 ext4_getblk+0x320/0x4c0 fs/ext4/inode.c:980 ext4_bread+0x2d/0x170 fs/ext4/inode.c:1031 ext4_quota_read+0x248/0x320 fs/ext4/super.c:6257 v2_read_header+0x78/0x110 fs/quota/quota_v2.c:63 v2_check_quota_file+0x76/0x230 fs/quota/quota_v2.c:82 vfs_load_quota_inode+0x5d1/0x1530 fs/quota/dquot.c:2368 dquot_enable+0x28a/0x330 fs/quota/dquot.c:2490 ext4_quota_enable fs/ext4/super.c:6137 [inline] ext4_enable_quotas+0x5d7/0x960 fs/ext4/super.c:6163 ext4_fill_super+0xa7c9/0xdc00 fs/ext4/super.c:4754 mount_bdev+0x2e9/0x3b0 fs/super.c:1158 mount_fs+0x4b/0x1e4 fs/super.c:1261 [...] ================================================================== Above issue may happen as follows: ------------------------------------- ext4_fill_super ext4_enable_quotas ext4_quota_enable ext4_iget __ext4_iget ext4_ext_check_inode ext4_ext_check __ext4_ext_check ext4_valid_extent_entries Check for overlapping extents does't take effect dquot_enable vfs_load_quota_inode v2_check_quota_file v2_read_header ext4_quota_read ext4_bread ext4_getblk ext4_map_blocks ext4_ext_map_blocks ext4_find_extent ext4_cache_extents ext4_es_cache_extent ext4_es_cache_extent __es_tree_search ext4_es_end BUG_ON(es->es_lblk + es->es_len < es->es_lblk) The error ext4 extents is as follows: 0af3 0300 0400 0000 00000000 extent_header 00000000 0100 0000 12000000 extent1 00000000 0100 0000 18000000 extent2 02000000 0400 0000 14000000 extent3 In the ext4_valid_extent_entries function, if prev is 0, no error is returned even if lblock<=prev. This was intended to skip the check on the first extent, but in the error image above, prev=0+1-1=0 when checking the second extent, so even though lblock<=prev, the function does not return an error. As a result, bug_ON occurs in __es_tree_search and the system panics. To solve this problem, we only need to check that: 1. The lblock of the first extent is not less than 0. 2. The lblock of the next extent is not less than the next block of the previous extent. The same applies to extent_idx.",,,"[{""url"":""https://git.kernel.org/stable/c/3c617827cd51018bc377bd2954e176920ddbcfad"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4fd58b5cf118d2d9038a0b8c9cc0e43096297686"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/59cf2fabbfe76de29d88dd7ae69858a25735b59f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d0083459e2b6b07ebd78bea2fe684a19cc0f3d0f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d36f6ed761b53933b0b4126486c10d3da7751e7f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ea6ea18b3ab0c0d7fefffb3c4d27df758b1c790a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49410,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:17.517,2025-04-17T20:31:34.340,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tracing: Fix potential double free in create_var_ref() In create_var_ref(), init_var_ref() is called to initialize the fields of variable ref_field, which is allocated in the previous function call to create_hist_field(). Function init_var_ref() allocates the corresponding fields such as ref_field->system, but frees these fields when the function encounters an error. The caller later calls destroy_hist_field() to conduct error handling, which frees the fields and the variable itself. This results in double free of the fields which are already freed in the previous function. Fix this by storing NULL to the corresponding fields when they are freed in init_var_ref().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-415""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.17"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""1D618A3C-AEC5-4520-BBDB-002AC8CA3FED""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/058cb6d86b9789377216c936506b346aaa1eb581"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/37443b3508b8cce6832f8d25cb4550b2f7801f50"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4fdfb15e08598711dbf50daf56a33965232daf0e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/99696a2592bca641eb88cc9a80c90e591afebd0f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bd83ff3bbfb003832481c9bff999d12385f396ae"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c27f744ceefadc7bbeb14233b6abc150ced617d2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f8b383f83cb573152c577eca1ef101e89995b72a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49411,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:17.613,2025-03-25T13:42:10.430,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: bfq: Make sure bfqg for which we are queueing requests is online Bios queued into BFQ IO scheduler can be associated with a cgroup that was already offlined. This may then cause insertion of this bfq_group into a service tree. But this bfq_group will get freed as soon as last bio associated with it is completed leading to use after free issues for service tree users. Fix the problem by making sure we always operate on online bfq_group. If the bfq_group associated with the bio is not online, we pick the first online parent.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.12"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""05A83EED-420E-4720-92F3-563C3AB9A2E5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/075a53b78b815301f8d3dd1ee2cd99554e34f0dd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/51f724bffa3403a5236597e6b75df7329c1ec6e9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6ee0868b0c3ccead5907685fcdcdd0c08dfe4b0b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7781c38552e6cc54ed8e9040279561340516b881"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/97bd6c56bdcb41079e488e31df56809e3b2ce628"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ccddf8cd411c1800863ed357064e56ceffd356bb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49412,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:17.703,2025-06-19T13:15:23.390,Modified,[],"In the Linux kernel, the following vulnerability has been resolved: bfq: Avoid merging queues with different parents It can happen that the parent of a bfqq changes between the moment we decide two queues are worth to merge (and set bic->stable_merge_bfqq) and the moment bfq_setup_merge() is called. This can happen e.g. because the process submitted IO for a different cgroup and thus bfqq got reparented. It can even happen that the bfqq we are merging with has parent cgroup that is already offline and going to be destroyed in which case the merge can lead to use-after-free issues such as: BUG: KASAN: use-after-free in __bfq_deactivate_entity+0x9cb/0xa50 Read of size 8 at addr ffff88800693c0c0 by task runc:[2:INIT]/10544 CPU: 0 PID: 10544 Comm: runc:[2:INIT] Tainted: G E 5.15.2-0.g5fb85fd-default #1 openSUSE Tumbleweed (unreleased) f1f3b891c72369aebecd2e43e4641a6358867c70 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a-rebuilt.opensuse.org 04/01/2014 Call Trace: <IRQ> dump_stack_lvl+0x46/0x5a print_address_description.constprop.0+0x1f/0x140 ? __bfq_deactivate_entity+0x9cb/0xa50 kasan_report.cold+0x7f/0x11b ? __bfq_deactivate_entity+0x9cb/0xa50 __bfq_deactivate_entity+0x9cb/0xa50 ? update_curr+0x32f/0x5d0 bfq_deactivate_entity+0xa0/0x1d0 bfq_del_bfqq_busy+0x28a/0x420 ? resched_curr+0x116/0x1d0 ? bfq_requeue_bfqq+0x70/0x70 ? check_preempt_wakeup+0x52b/0xbc0 __bfq_bfqq_expire+0x1a2/0x270 bfq_bfqq_expire+0xd16/0x2160 ? try_to_wake_up+0x4ee/0x1260 ? bfq_end_wr_async_queues+0xe0/0xe0 ? _raw_write_unlock_bh+0x60/0x60 ? _raw_spin_lock_irq+0x81/0xe0 bfq_idle_slice_timer+0x109/0x280 ? bfq_dispatch_request+0x4870/0x4870 __hrtimer_run_queues+0x37d/0x700 ? enqueue_hrtimer+0x1b0/0x1b0 ? kvm_clock_get_cycles+0xd/0x10 ? ktime_get_update_offsets_now+0x6f/0x280 hrtimer_interrupt+0x2c8/0x740 Fix the problem by checking that the parent of the two bfqqs we are merging in bfq_setup_merge() is the same.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""C1C86ABC-337F-46B3-BCD8-22DC5A66E45A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.13"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""B7544E3D-BDEB-4355-B7BF-123300FCDB6F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/5ee21edaed09e6b25f2c007b3f326752bc89bacf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8abc8763b11c35e03cc91d59fd0cd28d39f88ca9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a16c65cca7d2c7ff965fdd3adc8df2156529caf1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c1cee4ab36acef271be9101590756ed0c0c374d9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49413,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:17.800,2025-03-24T19:52:50.113,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: bfq: Update cgroup information before merging bio When the process is migrated to a different cgroup (or in case of writeback just starts submitting bios associated with a different cgroup) bfq_merge_bio() can operate with stale cgroup information in bic. Thus the bio can be merged to a request from a different cgroup or it can result in merging of bfqqs for different cgroups or bfqqs of already dead cgroups and causing possible use-after-free issues. Fix the problem by updating cgroup information in bfq_merge_bio().","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.12"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""05A83EED-420E-4720-92F3-563C3AB9A2E5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2a1077f17169a6059992a0bbdb330e0abad1e6d9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b06691af08b41dfd81052a3362514d9827b44bb1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d9165200c5627a2cf4408eefabdf0058bdf95e1a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/da9f3025d595956410ceaab2bea01980d7775948"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e8821f45612f2e6d9adb9c6ba0fb4184f57692aa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ea591cd4eb270393810e7be01feb8fde6a34fbbe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49414,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:17.890,2025-04-17T20:35:12.403,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ext4: fix race condition between ext4_write and ext4_convert_inline_data Hulk Robot reported a BUG_ON: ================================================================== EXT4-fs error (device loop3): ext4_mb_generate_buddy:805: group 0, block bitmap and bg descriptor inconsistent: 25 vs 31513 free clusters kernel BUG at fs/ext4/ext4_jbd2.c:53! invalid opcode: 0000 [#1] SMP KASAN PTI CPU: 0 PID: 25371 Comm: syz-executor.3 Not tainted 5.10.0+ #1 RIP: 0010:ext4_put_nojournal fs/ext4/ext4_jbd2.c:53 [inline] RIP: 0010:__ext4_journal_stop+0x10e/0x110 fs/ext4/ext4_jbd2.c:116 [...] Call Trace: ext4_write_inline_data_end+0x59a/0x730 fs/ext4/inline.c:795 generic_perform_write+0x279/0x3c0 mm/filemap.c:3344 ext4_buffered_write_iter+0x2e3/0x3d0 fs/ext4/file.c:270 ext4_file_write_iter+0x30a/0x11c0 fs/ext4/file.c:520 do_iter_readv_writev+0x339/0x3c0 fs/read_write.c:732 do_iter_write+0x107/0x430 fs/read_write.c:861 vfs_writev fs/read_write.c:934 [inline] do_pwritev+0x1e5/0x380 fs/read_write.c:1031 [...] ================================================================== Above issue may happen as follows: cpu1 cpu2 __________________________|__________________________ do_pwritev vfs_writev do_iter_write ext4_file_write_iter ext4_buffered_write_iter generic_perform_write ext4_da_write_begin vfs_fallocate ext4_fallocate ext4_convert_inline_data ext4_convert_inline_data_nolock ext4_destroy_inline_data_nolock clear EXT4_STATE_MAY_INLINE_DATA ext4_map_blocks ext4_ext_map_blocks ext4_mb_new_blocks ext4_mb_regular_allocator ext4_mb_good_group_nolock ext4_mb_init_group ext4_mb_init_cache ext4_mb_generate_buddy --> error ext4_test_inode_state(inode, EXT4_STATE_MAY_INLINE_DATA) ext4_restore_inline_data set EXT4_STATE_MAY_INLINE_DATA ext4_block_write_begin ext4_da_write_end ext4_test_inode_state(inode, EXT4_STATE_MAY_INLINE_DATA) ext4_write_inline_data_end handle=NULL ext4_journal_stop(handle) __ext4_journal_stop ext4_put_nojournal(handle) ref_cnt = (unsigned long)handle BUG_ON(ref_cnt == 0) ---> BUG_ON The lock held by ext4_convert_inline_data is xattr_sem, but the lock held by generic_perform_write is i_rwsem. Therefore, the two locks can be concurrent. To solve above issue, we add inode_lock() for ext4_convert_inline_data(). At the same time, move ext4_convert_inline_data() in front of ext4_punch_hole(), remove similar handling from ext4_punch_hole().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.8"",""versionEndExcluding"":""5.4.207"",""matchCriteriaId"":""109BCDD7-33F8-40BE-B77A-E1C42BACBB08""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.132"",""matchCriteriaId"":""46CE9FE9-22E3-45CA-8B5F-190C2CAFC5CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/14602353b350950b551eccc6b46411aa3b12ffe2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/18881d7e517169193d9ef6c89c7f322e3e164277"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/725e00cb7039eae291890f1bb19bc867176745f6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/91f90b571f1a23f5b8a9c2b68a9aa5d6981a3c3d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ccc6639f831bee91aa8b41c8a1cdd020ecfb9f32"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f87c7a4b084afc13190cbb263538e444cb2b392a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49415,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:17.987,2025-02-26T07:01:17.987,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ipmi:ipmb: Fix refcount leak in ipmi_ipmb_probe of_parse_phandle() returns a node pointer with refcount incremented, we should use of_node_put() on it when done. Add missing of_node_put() to avoid refcount leak.",,,"[{""url"":""https://git.kernel.org/stable/c/a508e33956b538e034ed5df619a73ec7c15bda72"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f22068357acc268148bd55ce77f0a3e5c86701b4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49416,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:18.073,2025-03-24T19:57:30.150,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: wifi: mac80211: fix use-after-free in chanctx code In ieee80211_vif_use_reserved_context(), when we have an old context and the new context's replace_state is set to IEEE80211_CHANCTX_REPLACE_NONE, we free the old context in ieee80211_vif_use_reserved_reassign(). Therefore, we cannot check the old_ctx anymore, so we should set it to NULL after this point. However, since the new_ctx replace state is clearly not IEEE80211_CHANCTX_REPLACES_OTHER, we're not going to do anything else in this function and can just return to avoid accessing the freed old_ctx.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.17"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""C716866D-6557-4910-9D02-0C0C8FDCD779""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/265bec4779a38b65e86a25120370f200822dfa76"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2965c4cdf7ad9ce0796fac5e57debb9519ea721e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4ba81e794f0fad6234f644c2da1ae14d5b95e1c4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4f05a9e15edcdf5b97e0d86ab6ecd5f187289f6c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6118bbdf69f4718b02d26bbcf2e497eb66004331"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/82c8e7bbdd06c7ed58e22450cc5b37f33a25bb2c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/88cc8f963febe192d6ded9df7217f92f380b449a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9f1e5cc85ad77e52f54049a94db0407445ae2a34"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b79110f2bf6022e60e590d2e094728a8eec3e79e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49417,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:18.170,2025-02-26T07:01:18.170,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: iwlwifi: mei: fix potential NULL-ptr deref If SKB allocation fails, continue rather than using the NULL pointer. Coverity CID: 1497650",,,"[{""url"":""https://git.kernel.org/stable/c/29b81de94d62b5e2704bb5106b3e701ca8d7c7a4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5d8d06fd3a02919100b28f927bcb76481ec0a0e3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/78488a64aea94a3336ee97f345c1496e9bc5ebdf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49418,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:18.260,2025-06-19T13:15:23.660,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: NFSv4: Fix free of uninitialized nfs4_label on referral lookup. Send along the already-allocated fattr along with nfs4_fs_locations, and drop the memcpy of fattr. We end up growing two more allocations, but this fixes up a crash as: PID: 790 TASK: ffff88811b43c000 CPU: 0 COMMAND: ""ls"" #0 [ffffc90000857920] panic at ffffffff81b9bfde #1 [ffffc900008579c0] do_trap at ffffffff81023a9b #2 [ffffc90000857a10] do_error_trap at ffffffff81023b78 #3 [ffffc90000857a58] exc_stack_segment at ffffffff81be1f45 #4 [ffffc90000857a80] asm_exc_stack_segment at ffffffff81c009de #5 [ffffc90000857b08] nfs_lookup at ffffffffa0302322 [nfs] #6 [ffffc90000857b70] __lookup_slow at ffffffff813a4a5f #7 [ffffc90000857c60] walk_component at ffffffff813a86c4 #8 [ffffc90000857cb8] path_lookupat at ffffffff813a9553 #9 [ffffc90000857cf0] filename_lookup at ffffffff813ab86b",,,"[{""url"":""https://git.kernel.org/stable/c/6015292653d95ba9f72906e2b65e536aa5807d64"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c3ed222745d9ad7b69299b349a64ba533c64a34f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49419,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:18.350,2025-03-24T19:57:48.187,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: video: fbdev: vesafb: Fix a use-after-free due early fb_info cleanup Commit b3c9a924aab6 (""fbdev: vesafb: Cleanup fb_info in .fb_destroy rather than .remove"") fixed a use-after-free error due the vesafb driver freeing the fb_info in the .remove handler instead of doing it in .fb_destroy. This can happen if the .fb_destroy callback is executed after the .remove callback, since the former tries to access a pointer freed by the latter. But that change didn't take into account that another possible scenario is that .fb_destroy is called before the .remove callback. For example, if no process has the fbdev chardev opened by the time the driver is removed. If that's the case, fb_info will be freed when unregister_framebuffer() is called, making the fb_info pointer accessed in vesafb_remove() after that to no longer be valid. To prevent that, move the expression containing the info->par to happen before the unregister_framebuffer() function call.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15.41"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""85BFCBED-AE6A-4374-BB72-828A4D80AF2D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17.9"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""A40FD6B9-AD46-4C81-B897-DBBFEA16128C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0fac5f8fb1bc2fc4f8714bf5e743c9cc3f547c63"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/acde4003efc16480375543638484d8f13f2e99a3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d260cad015945d1f4bb9b028a096f648506106a2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f605f5558ecc175ec70016a3c15f007cb6386531"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49420,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:18.440,2025-02-26T07:01:18.440,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: annotate races around sk->sk_bound_dev_if UDP sendmsg() is lockless, and reads sk->sk_bound_dev_if while this field can be changed by another thread. Adds minimal annotations to avoid KCSAN splats for UDP. Following patches will add more annotations to potential lockless readers. BUG: KCSAN: data-race in __ip6_datagram_connect / udpv6_sendmsg write to 0xffff888136d47a94 of 4 bytes by task 7681 on cpu 0: __ip6_datagram_connect+0x6e2/0x930 net/ipv6/datagram.c:221 ip6_datagram_connect+0x2a/0x40 net/ipv6/datagram.c:272 inet_dgram_connect+0x107/0x190 net/ipv4/af_inet.c:576 __sys_connect_file net/socket.c:1900 [inline] __sys_connect+0x197/0x1b0 net/socket.c:1917 __do_sys_connect net/socket.c:1927 [inline] __se_sys_connect net/socket.c:1924 [inline] __x64_sys_connect+0x3d/0x50 net/socket.c:1924 do_syscall_x64 arch/x86/entry/common.c:50 [inline] do_syscall_64+0x2b/0x50 arch/x86/entry/common.c:80 entry_SYSCALL_64_after_hwframe+0x44/0xae read to 0xffff888136d47a94 of 4 bytes by task 7670 on cpu 1: udpv6_sendmsg+0xc60/0x16e0 net/ipv6/udp.c:1436 inet6_sendmsg+0x5f/0x80 net/ipv6/af_inet6.c:652 sock_sendmsg_nosec net/socket.c:705 [inline] sock_sendmsg net/socket.c:725 [inline] ____sys_sendmsg+0x39a/0x510 net/socket.c:2413 ___sys_sendmsg net/socket.c:2467 [inline] __sys_sendmmsg+0x267/0x4c0 net/socket.c:2553 __do_sys_sendmmsg net/socket.c:2582 [inline] __se_sys_sendmmsg net/socket.c:2579 [inline] __x64_sys_sendmmsg+0x53/0x60 net/socket.c:2579 do_syscall_x64 arch/x86/entry/common.c:50 [inline] do_syscall_64+0x2b/0x50 arch/x86/entry/common.c:80 entry_SYSCALL_64_after_hwframe+0x44/0xae value changed: 0x00000000 -> 0xffffff9b Reported by Kernel Concurrency Sanitizer on: CPU: 1 PID: 7670 Comm: syz-executor.3 Tainted: G W 5.18.0-rc1-syzkaller-dirty #0 Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011 I chose to not add Fixes: tag because race has minor consequences and stable teams busy enough.",,,"[{""url"":""https://git.kernel.org/stable/c/20b2f61797873a2b18b5ff1a304ad2674fa1e0a5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4c971d2f3548e4f11b1460ac048f5307e4b39fdb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49421,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:18.533,2025-02-26T07:01:18.533,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: video: fbdev: clcdfb: Fix refcount leak in clcdfb_of_vram_setup of_parse_phandle() returns a node pointer with refcount incremented, we should use of_node_put() on it when not need anymore. Add missing of_node_put() to avoid refcount leak.",,,"[{""url"":""https://git.kernel.org/stable/c/2e2e2c71b2642289438392edbf5d08cdbc0b138b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/38d245cebf545338a6bc1c7762023de3fbecd7b7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/51eb1bb6baeb478538dd4ec6459fd68c44a855b1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6c92711db7c90f78e0b67ac2a8944d0fe7e12d83"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8db59df7f5826e104db82cfddbf22a33a151193e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b23789a59fa6f00e98a319291819f91fbba0deb8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bbb2a24e863b6a10129546a0a4ceea2f07deec39"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c1c4405222b6fc98c16e8c2aa679c14e41d81465"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f2dfb4ab887d67be7d0892ba041d3c8d738d3356"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49422,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:18.657,2025-02-26T07:01:18.657,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: dmaengine: idxd: Fix the error handling path in idxd_cdev_register() If a call to alloc_chrdev_region() fails, the already allocated resources are leaking. Add the needed error handling path to fix the leak.",,,"[{""url"":""https://git.kernel.org/stable/c/5e88561eceb34ae3f88451c2b8e30fe403484189"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6073af78156b8c3fc1198f8bcc190b7ac3ac0143"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/aab08c1aac01097815fbcf10fce7021d2396a31f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b3c7b5d08e9d5b2ff31c03078c00ecf11042419f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c308a2e711a52a47f4b45e7add2b5200169e429a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49423,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:18.783,2025-02-26T07:01:18.783,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: rtla: Avoid record NULL pointer dereference Fix the following null/deref_null.cocci errors: ./tools/tracing/rtla/src/osnoise_hist.c:870:31-36: ERROR: record is NULL but dereferenced. ./tools/tracing/rtla/src/osnoise_top.c:650:31-36: ERROR: record is NULL but dereferenced. ./tools/tracing/rtla/src/timerlat_hist.c:905:31-36: ERROR: record is NULL but dereferenced. ./tools/tracing/rtla/src/timerlat_top.c:700:31-36: ERROR: record is NULL but dereferenced. ""record"" is NULL before calling osnoise_init_trace_tool. Add a tag ""out_free"" to avoid dereferring a NULL pointer.",,,"[{""url"":""https://git.kernel.org/stable/c/2a6b52ed72c822b5ee146a6a00ea66614fe02653"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b0f1c686baff74d5df10f2f46670ef4e24a75756"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49424,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:18.880,2025-02-26T07:01:18.880,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: iommu/mediatek: Fix NULL pointer dereference when printing dev_name When larbdev is NULL (in the case I hit, the node is incorrectly set iommus = <&iommu NUM>), it will cause device_link_add() fail and kernel crashes when we try to print dev_name(larbdev). Let's fail the probe if a larbdev is NULL to avoid invalid inputs from dts. It should work for normal correct setting and avoid the crash caused by my incorrect setting. Error log: [ 18.189042][ T301] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000050 ... [ 18.344519][ T301] pstate: a0400005 (NzCv daif +PAN -UAO) [ 18.345213][ T301] pc : mtk_iommu_probe_device+0xf8/0x118 [mtk_iommu] [ 18.346050][ T301] lr : mtk_iommu_probe_device+0xd0/0x118 [mtk_iommu] [ 18.346884][ T301] sp : ffffffc00a5635e0 [ 18.347392][ T301] x29: ffffffc00a5635e0 x28: ffffffd44a46c1d8 [ 18.348156][ T301] x27: ffffff80c39a8000 x26: ffffffd44a80cc38 [ 18.348917][ T301] x25: 0000000000000000 x24: ffffffd44a80cc38 [ 18.349677][ T301] x23: ffffffd44e4da4c6 x22: ffffffd44a80cc38 [ 18.350438][ T301] x21: ffffff80cecd1880 x20: 0000000000000000 [ 18.351198][ T301] x19: ffffff80c439f010 x18: ffffffc00a50d0c0 [ 18.351959][ T301] x17: ffffffffffffffff x16: 0000000000000004 [ 18.352719][ T301] x15: 0000000000000004 x14: ffffffd44eb5d420 [ 18.353480][ T301] x13: 0000000000000ad2 x12: 0000000000000003 [ 18.354241][ T301] x11: 00000000fffffad2 x10: c0000000fffffad2 [ 18.355003][ T301] x9 : a0d288d8d7142d00 x8 : a0d288d8d7142d00 [ 18.355763][ T301] x7 : ffffffd44c2bc640 x6 : 0000000000000000 [ 18.356524][ T301] x5 : 0000000000000080 x4 : 0000000000000001 [ 18.357284][ T301] x3 : 0000000000000000 x2 : 0000000000000005 [ 18.358045][ T301] x1 : 0000000000000000 x0 : 0000000000000000 [ 18.360208][ T301] Hardware name: MT6873 (DT) [ 18.360771][ T301] Call trace: [ 18.361168][ T301] dump_backtrace+0xf8/0x1f0 [ 18.361737][ T301] dump_stack_lvl+0xa8/0x11c [ 18.362305][ T301] dump_stack+0x1c/0x2c [ 18.362816][ T301] mrdump_common_die+0x184/0x40c [mrdump] [ 18.363575][ T301] ipanic_die+0x24/0x38 [mrdump] [ 18.364230][ T301] atomic_notifier_call_chain+0x128/0x2b8 [ 18.364937][ T301] die+0x16c/0x568 [ 18.365394][ T301] __do_kernel_fault+0x1e8/0x214 [ 18.365402][ T301] do_page_fault+0xb8/0x678 [ 18.366934][ T301] do_translation_fault+0x48/0x64 [ 18.368645][ T301] do_mem_abort+0x68/0x148 [ 18.368652][ T301] el1_abort+0x40/0x64 [ 18.368660][ T301] el1h_64_sync_handler+0x54/0x88 [ 18.368668][ T301] el1h_64_sync+0x68/0x6c [ 18.368673][ T301] mtk_iommu_probe_device+0xf8/0x118 [mtk_iommu] ...",,,"[{""url"":""https://git.kernel.org/stable/c/8837c2682b9b2eed83e6212bcf79850c593a6fee"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c3c2734e28d7fac50228c4d2b8896e8695adf304"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/de78657e16f41417da9332f09c2d67d100096939"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e9c63c0f73a1bbfd02624f5eae7e881df8b6830f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49425,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:18.977,2025-02-26T07:01:18.977,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: f2fs: fix dereference of stale list iterator after loop body The list iterator variable will be a bogus pointer if no break was hit. Dereferencing it (cur->page in this case) could load an out-of-bounds/undefined value making it unsafe to use that in the comparision to determine if the specific element was found. Since 'cur->page' *can* be out-ouf-bounds it cannot be guaranteed that by chance (or intention of an attacker) it matches the value of 'page' even though the correct element was not found. This is fixed by using a separate list iterator variable for the loop and only setting the original variable if a suitable element was found. Then determing if the element was found is simply checking if the variable is set.",,,"[{""url"":""https://git.kernel.org/stable/c/2aaf51dd39afb6d01d13f1e6fe20b684733b37d5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/385edd3ce5b4b1e9d31f474a5e35a39779ec1110"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/45b2b7d7108ae1e25a5036cab04ab9273e792332"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/51d584704d18e60fa473823654f35611c777b291"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5e47a7add3dda7f236548c5ec3017776dc2a729f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b26e1c777890e4b938136deb8ec07a29f33862e4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ed7efc472c00986dcd6903ab6ed165c7fa167674"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49426,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:19.073,2025-03-24T19:58:02.123,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: iommu/arm-smmu-v3-sva: Fix mm use-after-free We currently call arm64_mm_context_put() without holding a reference to the mm, which can result in use-after-free. Call mmgrab()/mmdrop() to ensure the mm only gets freed after we unpinned the ASID.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/9aa215450888cf29af0c479e14a712dc6b0c506c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cbd23144f7662b00bcde32a938c4a4057e476d68"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e3cbbdbff8a4db5d053c53fd71be62ccccdb52b0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fc90f13ea0dcd960e5002d204fa55cec4e0db2fa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49427,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:19.187,2025-02-26T07:01:19.187,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: iommu/mediatek: Remove clk_disable in mtk_iommu_remove After the commit b34ea31fe013 (""iommu/mediatek: Always enable the clk on resume""), the iommu clock is controlled by the runtime callback. thus remove the clk control in the mtk_iommu_remove. Otherwise, it will warning like: echo 14018000.iommu > /sys/bus/platform/drivers/mtk-iommu/unbind [ 51.413044] ------------[ cut here ]------------ [ 51.413648] vpp0_smi_iommu already disabled [ 51.414233] WARNING: CPU: 2 PID: 157 at */v5.15-rc1/kernel/mediatek/ drivers/clk/clk.c:952 clk_core_disable+0xb0/0xb8 [ 51.417174] Hardware name: MT8195V/C(ENG) (DT) [ 51.418635] pc : clk_core_disable+0xb0/0xb8 [ 51.419177] lr : clk_core_disable+0xb0/0xb8 ... [ 51.429375] Call trace: [ 51.429694] clk_core_disable+0xb0/0xb8 [ 51.430193] clk_core_disable_lock+0x24/0x40 [ 51.430745] clk_disable+0x20/0x30 [ 51.431189] mtk_iommu_remove+0x58/0x118 [ 51.431705] platform_remove+0x28/0x60 [ 51.432197] device_release_driver_internal+0x110/0x1f0 [ 51.432873] device_driver_detach+0x18/0x28 [ 51.433418] unbind_store+0xd4/0x108 [ 51.433886] drv_attr_store+0x24/0x38 [ 51.434363] sysfs_kf_write+0x40/0x58 [ 51.434843] kernfs_fop_write_iter+0x164/0x1e0",,,"[{""url"":""https://git.kernel.org/stable/c/053465ab20dcd324a43a1811ee98e5721e6a3e65"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6eaa046c696c83542c56765cdde564d9818ff1fb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/98df772bdd1c4ce717a26289efea15cbbe4b64ed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9b3bd97acb4f8954b8a43a5d63ed9050d463b4e1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49428,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:19.290,2025-02-26T07:01:19.290,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: f2fs: fix to do sanity check on inline_dots inode As Wenqing reported in bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=215765 It will cause a kernel panic with steps: - mkdir mnt - mount tmp40.img mnt - ls mnt folio_mark_dirty+0x33/0x50 f2fs_add_regular_entry+0x541/0xad0 [f2fs] f2fs_add_dentry+0x6c/0xb0 [f2fs] f2fs_do_add_link+0x182/0x230 [f2fs] __recover_dot_dentries+0x2d6/0x470 [f2fs] f2fs_lookup+0x5af/0x6a0 [f2fs] __lookup_slow+0xac/0x200 lookup_slow+0x45/0x70 walk_component+0x16c/0x250 path_lookupat+0x8b/0x1f0 filename_lookup+0xef/0x250 user_path_at_empty+0x46/0x70 vfs_statx+0x98/0x190 __do_sys_newlstat+0x41/0x90 __x64_sys_newlstat+0x1a/0x30 do_syscall_64+0x37/0xb0 entry_SYSCALL_64_after_hwframe+0x44/0xae The root cause is for special file: e.g. character, block, fifo or socket file, f2fs doesn't assign address space operations pointer array for mapping->a_ops field, so, in a fuzzed image, if inline_dots flag was tagged in special file, during lookup(), when f2fs runs into __recover_dot_dentries(), it will cause NULL pointer access once f2fs_add_regular_entry() calls a_ops->set_dirty_page().",,,"[{""url"":""https://git.kernel.org/stable/c/12662d19467b391b5b509ac5e9ab4f583c6dde16"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/250e5a6be52a6b9d82fe91976c83cc158868b4e9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2f46160d0a19b13bfe96c0dd50eed5c5d253ab7a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/34f48ce5d5936eea33e3b6415403e57eb84aff97"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49429,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:19.383,2025-02-26T07:01:19.383,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: RDMA/hfi1: Prevent panic when SDMA is disabled If the hfi1 module is loaded with HFI1_CAP_SDMA off, a call to hfi1_write_iter() will dereference a NULL pointer and panic. A typical stack frame is: sdma_select_user_engine [hfi1] hfi1_user_sdma_process_request [hfi1] hfi1_write_iter [hfi1] do_iter_readv_writev do_iter_write vfs_writev do_writev do_syscall_64 The fix is to test for SDMA in hfi1_write_iter() and fail the I/O with EINVAL.",,,"[{""url"":""https://git.kernel.org/stable/c/0e4dda8b3f4c07ee9ea670a10ea3171a5e63a86f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/22e7e400fd1a890db2ea13686324aff50e972f4f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/29952ab85d6c3fe0b7909d9a737f10c58bf6824d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/32e6aea33944f364d51cd263e4cd236393a188b6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/33794e8e9bcb4affc0ebff9cdec85acc8b8a1762"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/629e052d0c98e46dde9f0824f0aa437f678d9b8f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cc80d3c37cec9d6ddb140483647901bc7cc6c31d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e60ad83f645ee6fadd5a8057ba267aeec54f08fe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49430,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:19.480,2025-02-26T07:01:19.480,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: Input: gpio-keys - cancel delayed work only in case of GPIO gpio_keys module can either accept gpios or interrupts. The module initializes delayed work in case of gpios only and is only used if debounce timer is not used, so make sure cancel_delayed_work_sync() is called only when its gpio-backed and debounce_use_hrtimer is false. This fixes the issue seen below when the gpio_keys module is unloaded and an interrupt pin is used instead of GPIO: [ 360.297569] ------------[ cut here ]------------ [ 360.302303] WARNING: CPU: 0 PID: 237 at kernel/workqueue.c:3066 __flush_work+0x414/0x470 [ 360.310531] Modules linked in: gpio_keys(-) [ 360.314797] CPU: 0 PID: 237 Comm: rmmod Not tainted 5.18.0-rc5-arm64-renesas-00116-g73636105874d-dirty #166 [ 360.324662] Hardware name: Renesas SMARC EVK based on r9a07g054l2 (DT) [ 360.331270] pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--) [ 360.338318] pc : __flush_work+0x414/0x470 [ 360.342385] lr : __cancel_work_timer+0x140/0x1b0 [ 360.347065] sp : ffff80000a7fba00 [ 360.350423] x29: ffff80000a7fba00 x28: ffff000012b9c5c0 x27: 0000000000000000 [ 360.357664] x26: ffff80000a7fbb80 x25: ffff80000954d0a8 x24: 0000000000000001 [ 360.364904] x23: ffff800009757000 x22: 0000000000000000 x21: ffff80000919b000 [ 360.372143] x20: ffff00000f5974e0 x19: ffff00000f5974e0 x18: ffff8000097fcf48 [ 360.379382] x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000053f40 [ 360.386622] x14: ffff800009850e88 x13: 0000000000000002 x12: 000000000000a60c [ 360.393861] x11: 000000000000a610 x10: 0000000000000000 x9 : 0000000000000008 [ 360.401100] x8 : 0101010101010101 x7 : 00000000a473c394 x6 : 0080808080808080 [ 360.408339] x5 : 0000000000000001 x4 : 0000000000000000 x3 : ffff80000919b458 [ 360.415578] x2 : ffff8000097577f0 x1 : 0000000000000001 x0 : 0000000000000000 [ 360.422818] Call trace: [ 360.425299] __flush_work+0x414/0x470 [ 360.429012] __cancel_work_timer+0x140/0x1b0 [ 360.433340] cancel_delayed_work_sync+0x10/0x18 [ 360.437931] gpio_keys_quiesce_key+0x28/0x58 [gpio_keys] [ 360.443327] devm_action_release+0x10/0x18 [ 360.447481] release_nodes+0x8c/0x1a0 [ 360.451194] devres_release_all+0x90/0x100 [ 360.455346] device_unbind_cleanup+0x14/0x60 [ 360.459677] device_release_driver_internal+0xe8/0x168 [ 360.464883] driver_detach+0x4c/0x90 [ 360.468509] bus_remove_driver+0x54/0xb0 [ 360.472485] driver_unregister+0x2c/0x58 [ 360.476462] platform_driver_unregister+0x10/0x18 [ 360.481230] gpio_keys_exit+0x14/0x828 [gpio_keys] [ 360.486088] __arm64_sys_delete_module+0x1e0/0x270 [ 360.490945] invoke_syscall+0x40/0xf8 [ 360.494661] el0_svc_common.constprop.3+0xf0/0x110 [ 360.499515] do_el0_svc+0x20/0x78 [ 360.502877] el0_svc+0x48/0xf8 [ 360.505977] el0t_64_sync_handler+0x88/0xb0 [ 360.510216] el0t_64_sync+0x148/0x14c [ 360.513930] irq event stamp: 4306 [ 360.517288] hardirqs last enabled at (4305): [<ffff8000080b0300>] __cancel_work_timer+0x130/0x1b0 [ 360.526359] hardirqs last disabled at (4306): [<ffff800008d194fc>] el1_dbg+0x24/0x88 [ 360.534204] softirqs last enabled at (4278): [<ffff8000080104a0>] _stext+0x4a0/0x5e0 [ 360.542133] softirqs last disabled at (4267): [<ffff8000080932ac>] irq_exit_rcu+0x18c/0x1b0 [ 360.550591] ---[ end trace 0000000000000000 ]---",,,"[{""url"":""https://git.kernel.org/stable/c/4160e09619086fc155b51ccdb3462a3f233a5f4b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8b1ae300c2953257c146b5f0757537935c0b6027"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/96c460687813915dedca9dd7d04ae0e90607fd79"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cee409bbba0d1bd3fb73064fb480ff365f453b5d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49431,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:19.573,2025-02-26T07:01:19.573,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: powerpc/iommu: Add missing of_node_put in iommu_init_early_dart The device_node pointer is returned by of_find_compatible_node with refcount incremented. We should use of_node_put() to avoid the refcount leak.",,,"[{""url"":""https://git.kernel.org/stable/c/57b742a5b8945118022973e6416b71351df512fb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7e3f1dfb9e21733d7276bc9ccea4daada163f2ba"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8657e8ea23325949091da72453ba84fb73cc2bd9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cb4f2dc513e99c5d0485661f114e4dda73612d10"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/df6d8b689252c0acc0448d4ae3d33f2d6db048ab"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dfc308d6f29aa28463deb9a12278a85a382385ca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49432,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:19.667,2025-02-26T07:01:19.667,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: powerpc/xics: fix refcount leak in icp_opal_init() The of_find_compatible_node() function returns a node pointer with refcount incremented, use of_node_put() on it when done.",,,"[{""url"":""https://git.kernel.org/stable/c/1d5c8cea85fb1680eae8d645b96b92146cb4633c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2357bd7499a81c70b460e2191852bbfc7b63c354"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/537a317e5ff45d1f5a0ecaf6a0d7c8043c878cb1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/53f3f7f73e609b934083f896cb7ca2c2cb009b9f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5dd9e27ea4a39f7edd4bf81e9e70208e7ac0b7c9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6a61a97106279c2aa16fbbb2a171fd5dde127d23"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/977dbc81d0f866ef63b93c127b7404f07734b3cc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9a42bc2494fadb453de00ce61042e588563ddc6d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/df802880a7f9cd96b921b00639b00871f18a9a57"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49433,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:19.763,2025-02-26T07:01:19.763,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: RDMA/hfi1: Prevent use of lock before it is initialized If there is a failure during probe of hfi1 before the sdma_map_lock is initialized, the call to hfi1_free_devdata() will attempt to use a lock that has not been initialized. If the locking correctness validator is on then an INFO message and stack trace resembling the following may be seen: INFO: trying to register non-static key. The code is fine but needs lockdep annotation, or maybe you didn't initialize this object before use? turning off the locking correctness validator. Call Trace: register_lock_class+0x11b/0x880 __lock_acquire+0xf3/0x7930 lock_acquire+0xff/0x2d0 _raw_spin_lock_irq+0x46/0x60 sdma_clean+0x42a/0x660 [hfi1] hfi1_free_devdata+0x3a7/0x420 [hfi1] init_one+0x867/0x11a0 [hfi1] pci_device_probe+0x40e/0x8d0 The use of sdma_map_lock in sdma_clean() is for freeing the sdma_map memory, and sdma_map is not allocated/initialized until after sdma_map_lock has been initialized. This code only needs to be run if sdma_map is not NULL, and so checking for that condition will avoid trying to use the lock before it is initialized.",,,"[{""url"":""https://git.kernel.org/stable/c/05c03dfd09c069c4ffd783b47b2da5dcc9421f2c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/288d198f50434f29b4a26a9de4394ae2305ad8af"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/30eb275e7ed588270ae159cc590a96658e0cfd8f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/66090815a24ce14cf51ef5453fc0218fe8a39bc2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/addb192000d8819c0b1553453994df9bb54c28db"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ca55150bff5817af4f857a746ecab9862c23e12a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fc0750e659db7b315bf6348902cc8ca3cdd4b8d8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49434,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:19.863,2025-02-26T07:01:19.863,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: PCI: Avoid pci_dev_lock() AB/BA deadlock with sriov_numvfs_store() The sysfs sriov_numvfs_store() path acquires the device lock before the config space access lock: sriov_numvfs_store device_lock # A (1) acquire device lock sriov_configure vfio_pci_sriov_configure # (for example) vfio_pci_core_sriov_configure pci_disable_sriov sriov_disable pci_cfg_access_lock pci_wait_cfg # B (4) wait for dev->block_cfg_access == 0 Previously, pci_dev_lock() acquired the config space access lock before the device lock: pci_dev_lock pci_cfg_access_lock dev->block_cfg_access = 1 # B (2) set dev->block_cfg_access = 1 device_lock # A (3) wait for device lock Any path that uses pci_dev_lock(), e.g., pci_reset_function(), may deadlock with sriov_numvfs_store() if the operations occur in the sequence (1) (2) (3) (4). Avoid the deadlock by reversing the order in pci_dev_lock() so it acquires the device lock before the config space access lock, the same as the sriov_numvfs_store() path. [bhelgaas: combined and adapted commit log from Jay Zhou's independent subsequent posting: https://lore.kernel.org/r/20220404062539.1710-1-jianjay.zhou@huawei.com]",,,"[{""url"":""https://git.kernel.org/stable/c/2cdd5284035322795b0964f899eefba254cfe483"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/59ea6b3ae51df7cd6bfd84c9c0030609b9315622"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a91ee0e9fca9d7501286cfbced9b30a33e52740a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/aed6d4d519210c28817948f34c53b6e058e0456c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c3c6dc1853b8bf3c718f96fd8480a6eb09ba4831"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c9a81f9ed6ae3554621d6a50220b1bc74b67d81e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/da9792920ab525b8a932aa9aeee34529ad7b83f7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ea047f51172aa68841adef7f52d375002438b8f0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/eff3587b9c01439b738298475e555c028ac9f55e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49435,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:19.957,2025-02-26T07:01:19.957,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: mfd: davinci_voicecodec: Fix possible null-ptr-deref davinci_vc_probe() It will cause null-ptr-deref when using 'res', if platform_get_resource() returns NULL, so move using 'res' after devm_ioremap_resource() that will check it to avoid null-ptr-deref. And use devm_platform_get_and_ioremap_resource() to simplify code.",,,"[{""url"":""https://git.kernel.org/stable/c/2d00158a06efe6bbcd020108634ea0f2ed8b32f7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/311242c7703df0da14c206260b7e855f69cb0264"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/49c1e32e7b3f301642a60448700ec531df981269"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5289795824b77489803b0802cd9edc13824a2d0b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/579944b9f38727d9ff570b58f83bc424e8af8398"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a1d4941d9a24999f680799f9bbde7f57351ca637"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49436,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:20.057,2025-02-26T07:01:20.057,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: powerpc/papr_scm: Fix leaking nvdimm_events_map elements Right now 'char *' elements allocated for individual 'stat_id' in 'papr_scm_priv.nvdimm_events_map[]' during papr_scm_pmu_check_events(), get leaked in papr_scm_remove() and papr_scm_pmu_register(), papr_scm_pmu_check_events() error paths. Also individual 'stat_id' arent NULL terminated 'char *' instead they are fixed 8-byte sized identifiers. However papr_scm_pmu_register() assumes it to be a NULL terminated 'char *' and at other places it assumes it to be a 'papr_scm_perf_stat.stat_id' sized string which is 8-byes in size. Fix this by allocating the memory for papr_scm_priv.nvdimm_events_map to also include space for 'stat_id' entries. This is possible since number of available events/stat_ids are known upfront. This saves some memory and one extra level of indirection from 'nvdimm_events_map' to 'stat_id'. Also rest of the code can continue to call 'kfree(papr_scm_priv.nvdimm_events_map)' without needing to iterate over the array and free up individual elements.",,,"[{""url"":""https://git.kernel.org/stable/c/0e0946e22f3665d27325d389ff45ade6e93f3678"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b073096df4dec70d0436321b7093bad27ae91f9e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49437,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:20.150,2025-03-17T19:53:22.073,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: powerpc/xive: Fix refcount leak in xive_spapr_init of_find_compatible_node() returns a node pointer with refcount incremented, we should use of_node_put() on it when done. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.14"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""42F866E4-C42F-4824-9342-529FA12D88CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1d1fb9618bdd5a5fbf9a9eb75133da301d33721c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/65f11ccdd746e0e7f0b469cc989ba43d4f30ecfe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6e806485d851986a2445267608f27cb4ba2ed774"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cc62dde2a5f4ba14016fd9caec76f08d388f4b9c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49438,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:20.240,2025-03-17T19:53:51.830,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: Input: sparcspkr - fix refcount leak in bbc_beep_probe of_find_node_by_path() calls of_find_node_opts_by_path(), which returns a node pointer with refcount incremented, we should use of_node_put() on it when done. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.26"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""6214829A-E4E9-41B9-8A0B-4700397BBDB6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1124e39fea0e2fdb4202f95b716cb97cc7de7cc7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2f51db16cb740ff90086189a1ef2581eab665591"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/353bc58ac6c782d4dcde9136a91d1f90867938fe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/418b6a3e12f75638abc5673eb76cb32127d0ab13"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6e07ccc7d56130f760d23f67a70c45366c07debc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/73d6f42d8d86648bec2e73d34fe1648cb6d23e08"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bbc2b0ce6042dd3117827f10ea8cb67e0ab786da"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c8994b30d71d64d5dcc9bc0edbfdf367171aa96f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f13064b0f2c651a3fbb0749932795c6fd21556a8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49439,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:20.337,2025-03-17T19:53:42.867,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: powerpc/fsl_rio: Fix refcount leak in fsl_rio_setup of_parse_phandle() returns a node pointer with refcount incremented, we should use of_node_put() on it when not need anymore. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.3"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""874D94BD-D47A-461F-A847-717A06A056A2""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/46fd994763cf6884b88a2da712af918f3ed54d7b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/51e25fbf20c9152d84a34b7afac15a41fe5c9116"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5607a77a365df8c0fd5ff43ac424812b95775527"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5b8aa2ba38c010f47c965dd9bb5a8561813ed649"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7b668a59ddfb32727e39b06fdf52b28e58c684e0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bcb6c4c5eb4836a21411dfe8247bf9951eb6e7c3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c70dd353d37158e06bf8d450d4b31a7091609924"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fcee96924ba1596ca80a6770b2567ca546f9a482"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49440,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:20.430,2025-02-26T07:01:20.430,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: powerpc/rtas: Keep MSR[RI] set when calling RTAS RTAS runs in real mode (MSR[DR] and MSR[IR] unset) and in 32-bit big endian mode (MSR[SF,LE] unset). The change in MSR is done in enter_rtas() in a relatively complex way, since the MSR value could be hardcoded. Furthermore, a panic has been reported when hitting the watchdog interrupt while running in RTAS, this leads to the following stack trace: watchdog: CPU 24 Hard LOCKUP watchdog: CPU 24 TB:997512652051031, last heartbeat TB:997504470175378 (15980ms ago) ... Supported: No, Unreleased kernel CPU: 24 PID: 87504 Comm: drmgr Kdump: loaded Tainted: G E X 5.14.21-150400.71.1.bz196362_2-default #1 SLE15-SP4 (unreleased) 0d821077ef4faa8dfaf370efb5fdca1fa35f4e2c NIP: 000000001fb41050 LR: 000000001fb4104c CTR: 0000000000000000 REGS: c00000000fc33d60 TRAP: 0100 Tainted: G E X (5.14.21-150400.71.1.bz196362_2-default) MSR: 8000000002981000 <SF,VEC,VSX,ME> CR: 48800002 XER: 20040020 CFAR: 000000000000011c IRQMASK: 1 GPR00: 0000000000000003 ffffffffffffffff 0000000000000001 00000000000050dc GPR04: 000000001ffb6100 0000000000000020 0000000000000001 000000001fb09010 GPR08: 0000000020000000 0000000000000000 0000000000000000 0000000000000000 GPR12: 80040000072a40a8 c00000000ff8b680 0000000000000007 0000000000000034 GPR16: 000000001fbf6e94 000000001fbf6d84 000000001fbd1db0 000000001fb3f008 GPR20: 000000001fb41018 ffffffffffffffff 000000000000017f fffffffffffff68f GPR24: 000000001fb18fe8 000000001fb3e000 000000001fb1adc0 000000001fb1cf40 GPR28: 000000001fb26000 000000001fb460f0 000000001fb17f18 000000001fb17000 NIP [000000001fb41050] 0x1fb41050 LR [000000001fb4104c] 0x1fb4104c Call Trace: Instruction dump: XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX Oops: Unrecoverable System Reset, sig: 6 [#1] LE PAGE_SIZE=64K MMU=Hash SMP NR_CPUS=2048 NUMA pSeries ... Supported: No, Unreleased kernel CPU: 24 PID: 87504 Comm: drmgr Kdump: loaded Tainted: G E X 5.14.21-150400.71.1.bz196362_2-default #1 SLE15-SP4 (unreleased) 0d821077ef4faa8dfaf370efb5fdca1fa35f4e2c NIP: 000000001fb41050 LR: 000000001fb4104c CTR: 0000000000000000 REGS: c00000000fc33d60 TRAP: 0100 Tainted: G E X (5.14.21-150400.71.1.bz196362_2-default) MSR: 8000000002981000 <SF,VEC,VSX,ME> CR: 48800002 XER: 20040020 CFAR: 000000000000011c IRQMASK: 1 GPR00: 0000000000000003 ffffffffffffffff 0000000000000001 00000000000050dc GPR04: 000000001ffb6100 0000000000000020 0000000000000001 000000001fb09010 GPR08: 0000000020000000 0000000000000000 0000000000000000 0000000000000000 GPR12: 80040000072a40a8 c00000000ff8b680 0000000000000007 0000000000000034 GPR16: 000000001fbf6e94 000000001fbf6d84 000000001fbd1db0 000000001fb3f008 GPR20: 000000001fb41018 ffffffffffffffff 000000000000017f fffffffffffff68f GPR24: 000000001fb18fe8 000000001fb3e000 000000001fb1adc0 000000001fb1cf40 GPR28: 000000001fb26000 000000001fb460f0 000000001fb17f18 000000001fb17000 NIP [000000001fb41050] 0x1fb41050 LR [000000001fb4104c] 0x1fb4104c Call Trace: Instruction dump: XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX ---[ end trace 3ddec07f638c34a2 ]--- This happens because MSR[RI] is unset when entering RTAS but there is no valid reason to not set it here. RTAS is expected to be called with MSR[RI] as specified in PAPR+ section ""7.2.1 Machine State"": R1–7.2.1–9. If called with MSR[RI] equal to 1, then RTAS must protect its own critical regions from recursion by setting the MSR[RI] bit to 0 when in the critical regions. Fixing this by reviewing the way MSR is compute before calling RTAS. Now a hardcoded value meaning real ---truncated---",,,"[{""url"":""https://git.kernel.org/stable/c/5ca40fcf0da0ce2b5bc44e7d8b036535955f2e3d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5f4367448f6817c8a0e94dc9736ed84fa8eee4a3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b6b1c3ce06ca438eb24e0f45bf0e63ecad0369f5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c9c41f0273826a13ac93124e66a4ff45df281ba0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49441,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:20.523,2025-03-17T16:53:58.013,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tty: fix deadlock caused by calling printk() under tty_port->lock pty_write() invokes kmalloc() which may invoke a normal printk() to print failure message. This can cause a deadlock in the scenario reported by syz-bot below: CPU0 CPU1 CPU2 ---- ---- ---- lock(console_owner); lock(&port_lock_key); lock(&port->lock); lock(&port_lock_key); lock(&port->lock); lock(console_owner); As commit dbdda842fe96 (""printk: Add console owner and waiter logic to load balance console writes"") said, such deadlock can be prevented by using printk_deferred() in kmalloc() (which is invoked in the section guarded by the port->lock). But there are too many printk() on the kmalloc() path, and kmalloc() can be called from anywhere, so changing printk() to printk_deferred() is too complicated and inelegant. Therefore, this patch chooses to specify __GFP_NOWARN to kmalloc(), so that printk() will not be called, and this deadlock problem can be avoided. Syzbot reported the following lockdep error: ====================================================== WARNING: possible circular locking dependency detected 5.4.143-00237-g08ccc19a-dirty #10 Not tainted ------------------------------------------------------ syz-executor.4/29420 is trying to acquire lock: ffffffff8aedb2a0 (console_owner){....}-{0:0}, at: console_trylock_spinning kernel/printk/printk.c:1752 [inline] ffffffff8aedb2a0 (console_owner){....}-{0:0}, at: vprintk_emit+0x2ca/0x470 kernel/printk/printk.c:2023 but task is already holding lock: ffff8880119c9158 (&port->lock){-.-.}-{2:2}, at: pty_write+0xf4/0x1f0 drivers/tty/pty.c:120 which lock already depends on the new lock. the existing dependency chain (in reverse order) is: -> #2 (&port->lock){-.-.}-{2:2}: __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:110 [inline] _raw_spin_lock_irqsave+0x35/0x50 kernel/locking/spinlock.c:159 tty_port_tty_get drivers/tty/tty_port.c:288 [inline] <-- lock(&port->lock); tty_port_default_wakeup+0x1d/0xb0 drivers/tty/tty_port.c:47 serial8250_tx_chars+0x530/0xa80 drivers/tty/serial/8250/8250_port.c:1767 serial8250_handle_irq.part.0+0x31f/0x3d0 drivers/tty/serial/8250/8250_port.c:1854 serial8250_handle_irq drivers/tty/serial/8250/8250_port.c:1827 [inline] <-- lock(&port_lock_key); serial8250_default_handle_irq+0xb2/0x220 drivers/tty/serial/8250/8250_port.c:1870 serial8250_interrupt+0xfd/0x200 drivers/tty/serial/8250/8250_core.c:126 __handle_irq_event_percpu+0x109/0xa50 kernel/irq/handle.c:156 [...] -> #1 (&port_lock_key){-.-.}-{2:2}: __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:110 [inline] _raw_spin_lock_irqsave+0x35/0x50 kernel/locking/spinlock.c:159 serial8250_console_write+0x184/0xa40 drivers/tty/serial/8250/8250_port.c:3198 <-- lock(&port_lock_key); call_console_drivers kernel/printk/printk.c:1819 [inline] console_unlock+0x8cb/0xd00 kernel/printk/printk.c:2504 vprintk_emit+0x1b5/0x470 kernel/printk/printk.c:2024 <-- lock(console_owner); vprintk_func+0x8d/0x250 kernel/printk/printk_safe.c:394 printk+0xba/0xed kernel/printk/printk.c:2084 register_console+0x8b3/0xc10 kernel/printk/printk.c:2829 univ8250_console_init+0x3a/0x46 drivers/tty/serial/8250/8250_core.c:681 console_init+0x49d/0x6d3 kernel/printk/printk.c:2915 start_kernel+0x5e9/0x879 init/main.c:713 secondary_startup_64+0xa4/0xb0 arch/x86/kernel/head_64.S:241 -> #0 (console_owner){....}-{0:0}: [...] lock_acquire+0x127/0x340 kernel/locking/lockdep.c:4734 console_trylock_spinning kernel/printk/printk.c:1773 ---truncated---","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.18.118"",""versionEndExcluding"":""3.19"",""matchCriteriaId"":""3E38B3B3-C9B4-4F8E-B27F-E121FA35D422""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.4.146"",""versionEndExcluding"":""4.5"",""matchCriteriaId"":""9F7ABD11-7E25-4617-AD4B-2068A90C7EF8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.9.117"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""FF4DA68C-0A82-4061-AEA7-59632762D9E2""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.14.60"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""378D8F4C-4F16-4488-9872-625DEA9B337A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.17.12"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""A0236C89-21F4-4889-AA04-D7985FBBD23F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/04ee31678c128a6cc7bb057ea189a8624ba5a314"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0bcf44903ef4df742dcada86ccaedd25374ffb50"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/18ca0d55e8639b911df8aae1b47598b13f9acded"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3219ac364ac3d8d30771612a6010f1e0b7fa0a28"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4af21b12a60ed2d3642284f4f85b42d7dc6ac246"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4c253caf9264d2aa47ee806a87986dd8eb91a5d9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6b9dbedbe3499fef862c4dff5217cf91f34e43b3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9834b13e8b962caa28fbcf1f422dd82413da4ede"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b3c974501d0c32258ae0e04e5cc3fb92383b40f6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49442,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:20.630,2025-02-26T07:01:20.630,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drivers/base/node.c: fix compaction sysfs file leak Compaction sysfs file is created via compaction_register_node in register_node. But we forgot to remove it in unregister_node. Thus compaction sysfs file is leaked. Using compaction_unregister_node to fix this issue.",,,"[{""url"":""https://git.kernel.org/stable/c/386e69e068177ee91cac27f2f0e6ebda1515f5ca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/39642b0feddb9c39faa6de469a94bfeb4dc0d3a9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/466134df7561aeb801baddf6666b512e0e1a1707"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/606732650a2c88e66c59c22dd5464ea0d820250e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6905be93d1ab54f73718047536fec0ca488d5315"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b3fcf1f583b1a0946d9d9bfb7362c9c186801775"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d8a5bdc767f17281da648555cdbd286f98fd98ee"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/da63dc84befaa9e6079a0bc363ff0eaa975f9073"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f76ddc8fcf6d81fe89bfa4d3efcbc4fe69a91d48"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49443,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:20.730,2025-03-17T16:53:46.963,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: list: fix a data-race around ep->rdllist ep_poll() first calls ep_events_available() with no lock held and checks if ep->rdllist is empty by list_empty_careful(), which reads rdllist->prev. Thus all accesses to it need some protection to avoid store/load-tearing. Note INIT_LIST_HEAD_RCU() already has the annotation for both prev and next. Commit bf3b9f6372c4 (""epoll: Add busy poll support to epoll with socket fds."") added the first lockless ep_events_available(), and commit c5a282e9635e (""fs/epoll: reduce the scope of wq lock in epoll_wait()"") made some ep_events_available() calls lockless and added single call under a lock, finally commit e59d3c64cba6 (""epoll: eliminate unnecessary lock for zero timeout"") made the last ep_events_available() lockless. BUG: KCSAN: data-race in do_epoll_wait / do_epoll_wait write to 0xffff88810480c7d8 of 8 bytes by task 1802 on cpu 0: INIT_LIST_HEAD include/linux/list.h:38 [inline] list_splice_init include/linux/list.h:492 [inline] ep_start_scan fs/eventpoll.c:622 [inline] ep_send_events fs/eventpoll.c:1656 [inline] ep_poll fs/eventpoll.c:1806 [inline] do_epoll_wait+0x4eb/0xf40 fs/eventpoll.c:2234 do_epoll_pwait fs/eventpoll.c:2268 [inline] __do_sys_epoll_pwait fs/eventpoll.c:2281 [inline] __se_sys_epoll_pwait+0x12b/0x240 fs/eventpoll.c:2275 __x64_sys_epoll_pwait+0x74/0x80 fs/eventpoll.c:2275 do_syscall_x64 arch/x86/entry/common.c:50 [inline] do_syscall_64+0x44/0xd0 arch/x86/entry/common.c:80 entry_SYSCALL_64_after_hwframe+0x44/0xae read to 0xffff88810480c7d8 of 8 bytes by task 1799 on cpu 1: list_empty_careful include/linux/list.h:329 [inline] ep_events_available fs/eventpoll.c:381 [inline] ep_poll fs/eventpoll.c:1797 [inline] do_epoll_wait+0x279/0xf40 fs/eventpoll.c:2234 do_epoll_pwait fs/eventpoll.c:2268 [inline] __do_sys_epoll_pwait fs/eventpoll.c:2281 [inline] __se_sys_epoll_pwait+0x12b/0x240 fs/eventpoll.c:2275 __x64_sys_epoll_pwait+0x74/0x80 fs/eventpoll.c:2275 do_syscall_x64 arch/x86/entry/common.c:50 [inline] do_syscall_64+0x44/0xd0 arch/x86/entry/common.c:80 entry_SYSCALL_64_after_hwframe+0x44/0xae value changed: 0xffff88810480c7d0 -> 0xffff888103c15098 Reported by Kernel Concurrency Sanitizer on: CPU: 1 PID: 1799 Comm: syz-fuzzer Tainted: G W 5.17.0-rc7-syzkaller-dirty #0 Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.12"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""1C85B4FC-DF18-4C4C-AA30-7705B44192E5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/5d5d993f16be15d124be7b8ec71b28ef7b7dc3af"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cb3e48f7a35033deb9455abe3932e63cb500b9eb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d679ae94fdd5d3ab00c35078f5af5f37e068b03d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e039c0b5985999b150594126225e1ee51df7b4c9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49444,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:20.820,2025-02-26T07:01:20.820,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: module: fix [e_shstrndx].sh_size=0 OOB access It is trivial to craft a module to trigger OOB access in this line: if (info->secstrings[strhdr->sh_size - 1] != '\0') { BUG: unable to handle page fault for address: ffffc90000aa0fff PGD 100000067 P4D 100000067 PUD 100066067 PMD 10436f067 PTE 0 Oops: 0000 [#1] PREEMPT SMP PTI CPU: 7 PID: 1215 Comm: insmod Not tainted 5.18.0-rc5-00007-g9bf578647087-dirty #10 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-4.fc34 04/01/2014 RIP: 0010:load_module+0x19b/0x2391 [rebased patch onto modules-next]",,,"[{""url"":""https://git.kernel.org/stable/c/09cb6663618a74fe5572a4931ecbf098832e79ec"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/391e982bfa632b8315235d8be9c0a81374c6a19c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/45a76414b6d8b8b39c23fea53b9d20e831ae72a0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/921630e2e5124a04158129a8f22f4b425e61a858"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49445,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:20.913,2025-03-17T16:12:59.620,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: pinctrl: renesas: core: Fix possible null-ptr-deref in sh_pfc_map_resources() It will cause null-ptr-deref when using 'res', if platform_get_resource() returns NULL, so move using 'res' after devm_ioremap_resource() that will check it to avoid null-ptr-deref. And use devm_platform_get_and_ioremap_resource() to simplify code.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.3"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""58ABA7F2-1CE0-49CE-8C4F-E4D81B7E87D4""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/5376e3d904532e657fd7ca1a9b1ff3d351527b90"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5ed0519d425619b435150372cce2ffeec71581fa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e3a1ad8fd0ac11f4fa1260c23b5db71a25473254"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f991879762392c19661af5b722578089a12b305f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fb4f022b3ad1f3ff3cafdbc7d51896090ae17701"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49446,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:21.010,2025-03-17T16:12:47.283,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: nvdimm: Fix firmware activation deadlock scenarios Lockdep reports the following deadlock scenarios for CXL root device power-management, device_prepare(), operations, and device_shutdown() operations for 'nd_region' devices: Chain exists of: &nvdimm_region_key --> &nvdimm_bus->reconfig_mutex --> system_transition_mutex Possible unsafe locking scenario: CPU0 CPU1 ---- ---- lock(system_transition_mutex); lock(&nvdimm_bus->reconfig_mutex); lock(system_transition_mutex); lock(&nvdimm_region_key); Chain exists of: &cxl_nvdimm_bridge_key --> acpi_scan_lock --> &cxl_root_key Possible unsafe locking scenario: CPU0 CPU1 ---- ---- lock(&cxl_root_key); lock(acpi_scan_lock); lock(&cxl_root_key); lock(&cxl_nvdimm_bridge_key); These stem from holding nvdimm_bus_lock() over hibernate_quiet_exec() which walks the entire system device topology taking device_lock() along the way. The nvdimm_bus_lock() is protecting against unregistration, multiple simultaneous ops callers, and preventing activate_show() from racing activate_store(). For the first 2, the lock is redundant. Unregistration already flushes all ops users, and sysfs already prevents multiple threads to be active in an ops handler at the same time. For the last userspace should already be waiting for its last activate_store() to complete, and does not need activate_show() to flush the write side, so this lock usage can be deleted in these attributes.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.9"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""D72A0A66-110A-4144-A452-8FE84D5A41C8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2f97ebc58d5fc83ca1528cd553fa725472ab3ca8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2fd853fdb40afc052de338693df1372f2ead7be7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/641649f31e20df630310f5c22f26c071acc676d4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ceb924ee16b2c8e48dcac3d9ad6be01c40b5a228"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e6829d1bd3c4b58296ee9e412f7ed4d6cb390192"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49447,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:21.103,2025-03-17T16:12:39.150,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ARM: hisi: Add missing of_node_put after of_find_compatible_node of_find_compatible_node will increment the refcount of the returned device_node. Calling of_node_put() to avoid the refcount leak","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""0D4D4067-974D-4560-8320-22FDA399E3F9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/21a3effe446dd6dc5eed7fe897c2f9b88c9a5d6d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/45d211668d33c49d73f5213e8c2b58468108647c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/46cb7868811d025c3d29c10d18b3422db1cf20d5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9bc72e47d4630d58a840a66a869c56b29554cfe4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a3265a9440030068547a20dfee646666f3ca5278"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cafaaae4bb9ce84a2791fa29bf6907a9466c3883"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/dd4be8ecfb41a29e7c4e551b4e866157ce4a3429"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e109058165137ef42841abd989f080adfefa14fa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f8da78b2bae1f54746647a2bb44f8bd6025c57af"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49448,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:21.200,2025-03-17T16:12:30.140,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: soc: bcm: Check for NULL return of devm_kzalloc() As the potential failure of allocation, devm_kzalloc() may return NULL. Then the 'pd->pmb' and the follow lines of code may bring null pointer dereference. Therefore, it is better to check the return value of devm_kzalloc() to avoid this confusion.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.12"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""4B1B70ED-9D25-4914-8F22-87A4DFAD7934""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/36339ea7bae4943be01c8e9545e46e334591fecd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5650e103bfc70156001615861fb8aafb3947da6e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b48b98743b568bb219152ba2e15af6ef0d3d8a9b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b4bd2aafacce48db26b0a213d849818d940556dd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49449,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:21.290,2025-03-17T16:12:23.147,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: pinctrl: renesas: rzn1: Fix possible null-ptr-deref in sh_pfc_map_resources() It will cause null-ptr-deref when using 'res', if platform_get_resource() returns NULL, so move using 'res' after devm_ioremap_resource() that will check it to avoid null-ptr-deref. And use devm_platform_get_and_ioremap_resource() to simplify code.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""814C88C6-C31D-462A-BBBE-BC83E102E84C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/01f9e02e0f13df3fd291676dc80054e977be1601"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2f661477c2bb8068194dbba9738d05219f111c6e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/34c719b8fdfbd0c7c54cae56e6b0f16e9f8bf03e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b646e0cfeb38bf5f1944fd548f1dfa9b129fa00c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c16b59d445135c8026a04e388d8b2762feaa3b3b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49450,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:21.390,2025-03-17T16:12:16.943,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: rxrpc: Fix listen() setting the bar too high for the prealloc rings AF_RXRPC's listen() handler lets you set the backlog up to 32 (if you bump up the sysctl), but whilst the preallocation circular buffers have 32 slots in them, one of them has to be a dead slot because we're using CIRC_CNT(). This means that listen(rxrpc_sock, 32) will cause an oops when the socket is closed because rxrpc_service_prealloc_one() allocated one too many calls and rxrpc_discard_prealloc() won't then be able to get rid of them because it'll think the ring is empty. rxrpc_release_calls_on_socket() then tries to abort them, but oopses because call->peer isn't yet set. Fix this by setting the maximum backlog to RXRPC_BACKLOG_MAX - 1 to match the ring capacity. BUG: kernel NULL pointer dereference, address: 0000000000000086 ... RIP: 0010:rxrpc_send_abort_packet+0x73/0x240 [rxrpc] Call Trace: <TASK> ? __wake_up_common_lock+0x7a/0x90 ? rxrpc_notify_socket+0x8e/0x140 [rxrpc] ? rxrpc_abort_call+0x4c/0x60 [rxrpc] rxrpc_release_calls_on_socket+0x107/0x1a0 [rxrpc] rxrpc_release+0xc9/0x1c0 [rxrpc] __sock_release+0x37/0xa0 sock_close+0x11/0x20 __fput+0x89/0x240 task_work_run+0x59/0x90 do_exit+0x319/0xaa0","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.9"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""F66DA60C-48FB-4C0A-A8BD-EE00CAEBAAF6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/369de57492c4f1a42563c5a3bd365822ca3bfc79"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4a3a78b7918bdd723d8c7c9786522ca969bffcc4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5b4826657d36c218e9f08e8d3223b0edce3de88f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/616f76498d5ddf26b997caf64a95cda3c8a55533"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/61fb38cfbb1d54d3dafd0c25752f684b3cd00b32"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/88e22159750b0d55793302eeed8ee603f5c1a95c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/91b34bf0409f43bb60453bab23c5beadd726d022"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b3a9b227d5e7467b8518160ff034ea22bb9de573"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e198f1930050e3115c80b67d9249f80f98a27c67"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49451,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:21.490,2025-03-17T16:12:01.790,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: firmware: arm_scmi: Fix list protocols enumeration in the base protocol While enumerating protocols implemented by the SCMI platform using BASE_DISCOVER_LIST_PROTOCOLS, the number of returned protocols is currently validated in an improper way since the check employs a sum between unsigned integers that could overflow and cause the check itself to be silently bypassed if the returned value 'loop_num_ret' is big enough. Fix the validation avoiding the addition.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-190""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.17"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""1D618A3C-AEC5-4520-BBDB-002AC8CA3FED""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1052f22e127d0c34c3387bb389424ba1c61491ff"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2ccfcd7a09c826516edcfe464b05071961aada3f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/444a2d27fe9867d0da4b28fc45b793f32e099ab8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6e7978695f4a6cbd83616b5a702b77fa2087b247"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8009120e0354a67068e920eb10dce532391361d0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/98342148a8cd242855d7e257f298c966c96dba9f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b0e4bafac8963c2d85ee18d3d01f393735acceec"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49452,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:21.587,2025-02-26T07:01:21.587,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: dpaa2-eth: retrieve the virtual address before dma_unmap The TSO header was DMA unmapped before the virtual address was retrieved and then used to free the buffer. This meant that we were actually removing the DMA map and then trying to search for it to help in retrieving the virtual address. This lead to a invalid virtual address being used in the kfree call. Fix this by calling dpaa2_iova_to_virt() prior to the dma_unmap call. [ 487.231819] Unable to handle kernel paging request at virtual address fffffd9807000008 (...) [ 487.354061] Hardware name: SolidRun LX2160A Honeycomb (DT) [ 487.359535] pstate: a0400005 (NzCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--) [ 487.366485] pc : kfree+0xac/0x304 [ 487.369799] lr : kfree+0x204/0x304 [ 487.373191] sp : ffff80000c4eb120 [ 487.376493] x29: ffff80000c4eb120 x28: ffff662240c46400 x27: 0000000000000001 [ 487.383621] x26: 0000000000000001 x25: ffff662246da0cc0 x24: ffff66224af78000 [ 487.390748] x23: ffffad184f4ce008 x22: ffffad1850185000 x21: ffffad1838d13cec [ 487.397874] x20: ffff6601c0000000 x19: fffffd9807000000 x18: 0000000000000000 [ 487.405000] x17: ffffb910cdc49000 x16: ffffad184d7d9080 x15: 0000000000004000 [ 487.412126] x14: 0000000000000008 x13: 000000000000ffff x12: 0000000000000000 [ 487.419252] x11: 0000000000000004 x10: 0000000000000001 x9 : ffffad184d7d927c [ 487.426379] x8 : 0000000000000000 x7 : 0000000ffffffd1d x6 : ffff662240a94900 [ 487.433505] x5 : 0000000000000003 x4 : 0000000000000009 x3 : ffffad184f4ce008 [ 487.440632] x2 : ffff662243eec000 x1 : 0000000100000100 x0 : fffffc0000000000 [ 487.447758] Call trace: [ 487.450194] kfree+0xac/0x304 [ 487.453151] dpaa2_eth_free_tx_fd.isra.0+0x33c/0x3e0 [fsl_dpaa2_eth] [ 487.459507] dpaa2_eth_tx_conf+0x100/0x2e0 [fsl_dpaa2_eth] [ 487.464989] dpaa2_eth_poll+0xdc/0x380 [fsl_dpaa2_eth]",,,"[{""url"":""https://git.kernel.org/stable/c/06d129946a71f3159b3b40ee95549183edf2c79d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ba5fe3dd4833bbc03609c5c0c2dd2cea5fa5addf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49453,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:21.673,2025-03-17T16:11:54.510,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: soc: ti: ti_sci_pm_domains: Check for null return of devm_kcalloc The allocation funciton devm_kcalloc may fail and return a null pointer, which would cause a null-pointer dereference later. It might be better to check it and directly return -ENOMEM just like the usage of devm_kcalloc in previous code.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""814C88C6-C31D-462A-BBBE-BC83E102E84C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/01ba41a359622ab256ce4d4f8b94c67165ae3daf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/05efc4591f80582b6fe53366b70b6a35a42fd255"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7cef9274fa1b8506949d74bc45aef072b890824a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ba56291e297d28aa6eb82c5c1964fae2d7594746"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c4e188869406b47ac3350920bf165be303cb1c96"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49454,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:21.767,2025-03-17T16:11:47.980,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: PCI: mediatek: Fix refcount leak in mtk_pcie_subsys_powerup() The of_find_compatible_node() function returns a node pointer with refcount incremented, We should use of_node_put() on it when done Add the missing of_node_put() to release the refcount.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""FA8369C7-8B08-4709-9CE6-2131C7668313""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/09b2d906d78ddf5042b1f3e0091835fc6997e8a4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/214e0d8fe4a813ae6ffd62bc2dfe7544c20914f4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4cef4237d6c37257cb6ddc397723e9c0dded0efe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ad1c9d13e04509ae24fae8dd2897148657323519"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49455,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:21.857,2025-03-17T16:11:40.500,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: misc: ocxl: fix possible double free in ocxl_file_register_afu info_release() will be called in device_unregister() when info->dev's reference count is 0. So there is no need to call ocxl_afu_put() and kfree() again. Fix this by adding free_minor() and return to err_unregister error path.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-415""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.2"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""F6A5879C-3AE9-495A-9327-7D3101F7E358""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/252768d32e92c1214aeebb5fec0844ca479bcf5c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8fb674216835e1f0c143762696d645facebb4685"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/950cf957fe34d40d63dfa3bf3968210430b6491e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9e9087cf34ee69f4e95d146ac29385d6e367a97b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/de65c32ace9aa70d51facc61ba986607075e3a25"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ee89d8dee55ab4b3b8ad8b70866b2841ba334767"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49456,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:21.950,2025-02-26T07:01:21.950,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: bonding: fix missed rcu protection When removing the rcu_read_lock in bond_ethtool_get_ts_info() as discussed [1], I didn't notice it could be called via setsockopt, which doesn't hold rcu lock, as syzbot pointed: stack backtrace: CPU: 0 PID: 3599 Comm: syz-executor317 Not tainted 5.18.0-rc5-syzkaller-01392-g01f4685797a5 #0 Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011 Call Trace: <TASK> __dump_stack lib/dump_stack.c:88 [inline] dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106 bond_option_active_slave_get_rcu include/net/bonding.h:353 [inline] bond_ethtool_get_ts_info+0x32c/0x3a0 drivers/net/bonding/bond_main.c:5595 __ethtool_get_ts_info+0x173/0x240 net/ethtool/common.c:554 ethtool_get_phc_vclocks+0x99/0x110 net/ethtool/common.c:568 sock_timestamping_bind_phc net/core/sock.c:869 [inline] sock_set_timestamping+0x3a3/0x7e0 net/core/sock.c:916 sock_setsockopt+0x543/0x2ec0 net/core/sock.c:1221 __sys_setsockopt+0x55e/0x6a0 net/socket.c:2223 __do_sys_setsockopt net/socket.c:2238 [inline] __se_sys_setsockopt net/socket.c:2235 [inline] __x64_sys_setsockopt+0xba/0x150 net/socket.c:2235 do_syscall_x64 arch/x86/entry/common.c:50 [inline] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80 entry_SYSCALL_64_after_hwframe+0x44/0xae RIP: 0033:0x7f8902c8eb39 Fix it by adding rcu_read_lock and take a ref on the real_dev. Since dev_hold() and dev_put() can take NULL these days, we can skip checking if real_dev exist. [1] https://lore.kernel.org/netdev/27565.1642742439@famine/",,,"[{""url"":""https://git.kernel.org/stable/c/1b66a533c47d29b38af8e05fbb53b609a5ba3a4e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/85eed460681da71b359ed906bce4d800081db854"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9b80ccda233fa6c59de411bf889cc4d0e028f2c7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49457,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:22.043,2025-03-17T16:11:28.843,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ARM: versatile: Add missing of_node_put in dcscb_init The device_node pointer is returned by of_find_compatible_node with refcount incremented. We should use of_node_put() to avoid the refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""0D4D4067-974D-4560-8320-22FDA399E3F9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/23b44f9c649bbef10b45fa33080cd8b4166800ae"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2d7b23db35254b7d46e852967090c64cdccf24da"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3c6006faed9aba5144b33176d061031a9be66954"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/83c329b980bddbc8c6a3d287d91f2103a4d4a860"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a0fc05cd17617e63fc13ad0c01f3f0afd890d8ec"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bbdfb7d4f036118d36415a2575efa6f5246505ae"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d146e2a9864ade19914494de3fb520390b415d58"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d6de7b181c29cd4578ec139aafb5eac062abbe1b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fcd1999ba97445a12cc394f5f42ffd9116bf0185"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49458,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:22.133,2025-02-26T07:01:22.133,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/msm: don't free the IRQ if it was not requested As msm_drm_uninit() is called from the msm_drm_init() error path, additional care should be necessary as not to call the free_irq() for the IRQ that was not requested before (because an error occured earlier than the request_irq() call). This fixed the issue reported with the following backtrace: [ 8.571329] Trying to free already-free IRQ 187 [ 8.571339] WARNING: CPU: 0 PID: 76 at kernel/irq/manage.c:1895 free_irq+0x1e0/0x35c [ 8.588746] Modules linked in: pmic_glink pdr_interface fastrpc qrtr_smd snd_soc_hdmi_codec msm fsa4480 gpu_sched drm_dp_aux_bus qrtr i2c_qcom_geni crct10dif_ce qcom_stats qcom_q6v5_pas drm_display_helper gpi qcom_pil_info drm_kms_helper qcom_q6v5 qcom_sysmon qcom_common qcom_glink_smem qcom_rng mdt_loader qmi_helpers phy_qcom_qmp ufs_qcom typec qnoc_sm8350 socinfo rmtfs_mem fuse drm ipv6 [ 8.624154] CPU: 0 PID: 76 Comm: kworker/u16:2 Not tainted 5.18.0-rc5-next-20220506-00033-g6cee8cab6089-dirty #419 [ 8.624161] Hardware name: Qualcomm Technologies, Inc. SM8350 HDK (DT) [ 8.641496] Workqueue: events_unbound deferred_probe_work_func [ 8.647510] pstate: 604000c5 (nZCv daIF +PAN -UAO -TCO -DIT -SSBS BTYPE=--) [ 8.654681] pc : free_irq+0x1e0/0x35c [ 8.658454] lr : free_irq+0x1e0/0x35c [ 8.662228] sp : ffff800008ab3950 [ 8.665642] x29: ffff800008ab3950 x28: 0000000000000000 x27: ffff16350f56a700 [ 8.672994] x26: ffff1635025df080 x25: ffff16350251badc x24: ffff16350251bb90 [ 8.680343] x23: 0000000000000000 x22: 00000000000000bb x21: ffff16350e8f9800 [ 8.687690] x20: ffff16350251ba00 x19: ffff16350cbd5880 x18: ffffffffffffffff [ 8.695039] x17: 0000000000000000 x16: ffffa2dd12179434 x15: ffffa2dd1431d02d [ 8.702391] x14: 0000000000000000 x13: ffffa2dd1431d028 x12: 662d79646165726c [ 8.709740] x11: ffffa2dd13fd2438 x10: 000000000000000a x9 : 00000000000000bb [ 8.717111] x8 : ffffa2dd13fd23f0 x7 : ffff800008ab3750 x6 : 00000000fffff202 [ 8.724487] x5 : ffff16377e870a18 x4 : 00000000fffff202 x3 : ffff735a6ae1b000 [ 8.731851] x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff1635015f8000 [ 8.739217] Call trace: [ 8.741755] free_irq+0x1e0/0x35c [ 8.745198] msm_drm_uninit.isra.0+0x14c/0x294 [msm] [ 8.750548] msm_drm_bind+0x28c/0x5d0 [msm] [ 8.755081] try_to_bring_up_aggregate_device+0x164/0x1d0 [ 8.760657] __component_add+0xa0/0x170 [ 8.764626] component_add+0x14/0x20 [ 8.768337] dp_display_probe+0x2a4/0x464 [msm] [ 8.773242] platform_probe+0x68/0xe0 [ 8.777043] really_probe.part.0+0x9c/0x28c [ 8.781368] __driver_probe_device+0x98/0x144 [ 8.785871] driver_probe_device+0x40/0x140 [ 8.790191] __device_attach_driver+0xb4/0x120 [ 8.794788] bus_for_each_drv+0x78/0xd0 [ 8.798751] __device_attach+0xdc/0x184 [ 8.802713] device_initial_probe+0x14/0x20 [ 8.807031] bus_probe_device+0x9c/0xa4 [ 8.810991] deferred_probe_work_func+0x88/0xc0 [ 8.815667] process_one_work+0x1d0/0x320 [ 8.819809] worker_thread+0x14c/0x444 [ 8.823688] kthread+0x10c/0x110 [ 8.827036] ret_from_fork+0x10/0x20 Patchwork: https://patchwork.freedesktop.org/patch/485422/",,,"[{""url"":""https://git.kernel.org/stable/c/577e2a9dfc8fba7938aaf75db63fae7e328cc3cb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/59023c4fb1ab3de0fa001681650f662c253c7fd7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b288ec4439c1dad304c1862bf6b0be78d9b1b2b2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/beb81c13d020ceb7f8693e65464162e5f249218e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49459,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:22.230,2025-03-17T16:10:56.770,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: thermal/drivers/broadcom: Fix potential NULL dereference in sr_thermal_probe platform_get_resource() may return NULL, add proper check to avoid potential NULL dereferencing.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.1"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""84841EA3-1E58-4870-AFC5-2D2CBD3C027C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/61621e042c22b47d1eadee617bdd26835294b425"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/79098339ac2065f4b4352ef5921628970b6f47e6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b3461ccaa5d2588568d865faee285512ad448049"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e20d136ec7d6f309989c447638365840d3424c8e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ee9b6b02e8c140323ed46d6602d805ea735c7719"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ef1235c6514a58f274246cf4a2d5f4e40af539ce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49460,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:22.327,2025-02-26T07:01:22.327,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: PM / devfreq: rk3399_dmc: Disable edev on remove() Otherwise we hit an unablanced enable-count when unbinding the DFI device: [ 1279.659119] ------------[ cut here ]------------ [ 1279.659179] WARNING: CPU: 2 PID: 5638 at drivers/devfreq/devfreq-event.c:360 devfreq_event_remove_edev+0x84/0x8c ... [ 1279.659352] Hardware name: Google Kevin (DT) [ 1279.659363] pstate: 80400005 (Nzcv daif +PAN -UAO -TCO BTYPE=--) [ 1279.659371] pc : devfreq_event_remove_edev+0x84/0x8c [ 1279.659380] lr : devm_devfreq_event_release+0x1c/0x28 ... [ 1279.659571] Call trace: [ 1279.659582] devfreq_event_remove_edev+0x84/0x8c [ 1279.659590] devm_devfreq_event_release+0x1c/0x28 [ 1279.659602] release_nodes+0x1cc/0x244 [ 1279.659611] devres_release_all+0x44/0x60 [ 1279.659621] device_release_driver_internal+0x11c/0x1ac [ 1279.659629] device_driver_detach+0x20/0x2c [ 1279.659641] unbind_store+0x7c/0xb0 [ 1279.659650] drv_attr_store+0x2c/0x40 [ 1279.659663] sysfs_kf_write+0x44/0x58 [ 1279.659672] kernfs_fop_write_iter+0xf4/0x190 [ 1279.659684] vfs_write+0x2b0/0x2e4 [ 1279.659693] ksys_write+0x80/0xec [ 1279.659701] __arm64_sys_write+0x24/0x30 [ 1279.659714] el0_svc_common+0xf0/0x1d8 [ 1279.659724] do_el0_svc_compat+0x28/0x3c [ 1279.659738] el0_svc_compat+0x10/0x1c [ 1279.659746] el0_sync_compat_handler+0xa8/0xcc [ 1279.659758] el0_sync_compat+0x188/0x1c0 [ 1279.659768] ---[ end trace cec200e5094155b4 ]---",,,"[{""url"":""https://git.kernel.org/stable/c/2fccf9e6050e0e3b8b4cd275d41daf7f7fa22804"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/664736e2cc09e504ce58ec61164d029d1f2651bb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/86b091b6894c449d2734de7aa7d79ccb33ffd97d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a0180e324a9a63de8f770da300477b48cb4a53f1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a9c2b23a7ac6ab19214cad8cac8af8608a4d9cef"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cb1be1d4be18fe286ba5a67d928598378fd7fbe5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fb089b6f21de03a685dd31df3789bbb01c59f8e3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49461,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:22.423,2025-03-17T16:10:31.453,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: amt: fix memory leak for advertisement message When a gateway receives an advertisement message, it extracts relay information and then it should be freed. But the advertisement handler doesn't free it. So, memory leak would occur.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/19bb2d57eac86a368839a92117d8a10ab7183623"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e7322da399fb86a2072f008b56f7160afa1b2051"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fe29794c3585d039fefebaa2b5a4932a627ad4fd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49462,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:22.517,2025-03-17T16:10:17.393,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/msm/a6xx: Fix refcount leak in a6xx_gpu_init of_parse_phandle() returns a node pointer with refcount incremented, we should use of_node_put() on it when not need anymore. a6xx_gmu_init() passes the node to of_find_device_by_node() and of_dma_configure(), of_find_device_by_node() will takes its reference, of_dma_configure() doesn't need the node after usage. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.19"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""D57ED2A3-D50F-4DED-9126-E63D01D440FC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/06907a374f1b74f8f2fb30720dc6df81331e4fb5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/48e82ce8cdb19c20a5020fa446b286d6a147450c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/65ddbc0d26824e2a5d6154d01d8cf39344900213"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6832e36f156ea35a6ed74bca72727806116effdd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c56de483093d7ad0782327f95dda7da97bc4c315"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/edff4c1af831d0c02e654eed9da7d74174de49d5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49463,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:22.603,2025-03-17T16:10:05.883,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: thermal/drivers/imx_sc_thermal: Fix refcount leak in imx_sc_thermal_probe of_find_node_by_name() returns a node pointer with refcount incremented, we should use of_node_put() on it when done. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.7"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""18C96717-E9F3-4B1E-BDA0-C7C40BC13214""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/09700c504d8e63faffd2a2235074e8c5d130cb8f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0ec10303c10833c1bcba7a1bde2f297e494d5464"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3ade442ea5d3512a3c67984489ab4d8a6fb3b29f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8bbf522a2c51ef939d0e8835e236bfcd252193af"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ec0925b731697db7cab5944a3e55d2d58bb3d075"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49464,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:22.697,2025-03-24T19:58:17.130,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: erofs: fix buffer copy overflow of ztailpacking feature I got some KASAN report as below: [ 46.959738] ================================================================== [ 46.960430] BUG: KASAN: use-after-free in z_erofs_shifted_transform+0x2bd/0x370 [ 46.960430] Read of size 4074 at addr ffff8880300c2f8e by task fssum/188 ... [ 46.960430] Call Trace: [ 46.960430] <TASK> [ 46.960430] dump_stack_lvl+0x41/0x5e [ 46.960430] print_report.cold+0xb2/0x6b7 [ 46.960430] ? z_erofs_shifted_transform+0x2bd/0x370 [ 46.960430] kasan_report+0x8a/0x140 [ 46.960430] ? z_erofs_shifted_transform+0x2bd/0x370 [ 46.960430] kasan_check_range+0x14d/0x1d0 [ 46.960430] memcpy+0x20/0x60 [ 46.960430] z_erofs_shifted_transform+0x2bd/0x370 [ 46.960430] z_erofs_decompress_pcluster+0xaae/0x1080 The root cause is that the tail pcluster won't be a complete filesystem block anymore. So if ztailpacking is used, the second part of an uncompressed tail pcluster may not be ``rq->pageofs_out``.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""C48ED8B1-C02B-4764-9298-070E29EF1F88""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/4d53a625f29074e7b8236c2c0e0922edb7608df9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6b59e1907f58cf877c563dcf013159eb9f994b64"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/dcbe6803fffd387f72b48c2373b5f5ed12a5804b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49465,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:22.787,2025-03-24T19:58:31.760,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: blk-throttle: Set BIO_THROTTLED when bio has been throttled 1.In current process, all bio will set the BIO_THROTTLED flag after __blk_throtl_bio(). 2.If bio needs to be throttled, it will start the timer and stop submit bio directly. Bio will submit in blk_throtl_dispatch_work_fn() when the timer expires.But in the current process, if bio is throttled. The BIO_THROTTLED will be set to bio after timer start. If the bio has been completed, it may cause use-after-free blow. BUG: KASAN: use-after-free in blk_throtl_bio+0x12f0/0x2c70 Read of size 2 at addr ffff88801b8902d4 by task fio/26380 dump_stack+0x9b/0xce print_address_description.constprop.6+0x3e/0x60 kasan_report.cold.9+0x22/0x3a blk_throtl_bio+0x12f0/0x2c70 submit_bio_checks+0x701/0x1550 submit_bio_noacct+0x83/0xc80 submit_bio+0xa7/0x330 mpage_readahead+0x380/0x500 read_pages+0x1c1/0xbf0 page_cache_ra_unbounded+0x471/0x6f0 do_page_cache_ra+0xda/0x110 ondemand_readahead+0x442/0xae0 page_cache_async_ra+0x210/0x300 generic_file_buffered_read+0x4d9/0x2130 generic_file_read_iter+0x315/0x490 blkdev_read_iter+0x113/0x1b0 aio_read+0x2ad/0x450 io_submit_one+0xc8e/0x1d60 __se_sys_io_submit+0x125/0x350 do_syscall_64+0x2d/0x40 entry_SYSCALL_64_after_hwframe+0x44/0xa9 Allocated by task 26380: kasan_save_stack+0x19/0x40 __kasan_kmalloc.constprop.2+0xc1/0xd0 kmem_cache_alloc+0x146/0x440 mempool_alloc+0x125/0x2f0 bio_alloc_bioset+0x353/0x590 mpage_alloc+0x3b/0x240 do_mpage_readpage+0xddf/0x1ef0 mpage_readahead+0x264/0x500 read_pages+0x1c1/0xbf0 page_cache_ra_unbounded+0x471/0x6f0 do_page_cache_ra+0xda/0x110 ondemand_readahead+0x442/0xae0 page_cache_async_ra+0x210/0x300 generic_file_buffered_read+0x4d9/0x2130 generic_file_read_iter+0x315/0x490 blkdev_read_iter+0x113/0x1b0 aio_read+0x2ad/0x450 io_submit_one+0xc8e/0x1d60 __se_sys_io_submit+0x125/0x350 do_syscall_64+0x2d/0x40 entry_SYSCALL_64_after_hwframe+0x44/0xa9 Freed by task 0: kasan_save_stack+0x19/0x40 kasan_set_track+0x1c/0x30 kasan_set_free_info+0x1b/0x30 __kasan_slab_free+0x111/0x160 kmem_cache_free+0x94/0x460 mempool_free+0xd6/0x320 bio_free+0xe0/0x130 bio_put+0xab/0xe0 bio_endio+0x3a6/0x5d0 blk_update_request+0x590/0x1370 scsi_end_request+0x7d/0x400 scsi_io_completion+0x1aa/0xe50 scsi_softirq_done+0x11b/0x240 blk_mq_complete_request+0xd4/0x120 scsi_mq_done+0xf0/0x200 virtscsi_vq_done+0xbc/0x150 vring_interrupt+0x179/0x390 __handle_irq_event_percpu+0xf7/0x490 handle_irq_event_percpu+0x7b/0x160 handle_irq_event+0xcc/0x170 handle_edge_irq+0x215/0xb20 common_interrupt+0x60/0x120 asm_common_interrupt+0x1e/0x40 Fix this by move BIO_THROTTLED set into the queue_lock.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""B87A352E-884A-4C74-8E72-53AFC0D486B7""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0cfc8a0fb07cde61915e4a77c4794c47de3114a4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5a011f889b4832aa80c2a872a5aade5c48d2756f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/935fa666534d7b7185e8c6b0191cd06281be4290"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49466,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:22.880,2025-03-17T16:09:48.893,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: regulator: scmi: Fix refcount leak in scmi_regulator_probe of_find_node_by_name() returns a node pointer with refcount incremented, we should use of_node_put() on it when done. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/299a002161c7bfb72e99ba45e5b660aecc344ea0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4a59c763ef9b68c711dc2fd2ef4a6648da5480ee"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/68d6c8476fd4f448e70e0ab31ff972838ac41dae"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9ebbfa73d69909b7c737f599fd4ebd42318fc881"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49467,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:22.967,2025-03-17T16:09:17.333,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm: msm: fix possible memory leak in mdp5_crtc_cursor_set() drm_gem_object_lookup will call drm_gem_object_get inside. So cursor_bo needs to be put when msm_gem_get_and_pin_iova fails.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.0"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""82280E53-C2F6-44F3-BF58-0A8C4FD63F08""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/33546183c16c7b9650682dc610bedd732d9c6919"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/449374565f349d4233beec811d4286fdfe5de44b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/656aa3c51fc662064f17179b38ec3ce43af53bca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/947a844bb3ebff0f4736d244d792ce129f6700d7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d544880482a5558ec06393b1b3d5dc9275b7a32b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d63ffe3fb3f8327ca21cf91b6a14a2961bc629b4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f8cd192752a1f613b14eee77783c6f0aebb49691"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49468,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:23.063,2025-03-17T16:09:09.383,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: thermal/core: Fix memory leak in __thermal_cooling_device_register() I got memory leak as follows when doing fault injection test: unreferenced object 0xffff888010080000 (size 264312): comm ""182"", pid 102533, jiffies 4296434960 (age 10.100s) hex dump (first 32 bytes): 00 00 00 00 ad 4e ad de ff ff ff ff 00 00 00 00 .....N.......... ff ff ff ff ff ff ff ff 40 7f 1f b9 ff ff ff ff ........@....... backtrace: [<0000000038b2f4fc>] kmalloc_order_trace+0x1d/0x110 mm/slab_common.c:969 [<00000000ebcb8da5>] __kmalloc+0x373/0x420 include/linux/slab.h:510 [<0000000084137f13>] thermal_cooling_device_setup_sysfs+0x15d/0x2d0 include/linux/slab.h:586 [<00000000352b8755>] __thermal_cooling_device_register+0x332/0xa60 drivers/thermal/thermal_core.c:927 [<00000000fb9f331b>] devm_thermal_of_cooling_device_register+0x6b/0xf0 drivers/thermal/thermal_core.c:1041 [<000000009b8012d2>] max6650_probe.cold+0x557/0x6aa drivers/hwmon/max6650.c:211 [<00000000da0b7e04>] i2c_device_probe+0x472/0xac0 drivers/i2c/i2c-core-base.c:561 If device_register() fails, thermal_cooling_device_destroy_sysfs() need be called to free the memory allocated in thermal_cooling_device_setup_sysfs().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.14"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""78448A44-9104-4186-9509-BA75F47D6D60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/18530bedd221160823f63ccc20dd55c7a03edbcf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/21ccc58b671aea924f2481cf5c1cf0ebbfd3552d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3802171f0b5b8b831f4ade5c827547cb323a5bb2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/98a160e898c0f4a979af9de3ab48b4b1d42d1dbb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9abdf0c0184230f0cb5c6685aabf33dda89aa9fb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49469,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:23.157,2025-02-26T07:01:23.157,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: btrfs: fix anon_dev leak in create_subvol() When btrfs_qgroup_inherit(), btrfs_alloc_tree_block, or btrfs_insert_root() fail in create_subvol(), we return without freeing anon_dev. Reorganize the error handling in create_subvol() to fix this.",,,"[{""url"":""https://git.kernel.org/stable/c/2256e901f5bddc56e24089c96f27b77da932dfcc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7a875ad8706f0903a0e812e0dd701956ee9826ff"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d887b3de318834f9aa637ecf79c6bc66cba7c69a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49470,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:23.240,2025-03-24T19:58:47.470,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: Bluetooth: btmtksdio: fix use-after-free at btmtksdio_recv_event We should not access skb buffer data anymore after hci_recv_frame was called. [ 39.634809] BUG: KASAN: use-after-free in btmtksdio_recv_event+0x1b0 [ 39.634855] Read of size 1 at addr ffffff80cf28a60d by task kworker [ 39.634962] Call trace: [ 39.634974] dump_backtrace+0x0/0x3b8 [ 39.634999] show_stack+0x20/0x2c [ 39.635016] dump_stack_lvl+0x60/0x78 [ 39.635040] print_address_description+0x70/0x2f0 [ 39.635062] kasan_report+0x154/0x194 [ 39.635079] __asan_report_load1_noabort+0x44/0x50 [ 39.635099] btmtksdio_recv_event+0x1b0/0x1c4 [ 39.635129] btmtksdio_txrx_work+0x6cc/0xac4 [ 39.635157] process_one_work+0x560/0xc5c [ 39.635177] worker_thread+0x7ec/0xcc0 [ 39.635195] kthread+0x2d0/0x3d0 [ 39.635215] ret_from_fork+0x10/0x20 [ 39.635247] Allocated by task 0: [ 39.635260] (stack is not available) [ 39.635281] Freed by task 2392: [ 39.635295] kasan_save_stack+0x38/0x68 [ 39.635319] kasan_set_track+0x28/0x3c [ 39.635338] kasan_set_free_info+0x28/0x4c [ 39.635357] ____kasan_slab_free+0x104/0x150 [ 39.635374] __kasan_slab_free+0x18/0x28 [ 39.635391] slab_free_freelist_hook+0x114/0x248 [ 39.635410] kfree+0xf8/0x2b4 [ 39.635427] skb_free_head+0x58/0x98 [ 39.635447] skb_release_data+0x2f4/0x410 [ 39.635464] skb_release_all+0x50/0x60 [ 39.635481] kfree_skb+0xc8/0x25c [ 39.635498] hci_event_packet+0x894/0xca4 [bluetooth] [ 39.635721] hci_rx_work+0x1c8/0x68c [bluetooth] [ 39.635925] process_one_work+0x560/0xc5c [ 39.635951] worker_thread+0x7ec/0xcc0 [ 39.635970] kthread+0x2d0/0x3d0 [ 39.635990] ret_from_fork+0x10/0x20 [ 39.636021] The buggy address belongs to the object at ffffff80cf28a600 which belongs to the cache kmalloc-512 of size 512 [ 39.636039] The buggy address is located 13 bytes inside of 512-byte region [ffffff80cf28a600, ffffff80cf28a800)","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.2"",""versionEndExcluding"":""5.15.54"",""matchCriteriaId"":""2A62F037-652E-4FE9-83E5-34D00905DD46""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/01c6a899fa6be4f4cbf60c4f44f0f6691155415f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/02ba31e09a26e8cd4582ac8e6163d80284997727"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0fab6361c4ba17d1b43a991bef4238a3c1754d35"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b3cec8a42fcd11d05313c724f27e01b1db77522c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49471,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:23.333,2025-03-17T16:09:01.893,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: rtw89: cfo: check mac_id to avoid out-of-bounds Somehow, hardware reports incorrect mac_id and pollute memory. Check index before we access the array. UBSAN: array-index-out-of-bounds in rtw89/phy.c:2517:23 index 188 is out of range for type 's32 [64]' CPU: 1 PID: 51550 Comm: irq/35-rtw89_pc Tainted: G OE Call Trace: <IRQ> show_stack+0x52/0x58 dump_stack_lvl+0x4c/0x63 dump_stack+0x10/0x12 ubsan_epilogue+0x9/0x45 __ubsan_handle_out_of_bounds.cold+0x44/0x49 ? __alloc_skb+0x92/0x1d0 rtw89_phy_cfo_parse+0x44/0x7f [rtw89_core] rtw89_core_rx+0x261/0x871 [rtw89_core] ? __alloc_skb+0xee/0x1d0 rtw89_pci_napi_poll+0x3fa/0x4ea [rtw89_pci] __napi_poll+0x33/0x1a0 net_rx_action+0x126/0x260 ? __queue_work+0x217/0x4c0 __do_softirq+0xd9/0x315 ? disable_irq_nosync+0x10/0x10 do_softirq.part.0+0x6d/0x90 </IRQ> <TASK> __local_bh_enable_ip+0x62/0x70 rtw89_pci_interrupt_threadfn+0x182/0x1a6 [rtw89_pci] irq_thread_fn+0x28/0x60 irq_thread+0xc8/0x190 ? irq_thread_fn+0x60/0x60 kthread+0x16b/0x190 ? irq_thread_check_affinity+0xe0/0xe0 ? set_kthread_struct+0x50/0x50 ret_from_fork+0x22/0x30 </TASK>","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-129""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""B87A352E-884A-4C74-8E72-53AFC0D486B7""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/03ed236480aeec8c2fd327a1ea6d711364c495e3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/97df85871a5b187609d30fca6d85b912d9e02f29"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c32fafe68298bb599e825c298e1d0ba30186f0a5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49472,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:23.423,2025-03-17T16:08:54.433,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: phy: micrel: Allow probing without .driver_data Currently, if the .probe element is present in the phy_driver structure and the .driver_data is not, a NULL pointer dereference happens. Allow passing .probe without .driver_data by inserting NULL checks for priv->type.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""42074657-A7B6-4740-88B7-67B440018C1C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/143878e18001c5a61fcc7ae5c5240323753bb641"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1e5fbfc2a6f384e3195446c14bbd3bc298eb88c2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/660dfa033ccc9afb032015b6dc76e846bba42cfb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7dcb404662839a4ed1a9703658fee979eb894ca4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/91e720b32cba25fa58eaa4c88fe957009cffe9f3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/abb5594ae2ba7b82cce85917cc6337ec5d774837"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bd219273b4e004a3f853da72e111fc8f81357501"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f2ef6f7539c68c6bd6c32323d8845ee102b7c450"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49473,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:23.517,2025-03-17T16:08:31.777,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: ti: j721e-evm: Fix refcount leak in j721e_soc_probe_* of_parse_phandle() returns a node pointer with refcount incremented, we should use of_node_put() on it when not needed anymore. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.9"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""D72A0A66-110A-4144-A452-8FE84D5A41C8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2a3966b950b37a6f10c5f9caee15b4cdcf5a7413"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/510e879420b410d88c612aecc6ca15dc6fe77473"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/554df0f70bff1ace6d2df2fcaddbc9b7bd509de2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a34840c4eb3278a7c29c9c57a65ce7541c66f9f2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d748ff8fbb3a5296bddd586445dc692b079cbe3d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49474,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:23.613,2025-03-24T19:59:02.253,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: Bluetooth: fix dangling sco_conn and use-after-free in sco_sock_timeout Connecting the same socket twice consecutively in sco_sock_connect() could lead to a race condition where two sco_conn objects are created but only one is associated with the socket. If the socket is closed before the SCO connection is established, the timer associated with the dangling sco_conn object won't be canceled. As the sock object is being freed, the use-after-free problem happens when the timer callback function sco_sock_timeout() accesses the socket. Here's the call trace: dump_stack+0x107/0x163 ? refcount_inc+0x1c/ print_address_description.constprop.0+0x1c/0x47e ? refcount_inc+0x1c/0x7b kasan_report+0x13a/0x173 ? refcount_inc+0x1c/0x7b check_memory_region+0x132/0x139 refcount_inc+0x1c/0x7b sco_sock_timeout+0xb2/0x1ba process_one_work+0x739/0xbd1 ? cancel_delayed_work+0x13f/0x13f ? __raw_spin_lock_init+0xf0/0xf0 ? to_kthread+0x59/0x85 worker_thread+0x593/0x70e kthread+0x346/0x35a ? drain_workqueue+0x31a/0x31a ? kthread_bind+0x4b/0x4b ret_from_fork+0x1f/0x30","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.4.284"",""versionEndExcluding"":""4.5"",""matchCriteriaId"":""FA737495-79C0-44E9-9460-1B952324539D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.9.238"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""00BEF9C7-A165-4F9C-AB25-957923C10777""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.14.247"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""04E6F3D8-9994-4BD6-AC78-979F4425C845""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.19.207"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""D758AE59-1429-4455-9E8F-244E41414654""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4.146"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""10513E44-520A-4056-98BE-E9AAC07D6139""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.10.65"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""54DD05A3-4198-4FF8-9B37-4C8B5C038E64""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.13.17"",""versionEndExcluding"":""5.14"",""matchCriteriaId"":""0547757C-4CB4-47A0-A6C4-2C6CDEA08791""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14.4"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""FCE27D56-8FE9-4B2F-93FE-BCAB349E9E3F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/36c644c63bfcaee2d3a426f45e89a9cd09799318"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/390d82733a953c1fabf3de9c9618091a7a9c90a6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/537f619dea4e3fa8ed1f8f938abffe3615794bcc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/65d347cb39e2e6bd0c2a745ad7c928998ebb0162"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6f55fac0af3531cf60d11369454c41f5fc81ab3f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7aa1e7d15f8a5b65f67bacb100d8fc033b21efa2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7d61dbd7311ab978d8ddac1749a758de4de00374"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/99df16007f4bbf9abfc3478cb17d10f0d7f8906e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9de3dc09e56f8deacd2bdbf4cecb71e11a312405"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49475,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:23.713,2025-03-17T16:08:23.667,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: spi: spi-fsl-qspi: check return value after calling platform_get_resource_byname() It will cause null-ptr-deref if platform_get_resource_byname() returns NULL, we need check the return value.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.8"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""6EB90EB1-2051-4828-B7F9-DDA87FD914C2""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/10f537219629769498ecb8515e096be213224c24"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/33dda87d04598ac5d9a849218a373443f7d3de66"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/560dcbe1c7a78f597f2167371ebdbe2bca3d0735"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9d9c84825c3ec359b165c762a424cfdefe87fdd7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a2b331ac11e1cac56f5b7d367e9f3c5796deaaed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49476,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:23.800,2025-03-17T16:08:07.923,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mt76: mt7921: fix kernel crash at mt7921_pci_remove The crash log shown it is possible that mt7921_irq_handler is called while devm_free_irq is being handled so mt76_free_device need to be postponed until devm_free_irq is completed to solve the crash we free the mt76 device too early. [ 9299.339655] BUG: kernel NULL pointer dereference, address: 0000000000000008 [ 9299.339705] #PF: supervisor read access in kernel mode [ 9299.339735] #PF: error_code(0x0000) - not-present page [ 9299.339768] PGD 0 P4D 0 [ 9299.339786] Oops: 0000 [#1] SMP PTI [ 9299.339812] CPU: 1 PID: 1624 Comm: prepare-suspend Not tainted 5.15.14-1.fc32.qubes.x86_64 #1 [ 9299.339863] Hardware name: Xen HVM domU, BIOS 4.14.3 01/20/2022 [ 9299.339901] RIP: 0010:mt7921_irq_handler+0x1e/0x70 [mt7921e] [ 9299.340048] RSP: 0018:ffffa81b80c27cb0 EFLAGS: 00010082 [ 9299.340081] RAX: 0000000000000000 RBX: ffff98a4cb752020 RCX: ffffffffa96211c5 [ 9299.340123] RDX: 0000000000000000 RSI: 00000000000d4204 RDI: ffff98a4cb752020 [ 9299.340165] RBP: ffff98a4c28a62a4 R08: ffff98a4c37a96c0 R09: 0000000080150011 [ 9299.340207] R10: 0000000040000000 R11: 0000000000000000 R12: ffff98a4c4eaa080 [ 9299.340249] R13: ffff98a4c28a6360 R14: ffff98a4cb752020 R15: ffff98a4c28a6228 [ 9299.340297] FS: 00007260840d3740(0000) GS:ffff98a4ef700000(0000) knlGS:0000000000000000 [ 9299.340345] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 9299.340383] CR2: 0000000000000008 CR3: 0000000004c56001 CR4: 0000000000770ee0 [ 9299.340432] PKRU: 55555554 [ 9299.340449] Call Trace: [ 9299.340467] <TASK> [ 9299.340485] __free_irq+0x221/0x350 [ 9299.340527] free_irq+0x30/0x70 [ 9299.340553] devm_free_irq+0x55/0x80 [ 9299.340579] mt7921_pci_remove+0x2f/0x40 [mt7921e] [ 9299.340616] pci_device_remove+0x3b/0xa0 [ 9299.340651] __device_release_driver+0x17a/0x240 [ 9299.340686] device_driver_detach+0x3c/0xa0 [ 9299.340714] unbind_store+0x113/0x130 [ 9299.340740] kernfs_fop_write_iter+0x124/0x1b0 [ 9299.340775] new_sync_write+0x15c/0x1f0 [ 9299.340806] vfs_write+0x1d2/0x270 [ 9299.340831] ksys_write+0x67/0xe0 [ 9299.340857] do_syscall_64+0x3b/0x90 [ 9299.340887] entry_SYSCALL_64_after_hwframe+0x44/0xae","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.12"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""D037F2A7-2027-4A28-88EA-7BCC721762E9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/09693f5b636fb3f6dd56fd943226fc1bbc600b51"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/677e669973bf5460705bc65033445ea9f6615999"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ad483ed9dd5193a54293269c852a29051813b7bd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49477,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:23.920,2025-03-17T16:08:15.377,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: samsung: Fix refcount leak in aries_audio_probe of_parse_phandle() returns a node pointer with refcount incremented, we should use of_node_put() on it when done. If extcon_find_edev_by_node() fails, it doesn't call of_node_put() Calling of_node_put() after extcon_find_edev_by_node() to fix this.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.9"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""D72A0A66-110A-4144-A452-8FE84D5A41C8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/46d1b310a2d571811c4e08041ce287babb60b86a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/70130bde3457d28c02c76b6cacc5d40a72dd6e17"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/85d899f396622d3034643bf89615a78f9be7c91a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bf4a9b2467b775717d0e9034ad916888e19713a3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cacea459f95be22b3750f3b25b7a1c5897a68206"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49478,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:24.050,2025-03-17T16:07:58.500,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: media: pvrusb2: fix array-index-out-of-bounds in pvr2_i2c_core_init Syzbot reported that -1 is used as array index. The problem was in missing validation check. hdw->unit_number is initialized with -1 and then if init table walk fails this value remains unchanged. Since code blindly uses this member for array indexing adding sanity check is the easiest fix for that. hdw->workpoll initialization moved upper to prevent warning in __flush_work.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-129""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.18"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""F4C7C7D7-D7D3-4358-818B-49B2982DB29A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1310fc3538dcc375a2f46ef0a438512c2ca32827"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/24e807541e4a9263ed928e6ae3498de3ad43bd1e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2e004fe914b243db41fa96f9e583385f360ea58e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3309c2c574e13b21b44729f5bdbf21f60189b79a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4351bfe36aba9fa7dc9d68d498d25d41a0f45e67"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/471bec68457aaf981add77b4f590d65dd7da1059"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a3304766d9384886e6d3092c776273526947a2e9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a3660e06675bccec4bf149c7229ea1d491ba10d7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f99a8b1ec0eddc2931aeaa4f490277a15b39f511"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49479,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:24.153,2025-03-24T19:59:14.917,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mt76: fix tx status related use-after-free race on station removal There is a small race window where ongoing tx activity can lead to a skb getting added to the status tracking idr after that idr has already been cleaned up, which will keep the wcid linked in the status poll list. Fix this by only adding status skbs if the wcid pointer is still assigned in dev->wcid, which gets cleared early by mt76_sta_pre_rcu_remove","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/ddd426d72aca4054045a9bd3b80a4ce1d398f11f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ef7f9f894cfd0b2e471206409a529af4a26ddd55"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fcfe1b5e162bf473c1d47760962cec8523c00466"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49480,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:24.243,2025-03-17T16:53:29.907,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: imx-hdmi: Fix refcount leak in imx_hdmi_probe of_find_device_by_node() takes reference, we should use put_device() to release it. when devm_kzalloc() fails, it doesn't have a put_device(), it will cause refcount leak. Add missing put_device() to fix this.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/81b7edaabd44ba133006ad72056914eb36828d60"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8205a0114db10ec41bd2b748cdd7528632082eca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cf760e494ee5fa6bc2dc222f0098c741ad460801"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ed46731d8e86c8d65f5fc717671e1f1f6c3146d2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49481,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:24.340,2025-03-17T16:53:39.170,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: regulator: pfuze100: Fix refcount leak in pfuze_parse_regulators_dt of_node_get() returns a node with refcount incremented. Calling of_node_put() to drop the reference when not needed anymore.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.12"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""E11DA367-2A3E-4441-9F08-01AD64D12276""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0be5d9da5743b9825a95baec85a67500b2c1d362"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/49d785baeb91568332197be356d138e5e59c7ddb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/56ab0c01027492cd161c64148e1dc892c56887ad"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/671be14fc31374b1a10a3abd93db6a8480838fc9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6ca675f4abbc74bc991d154a1ecc8b384dc2aae4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/984cfef0675ed7398814e14af2c5323911723e1c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9f564e29a51210a49df3d925117777c157a17d6d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/afaa7b933ef00a2d3262f4d1252087613fb5c06d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b74c0dd9179d21b7260260e075d597b23970100c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49482,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:24.433,2025-03-17T16:53:17.220,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: mxs-saif: Fix refcount leak in mxs_saif_probe of_parse_phandle() returns a node pointer with refcount incremented, we should use of_node_put() on it when done.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.5"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""62D331F3-ED67-4548-B928-8B574F9A66DF""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/18b907ff0ae4bf20120aae1538f7156b9d08e3a7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/24491124406666bf0dcb9ee10c5575c6ce6a1730"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2a0da7641e1f17a744ac7b3f76471388c97b63dc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2be84f73785fa9ed6443e3c5b158730266f1c2ee"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/30d110ca703ce60162ec337aa564a3e4da30715f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4e2a1bcc51bdebed48176f6e88c150f175983f9c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c933829cbf3338b684869e6c4c8931abf5d68fbd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d42601e93fce7802bb8d70dd59b60cfeefa20469"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d855505851ee8ba666eb204149b49f906130dc17"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49483,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:24.527,2025-03-17T16:53:23.390,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/msm/disp/dpu1: avoid clearing hw interrupts if hw_intr is null during drm uninit If edp modeset init is failed due to panel being not ready and probe defers during drm bind, avoid clearing irqs and dereference hw_intr when hw_intr is null. BUG: Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000 Call trace: dpu_core_irq_uninstall+0x50/0xb0 dpu_irq_uninstall+0x18/0x24 msm_drm_uninit+0xd8/0x16c msm_drm_bind+0x580/0x5fc try_to_bring_up_master+0x168/0x1c0 __component_add+0xb4/0x178 component_add+0x1c/0x28 dp_display_probe+0x38c/0x400 platform_probe+0xb0/0xd0 really_probe+0xcc/0x2c8 __driver_probe_device+0xbc/0xe8 driver_probe_device+0x48/0xf0 __device_attach_driver+0xa0/0xc8 bus_for_each_drv+0x8c/0xd8 __device_attach+0xc4/0x150 device_initial_probe+0x1c/0x28 Changes in V2: - Update commit message and coreect fixes tag. Patchwork: https://patchwork.freedesktop.org/patch/484430/","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/01013ba9bbddc62f7d011163cebfd7ed06bb698b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a7ca30c3a8b2e8bda65f2b922d382ac056be8aa4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a800701429313149afde18d98821554fbfcb3164"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49484,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:24.620,2025-03-17T16:53:09.257,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mt76: mt7915: fix possible NULL pointer dereference in mt7915_mac_fill_rx_vector Fix possible NULL pointer dereference in mt7915_mac_fill_rx_vector routine if the chip does not support dbdc and the hw reports band_idx set to 1.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.12"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""9C4C8801-C8E1-453C-8A1F-730DACD96BE2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/268e8ef187eb8780d021b0e4f5ffa92dee5c4983"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/62fdc974894eec80d678523458cf99bbdb887e22"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49485,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:24.710,2025-03-17T16:53:00.020,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/v3d: Fix null pointer dereference of pointer perfmon In the unlikely event that pointer perfmon is null the WARN_ON return path occurs after the pointer has already been deferenced. Fix this by only dereferencing perfmon after it has been null checked.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""FA8369C7-8B08-4709-9CE6-2131C7668313""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1df8f8901babcc8c8eea2c067179e455b5c828fd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3b72deb784a7d4ae8519a5c584cd87c4b57aa6c8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4be045434923e549a50846a066a04b7b6c1d6d33"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ce7a1ecf3f9f1fccaf67295307614511d8e11b13"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49486,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:24.803,2025-03-17T16:52:52.160,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: fsl: Fix refcount leak in imx_sgtl5000_probe of_find_i2c_device_by_node() takes a reference, In error paths, we should call put_device() to drop the reference to aviod refount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.5"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""34C77A08-8734-47BC-8323-18672EA1F47C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/41cd312dfe980af869c3503b4d38e62ed20dd3b7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4bfbbfdb3d761323127a67d7d765abe2f77d7b21"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7f75e9f629ef54a0845b43889d8ab9dd6e280dd5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/922bccdb1796a9e7b989f2bc6d9ada7b499a4329"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/96fc3da6184af5687e153d420cd7dcdeefdd2f9a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e84aaf23ca82753d765bf84d05295d9d9c5fed29"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49487,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:24.897,2025-03-17T16:52:44.953,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mtd: rawnand: intel: fix possible null-ptr-deref in ebu_nand_probe() It will cause null-ptr-deref when using 'res', if platform_get_resource() returns NULL, so move using 'res' after devm_ioremap_resource() that will check it to avoid null-ptr-deref.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/daa5166450b447415aeeaac0199e445bae7bd0f2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ddf66aefd685fd46500b9917333e1b1e118276dc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e5b1e419cdb6dd8709eb05ed34039a3ded8e6003"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f8e262eb7575a4a2412f30f7a1b293875aceba80"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49488,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:24.990,2025-02-26T07:01:24.990,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/msm/mdp5: Return error code in mdp5_mixer_release when deadlock is detected There is a possibility for mdp5_get_global_state to return -EDEADLK when acquiring the modeset lock, but currently global_state in mdp5_mixer_release doesn't check for if an error is returned. To avoid a NULL dereference error, let's have mdp5_mixer_release check if an error is returned and propagate that error. Patchwork: https://patchwork.freedesktop.org/patch/485181/",,,"[{""url"":""https://git.kernel.org/stable/c/09bdeedc1fc53e64b8282e1de67752c69e43bdba"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1a5d1474026ea4f1a6f931075ca2adb884af39cf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/22d8424913b1348c6324916745fadaeea5273f0e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/46e5ce63924a96af452c4fc5ee0bb3b241e1b9f4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/47e393061049aff6818d1b9fdca7351411a23fc2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/883f1d52a57bf51e1d7a80c432345e2c6222477e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ca75f6f7c6f89365e40f10f641b15981b1f07c31"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49489,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:25.083,2025-03-24T19:37:33.013,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/msm/disp/dpu1: set vbif hw config to NULL to avoid use after memory free during pm runtime resume BUG: Unable to handle kernel paging request at virtual address 006b6b6b6b6b6be3 Call trace: dpu_vbif_init_memtypes+0x40/0xb8 dpu_runtime_resume+0xcc/0x1c0 pm_generic_runtime_resume+0x30/0x44 __genpd_runtime_resume+0x68/0x7c genpd_runtime_resume+0x134/0x258 __rpm_callback+0x98/0x138 rpm_callback+0x30/0x88 rpm_resume+0x36c/0x49c __pm_runtime_resume+0x80/0xb0 dpu_core_irq_uninstall+0x30/0xb0 dpu_irq_uninstall+0x18/0x24 msm_drm_uninit+0xd8/0x16c Patchwork: https://patchwork.freedesktop.org/patch/483255/ [DB: fixed Fixes tag]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.19"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""0C57A721-BD50-423B-B9FA-A5C6EE5FC587""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/134760263f6441741db0b2970e7face6b34b6d1c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5b0adf5cbf3b74721e4e4c4e0cadc91b8df8bcc2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/97ac682b6f7d36be5d934f86c9911066540a68f1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/aa4cb188988dc6f1b3f4917d4dbc452150a5d871"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ef10d0c68e8608848cd58fca2589685718426607"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ef4bdaac7cb5416f236613ed9337ff0ea8ee329b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fa5186b279ecf44b14fb435540d2065be91cb1ed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49490,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:25.183,2025-02-26T07:01:25.183,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/msm/mdp5: Return error code in mdp5_pipe_release when deadlock is detected mdp5_get_global_state runs the risk of hitting a -EDEADLK when acquiring the modeset lock, but currently mdp5_pipe_release doesn't check for if an error is returned. Because of this, there is a possibility of mdp5_pipe_release hitting a NULL dereference error. To avoid this, let's have mdp5_pipe_release check if mdp5_get_global_state returns an error and propogate that error. Changes since v1: - Separated declaration and initialization of *new_state to avoid compiler warning - Fixed some spelling mistakes in commit message Changes since v2: - Return 0 in case where hwpipe is NULL as this is considered normal behavior - Added 2nd patch in series to fix a similar NULL dereference issue in mdp5_mixer_release Patchwork: https://patchwork.freedesktop.org/patch/485179/",,,"[{""url"":""https://git.kernel.org/stable/c/04bef5f1ba8ea6d7c1c8f5f65e0395c62db59cb8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/19964dfb39bda4d7716a71009488f0668ecbcf52"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/33dc5aac46e0fad8f5eb193e5906ed0eb6b66ceb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/49dc28b4b2e28ef7564e355c91487996c1cbebd7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/776f5c58bfe16cf322d71eeed3c5dda1eeac7e6b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b2aa2c4efe93e2580d6a8774b04fe2b99756a322"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d59be579fa932c46b908f37509f319cbd4ca9a68"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49491,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:25.280,2025-03-17T16:52:36.297,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/rockchip: vop: fix possible null-ptr-deref in vop_bind() It will cause null-ptr-deref in resource_size(), if platform_get_resource() returns NULL, move calling resource_size() after devm_ioremap_resource() that will check 'res' to avoid null-ptr-deref.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.19"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""02D3C56C-D3FD-43B0-B6C3-0CA4A843E90D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/3451852312303d54a003c73bd0ae39cebb960bd5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/452922955df215a417c80d09dab72bbc667a1861"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6ff986e057bf28e2f7690dad410768b2270f9453"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/769c53bb6116d0eaec0f1fe4ec4b27a74465cad1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a9b4599665e437de8a1152799c34841b799a2e1c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b54926bd558d97c888c3d2d87886f3c159d3254a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ecfa52654d0c9c333c1fe1611f47105f6bce9591"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f8c242908ad15bbd604d3bcb54961b7d454c43f8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fcd6a886443730c39170b8383411e52118aec0a3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49492,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:25.410,2025-03-17T16:52:24.447,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: nvme-pci: fix a NULL pointer dereference in nvme_alloc_admin_tags In nvme_alloc_admin_tags, the admin_q can be set to an error (typically -ENOMEM) if the blk_mq_init_queue call fails to set up the queue, which is checked immediately after the call. However, when we return the error message up the stack, to nvme_reset_work the error takes us to nvme_remove_dead_ctrl() nvme_dev_disable() nvme_suspend_queue(&dev->queues[0]). Here, we only check that the admin_q is non-NULL, rather than not an error or NULL, and begin quiescing a queue that never existed, leading to bad / NULL pointer dereference.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""0D4D4067-974D-4560-8320-22FDA399E3F9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/54a4c1e47d1b2585e74920399455bd9abbfb2bd7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7a28556082d1fbcbc599baf1c24252dfc73efefc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8321b17789f614414206af07e17ce4751c95dc76"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8da2b7bdb47e94bbc4062a3978c708926bcb022c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/906c81dba8ee8057523859b5e1a2479e9fd34860"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9e649471b396fa0139d53919354ce1eace9b9a24"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/af98940dd33c9f9e1beb4f71c0a39260100e2a65"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/da42761181627e9bdc37d18368b827948a583929"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f76729662650cd7bc8f8194e057af381370349a7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49493,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:25.520,2025-09-03T17:15:32.150,Modified,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: rt5645: Fix errorenous cleanup order There is a logic error when removing rt5645 device as the function rt5645_i2c_remove() first cancel the &rt5645->jack_detect_work and delete the &rt5645->btn_check_timer latter. However, since the timer handler rt5645_btn_check_callback() will re-queue the jack_detect_work, this cleanup order is buggy. That is, once the del_timer_sync in rt5645_i2c_remove is concurrently run with the rt5645_btn_check_callback, the canceled jack_detect_work will be rescheduled again, leading to possible use-after-free. This patch fix the issue by placing the del_timer_sync function before the cancel_delayed_work_sync.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""0D4D4067-974D-4560-8320-22FDA399E3F9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/061a6159cea583f1155f67d1915917a6b9282662"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0941150100173d4eaf3fe08ff4b16740e7c3026f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1a5a3dfd9f172dcb115072f0aea5e27d3083c20e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/236d29c5857f02e0a53fdf15d3dce1536c4322ce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2def44d3aec59e38d2701c568d65540783f90f2f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/453f0920ffc1a28e28ddb9c3cd5562472b2895b0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/88c09e4812d72c3153afc8e5a45ecac2d0eae3ff"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/abe7554da62cb489712a54de69ef5665c250e564"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49494,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:25.613,2025-03-17T16:52:15.630,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mtd: rawnand: cadence: fix possible null-ptr-deref in cadence_nand_dt_probe() It will cause null-ptr-deref when using 'res', if platform_get_resource() returns NULL, so move using 'res' after devm_ioremap_resource() that will check it to avoid null-ptr-deref. And use devm_platform_get_and_ioremap_resource() to simplify code.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/069af5e27c1b0f7677ef76d8d3102e503ca4f80b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0cfee868b89ffa945f3d535ee5c985cb40c5a0f8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/13b60d3dc84b47307669edb66b633b18466014b4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/81f1ddffdc22ca5789e33b9d4712914e302090c1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a28ed09dafee20da51eb26452950839633afd824"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49495,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:25.707,2025-03-17T16:52:07.033,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/msm/hdmi: check return value after calling platform_get_resource_byname() It will cause null-ptr-deref if platform_get_resource_byname() returns NULL, we need check the return value. Patchwork: https://patchwork.freedesktop.org/patch/482992/","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.3"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""F1C012DB-8F29-4B2B-BD28-40BDE97C3304""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0978fcce91b90b561b8c82e7c492ba9fc8440eef"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2b3ed7547b1a052209da6c4ab886ffe0eed88c42"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4cd66a8016b872a153bf892fe4258cbc0dacf5b1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6369dda4a2209142ab819f01d3d2076d81e3ebdd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9cb1ee33efccb8b107ee04b7b3441820de3fd2da"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9f5495a5c51c1d11c6ffc13aa2befffec0c2651a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a36e506711548df923ceb7ec9f6001375be799a5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c1bfacf0daf25a5fc7d667399d6ff2dffda84cd8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d9cb951d11a4ace4de5c50b1178ad211de17079e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49496,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:25.800,2025-03-17T16:51:55.113,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: media: mediatek: vcodec: prevent kernel crash when rmmod mtk-vcodec-dec.ko If the driver support subdev mode, the parameter ""dev->pm.dev"" will be NULL in mtk_vcodec_dec_remove. Kernel will crash when try to rmmod mtk-vcodec-dec.ko. [ 4380.702726] pc : do_raw_spin_trylock+0x4/0x80 [ 4380.707075] lr : _raw_spin_lock_irq+0x90/0x14c [ 4380.711509] sp : ffff80000819bc10 [ 4380.714811] x29: ffff80000819bc10 x28: ffff3600c03e4000 x27: 0000000000000000 [ 4380.721934] x26: 0000000000000000 x25: 0000000000000000 x24: 0000000000000000 [ 4380.729057] x23: ffff3600c0f34930 x22: ffffd5e923549000 x21: 0000000000000220 [ 4380.736179] x20: 0000000000000208 x19: ffffd5e9213e8ebc x18: 0000000000000020 [ 4380.743298] x17: 0000002000000000 x16: ffffd5e9213e8e90 x15: 696c346f65646976 [ 4380.750420] x14: 0000000000000000 x13: 0000000000000001 x12: 0000000000000040 [ 4380.757542] x11: 0000000000000000 x10: 0000000000000000 x9 : 0000000000000000 [ 4380.764664] x8 : 0000000000000000 x7 : ffff3600c7273ae8 x6 : ffffd5e9213e8ebc [ 4380.771786] x5 : 0000000000000000 x4 : 0000000000000001 x3 : 0000000000000000 [ 4380.778908] x2 : 0000000000000000 x1 : ffff3600c03e4000 x0 : 0000000000000208 [ 4380.786031] Call trace: [ 4380.788465] do_raw_spin_trylock+0x4/0x80 [ 4380.792462] __pm_runtime_disable+0x2c/0x1b0 [ 4380.796723] mtk_vcodec_dec_remove+0x5c/0xa0 [mtk_vcodec_dec] [ 4380.802466] platform_remove+0x2c/0x60 [ 4380.806204] __device_release_driver+0x194/0x250 [ 4380.810810] driver_detach+0xc8/0x15c [ 4380.814462] bus_remove_driver+0x5c/0xb0 [ 4380.818375] driver_unregister+0x34/0x64 [ 4380.822288] platform_driver_unregister+0x18/0x24 [ 4380.826979] mtk_vcodec_dec_driver_exit+0x1c/0x888 [mtk_vcodec_dec] [ 4380.833240] __arm64_sys_delete_module+0x190/0x224 [ 4380.838020] invoke_syscall+0x48/0x114 [ 4380.841760] el0_svc_common.constprop.0+0x60/0x11c [ 4380.846540] do_el0_svc+0x28/0x90 [ 4380.849844] el0_svc+0x4c/0x100 [ 4380.852975] el0t_64_sync_handler+0xec/0xf0 [ 4380.857148] el0t_64_sync+0x190/0x194 [ 4380.860801] Code: 94431515 17ffffca d503201f d503245f (b9400004)","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""3108C4DF-1578-4A9A-ADC7-1128DE921D69""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1fa37b00dc55a061a3eb82e378849862b4aeca9d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c10c0086db688c95bb4e0e378e523818dff1551d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49497,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:25.893,2025-03-17T16:51:46.490,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: remove two BUG() from skb_checksum_help() I have a syzbot report that managed to get a crash in skb_checksum_help() If syzbot can trigger these BUG(), it makes sense to replace them with more friendly WARN_ON_ONCE() since skb_checksum_help() can instead return an error code. Note that syzbot will still crash there, until real bug is fixed.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-noinfo""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""814C88C6-C31D-462A-BBBE-BC83E102E84C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/312c43e98ed190bd8fd7a71a0addf9539d5b8ab1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6320ae1b5876c30bf98203b6a5abe8b5c45e6a04"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b1320c9a4d30ff54b824a8ad6036e0b5fb4c5e73"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d5281245f3502e960cb6b89348767b935379cee3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d7ea0d9df2a6265b2b180d17ebc64b38105968fc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49498,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:25.987,2025-03-17T16:54:23.170,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ALSA: pcm: Check for null pointer of pointer substream before dereferencing it Pointer substream is being dereferenced on the assignment of pointer card before substream is being null checked with the macro PCM_RUNTIME_CHECK. Although PCM_RUNTIME_CHECK calls BUG_ON, it still is useful to perform the the pointer check before card is assigned.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.6"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""A15DF1FA-9BBB-4490-9023-56F79F29AC6E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/011b559be832194f992f73d6c0d5485f5925a10b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1f2e28857be1e5c7db39bbc221332215fc5467e3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7784d22f81a29df2ec57ca90d54f93a35cbcd1a2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b2421a196cb0911ea95aec1050a0b830464c8fa6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b41ef7ad9238c22aa2e142f5ce4ce1a1a0d48123"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f2c68c52898f623fe84518da4606538d193b0cca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49499,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:26.077,2025-03-17T16:51:32.397,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/msm: Fix null pointer dereferences without iommu Check if 'aspace' is set before using it as it will stay null without IOMMU, such as on msm8974.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/36a1d1bda77e1851bddfa9cf4e8ada94476dbaff"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f09937e80f9bc792965476c9a528f26c8fdc9179"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49500,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:26.163,2025-02-26T07:01:26.163,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: wl1251: dynamically allocate memory used for DMA With introduction of vmap'ed stacks, stack parameters can no longer be used for DMA and now leads to kernel panic. It happens at several places for the wl1251 (e.g. when accessed through SDIO) making it unuseable on e.g. the OpenPandora. We solve this by allocating temporary buffers or use wl1251_read32(). Tested on v5.18-rc5 with OpenPandora.",,,"[{""url"":""https://git.kernel.org/stable/c/454744754cbf2c21b3fc7344e46e10bee2768094"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/da03bbfbf5acd1ab0b074617e865ad1e8a5779ef"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49501,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:26.257,2025-03-24T19:43:13.750,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: usbnet: Run unregister_netdev() before unbind() again Commit 2c9d6c2b871d (""usbnet: run unbind() before unregister_netdev()"") sought to fix a use-after-free on disconnect of USB Ethernet adapters. It turns out that a different fix is necessary to address the issue: https://lore.kernel.org/netdev/18b3541e5372bc9b9fc733d422f4e698c089077c.1650177997.git.lukas@wunner.de/ So the commit was not necessary. The commit made binding and unbinding of USB Ethernet asymmetrical: Before, usbnet_probe() first invoked the ->bind() callback and then register_netdev(). usbnet_disconnect() mirrored that by first invoking unregister_netdev() and then ->unbind(). Since the commit, the order in usbnet_disconnect() is reversed and no longer mirrors usbnet_probe(). One consequence is that a PHY disconnected (and stopped) in ->unbind() is afterwards stopped once more by unregister_netdev() as it closes the netdev before unregistering. That necessitates a contortion in ->stop() because the PHY may only be stopped if it hasn't already been disconnected. Reverting the commit allows making the call to phy_stop() unconditional in ->stop().","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""40E62665-0BA6-440F-83E8-6F8EC2D3C9DF""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/6d5deb242874d924beccf7eb3cef04c1c3b0da79"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/969a1b3ea3cb7d58a16fe12fd1b04bfc0ea40509"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d1408f6b4dd78fb1b9e26bcf64477984e5f85409"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fbda837107f9bd4ec658d2aa88c6856dba606f06"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49502,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:26.353,2025-03-17T16:51:25.637,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: media: rga: fix possible memory leak in rga_probe rga->m2m_dev needs to be freed when rga_probe fails.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""814C88C6-C31D-462A-BBBE-BC83E102E84C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1cdc768468c25d6b10ab83ec1efd4a8554532d69"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8ddc89437ccefa18279918c19a61fd81527f40b9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a71eb6025305192e646040cd76ccacb5bd48a1b5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b7bbca4d08471bc8404a946bab1aa017dd05199b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/eeb4819e94aa69767b9e5591e70c63e8b7c5786a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49503,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:26.447,2025-02-26T07:01:26.447,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ath9k_htc: fix potential out of bounds access with invalid rxstatus->rs_keyix The ""rxstatus->rs_keyix"" eventually gets passed to test_bit() so we need to ensure that it is within the bitmap. drivers/net/wireless/ath/ath9k/common.c:46 ath9k_cmn_rx_accept() error: passing untrusted data 'rx_stats->rs_keyix' to 'test_bit()'",,,"[{""url"":""https://git.kernel.org/stable/c/0bcb528402cd5e1a6e1833e956fd58a12d509e8e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2326d398ccd41ba6d93b8346532dfa432ab00fee"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2dc509305cf956381532792cb8dceef2b1504765"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3dad3fed5672828c7fb0465cb66a3d9a70952fa6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/461e4c1f199076275f16bf6f3d3e42c6b6c79f33"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4bdcf32c965c27f55ccc4ee71c1927131115b0bb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7f6defe0fabc79f29603c6fa3c80e4fe0456a3e9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a048e0c3caa852397b7b50d4c82a0415c05f7ac3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/eda518db7db16c360bc84379d90675650daa3048"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49504,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:26.543,2025-02-26T07:01:26.543,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: lpfc: Inhibit aborts if external loopback plug is inserted After running a short external loopback test, when the external loopback is removed and a normal cable inserted that is directly connected to a target device, the system oops in the llpfc_set_rrq_active() routine. When the loopback was inserted an FLOGI was transmit. As we're looped back, we receive the FLOGI request. The FLOGI is ABTS'd as we recognize the same wppn thus understand it's a loopback. However, as the ABTS sends address information the port is not set to (fffffe), the ABTS is dropped on the wire. A short 1 frame loopback test is run and completes before the ABTS times out. The looback is unplugged and the new cable plugged in, and the an FLOGI to the new device occurs and completes. Due to a mixup in ref counting the completion of the new FLOGI releases the fabric ndlp. Then the original ABTS completes and references the released ndlp generating the oops. Correct by no-op'ing the ABTS when in loopback mode (it will be dropped anyway). Added a flag to track the mode to recognize when it should be no-op'd.",,,"[{""url"":""https://git.kernel.org/stable/c/a1516930cb605caee3bc7b4f3b7994b88c0b8505"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ead76d4c09b89f4c8d632648026a476a5a34fde8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49505,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:26.633,2025-03-24T19:43:27.950,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: NFC: NULL out the dev->rfkill to prevent UAF Commit 3e3b5dfcd16a (""NFC: reorder the logic in nfc_{un,}register_device"") assumes the device_is_registered() in function nfc_dev_up() will help to check when the rfkill is unregistered. However, this check only take effect when device_del(&dev->dev) is done in nfc_unregister_device(). Hence, the rfkill object is still possible be dereferenced. The crash trace in latest kernel (5.18-rc2): [ 68.760105] ================================================================== [ 68.760330] BUG: KASAN: use-after-free in __lock_acquire+0x3ec1/0x6750 [ 68.760756] Read of size 8 at addr ffff888009c93018 by task fuzz/313 [ 68.760756] [ 68.760756] CPU: 0 PID: 313 Comm: fuzz Not tainted 5.18.0-rc2 #4 [ 68.760756] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014 [ 68.760756] Call Trace: [ 68.760756] <TASK> [ 68.760756] dump_stack_lvl+0x57/0x7d [ 68.760756] print_report.cold+0x5e/0x5db [ 68.760756] ? __lock_acquire+0x3ec1/0x6750 [ 68.760756] kasan_report+0xbe/0x1c0 [ 68.760756] ? __lock_acquire+0x3ec1/0x6750 [ 68.760756] __lock_acquire+0x3ec1/0x6750 [ 68.760756] ? lockdep_hardirqs_on_prepare+0x410/0x410 [ 68.760756] ? register_lock_class+0x18d0/0x18d0 [ 68.760756] lock_acquire+0x1ac/0x4f0 [ 68.760756] ? rfkill_blocked+0xe/0x60 [ 68.760756] ? lockdep_hardirqs_on_prepare+0x410/0x410 [ 68.760756] ? mutex_lock_io_nested+0x12c0/0x12c0 [ 68.760756] ? nla_get_range_signed+0x540/0x540 [ 68.760756] ? _raw_spin_lock_irqsave+0x4e/0x50 [ 68.760756] _raw_spin_lock_irqsave+0x39/0x50 [ 68.760756] ? rfkill_blocked+0xe/0x60 [ 68.760756] rfkill_blocked+0xe/0x60 [ 68.760756] nfc_dev_up+0x84/0x260 [ 68.760756] nfc_genl_dev_up+0x90/0xe0 [ 68.760756] genl_family_rcv_msg_doit+0x1f4/0x2f0 [ 68.760756] ? genl_family_rcv_msg_attrs_parse.constprop.0+0x230/0x230 [ 68.760756] ? security_capable+0x51/0x90 [ 68.760756] genl_rcv_msg+0x280/0x500 [ 68.760756] ? genl_get_cmd+0x3c0/0x3c0 [ 68.760756] ? lock_acquire+0x1ac/0x4f0 [ 68.760756] ? nfc_genl_dev_down+0xe0/0xe0 [ 68.760756] ? lockdep_hardirqs_on_prepare+0x410/0x410 [ 68.760756] netlink_rcv_skb+0x11b/0x340 [ 68.760756] ? genl_get_cmd+0x3c0/0x3c0 [ 68.760756] ? netlink_ack+0x9c0/0x9c0 [ 68.760756] ? netlink_deliver_tap+0x136/0xb00 [ 68.760756] genl_rcv+0x1f/0x30 [ 68.760756] netlink_unicast+0x430/0x710 [ 68.760756] ? memset+0x20/0x40 [ 68.760756] ? netlink_attachskb+0x740/0x740 [ 68.760756] ? __build_skb_around+0x1f4/0x2a0 [ 68.760756] netlink_sendmsg+0x75d/0xc00 [ 68.760756] ? netlink_unicast+0x710/0x710 [ 68.760756] ? netlink_unicast+0x710/0x710 [ 68.760756] sock_sendmsg+0xdf/0x110 [ 68.760756] __sys_sendto+0x19e/0x270 [ 68.760756] ? __ia32_sys_getpeername+0xa0/0xa0 [ 68.760756] ? fd_install+0x178/0x4c0 [ 68.760756] ? fd_install+0x195/0x4c0 [ 68.760756] ? kernel_fpu_begin_mask+0x1c0/0x1c0 [ 68.760756] __x64_sys_sendto+0xd8/0x1b0 [ 68.760756] ? lockdep_hardirqs_on+0xbf/0x130 [ 68.760756] ? syscall_enter_from_user_mode+0x1d/0x50 [ 68.760756] do_syscall_64+0x3b/0x90 [ 68.760756] entry_SYSCALL_64_after_hwframe+0x44/0xae [ 68.760756] RIP: 0033:0x7f67fb50e6b3 ... [ 68.760756] RSP: 002b:00007f67fa91fe90 EFLAGS: 00000293 ORIG_RAX: 000000000000002c [ 68.760756] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f67fb50e6b3 [ 68.760756] RDX: 000000000000001c RSI: 0000559354603090 RDI: 0000000000000003 [ 68.760756] RBP: 00007f67fa91ff00 R08: 00007f67fa91fedc R09: 000000000000000c [ 68.760756] R10: 0000000000000000 R11: 0000000000000293 R12: 00007ffe824d496e [ 68.760756] R13: 00007ffe824d496f R14: 00007f67fa120000 R15: 0000000000000003 [ 68.760756] </TASK> [ 68.760756] [ 68.760756] Allocated by task 279: [ 68.760756] kasan_save_stack+0x1e/0x40 [ ---truncated---","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.4.293"",""versionEndExcluding"":""4.5"",""matchCriteriaId"":""36838255-8956-4DF8-A38C-0C0EDB3F6963""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.9.291"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""829F46D8-631F-4F97-A6E7-7734E1D65F3A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.14.256"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""830EB5B6-2465-457A-9F63-05EB077F256B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.19.218"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""16B32AAA-7E01-4A60-B601-0A89B1802C5E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4.162"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""5F9E25AB-33E2-479F-B514-3001582F65F3""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.10.82"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""5CD86C26-8A20-4602-A203-21DDB5067369""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15.5"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""FEFC17AA-0FD1-4E6D-8394-40999588B555""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1632be63862f183cd5cf1cc094e698e6ec005dfd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1b0e81416a24d6e9b8c2341e22e8bf48f8b8bfc9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2a1b5110c95e4d49c8c3906270dfcde680a5a7be"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4a68938f43b7c2663e4c90bb9bbe29ac8b9a42a0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4f5d71930f41be78557f9714393179025baacd65"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6abfaca8711803d0d7cc8c0fac1070a88509d463"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a8e03bcad52dc9afabf650fdbad84f739cec9efa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f81270125b50532624400063281e6611ecd61ddf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fbf9c4c714d3cdeb98b6a18e4d057f931cad1d81"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49506,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:26.737,2025-02-26T07:01:26.737,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/mediatek: Add vblank register/unregister callback functions We encountered a kernel panic issue that callback data will be NULL when it's using in ovl irq handler. There is a timing issue between mtk_disp_ovl_irq_handler() and mtk_ovl_disable_vblank(). To resolve this issue, we use the flow to register/unregister vblank cb: - Register callback function and callback data when crtc creates. - Unregister callback function and callback data when crtc destroies. With this solution, we can assure callback data will not be NULL when vblank is disable.",,,"[{""url"":""https://git.kernel.org/stable/c/3a4027b5971fe2a94e32754f007d9d3c12c68ad1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8a265d9838bc3c63579002d55c2b2c655c4f8f26"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8a2dbdeccef6de47565638abdf3c25f41cdffc37"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b74d921b900b6ce38c6247c0a1c86be9f3746493"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49507,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:26.830,2025-03-17T16:51:16.030,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: regulator: da9121: Fix uninit-value in da9121_assign_chip_model() KASAN report slab-out-of-bounds in __regmap_init as follows: BUG: KASAN: slab-out-of-bounds in __regmap_init drivers/base/regmap/regmap.c:841 Read of size 1 at addr ffff88803678cdf1 by task xrun/9137 CPU: 0 PID: 9137 Comm: xrun Tainted: G W 5.18.0-rc2 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014 Call Trace: <TASK> dump_stack_lvl+0xe8/0x15a lib/dump_stack.c:88 print_report.cold+0xcd/0x69b mm/kasan/report.c:313 kasan_report+0x8e/0xc0 mm/kasan/report.c:491 __regmap_init+0x4540/0x4ba0 drivers/base/regmap/regmap.c:841 __devm_regmap_init+0x7a/0x100 drivers/base/regmap/regmap.c:1266 __devm_regmap_init_i2c+0x65/0x80 drivers/base/regmap/regmap-i2c.c:394 da9121_i2c_probe+0x386/0x6d1 drivers/regulator/da9121-regulator.c:1039 i2c_device_probe+0x959/0xac0 drivers/i2c/i2c-core-base.c:563 This happend when da9121 device is probe by da9121_i2c_id, but with invalid dts. Thus, chip->subvariant_id is set to -EINVAL, and later da9121_assign_chip_model() will access 'regmap' without init it. Fix it by return -EINVAL from da9121_assign_chip_model() if 'chip->subvariant_id' is invalid.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-908""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/60f21eda69f1b5727a97d2077da766eb27fcc21f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7da64c7c82c9b29b628a62c88a8c2fb06990563d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bab76514aca36bc513224525d5598da676938218"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/be96baa0c79588084e0d7a4fa21c574cec9a57f4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49508,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:26.923,2025-03-17T16:50:15.920,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: HID: elan: Fix potential double free in elan_input_configured 'input' is a managed resource allocated with devm_input_allocate_device(), so there is no need to call input_free_device() explicitly or there will be a double free. According to the doc of devm_input_allocate_device(): * Managed input devices do not need to be explicitly unregistered or * freed as it will be done automatically when owner device unbinds from * its driver (or binding fails).","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-415""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.17"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""1D618A3C-AEC5-4520-BBDB-002AC8CA3FED""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1af20714fedad238362571620be0bd690ded05b6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/24f9dfdaece9bd75bb8dbfdba83eddeefdf7dc47"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5291451851feeb66fd4bf0826710f482f3b1ab38"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6d0726725c7c560495f5ff364862a2cefea542e3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8bb1716507ebf12d50bbf181764481de3b6bc7fd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c92ec22a991778a096342cf1a917ae36c5c86a90"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f1d4f19a796551edc6679a681ea1756b8c578c08"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49509,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:27.017,2025-02-26T07:01:27.017,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: media: i2c: max9286: fix kernel oops when removing module When removing the max9286 module we get a kernel oops: Unable to handle kernel paging request at virtual address 000000aa00000094 Mem abort info: ESR = 0x96000004 EC = 0x25: DABT (current EL), IL = 32 bits SET = 0, FnV = 0 EA = 0, S1PTW = 0 FSC = 0x04: level 0 translation fault Data abort info: ISV = 0, ISS = 0x00000004 CM = 0, WnR = 0 user pgtable: 4k pages, 48-bit VAs, pgdp=0000000880d85000 [000000aa00000094] pgd=0000000000000000, p4d=0000000000000000 Internal error: Oops: 96000004 [#1] PREEMPT SMP Modules linked in: fsl_jr_uio caam_jr rng_core libdes caamkeyblob_desc caamhash_desc caamalg_desc crypto_engine max9271 authenc crct10dif_ce mxc_jpeg_encdec CPU: 2 PID: 713 Comm: rmmod Tainted: G C 5.15.5-00057-gaebcd29c8ed7-dirty #5 Hardware name: Freescale i.MX8QXP MEK (DT) pstate: 80000005 (Nzcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--) pc : i2c_mux_del_adapters+0x24/0xf0 lr : max9286_remove+0x28/0xd0 [max9286] sp : ffff800013a9bbf0 x29: ffff800013a9bbf0 x28: ffff00080b6da940 x27: 0000000000000000 x26: 0000000000000000 x25: 0000000000000000 x24: 0000000000000000 x23: ffff000801a5b970 x22: ffff0008048b0890 x21: ffff800009297000 x20: ffff0008048b0f70 x19: 000000aa00000064 x18: 0000000000000000 x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000 x14: 0000000000000014 x13: 0000000000000000 x12: ffff000802da49e8 x11: ffff000802051918 x10: ffff000802da4920 x9 : ffff000800030098 x8 : 0101010101010101 x7 : 7f7f7f7f7f7f7f7f x6 : fefefeff6364626d x5 : 8080808000000000 x4 : 0000000000000000 x3 : 0000000000000000 x2 : ffffffffffffffff x1 : ffff00080b6da940 x0 : 0000000000000000 Call trace: i2c_mux_del_adapters+0x24/0xf0 max9286_remove+0x28/0xd0 [max9286] i2c_device_remove+0x40/0x110 __device_release_driver+0x188/0x234 driver_detach+0xc4/0x150 bus_remove_driver+0x60/0xe0 driver_unregister+0x34/0x64 i2c_del_driver+0x58/0xa0 max9286_i2c_driver_exit+0x1c/0x490 [max9286] __arm64_sys_delete_module+0x194/0x260 invoke_syscall+0x48/0x114 el0_svc_common.constprop.0+0xd4/0xfc do_el0_svc+0x2c/0x94 el0_svc+0x28/0x80 el0t_64_sync_handler+0xa8/0x130 el0t_64_sync+0x1a0/0x1a4 The Oops happens because the I2C client data does not point to max9286_priv anymore but to v4l2_subdev. The change happened in max9286_init() which calls v4l2_i2c_subdev_init() later on... Besides fixing the max9286_remove() function, remove the call to i2c_set_clientdata() in max9286_probe(), to avoid confusion, and make the necessary changes to max9286_init() so that it doesn't have to use i2c_get_clientdata() in order to fetch the pointer to priv.",,,"[{""url"":""https://git.kernel.org/stable/c/365ab7ebc24eebb42b9e020aeb440d51af8960cd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/579c77595dbbdfe4f2edf335899f86ac51eca4e9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9dd783274c89c21a038d967b52a858a297e767f8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a4ec75df70575cdf33d9638c7844e729bfe6ce24"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49510,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:27.107,2025-03-17T16:49:16.783,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/omap: fix NULL but dereferenced coccicheck error Fix the following coccicheck warning: ./drivers/gpu/drm/omapdrm/omap_overlay.c:89:22-25: ERROR: r_ovl is NULL but dereferenced. Here should be ovl->idx rather than r_ovl->idx.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""C48ED8B1-C02B-4764-9298-070E29EF1F88""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/08d9a75eab594ca508a440db7c73064498d26687"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8f2a3970c969d0d8d7289a4c65edcedafc16fd92"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d2507be660310bb9bcca918f81f49b8bba07e462"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49511,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:27.193,2025-02-26T07:01:27.193,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: fbdev: defio: fix the pagelist corruption Easily hit the below list corruption: == list_add corruption. prev->next should be next (ffffffffc0ceb090), but was ffffec604507edc8. (prev=ffffec604507edc8). WARNING: CPU: 65 PID: 3959 at lib/list_debug.c:26 __list_add_valid+0x53/0x80 CPU: 65 PID: 3959 Comm: fbdev Tainted: G U RIP: 0010:__list_add_valid+0x53/0x80 Call Trace: <TASK> fb_deferred_io_mkwrite+0xea/0x150 do_page_mkwrite+0x57/0xc0 do_wp_page+0x278/0x2f0 __handle_mm_fault+0xdc2/0x1590 handle_mm_fault+0xdd/0x2c0 do_user_addr_fault+0x1d3/0x650 exc_page_fault+0x77/0x180 ? asm_exc_page_fault+0x8/0x30 asm_exc_page_fault+0x1e/0x30 RIP: 0033:0x7fd98fc8fad1 == Figure out the race happens when one process is adding &page->lru into the pagelist tail in fb_deferred_io_mkwrite(), another process is re-initializing the same &page->lru in fb_deferred_io_fault(), which is not protected by the lock. This fix is to init all the page lists one time during initialization, it not only fixes the list corruption, but also avoids INIT_LIST_HEAD() redundantly. V2: change ""int i"" to ""unsigned int i"" (Geert Uytterhoeven)",,,"[{""url"":""https://git.kernel.org/stable/c/6a9ae2fe887042f76fd3d334349e64e8ab3c55a2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/856082f021a28221db2c32bd0531614a8382be67"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e79b2b2aadeffe1db54a6b569b9b621575c3eb07"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49512,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:27.287,2025-02-26T07:01:27.287,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: mtd: rawnand: denali: Use managed device resources All of the resources used by this driver has managed interfaces, so use them. Otherwise we will get the following splat: [ 4.472703] denali-nand-pci 0000:00:05.0: timeout while waiting for irq 0x1000 [ 4.474071] denali-nand-pci: probe of 0000:00:05.0 failed with error -5 [ 4.473538] nand: No NAND device found [ 4.474068] BUG: unable to handle page fault for address: ffffc90005000410 [ 4.475169] #PF: supervisor write access in kernel mode [ 4.475579] #PF: error_code(0x0002) - not-present page [ 4.478362] RIP: 0010:iowrite32+0x9/0x50 [ 4.486068] Call Trace: [ 4.486269] <IRQ> [ 4.486443] denali_isr+0x15b/0x300 [denali] [ 4.486788] ? denali_direct_write+0x50/0x50 [denali] [ 4.487189] __handle_irq_event_percpu+0x161/0x3b0 [ 4.487571] handle_irq_event+0x7d/0x1b0 [ 4.487884] handle_fasteoi_irq+0x2b0/0x770 [ 4.488219] __common_interrupt+0xc8/0x1b0 [ 4.488549] common_interrupt+0x9a/0xc0",,,"[{""url"":""https://git.kernel.org/stable/c/3830dbdfb9a4aec680e43ed80b9f23db7a88eac9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3a745b51cddafade99aaea1b93aad31e9614e230"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3c68daf4a368cd9e63ae5a2145c9e4a6f838c166"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/87149cf9186201a63f0e0b93d9fa93d480bcb771"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/efea1dd176edd17c8252051b7de6957f06efc394"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49513,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:27.380,2025-02-26T07:01:27.380,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: cpufreq: governor: Use kobject release() method to free dbs_data The struct dbs_data embeds a struct gov_attr_set and the struct gov_attr_set embeds a kobject. Since every kobject must have a release() method and we can't use kfree() to free it directly, so introduce cpufreq_dbs_data_release() to release the dbs_data via the kobject::release() method. This fixes the calltrace like below: ODEBUG: free active (active state 0) object type: timer_list hint: delayed_work_timer_fn+0x0/0x34 WARNING: CPU: 12 PID: 810 at lib/debugobjects.c:505 debug_print_object+0xb8/0x100 Modules linked in: CPU: 12 PID: 810 Comm: sh Not tainted 5.16.0-next-20220120-yocto-standard+ #536 Hardware name: Marvell OcteonTX CN96XX board (DT) pstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--) pc : debug_print_object+0xb8/0x100 lr : debug_print_object+0xb8/0x100 sp : ffff80001dfcf9a0 x29: ffff80001dfcf9a0 x28: 0000000000000001 x27: ffff0001464f0000 x26: 0000000000000000 x25: ffff8000090e3f00 x24: ffff80000af60210 x23: ffff8000094dfb78 x22: ffff8000090e3f00 x21: ffff0001080b7118 x20: ffff80000aeb2430 x19: ffff800009e8f5e0 x18: 0000000000000000 x17: 0000000000000002 x16: 00004d62e58be040 x15: 013590470523aff8 x14: ffff8000090e1828 x13: 0000000001359047 x12: 00000000f5257d14 x11: 0000000000040591 x10: 0000000066c1ffea x9 : ffff8000080d15e0 x8 : ffff80000a1765a8 x7 : 0000000000000000 x6 : 0000000000000001 x5 : ffff800009e8c000 x4 : ffff800009e8c760 x3 : 0000000000000000 x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff0001474ed040 Call trace: debug_print_object+0xb8/0x100 __debug_check_no_obj_freed+0x1d0/0x25c debug_check_no_obj_freed+0x24/0xa0 kfree+0x11c/0x440 cpufreq_dbs_governor_exit+0xa8/0xac cpufreq_exit_governor+0x44/0x90 cpufreq_set_policy+0x29c/0x570 store_scaling_governor+0x110/0x154 store+0xb0/0xe0 sysfs_kf_write+0x58/0x84 kernfs_fop_write_iter+0x12c/0x1c0 new_sync_write+0xf0/0x18c vfs_write+0x1cc/0x220 ksys_write+0x74/0x100 __arm64_sys_write+0x28/0x3c invoke_syscall.constprop.0+0x58/0xf0 do_el0_svc+0x70/0x170 el0_svc+0x54/0x190 el0t_64_sync_handler+0xa4/0x130 el0t_64_sync+0x1a0/0x1a4 irq event stamp: 189006 hardirqs last enabled at (189005): [<ffff8000080849d0>] finish_task_switch.isra.0+0xe0/0x2c0 hardirqs last disabled at (189006): [<ffff8000090667a4>] el1_dbg+0x24/0xa0 softirqs last enabled at (188966): [<ffff8000080106d0>] __do_softirq+0x4b0/0x6a0 softirqs last disabled at (188957): [<ffff80000804a618>] __irq_exit_rcu+0x108/0x1a4 [ rjw: Because can be freed by the gov_attr_set_put() in cpufreq_dbs_governor_exit() now, it is also necessary to put the invocation of the governor ->exit() callback into the new cpufreq_dbs_data_release() function. ]",,,"[{""url"":""https://git.kernel.org/stable/c/1e32083f327184b6226ce320ef30085ce785ea4e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a1964688582d26af1328e19b658933659fb54337"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a85ee6401a47ae3fc64ba506cacb3e7873823c65"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49514,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:27.470,2025-03-17T16:48:15.700,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: mediatek: Fix error handling in mt8173_max98090_dev_probe Call of_node_put(platform_node) to avoid refcount leak in the error path.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.2"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""63B36856-FC1B-4124-B9BC-AF4563D72449""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0a1901f34f775b83ea4b8dbb5ed992147b9b8531"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1e932aba3c7628c9f880ee9c2cfcc2ae3ba0c01e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/23f340ed906c758cec6527376768e3bc1474ac30"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/48889eb3cce91d7f58e02bc07277b7f724b7a54a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4f4e0454e226de3bf4efd7e7924d1edc571c52d5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/98d5afe868df998b0244f4c229ab758b4083684a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cc43b9fdca519c5b13be6a717bacbebccd628cf6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ebd5cb4f1f3f10b839e7575219e0f17b60c23113"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fb66e0512e5ccc093070e21cf88cce8d98c181b5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49515,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:27.567,2025-02-26T07:01:27.567,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: cs35l41: Fix an out-of-bounds access in otp_packed_element_t The CS35L41_NUM_OTP_ELEM is 100, but only 99 entries are defined in the array otp_map_1/2[CS35L41_NUM_OTP_ELEM], this will trigger UBSAN to report a shift-out-of-bounds warning in the cs35l41_otp_unpack() since the last entry in the array will result in GENMASK(-1, 0). UBSAN reports this problem: UBSAN: shift-out-of-bounds in /home/hwang4/build/jammy/jammy/sound/soc/codecs/cs35l41-lib.c:836:8 shift exponent 64 is too large for 64-bit type 'long unsigned int' CPU: 10 PID: 595 Comm: systemd-udevd Not tainted 5.15.0-23-generic #23 Hardware name: LENOVO \x02MFG_IN_GO/\x02MFG_IN_GO, BIOS N3GET19W (1.00 ) 03/11/2022 Call Trace: <TASK> show_stack+0x52/0x58 dump_stack_lvl+0x4a/0x5f dump_stack+0x10/0x12 ubsan_epilogue+0x9/0x45 __ubsan_handle_shift_out_of_bounds.cold+0x61/0xef ? regmap_unlock_mutex+0xe/0x10 cs35l41_otp_unpack.cold+0x1c6/0x2b2 [snd_soc_cs35l41_lib] cs35l41_hda_probe+0x24f/0x33a [snd_hda_scodec_cs35l41] cs35l41_hda_i2c_probe+0x65/0x90 [snd_hda_scodec_cs35l41_i2c] ? cs35l41_hda_i2c_remove+0x20/0x20 [snd_hda_scodec_cs35l41_i2c] i2c_device_probe+0x252/0x2b0",,,"[{""url"":""https://git.kernel.org/stable/c/9f342904216f378e88008bb0ce1ae200a4b99fe8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a59b9958416096dd21dc4f62b0c5be525d459ca8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dbc35268e14d5d89c7a9db72009ad4dcd9ede646"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49516,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:27.653,2025-03-17T16:48:02.917,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ice: always check VF VSI pointer values The ice_get_vf_vsi function can return NULL in some cases, such as if handling messages during a reset where the VSI is being removed and recreated. Several places throughout the driver do not bother to check whether this VSI pointer is valid. Static analysis tools maybe report issues because they detect paths where a potentially NULL pointer could be dereferenced. Fix this by checking the return value of ice_get_vf_vsi everywhere.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""3108C4DF-1578-4A9A-ADC7-1128DE921D69""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/baeb705fd6a7245cc1fa69ed991a9cffdf44a174"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e7be3877589d539c52e5d1d23a625f889b541b9d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49517,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:27.740,2025-03-17T16:54:35.437,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: mediatek: Fix missing of_node_put in mt2701_wm8960_machine_probe This node pointer is returned by of_parse_phandle() with refcount incremented in this function. Calling of_node_put() to avoid the refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.12"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""C1826012-E991-4F57-B5A8-B3B6949796C0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/05654431a18fe24e5e46a375d98904134628a102"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/318afb1442eeef089fe7f8a8297d97c0302ff6f6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/61a85a20e8df5e0a92cfe169c92425c7bae0753b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9345122f5fb9f97a206f440f38bb656e53f46912"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/94587aa17abf8b26f543d2b29c44abc21bc36836"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bc2afecaabd2a2c9f17e43b4793a30e3461bfb29"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c71494f5f2b444adfd992a7359a0d2a791642b39"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f279c49f17ce10866087ea6c0c57382158974b63"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49518,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:27.837,2025-02-26T07:01:27.837,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: SOF: ipc3-topology: Correct get_control_data for non bytes payload It is possible to craft a topology where sof_get_control_data() would do out of bounds access because it expects that it is only called when the payload is bytes type. Confusingly it also handles other types of controls, but the payload parsing implementation is only valid for bytes. Fix the code to count the non bytes controls and instead of storing a pointer to sof_abi_hdr in sof_widget_data (which is only valid for bytes), store the pointer to the data itself and add a new member to save the size of the data. In case of non bytes controls we store the pointer to the chanv itself, which is just an array of values at the end. In case of bytes control, drop the wrong cdata->data (wdata[i].pdata) check against NULL since it is incorrect and invalid in this context. The data is pointing to the end of cdata struct, so it should never be null.",,,"[{""url"":""https://git.kernel.org/stable/c/896b03bb7c7010042786cfae2115083d4c241dd3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a962890a5a3cce903ff7c7a19fadee63ed9efdc7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49519,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:27.923,2025-02-26T07:01:27.923,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ath10k: skip ath10k_halt during suspend for driver state RESTARTING Double free crash is observed when FW recovery(caused by wmi timeout/crash) is followed by immediate suspend event. The FW recovery is triggered by ath10k_core_restart() which calls driver clean up via ath10k_halt(). When the suspend event occurs between the FW recovery, the restart worker thread is put into frozen state until suspend completes. The suspend event triggers ath10k_stop() which again triggers ath10k_halt() The double invocation of ath10k_halt() causes ath10k_htt_rx_free() to be called twice(Note: ath10k_htt_rx_alloc was not called by restart worker thread because of its frozen state), causing the crash. To fix this, during the suspend flow, skip call to ath10k_halt() in ath10k_stop() when the current driver state is ATH10K_STATE_RESTARTING. Also, for driver state ATH10K_STATE_RESTARTING, call ath10k_wait_for_suspend() in ath10k_stop(). This is because call to ath10k_wait_for_suspend() is skipped later in [ath10k_halt() > ath10k_core_stop()] for the driver state ATH10K_STATE_RESTARTING. The frozen restart worker thread will be cancelled during resume when the device comes out of suspend. Below is the crash stack for reference: [ 428.469167] ------------[ cut here ]------------ [ 428.469180] kernel BUG at mm/slub.c:4150! [ 428.469193] invalid opcode: 0000 [#1] PREEMPT SMP NOPTI [ 428.469219] Workqueue: events_unbound async_run_entry_fn [ 428.469230] RIP: 0010:kfree+0x319/0x31b [ 428.469241] RSP: 0018:ffffa1fac015fc30 EFLAGS: 00010246 [ 428.469247] RAX: ffffedb10419d108 RBX: ffff8c05262b0000 [ 428.469252] RDX: ffff8c04a8c07000 RSI: 0000000000000000 [ 428.469256] RBP: ffffa1fac015fc78 R08: 0000000000000000 [ 428.469276] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 428.469285] Call Trace: [ 428.469295] ? dma_free_attrs+0x5f/0x7d [ 428.469320] ath10k_core_stop+0x5b/0x6f [ 428.469336] ath10k_halt+0x126/0x177 [ 428.469352] ath10k_stop+0x41/0x7e [ 428.469387] drv_stop+0x88/0x10e [ 428.469410] __ieee80211_suspend+0x297/0x411 [ 428.469441] rdev_suspend+0x6e/0xd0 [ 428.469462] wiphy_suspend+0xb1/0x105 [ 428.469483] ? name_show+0x2d/0x2d [ 428.469490] dpm_run_callback+0x8c/0x126 [ 428.469511] ? name_show+0x2d/0x2d [ 428.469517] __device_suspend+0x2e7/0x41b [ 428.469523] async_suspend+0x1f/0x93 [ 428.469529] async_run_entry_fn+0x3d/0xd1 [ 428.469535] process_one_work+0x1b1/0x329 [ 428.469541] worker_thread+0x213/0x372 [ 428.469547] kthread+0x150/0x15f [ 428.469552] ? pr_cont_work+0x58/0x58 [ 428.469558] ? kthread_blkcg+0x31/0x31 Tested-on: QCA6174 hw3.2 PCI WLAN.RM.4.4.1-00288-QCARMSWPZ-1",,,"[{""url"":""https://git.kernel.org/stable/c/5321e5211b5dc873e2e3d0deb749e69ecf4dbfe5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7eb14cb604f49e58b7cf6faa87961a865a3c8649"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8aa3750986ffcf73e0692db3b40dd3a8e8c0c575"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b72a4aff947ba807177bdabb43debaf2c66bee05"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c2272428090d0d215a3f017cbbbad731c07eee53"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49520,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:28.017,2025-02-26T07:01:28.017,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: arm64: compat: Do not treat syscall number as ESR_ELx for a bad syscall If a compat process tries to execute an unknown system call above the __ARM_NR_COMPAT_END number, the kernel sends a SIGILL signal to the offending process. Information about the error is printed to dmesg in compat_arm_syscall() -> arm64_notify_die() -> arm64_force_sig_fault() -> arm64_show_signal(). arm64_show_signal() interprets a non-zero value for current->thread.fault_code as an exception syndrome and displays the message associated with the ESR_ELx.EC field (bits 31:26). current->thread.fault_code is set in compat_arm_syscall() -> arm64_notify_die() with the bad syscall number instead of a valid ESR_ELx value. This means that the ESR_ELx.EC field has the value that the user set for the syscall number and the kernel can end up printing bogus exception messages*. For example, for the syscall number 0x68000000, which evaluates to ESR_ELx.EC value of 0x1A (ESR_ELx_EC_FPAC) the kernel prints this error: [ 18.349161] syscall[300]: unhandled exception: ERET/ERETAA/ERETAB, ESR 0x68000000, Oops - bad compat syscall(2) in syscall[10000+50000] [ 18.350639] CPU: 2 PID: 300 Comm: syscall Not tainted 5.18.0-rc1 #79 [ 18.351249] Hardware name: Pine64 RockPro64 v2.0 (DT) [..] which is misleading, as the bad compat syscall has nothing to do with pointer authentication. Stop arm64_show_signal() from printing exception syndrome information by having compat_arm_syscall() set the ESR_ELx value to 0, as it has no meaning for an invalid system call number. The example above now becomes: [ 19.935275] syscall[301]: unhandled exception: Oops - bad compat syscall(2) in syscall[10000+50000] [ 19.936124] CPU: 1 PID: 301 Comm: syscall Not tainted 5.18.0-rc1-00005-g7e08006d4102 #80 [ 19.936894] Hardware name: Pine64 RockPro64 v2.0 (DT) [..] which although shows less information because the syscall number, wrongfully advertised as the ESR value, is missing, it is better than showing plainly wrong information. The syscall number can be easily obtained with strace. *A 32-bit value above or equal to 0x8000_0000 is interpreted as a negative integer in compat_arm_syscal() and the condition scno < __ARM_NR_COMPAT_END evaluates to true; the syscall will exit to userspace in this case with the ENOSYS error code instead of arm64_notify_die() being called.",,,"[{""url"":""https://git.kernel.org/stable/c/095e975f8150ccd7f852eb578c1cdbdd2f517c7a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3910ae71cb963fa2b68e684489d4fc3d105afda0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3fed9e551417b84038b15117732ea4505eee386b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/621916afe8cd4f322eb12759b64a2f938d4e551d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ad97425d23af3c3b8d4f6a2bb666cb485087c007"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/efd183d988b416fcdf6f7c298a17ced4859ca77d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49521,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:28.113,2025-02-26T07:01:28.113,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: lpfc: Fix resource leak in lpfc_sli4_send_seq_to_ulp() If no handler is found in lpfc_complete_unsol_iocb() to match the rctl of a received frame, the frame is dropped and resources are leaked. Fix by returning resources when discarding an unhandled frame type. Update lpfc_fc_frame_check() handling of NOP basic link service.",,,"[{""url"":""https://git.kernel.org/stable/c/08709769ff2fb6c5ffedcda3742700d8ea1618a8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/40cf4ea4d2d497f7732c87d350ba5c3f5e8a43a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/646db1a560f44236b7278b822ca99a1d3b6ea72c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7860d8f8082605b57596aa82d3d438c1fdad9a9e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fa1b509d41c5433672f72c0615cf4aefa0611c99"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49522,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:28.210,2025-02-26T07:01:28.210,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: mmc: jz4740: Apply DMA engine limits to maximum segment size Do what is done in other DMA-enabled MMC host drivers (cf. host/mmci.c) and limit the maximum segment size based on the DMA engine's capabilities. This is needed to avoid warnings like the following with CONFIG_DMA_API_DEBUG=y. ------------[ cut here ]------------ WARNING: CPU: 0 PID: 21 at kernel/dma/debug.c:1162 debug_dma_map_sg+0x2f4/0x39c DMA-API: jz4780-dma 13420000.dma-controller: mapping sg segment longer than device claims to support [len=98304] [max=65536] CPU: 0 PID: 21 Comm: kworker/0:1H Not tainted 5.18.0-rc1 #19 Workqueue: kblockd blk_mq_run_work_fn Stack : 81575aec 00000004 80620000 80620000 80620000 805e7358 00000009 801537ac 814c832c 806276e3 806e34b4 80620000 81575aec 00000001 81575ab8 09291444 00000000 00000000 805e7358 81575958 ffffffea 8157596c 00000000 636f6c62 6220646b 80387a70 0000000f 6d5f6b6c 80620000 00000000 81575ba4 00000009 805e170c 80896640 00000001 00010000 00000000 00000000 00006098 806e0000 ... Call Trace: [<80107670>] show_stack+0x84/0x120 [<80528cd8>] __warn+0xb8/0xec [<80528d78>] warn_slowpath_fmt+0x6c/0xb8 [<8016f1d4>] debug_dma_map_sg+0x2f4/0x39c [<80169d4c>] __dma_map_sg_attrs+0xf0/0x118 [<8016a27c>] dma_map_sg_attrs+0x14/0x28 [<804f66b4>] jz4740_mmc_prepare_dma_data+0x74/0xa4 [<804f6714>] jz4740_mmc_pre_request+0x30/0x54 [<804f4ff4>] mmc_blk_mq_issue_rq+0x6e0/0x7bc [<804f5590>] mmc_mq_queue_rq+0x220/0x2d4 [<8038b2c0>] blk_mq_dispatch_rq_list+0x480/0x664 [<80391040>] blk_mq_do_dispatch_sched+0x2dc/0x370 [<80391468>] __blk_mq_sched_dispatch_requests+0xec/0x164 [<80391540>] blk_mq_sched_dispatch_requests+0x44/0x94 [<80387900>] __blk_mq_run_hw_queue+0xb0/0xcc [<80134c14>] process_one_work+0x1b8/0x264 [<80134ff8>] worker_thread+0x2ec/0x3b8 [<8013b13c>] kthread+0x104/0x10c [<80101dcc>] ret_from_kernel_thread+0x14/0x1c ---[ end trace 0000000000000000 ]---",,,"[{""url"":""https://git.kernel.org/stable/c/353298cadbd4c7d8e8a16d6000066414694933c3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7923f95997a79cef2ad161a2facae64c25a0bca0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/807f90f1960a59dc557542b818c484a8db9ac978"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/90281cadf5077f2d2bec8b08c2ead1f8cd12660e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a828920b9ec0d89d3011198d482b7fe224d2de19"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/afadb04f1d6e74b18a253403f5274cde5e3fd7bd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49523,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:28.310,2025-03-17T19:53:36.500,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ath11k: disable spectral scan during spectral deinit When ath11k modules are removed using rmmod with spectral scan enabled, crash is observed. Different crash trace is observed for each crash. Send spectral scan disable WMI command to firmware before cleaning the spectral dbring in the spectral_deinit API to avoid this crash. call trace from one of the crash observed: [ 1252.880802] Unable to handle kernel NULL pointer dereference at virtual address 00000008 [ 1252.882722] pgd = 0f42e886 [ 1252.890955] [00000008] *pgd=00000000 [ 1252.893478] Internal error: Oops: 5 [#1] PREEMPT SMP ARM [ 1253.093035] CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.4.89 #0 [ 1253.115261] Hardware name: Generic DT based system [ 1253.121149] PC is at ath11k_spectral_process_data+0x434/0x574 [ath11k] [ 1253.125940] LR is at 0x88e31017 [ 1253.132448] pc : [<7f9387b8>] lr : [<88e31017>] psr: a0000193 [ 1253.135488] sp : 80d01bc8 ip : 00000001 fp : 970e0000 [ 1253.141737] r10: 88e31000 r9 : 970ec000 r8 : 00000080 [ 1253.146946] r7 : 94734040 r6 : a0000113 r5 : 00000057 r4 : 00000000 [ 1253.152159] r3 : e18cb694 r2 : 00000217 r1 : 1df1f000 r0 : 00000001 [ 1253.158755] Flags: NzCv IRQs off FIQs on Mode SVC_32 ISA ARM Segment user [ 1253.165266] Control: 10c0383d Table: 5e71006a DAC: 00000055 [ 1253.172472] Process swapper/0 (pid: 0, stack limit = 0x60870141) [ 1253.458055] [<7f9387b8>] (ath11k_spectral_process_data [ath11k]) from [<7f917fdc>] (ath11k_dbring_buffer_release_event+0x214/0x2e4 [ath11k]) [ 1253.466139] [<7f917fdc>] (ath11k_dbring_buffer_release_event [ath11k]) from [<7f8ea3c4>] (ath11k_wmi_tlv_op_rx+0x1840/0x29cc [ath11k]) [ 1253.478807] [<7f8ea3c4>] (ath11k_wmi_tlv_op_rx [ath11k]) from [<7f8fe868>] (ath11k_htc_rx_completion_handler+0x180/0x4e0 [ath11k]) [ 1253.490699] [<7f8fe868>] (ath11k_htc_rx_completion_handler [ath11k]) from [<7f91308c>] (ath11k_ce_per_engine_service+0x2c4/0x3b4 [ath11k]) [ 1253.502386] [<7f91308c>] (ath11k_ce_per_engine_service [ath11k]) from [<7f9a4198>] (ath11k_pci_ce_tasklet+0x28/0x80 [ath11k_pci]) [ 1253.514811] [<7f9a4198>] (ath11k_pci_ce_tasklet [ath11k_pci]) from [<8032227c>] (tasklet_action_common.constprop.2+0x64/0xe8) [ 1253.526476] [<8032227c>] (tasklet_action_common.constprop.2) from [<803021e8>] (__do_softirq+0x130/0x2d0) [ 1253.537756] [<803021e8>] (__do_softirq) from [<80322610>] (irq_exit+0xcc/0xe8) [ 1253.547304] [<80322610>] (irq_exit) from [<8036a4a4>] (__handle_domain_irq+0x60/0xb4) [ 1253.554428] [<8036a4a4>] (__handle_domain_irq) from [<805eb348>] (gic_handle_irq+0x4c/0x90) [ 1253.562321] [<805eb348>] (gic_handle_irq) from [<80301a78>] (__irq_svc+0x58/0x8c) Tested-on: QCN6122 hw1.0 AHB WLAN.HK.2.6.0.1-00851-QCAHKSWPL_SILICONZ-1","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""814C88C6-C31D-462A-BBBE-BC83E102E84C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/161c64de239c7018e0295e7e0520a19f00aa32dc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/451b9076903a057b7b8d5b24dc84b3e436a1c743"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4b9c54caef58d2b55074710952cda70540722c01"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/60afa4f4e1350c876d8a061182a70c224de275dd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8f15e67af9bec5a69e815e0230a70cffddae371a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49524,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:28.407,2025-03-24T19:43:42.333,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: media: pci: cx23885: Fix the error handling in cx23885_initdev() When the driver fails to call the dma_set_mask(), the driver will get the following splat: [ 55.853884] BUG: KASAN: use-after-free in __process_removed_driver+0x3c/0x240 [ 55.854486] Read of size 8 at addr ffff88810de60408 by task modprobe/590 [ 55.856822] Call Trace: [ 55.860327] __process_removed_driver+0x3c/0x240 [ 55.861347] bus_for_each_dev+0x102/0x160 [ 55.861681] i2c_del_driver+0x2f/0x50 This is because the driver has initialized the i2c related resources in cx23885_dev_setup() but not released them in error handling, fix this bug by modifying the error path that jumps after failing to call the dma_set_mask().","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""42074657-A7B6-4740-88B7-67B440018C1C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/453514a874c78df1e7804e6e3aaa60c8d8deb6a8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6041d1a0365baa729b6adfb6ed5386d9388018db"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7b9978e1c94e569d65a0e7e719abb9340f5db4a0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/86bd6a579c6c60547706cabf299cd2c9feab3332"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/98106f100f50c487469903b9cf6d966785fc9cc3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ca17e7a532d1a55466cc007b3f4d319541a27493"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e8123311cf06d7dae71e8c5fe78e0510d20cd30b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fa636e9ee4442215cd9a2e079cd5a8e1fe0cb8ba"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49525,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:28.500,2025-02-26T07:01:28.500,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: media: cx25821: Fix the warning when removing the module When removing the module, we will get the following warning: [ 14.746697] remove_proc_entry: removing non-empty directory 'irq/21', leaking at least 'cx25821[1]' [ 14.747449] WARNING: CPU: 4 PID: 368 at fs/proc/generic.c:717 remove_proc_entry+0x389/0x3f0 [ 14.751611] RIP: 0010:remove_proc_entry+0x389/0x3f0 [ 14.759589] Call Trace: [ 14.759792] <TASK> [ 14.759975] unregister_irq_proc+0x14c/0x170 [ 14.760340] irq_free_descs+0x94/0xe0 [ 14.760640] mp_unmap_irq+0xb6/0x100 [ 14.760937] acpi_unregister_gsi_ioapic+0x27/0x40 [ 14.761334] acpi_pci_irq_disable+0x1d3/0x320 [ 14.761688] pci_disable_device+0x1ad/0x380 [ 14.762027] ? _raw_spin_unlock_irqrestore+0x2d/0x60 [ 14.762442] ? cx25821_shutdown+0x20/0x9f0 [cx25821] [ 14.762848] cx25821_finidev+0x48/0xc0 [cx25821] [ 14.763242] pci_device_remove+0x92/0x240 Fix this by freeing the irq before call pci_disable_device().",,,"[{""url"":""https://git.kernel.org/stable/c/005fd553f5f10fe8618d92f94ad10f9051eac331"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1f0fc1dfb5fdd456657519a97fab83691b96c6a0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2203436a4d24302871617373a7eb21bc17e38762"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/222292930c8ecc3516e03ec1f9fa8448be7ff496"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/258639bc55a586ee6df92d89786ccf1c71546d70"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3f94169affa33c9db4a439d88f09cb2ed3a33332"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4d6295b6d986476232332fffd08575b185f90d81"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5beb85ff7d005ddb7bf604a4f2dc76f01b84b318"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9d92291698e5cc35a2b8a1106a01ddd7d60ade2d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49526,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:28.593,2025-02-26T07:01:28.593,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: md/bitmap: don't set sb values if can't pass sanity check If bitmap area contains invalid data, kernel will crash then mdadm triggers ""Segmentation fault"". This is cluster-md speical bug. In non-clustered env, mdadm will handle broken metadata case. In clustered array, only kernel space handles bitmap slot info. But even this bug only happened in clustered env, current sanity check is wrong, the code should be changed. How to trigger: (faulty injection) dd if=/dev/zero bs=1M count=1 oflag=direct of=/dev/sda dd if=/dev/zero bs=1M count=1 oflag=direct of=/dev/sdb mdadm -C /dev/md0 -b clustered -e 1.2 -n 2 -l mirror /dev/sda /dev/sdb mdadm -Ss echo aaa > magic.txt == below modifying slot 2 bitmap data == dd if=magic.txt of=/dev/sda seek=16384 bs=1 count=3 <== destroy magic dd if=/dev/zero of=/dev/sda seek=16436 bs=1 count=4 <== ZERO chunksize mdadm -A /dev/md0 /dev/sda /dev/sdb == kernel crashes. mdadm outputs ""Segmentation fault"" == Reason of kernel crash: In md_bitmap_read_sb (called by md_bitmap_create), bad bitmap magic didn't block chunksize assignment, and zero value made DIV_ROUND_UP_SECTOR_T() trigger ""divide error"". Crash log: kernel: md: md0 stopped. kernel: md/raid1:md0: not clean -- starting background reconstruction kernel: md/raid1:md0: active with 2 out of 2 mirrors kernel: dlm: ... ... kernel: md-cluster: Joined cluster 44810aba-38bb-e6b8-daca-bc97a0b254aa slot 1 kernel: md0: invalid bitmap file superblock: bad magic kernel: md_bitmap_copy_from_slot can't get bitmap from slot 2 kernel: md-cluster: Could not gather bitmaps from slot 2 kernel: divide error: 0000 [#1] SMP NOPTI kernel: CPU: 0 PID: 1603 Comm: mdadm Not tainted 5.14.6-1-default kernel: Hardware name: QEMU Standard PC (i440FX + PIIX, 1996) kernel: RIP: 0010:md_bitmap_create+0x1d1/0x850 [md_mod] kernel: RSP: 0018:ffffc22ac0843ba0 EFLAGS: 00010246 kernel: ... ... kernel: Call Trace: kernel: ? dlm_lock_sync+0xd0/0xd0 [md_cluster 77fe..7a0] kernel: md_bitmap_copy_from_slot+0x2c/0x290 [md_mod 24ea..d3a] kernel: load_bitmaps+0xec/0x210 [md_cluster 77fe..7a0] kernel: md_bitmap_load+0x81/0x1e0 [md_mod 24ea..d3a] kernel: do_md_run+0x30/0x100 [md_mod 24ea..d3a] kernel: md_ioctl+0x1290/0x15a0 [md_mod 24ea....d3a] kernel: ? mddev_unlock+0xaa/0x130 [md_mod 24ea..d3a] kernel: ? blkdev_ioctl+0xb1/0x2b0 kernel: block_ioctl+0x3b/0x40 kernel: __x64_sys_ioctl+0x7f/0xb0 kernel: do_syscall_64+0x59/0x80 kernel: ? exit_to_user_mode_prepare+0x1ab/0x230 kernel: ? syscall_exit_to_user_mode+0x18/0x40 kernel: ? do_syscall_64+0x69/0x80 kernel: entry_SYSCALL_64_after_hwframe+0x44/0xae kernel: RIP: 0033:0x7f4a15fa722b kernel: ... ... kernel: ---[ end trace 8afa7612f559c868 ]--- kernel: RIP: 0010:md_bitmap_create+0x1d1/0x850 [md_mod]",,,"[{""url"":""https://git.kernel.org/stable/c/0959aa00f9765bd8c654b1365012e41b51c733cc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/27f672af28a8e9b783ff7f0eaf7ef2fbd5a2f4ba"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/422e8f7ba1e08c8e0e88d375bcb550bc2bbfe96d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cf9392282a2cf5a8d83dd1c5aa1a097e12f172bc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d8f1558e1daf54f53a90b4c5700ae3e3a4b13412"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e68cb83a57a458b01c9739e2ad9cb70b04d1e6d2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e69e93120f6219b9cc4fba3b515b6ababd8548aa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49527,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:28.690,2025-03-10T21:16:33.907,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: media: venus: hfi: avoid null dereference in deinit If venus_probe fails at pm_runtime_put_sync the error handling first calls hfi_destroy and afterwards hfi_core_deinit. As hfi_destroy sets core->ops to NULL, hfi_core_deinit cannot call the core_deinit function anymore. Avoid this null pointer derefence by skipping the call when necessary.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""42074657-A7B6-4740-88B7-67B440018C1C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0ac84ab50712879eac3c1dd2598440652a85d3d0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0ed5a643b1a4a46b9b7bfba5d468c10cc30e1359"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2533acb652359c9e097dfa33587896af782e8a91"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/27ad46da44177a78a4a0cae6fe03906888c61aa1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/86594f6af867b5165d2ba7b5a71fae3a5961e56c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9c385b961d4c378228e80f6abea8509cb67feab6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a21d15dde21d7e8ae047eb8368677407db45d840"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b73ed0510bb8d9647cd8e8a4c4c8772bbe545c3a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49528,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:28.780,2025-02-26T07:01:28.780,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: media: i2c: dw9714: Disable the regulator when the driver fails to probe When the driver fails to probe, we will get the following splat: [ 59.305988] ------------[ cut here ]------------ [ 59.306417] WARNING: CPU: 2 PID: 395 at drivers/regulator/core.c:2257 _regulator_put+0x3ec/0x4e0 [ 59.310345] RIP: 0010:_regulator_put+0x3ec/0x4e0 [ 59.318362] Call Trace: [ 59.318582] <TASK> [ 59.318765] regulator_put+0x1f/0x30 [ 59.319058] devres_release_group+0x319/0x3d0 [ 59.319420] i2c_device_probe+0x766/0x940 Fix this by disabling the regulator in error handling.",,,"[{""url"":""https://git.kernel.org/stable/c/02276e18defa2fccf16413b44440277d98c2b1ea"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fa83ea1de5b3efd87fe01408d5db1fd2ff4767fa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49529,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:28.873,2025-03-10T21:16:19.747,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/amdgpu/pm: fix the null pointer while the smu is disabled It needs to check if the pp_funcs is initialized while release the context, otherwise it will trigger null pointer panic while the software smu is not enabled. [ 1109.404555] BUG: kernel NULL pointer dereference, address: 0000000000000078 [ 1109.404609] #PF: supervisor read access in kernel mode [ 1109.404638] #PF: error_code(0x0000) - not-present page [ 1109.404657] PGD 0 P4D 0 [ 1109.404672] Oops: 0000 [#1] PREEMPT SMP NOPTI [ 1109.404701] CPU: 7 PID: 9150 Comm: amdgpu_test Tainted: G OEL 5.16.0-custom #1 [ 1109.404732] Hardware name: innotek GmbH VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006 [ 1109.404765] RIP: 0010:amdgpu_dpm_force_performance_level+0x1d/0x170 [amdgpu] [ 1109.405109] Code: 5d c3 44 8b a3 f0 80 00 00 eb e5 66 90 0f 1f 44 00 00 55 48 89 e5 41 57 41 56 41 55 41 54 53 48 83 ec 08 4c 8b b7 f0 7d 00 00 <49> 83 7e 78 00 0f 84 f2 00 00 00 80 bf 87 80 00 00 00 48 89 fb 0f [ 1109.405176] RSP: 0018:ffffaf3083ad7c20 EFLAGS: 00010282 [ 1109.405203] RAX: 0000000000000000 RBX: ffff9796b1c14600 RCX: 0000000002862007 [ 1109.405229] RDX: ffff97968591c8c0 RSI: 0000000000000001 RDI: ffff9796a3700000 [ 1109.405260] RBP: ffffaf3083ad7c50 R08: ffffffff9897de00 R09: ffff979688d9db60 [ 1109.405286] R10: 0000000000000000 R11: ffff979688d9db90 R12: 0000000000000001 [ 1109.405316] R13: ffff9796a3700000 R14: 0000000000000000 R15: ffff9796a3708fc0 [ 1109.405345] FS: 00007ff055cff180(0000) GS:ffff9796bfdc0000(0000) knlGS:0000000000000000 [ 1109.405378] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 1109.405400] CR2: 0000000000000078 CR3: 000000000a394000 CR4: 00000000000506e0 [ 1109.405434] Call Trace: [ 1109.405445] <TASK> [ 1109.405456] ? delete_object_full+0x1d/0x20 [ 1109.405480] amdgpu_ctx_set_stable_pstate+0x7c/0xa0 [amdgpu] [ 1109.405698] amdgpu_ctx_fini.part.0+0xcb/0x100 [amdgpu] [ 1109.405911] amdgpu_ctx_do_release+0x71/0x80 [amdgpu] [ 1109.406121] amdgpu_ctx_ioctl+0x52d/0x550 [amdgpu] [ 1109.406327] ? _raw_spin_unlock+0x1a/0x30 [ 1109.406354] ? drm_gem_handle_delete+0x81/0xb0 [drm] [ 1109.406400] ? amdgpu_ctx_get_entity+0x2c0/0x2c0 [amdgpu] [ 1109.406609] drm_ioctl_kernel+0xb6/0x140 [drm]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""3108C4DF-1578-4A9A-ADC7-1128DE921D69""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/49ec3441aa5e5940f3e82dd2f0205b9c856e399d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/eea5c7b3390c6e006ba4cbd906447dd8cea8cfbf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49530,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:28.967,2025-03-10T21:15:50.760,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/amd/pm: fix double free in si_parse_power_table() In function si_parse_power_table(), array adev->pm.dpm.ps and its member is allocated. If the allocation of each member fails, the array itself is freed and returned with an error code. However, the array is later freed again in si_dpm_fini() function which is called when the function returns an error. This leads to potential double free of the array adev->pm.dpm.ps, as well as leak of its array members, since the members are not freed in the allocation function and the array is not nulled when freed. In addition adev->pm.dpm.num_ps, which keeps track of the allocated array member, is not updated until the member allocation is successfully finished, this could also lead to either use after free, or uninitialized variable access in si_dpm_fini(). Fix this by postponing the free of the array until si_dpm_fini() and increment adev->pm.dpm.num_ps everytime the array member is allocated.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-415""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""0D4D4067-974D-4560-8320-22FDA399E3F9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2615464854505188f909d0c07c37a6623693b5c7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/43eb9b667b95f2a31c63e8949b0d2161b9be59c3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6c5bdaa1325be7f04b79ea992ab216739192d342"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a5ce7051db044290b1a95045ff03c249005a3aa4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/af832028af6f44c6c45645757079c4ed6884ade5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c0e811c4ccf3b42705976285e3a94cc82dea7300"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ca1ce206894dd976275c78ee38dbc19873f22de9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f3fa2becf2fc25b6ac7cf8d8b1a2e4a86b3b72bd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fd2eff8b9dcbe469c3b7bbbc7083ab5ed94de07b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49531,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:29.067,2025-03-17T19:53:28.650,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: loop: implement ->free_disk Ensure that the lo_device which is stored in the gendisk private data is valid until the gendisk is freed. Currently the loop driver uses a lot of effort to make sure a device is not freed when it is still in use, but to to fix a potential deadlock this will be relaxed a bit soon.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""3108C4DF-1578-4A9A-ADC7-1128DE921D69""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/aadd1443aae7fe8956e3b11157827067f034406a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d2c7f56f8b5256d57f9e3fc7794c31361d43bdd9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49532,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:29.170,2025-03-10T21:15:19.063,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/virtio: fix NULL pointer dereference in virtio_gpu_conn_get_modes drm_cvt_mode may return NULL and we should check it. This bug is found by syzkaller: FAULT_INJECTION stacktrace: [ 168.567394] FAULT_INJECTION: forcing a failure. name failslab, interval 1, probability 0, space 0, times 1 [ 168.567403] CPU: 1 PID: 6425 Comm: syz Kdump: loaded Not tainted 4.19.90-vhulk2201.1.0.h1035.kasan.eulerosv2r10.aarch64 #1 [ 168.567406] Hardware name: QEMU KVM Virtual Machine, BIOS 0.0.0 02/06/2015 [ 168.567408] Call trace: [ 168.567414] dump_backtrace+0x0/0x310 [ 168.567418] show_stack+0x28/0x38 [ 168.567423] dump_stack+0xec/0x15c [ 168.567427] should_fail+0x3ac/0x3d0 [ 168.567437] __should_failslab+0xb8/0x120 [ 168.567441] should_failslab+0x28/0xc0 [ 168.567445] kmem_cache_alloc_trace+0x50/0x640 [ 168.567454] drm_mode_create+0x40/0x90 [ 168.567458] drm_cvt_mode+0x48/0xc78 [ 168.567477] virtio_gpu_conn_get_modes+0xa8/0x140 [virtio_gpu] [ 168.567485] drm_helper_probe_single_connector_modes+0x3a4/0xd80 [ 168.567492] drm_mode_getconnector+0x2e0/0xa70 [ 168.567496] drm_ioctl_kernel+0x11c/0x1d8 [ 168.567514] drm_ioctl+0x558/0x6d0 [ 168.567522] do_vfs_ioctl+0x160/0xf30 [ 168.567525] ksys_ioctl+0x98/0xd8 [ 168.567530] __arm64_sys_ioctl+0x50/0xc8 [ 168.567536] el0_svc_common+0xc8/0x320 [ 168.567540] el0_svc_handler+0xf8/0x160 [ 168.567544] el0_svc+0x10/0x218 KASAN stacktrace: [ 168.567561] BUG: KASAN: null-ptr-deref in virtio_gpu_conn_get_modes+0xb4/0x140 [virtio_gpu] [ 168.567565] Read of size 4 at addr 0000000000000054 by task syz/6425 [ 168.567566] [ 168.567571] CPU: 1 PID: 6425 Comm: syz Kdump: loaded Not tainted 4.19.90-vhulk2201.1.0.h1035.kasan.eulerosv2r10.aarch64 #1 [ 168.567573] Hardware name: QEMU KVM Virtual Machine, BIOS 0.0.0 02/06/2015 [ 168.567575] Call trace: [ 168.567578] dump_backtrace+0x0/0x310 [ 168.567582] show_stack+0x28/0x38 [ 168.567586] dump_stack+0xec/0x15c [ 168.567591] kasan_report+0x244/0x2f0 [ 168.567594] __asan_load4+0x58/0xb0 [ 168.567607] virtio_gpu_conn_get_modes+0xb4/0x140 [virtio_gpu] [ 168.567612] drm_helper_probe_single_connector_modes+0x3a4/0xd80 [ 168.567617] drm_mode_getconnector+0x2e0/0xa70 [ 168.567621] drm_ioctl_kernel+0x11c/0x1d8 [ 168.567624] drm_ioctl+0x558/0x6d0 [ 168.567628] do_vfs_ioctl+0x160/0xf30 [ 168.567632] ksys_ioctl+0x98/0xd8 [ 168.567636] __arm64_sys_ioctl+0x50/0xc8 [ 168.567641] el0_svc_common+0xc8/0x320 [ 168.567645] el0_svc_handler+0xf8/0x160 [ 168.567649] el0_svc+0x10/0x218","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""0D4D4067-974D-4560-8320-22FDA399E3F9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0f8bc147a963686b7351aa35d1701124ffacac08"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/194d250cdc4a40ccbd179afd522a9e9846957402"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/32e10aabc287f09a148ff759bb9ce70b01b0012c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/848dd072744ea662ab3097e3c8282bee552df218"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c51d00472fa54b9b05c17789ed665c17adf3a25d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e0828456578cc8ba0a69147f7ae3428392eec287"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/edafcad84c4134ebec4bc24b29ca4497a1184eea"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f85cb059fad03a3b33a50023be91e944bb065ae8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fadc626cae99aaa1325094edc6a9e2b883f3e562"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49533,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:29.293,2025-02-26T07:01:29.293,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ath11k: Change max no of active probe SSID and BSSID to fw capability The maximum number of SSIDs in a for active probe requests is currently reported as 16 (WLAN_SCAN_PARAMS_MAX_SSID) when registering the driver. The scan_req_params structure only has the capacity to hold 10 SSIDs. This leads to a buffer overflow which can be triggered from wpa_supplicant in userspace. When copying the SSIDs into the scan_req_params structure in the ath11k_mac_op_hw_scan route, it can overwrite the extraie pointer. Firmware supports 16 ssid * 4 bssid, for each ssid 4 bssid combo probe request will be sent, so totally 64 probe requests supported. So set both max ssid and bssid to 16 and 4 respectively. Remove the redundant macros of ssid and bssid. Tested-on: IPQ8074 hw2.0 AHB WLAN.HK.2.7.0.1-01300-QCAHKSWPL_SILICONZ-1",,,"[{""url"":""https://git.kernel.org/stable/c/210505788f1d243232e21ef660efcd4838890ce8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/50dc9ce9f80554a88e33b73c30851acf2be36ed3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ec5dfa1d66f2f71a48dab027d26a9fa78eb0f58f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49534,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:29.400,2025-03-10T21:30:31.113,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: lpfc: Protect memory leak for NPIV ports sending PLOGI_RJT There is a potential memory leak in lpfc_ignore_els_cmpl() and lpfc_els_rsp_reject() that was allocated from NPIV PLOGI_RJT (lpfc_rcv_plogi()'s login_mbox). Check if cmdiocb->context_un.mbox was allocated in lpfc_ignore_els_cmpl(), and then free it back to phba->mbox_mem_pool along with mbox->ctx_buf for service parameters. For lpfc_els_rsp_reject() failure, free both the ctx_buf for service parameters and the login_mbox.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""3108C4DF-1578-4A9A-ADC7-1128DE921D69""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/672d1cb40551ea9c95efad43ab6d45e4ab4e015f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c00df0f34a6d5e14da379f96ea67e501ce67b002"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49535,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:29.490,2025-05-02T07:15:49.813,Modified,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: lpfc: Fix null pointer dereference after failing to issue FLOGI and PLOGI If lpfc_issue_els_flogi() fails and returns non-zero status, the node reference count is decremented to trigger the release of the nodelist structure. However, if there is a prior registration or dev-loss-evt work pending, the node may be released prematurely. When dev-loss-evt completes, the released node is referenced causing a use-after-free null pointer dereference. Similarly, when processing non-zero ELS PLOGI completion status in lpfc_cmpl_els_plogi(), the ndlp flags are checked for a transport registration before triggering node removal. If dev-loss-evt work is pending, the node may be released prematurely and a subsequent call to lpfc_dev_loss_tmo_handler() results in a use after free ndlp dereference. Add test for pending dev-loss before decrementing the node reference count for FLOGI, PLOGI, PRLI, and ADISC handling.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""3108C4DF-1578-4A9A-ADC7-1128DE921D69""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/10663ebec0ad5c78493a0dd34c9ee4d73d7ca0df"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/577a942df3de2666f6947bdd3a5c9e8d30073424"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c7dc74ab7975c9b96284abfe4cca756d75fa4604"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49536,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:29.580,2025-03-10T21:30:26.823,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: lpfc: Fix SCSI I/O completion and abort handler deadlock During stress I/O tests with 500+ vports, hard LOCKUP call traces are observed. CPU A: native_queued_spin_lock_slowpath+0x192 _raw_spin_lock_irqsave+0x32 lpfc_handle_fcp_err+0x4c6 lpfc_fcp_io_cmd_wqe_cmpl+0x964 lpfc_sli4_fp_handle_cqe+0x266 __lpfc_sli4_process_cq+0x105 __lpfc_sli4_hba_process_cq+0x3c lpfc_cq_poll_hdler+0x16 irq_poll_softirq+0x76 __softirqentry_text_start+0xe4 irq_exit+0xf7 do_IRQ+0x7f CPU B: native_queued_spin_lock_slowpath+0x5b _raw_spin_lock+0x1c lpfc_abort_handler+0x13e scmd_eh_abort_handler+0x85 process_one_work+0x1a7 worker_thread+0x30 kthread+0x112 ret_from_fork+0x1f Diagram of lockup: CPUA CPUB ---- ---- lpfc_cmd->buf_lock phba->hbalock lpfc_cmd->buf_lock phba->hbalock Fix by reordering the taking of the lpfc_cmd->buf_lock and phba->hbalock in lpfc_abort_handler routine so that it tries to take the lpfc_cmd->buf_lock first before phba->hbalock.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""40E62665-0BA6-440F-83E8-6F8EC2D3C9DF""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/03cbbd7c2f5ee288f648f4aeedc765a181188553"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0c4eed901285b9cae36a622f32bea3e92490da6c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/21c0d469349957b5dc811c41200a2a998996ca8d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7625e81de2164a082810e1f27547d388406da610"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49537,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:29.667,2025-02-26T07:01:29.667,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: lpfc: Fix call trace observed during I/O with CMF enabled The following was seen with CMF enabled: BUG: using smp_processor_id() in preemptible code: systemd-udevd/31711 kernel: caller is lpfc_update_cmf_cmd+0x214/0x420 [lpfc] kernel: CPU: 12 PID: 31711 Comm: systemd-udevd kernel: Call Trace: kernel: <TASK> kernel: dump_stack_lvl+0x44/0x57 kernel: check_preemption_disabled+0xbf/0xe0 kernel: lpfc_update_cmf_cmd+0x214/0x420 [lpfc] kernel: lpfc_nvme_fcp_io_submit+0x23b4/0x4df0 [lpfc] this_cpu_ptr() calls smp_processor_id() in a preemptible context. Fix by using per_cpu_ptr() with raw_smp_processor_id() instead.",,,"[{""url"":""https://git.kernel.org/stable/c/517e0835cfb2007713ff16c4fb8479f08b16aec7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ae373d66c427812754db5292eb1481b181daf9ce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cd7f899de4b1b829125d72ee6fbfd878b637b815"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d6d45f67a11136cb88a70a29ab22ea6db8ae6bd5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49538,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:29.760,2025-03-10T21:14:28.543,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ALSA: jack: Access input_dev under mutex It is possible when using ASoC that input_dev is unregistered while calling snd_jack_report, which causes NULL pointer dereference. In order to prevent this serialize access to input_dev using mutex lock.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""0D4D4067-974D-4560-8320-22FDA399E3F9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1b6a6fc5280e97559287b61eade2d4b363e836f2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/582aea6084cc59fec881204f026816d1219f2348"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5cc6f623f4818c7d7e9e966a45ebf324901ca9c5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/74bab3bcf422593c582e47130aa8eb41ebb2dc09"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8487a88136d54a1a4d3f26f1399685db648ab879"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9e6a73b0c0f2014eb89249fb1640c5a3d58221c4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c093b62c40027c21d649c5534ad7aa3605a99b00"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e2b8681769f6e205382f026b907d28aa5ec9d59a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f68bed124c7699e23ffb4ce4fcc84671e9193cde"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49539,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:29.857,2025-02-26T07:01:29.857,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: rtw89: ser: fix CAM leaks occurring in L2 reset The CAM, meaning address CAM and bssid CAM here, will get leaks during SER (system error recover) L2 reset process and ieee80211_restart_hw() which is called by L2 reset process eventually. The normal flow would be like -> add interface (acquire 1) -> enter ips (release 1) -> leave ips (acquire 1) -> connection (occupy 1) <(A) 1 leak after L2 reset if non-sec connection> The ieee80211_restart_hw() flow (under connection) -> ieee80211 reconfig -> add interface (acquire 1) -> leave ips (acquire 1) -> connection (occupy (A) + 2) <(B) 1 more leak> Originally, CAM is released before HW restart only if connection is under security. Now, release CAM whatever connection it is to fix leak in (A). OTOH, check if CAM is already valid to avoid acquiring multiple times to fix (B). Besides, if AP mode, release address CAM of all stations before HW restart.",,,"[{""url"":""https://git.kernel.org/stable/c/b169f877f001a474fb89939842c390518160bcc5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f6aff772c9978844529618d86aafb53e5d3ae161"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49540,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:29.947,2025-02-26T07:01:29.947,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: rcu-tasks: Fix race in schedule and flush work While booting secondary CPUs, cpus_read_[lock/unlock] is not keeping online cpumask stable. The transient online mask results in below calltrace. [ 0.324121] CPU1: Booted secondary processor 0x0000000001 [0x410fd083] [ 0.346652] Detected PIPT I-cache on CPU2 [ 0.347212] CPU2: Booted secondary processor 0x0000000002 [0x410fd083] [ 0.377255] Detected PIPT I-cache on CPU3 [ 0.377823] CPU3: Booted secondary processor 0x0000000003 [0x410fd083] [ 0.379040] ------------[ cut here ]------------ [ 0.383662] WARNING: CPU: 0 PID: 10 at kernel/workqueue.c:3084 __flush_work+0x12c/0x138 [ 0.384850] Modules linked in: [ 0.385403] CPU: 0 PID: 10 Comm: rcu_tasks_rude_ Not tainted 5.17.0-rc3-v8+ #13 [ 0.386473] Hardware name: Raspberry Pi 4 Model B Rev 1.4 (DT) [ 0.387289] pstate: 20000005 (nzCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--) [ 0.388308] pc : __flush_work+0x12c/0x138 [ 0.388970] lr : __flush_work+0x80/0x138 [ 0.389620] sp : ffffffc00aaf3c60 [ 0.390139] x29: ffffffc00aaf3d20 x28: ffffffc009c16af0 x27: ffffff80f761df48 [ 0.391316] x26: 0000000000000004 x25: 0000000000000003 x24: 0000000000000100 [ 0.392493] x23: ffffffffffffffff x22: ffffffc009c16b10 x21: ffffffc009c16b28 [ 0.393668] x20: ffffffc009e53861 x19: ffffff80f77fbf40 x18: 00000000d744fcc9 [ 0.394842] x17: 000000000000000b x16: 00000000000001c2 x15: ffffffc009e57550 [ 0.396016] x14: 0000000000000000 x13: ffffffffffffffff x12: 0000000100000000 [ 0.397190] x11: 0000000000000462 x10: ffffff8040258008 x9 : 0000000100000000 [ 0.398364] x8 : 0000000000000000 x7 : ffffffc0093c8bf4 x6 : 0000000000000000 [ 0.399538] x5 : 0000000000000000 x4 : ffffffc00a976e40 x3 : ffffffc00810444c [ 0.400711] x2 : 0000000000000004 x1 : 0000000000000000 x0 : 0000000000000000 [ 0.401886] Call trace: [ 0.402309] __flush_work+0x12c/0x138 [ 0.402941] schedule_on_each_cpu+0x228/0x278 [ 0.403693] rcu_tasks_rude_wait_gp+0x130/0x144 [ 0.404502] rcu_tasks_kthread+0x220/0x254 [ 0.405264] kthread+0x174/0x1ac [ 0.405837] ret_from_fork+0x10/0x20 [ 0.406456] irq event stamp: 102 [ 0.406966] hardirqs last enabled at (101): [<ffffffc0093c8468>] _raw_spin_unlock_irq+0x78/0xb4 [ 0.408304] hardirqs last disabled at (102): [<ffffffc0093b8270>] el1_dbg+0x24/0x5c [ 0.409410] softirqs last enabled at (54): [<ffffffc0081b80c8>] local_bh_enable+0xc/0x2c [ 0.410645] softirqs last disabled at (50): [<ffffffc0081b809c>] local_bh_disable+0xc/0x2c [ 0.411890] ---[ end trace 0000000000000000 ]--- [ 0.413000] smp: Brought up 1 node, 4 CPUs [ 0.413762] SMP: Total of 4 processors activated. [ 0.414566] CPU features: detected: 32-bit EL0 Support [ 0.415414] CPU features: detected: 32-bit EL1 Support [ 0.416278] CPU features: detected: CRC32 instructions [ 0.447021] Callback from call_rcu_tasks_rude() invoked. [ 0.506693] Callback from call_rcu_tasks() invoked. This commit therefore fixes this issue by applying a single-CPU optimization to the RCU Tasks Rude grace-period process. The key point here is that the purpose of this RCU flavor is to force a schedule on each online CPU since some past event. But the rcu_tasks_rude_wait_gp() function runs in the context of the RCU Tasks Rude's grace-period kthread, so there must already have been a context switch on the current CPU since the call to either synchronize_rcu_tasks_rude() or call_rcu_tasks_rude(). So if there is only a single CPU online, RCU Tasks Rude's grace-period kthread does not need to anything at all. It turns out that the rcu_tasks_rude_wait_gp() function's call to schedule_on_each_cpu() causes problems during early boot. During that time, there is only one online CPU, namely the boot CPU. Therefore, applying this single-CPU optimization fixes early-boot instances of this problem.",,,"[{""url"":""https://git.kernel.org/stable/c/1c6c3f2336642fb3074593911f5176565f47ec41"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/230bf5878af6038dfb63d9184272a58475236580"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8f49a8758b5cd541bd7aa9a0d0d11c7426141c0e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ba722d061bc4b54802d701fc63fc2fd988934603"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f75fd4b9221d93177c50dcfde671b2e907f53e86"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49541,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:30.043,2025-03-10T21:31:11.947,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: cifs: fix potential double free during failed mount RHBZ: https://bugzilla.redhat.com/show_bug.cgi?id=2088799","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-415""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""40E62665-0BA6-440F-83E8-6F8EC2D3C9DF""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/8378a51e3f8140f60901fb27208cc7a6e47047b5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9a167fc440e5693c1cdd7f07071e05658bd9d89d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ce0008a0e410cdd95f0d8cd81b2902ec10a660c4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ee71f8f1cd3c8c4a251fd3e8abc89215ae3457cb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49542,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:30.133,2025-03-10T21:31:15.750,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: lpfc: Move cfg_log_verbose check before calling lpfc_dmp_dbg() In an attempt to log message 0126 with LOG_TRACE_EVENT, the following hard lockup call trace hangs the system. Call Trace: _raw_spin_lock_irqsave+0x32/0x40 lpfc_dmp_dbg.part.32+0x28/0x220 [lpfc] lpfc_cmpl_els_fdisc+0x145/0x460 [lpfc] lpfc_sli_cancel_jobs+0x92/0xd0 [lpfc] lpfc_els_flush_cmd+0x43c/0x670 [lpfc] lpfc_els_flush_all_cmd+0x37/0x60 [lpfc] lpfc_sli4_async_event_proc+0x956/0x1720 [lpfc] lpfc_do_work+0x1485/0x1d70 [lpfc] kthread+0x112/0x130 ret_from_fork+0x1f/0x40 Kernel panic - not syncing: Hard LOCKUP The same CPU tries to claim the phba->port_list_lock twice. Move the cfg_log_verbose checks as part of the lpfc_printf_vlog() and lpfc_printf_log() macros before calling lpfc_dmp_dbg(). There is no need to take the phba->port_list_lock within lpfc_dmp_dbg().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""40E62665-0BA6-440F-83E8-6F8EC2D3C9DF""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/09c772557a4fd9490fed1bfb133268313ea22213"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/271725e4028559ae7974d762a8467dc9de412f2e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cc6501afccec55b8b6c90584cbf71f1fefa77d1e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e294647b1aed4247fe52851f3a3b2b19ae906228"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49543,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:30.220,2025-02-26T07:01:30.220,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ath11k: fix the warning of dev_wake in mhi_pm_disable_transition() When test device recovery with below command, it has warning in message as below. echo assert > /sys/kernel/debug/ath11k/wcn6855\ hw2.0/simulate_fw_crash echo assert > /sys/kernel/debug/ath11k/qca6390\ hw2.0/simulate_fw_crash warning message: [ 1965.642121] ath11k_pci 0000:06:00.0: simulating firmware assert crash [ 1968.471364] ieee80211 phy0: Hardware restart was requested [ 1968.511305] ------------[ cut here ]------------ [ 1968.511368] WARNING: CPU: 3 PID: 1546 at drivers/bus/mhi/core/pm.c:505 mhi_pm_disable_transition+0xb37/0xda0 [mhi] [ 1968.511443] Modules linked in: ath11k_pci ath11k mac80211 libarc4 cfg80211 qmi_helpers qrtr_mhi mhi qrtr nvme nvme_core [ 1968.511563] CPU: 3 PID: 1546 Comm: kworker/u17:0 Kdump: loaded Tainted: G W 5.17.0-rc3-wt-ath+ #579 [ 1968.511629] Hardware name: Intel(R) Client Systems NUC8i7HVK/NUC8i7HVB, BIOS HNKBLi70.86A.0067.2021.0528.1339 05/28/2021 [ 1968.511704] Workqueue: mhi_hiprio_wq mhi_pm_st_worker [mhi] [ 1968.511787] RIP: 0010:mhi_pm_disable_transition+0xb37/0xda0 [mhi] [ 1968.511870] Code: a9 fe ff ff 4c 89 ff 44 89 04 24 e8 03 46 f6 e5 44 8b 04 24 41 83 f8 01 0f 84 21 fe ff ff e9 4c fd ff ff 0f 0b e9 af f8 ff ff <0f> 0b e9 5c f8 ff ff 48 89 df e8 da 9e ee e3 e9 12 fd ff ff 4c 89 [ 1968.511923] RSP: 0018:ffffc900024efbf0 EFLAGS: 00010286 [ 1968.511969] RAX: 00000000ffffffff RBX: ffff88811d241250 RCX: ffffffffc0176922 [ 1968.512014] RDX: 0000000000000000 RSI: 0000000000000004 RDI: ffff888118a90a24 [ 1968.512059] RBP: ffff888118a90800 R08: 0000000000000000 R09: ffff888118a90a27 [ 1968.512102] R10: ffffed1023152144 R11: 0000000000000001 R12: ffff888118a908ac [ 1968.512229] R13: ffff888118a90928 R14: dffffc0000000000 R15: ffff888118a90a24 [ 1968.512310] FS: 0000000000000000(0000) GS:ffff888234200000(0000) knlGS:0000000000000000 [ 1968.512405] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 1968.512493] CR2: 00007f5538f443a8 CR3: 000000016dc28001 CR4: 00000000003706e0 [ 1968.512587] Call Trace: [ 1968.512672] <TASK> [ 1968.512751] ? _raw_spin_unlock_irq+0x1f/0x40 [ 1968.512859] mhi_pm_st_worker+0x3ac/0x790 [mhi] [ 1968.512959] ? mhi_pm_mission_mode_transition.isra.0+0x7d0/0x7d0 [mhi] [ 1968.513063] process_one_work+0x86a/0x1400 [ 1968.513184] ? pwq_dec_nr_in_flight+0x230/0x230 [ 1968.513312] ? move_linked_works+0x125/0x290 [ 1968.513416] worker_thread+0x6db/0xf60 [ 1968.513536] ? process_one_work+0x1400/0x1400 [ 1968.513627] kthread+0x241/0x2d0 [ 1968.513733] ? kthread_complete_and_exit+0x20/0x20 [ 1968.513821] ret_from_fork+0x22/0x30 [ 1968.513924] </TASK> Reason is mhi_deassert_dev_wake() from mhi_device_put() is called but mhi_assert_dev_wake() from __mhi_device_get_sync() is not called in progress of recovery. Commit 8e0559921f9a (""bus: mhi: core: Skip device wake in error or shutdown state"") add check for the pm_state of mhi in __mhi_device_get_sync(), and the pm_state is not the normal state untill recovery is completed, so it leads the dev_wake is not 0 and above warning print in mhi_pm_disable_transition() while checking mhi_cntrl->dev_wake. Add check in ath11k_pci_write32()/ath11k_pci_read32() to skip call mhi_device_put() if mhi_device_get_sync() does not really do wake, then the warning gone. Tested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03003-QCAHSPSWPL_V1_V2_SILICONZ_LITE-2",,,"[{""url"":""https://git.kernel.org/stable/c/0d7a8a6204ea9271f1d0a8c66a9fd2f54d2e3cbc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5f18206cddae033c488e4879f198699092ca0524"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a2d9b7357469949ad02f511fc69f8fa3a1afbf89"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49544,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:30.313,2025-03-10T21:14:07.310,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ipw2x00: Fix potential NULL dereference in libipw_xmit() crypt and crypt->ops could be null, so we need to checking null before dereference","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.318"",""matchCriteriaId"":""0D4D4067-974D-4560-8320-22FDA399E3F9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.283"",""matchCriteriaId"":""D6823775-2653-4644-A0D4-4E6E68F10C65""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.247"",""matchCriteriaId"":""B8CFA0F4-2D75-41F4-9753-87944A08B53B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.198"",""matchCriteriaId"":""3EC49633-14DE-4EBD-BB80-76AE2E3EABB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""34ACD872-E5BC-401C-93D5-B357A62426E0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/167affc11781d7d35c4c3a7630a549ac74dd0b21"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1ff6b0727c8988f25eeb670b6c038c1120bb58dd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/48d4a820fd33f012e5f63735a59d15b5a3882882"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/528d2023ccf4748fd542582955236c1634a7d293"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5f7ea274e88c0eeffe6bd6dbf6cf5c479d356af6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8fb1b9beb085bb767ae43e441db5ac6fcd66a04d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/98d1dc32f890642476dbb78ed3437a456bf421b0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b4628e0d3754ab2fc98ee6e3d21851ba45798077"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e8366bbabe1d207cf7c5b11ae50e223ae6fc278b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49545,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:30.410,2025-02-26T07:01:30.410,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ALSA: usb-audio: Cancel pending work at closing a MIDI substream At closing a USB MIDI output substream, there might be still a pending work, which would eventually access the rawmidi runtime object that is being released. For fixing the race, make sure to cancel the pending work at closing.",,,"[{""url"":""https://git.kernel.org/stable/c/0125de38122f0f66bf61336158d12a1aabfe6425"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/11868ca21585561659c2575b0d6508ef8e9c4291"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/40bdb5ec957aca5c5c1924602bef6b0ab18e22d3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/517dcef4d2dda0132648f1e4c079ed17bba4d1a4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5e5fe2b6065541c6216a7a003b0cddf386be0d2d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49546,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:30.500,2025-04-10T13:15:43.550,Modified,[],"In the Linux kernel, the following vulnerability has been resolved: x86/kexec: fix memory leak of elf header buffer This is reported by kmemleak detector: unreferenced object 0xffffc900002a9000 (size 4096): comm ""kexec"", pid 14950, jiffies 4295110793 (age 373.951s) hex dump (first 32 bytes): 7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 .ELF............ 04 00 3e 00 01 00 00 00 00 00 00 00 00 00 00 00 ..>............. backtrace: [<0000000016a8ef9f>] __vmalloc_node_range+0x101/0x170 [<000000002b66b6c0>] __vmalloc_node+0xb4/0x160 [<00000000ad40107d>] crash_prepare_elf64_headers+0x8e/0xcd0 [<0000000019afff23>] crash_load_segments+0x260/0x470 [<0000000019ebe95c>] bzImage64_load+0x814/0xad0 [<0000000093e16b05>] arch_kexec_kernel_image_load+0x1be/0x2a0 [<000000009ef2fc88>] kimage_file_alloc_init+0x2ec/0x5a0 [<0000000038f5a97a>] __do_sys_kexec_file_load+0x28d/0x530 [<0000000087c19992>] do_syscall_64+0x3b/0x90 [<0000000066e063a4>] entry_SYSCALL_64_after_hwframe+0x44/0xae In crash_prepare_elf64_headers(), a buffer is allocated via vmalloc() to store elf headers. While it's not freed back to system correctly when kdump kernel is reloaded or unloaded. Then memory leak is caused. Fix it by introducing x86 specific function arch_kimage_file_post_load_cleanup(), and freeing the buffer there. And also remove the incorrect elf header buffer freeing code. Before calling arch specific kexec_file loading function, the image instance has been initialized. So 'image->elf_headers' must be NULL. It doesn't make sense to free the elf header buffer in the place. Three different people have reported three bugs about the memory leak on x86_64 inside Redhat.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""40E62665-0BA6-440F-83E8-6F8EC2D3C9DF""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/115ee42a4c2f26ba2b4ace2668a3f004621f6833"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/23cf39dccf7653650701a6f39b119e9116a27f1a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8765a423a87d74ef24ea02b43b2728fe4039f248"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b3e34a47f98974d0844444c5121aaff123004e57"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f675e3a9189d84a9324ab45b0cb19906c2bc8fcb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49547,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:30.590,2025-03-10T21:31:42.100,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: btrfs: fix deadlock between concurrent dio writes when low on free data space When reserving data space for a direct IO write we can end up deadlocking if we have multiple tasks attempting a write to the same file range, there are multiple extents covered by that file range, we are low on available space for data and the writes don't expand the inode's i_size. The deadlock can happen like this: 1) We have a file with an i_size of 1M, at offset 0 it has an extent with a size of 128K and at offset 128K it has another extent also with a size of 128K; 2) Task A does a direct IO write against file range [0, 256K), and because the write is within the i_size boundary, it takes the inode's lock (VFS level) in shared mode; 3) Task A locks the file range [0, 256K) at btrfs_dio_iomap_begin(), and then gets the extent map for the extent covering the range [0, 128K). At btrfs_get_blocks_direct_write(), it creates an ordered extent for that file range ([0, 128K)); 4) Before returning from btrfs_dio_iomap_begin(), it unlocks the file range [0, 256K); 5) Task A executes btrfs_dio_iomap_begin() again, this time for the file range [128K, 256K), and locks the file range [128K, 256K); 6) Task B starts a direct IO write against file range [0, 256K) as well. It also locks the inode in shared mode, as it's within the i_size limit, and then tries to lock file range [0, 256K). It is able to lock the subrange [0, 128K) but then blocks waiting for the range [128K, 256K), as it is currently locked by task A; 7) Task A enters btrfs_get_blocks_direct_write() and tries to reserve data space. Because we are low on available free space, it triggers the async data reclaim task, and waits for it to reserve data space; 8) The async reclaim task decides to wait for all existing ordered extents to complete (through btrfs_wait_ordered_roots()). It finds the ordered extent previously created by task A for the file range [0, 128K) and waits for it to complete; 9) The ordered extent for the file range [0, 128K) can not complete because it blocks at btrfs_finish_ordered_io() when trying to lock the file range [0, 128K). This results in a deadlock, because: - task B is holding the file range [0, 128K) locked, waiting for the range [128K, 256K) to be unlocked by task A; - task A is holding the file range [128K, 256K) locked and it's waiting for the async data reclaim task to satisfy its space reservation request; - the async data reclaim task is waiting for ordered extent [0, 128K) to complete, but the ordered extent can not complete because the file range [0, 128K) is currently locked by task B, which is waiting on task A to unlock file range [128K, 256K) and task A waiting on the async data reclaim task. This results in a deadlock between 4 task: task A, task B, the async data reclaim task and the task doing ordered extent completion (a work queue task). This type of deadlock can sporadically be triggered by the test case generic/300 from fstests, and results in a stack trace like the following: [12084.033689] INFO: task kworker/u16:7:123749 blocked for more than 241 seconds. [12084.034877] Not tainted 5.18.0-rc2-btrfs-next-115 #1 [12084.035562] ""echo 0 > /proc/sys/kernel/hung_task_timeout_secs"" disables this message. [12084.036548] task:kworker/u16:7 state:D stack: 0 pid:123749 ppid: 2 flags:0x00004000 [12084.036554] Workqueue: btrfs-flush_delalloc btrfs_work_helper [btrfs] [12084.036599] Call Trace: [12084.036601] <TASK> [12084.036606] __schedule+0x3cb/0xed0 [12084.036616] schedule+0x4e/0xb0 [12084.036620] btrfs_start_ordered_extent+0x109/0x1c0 [btrfs] [12084.036651] ? prepare_to_wait_exclusive+0xc0/0xc0 [12084.036659] btrfs_run_ordered_extent_work+0x1a/0x30 [btrfs] [12084.036688] btrfs_work_helper+0xf8/0x400 [btrfs] [12084.0367 ---truncated---","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15.27"",""versionEndExcluding"":""5.16"",""matchCriteriaId"":""682E95CF-F3D0-4417-B632-F8B6EE54D517""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16.13"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""21CCFEA4-A572-4BBD-ACCC-76ADE4CDCBF9""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/cfae6f765b3c40882ee90dae8fbf9325c8de9c35"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f5585f4f0ef5b17026bbd60fbff6fcc91b99d5bf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49548,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:30.683,2025-03-10T21:32:17.530,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: bpf: Fix potential array overflow in bpf_trampoline_get_progs() The cnt value in the 'cnt >= BPF_MAX_TRAMP_PROGS' check does not include BPF_TRAMP_MODIFY_RETURN bpf programs, so the number of the attached BPF_TRAMP_MODIFY_RETURN bpf programs in a trampoline can exceed BPF_MAX_TRAMP_PROGS. When this happens, the assignment '*progs++ = aux->prog' in bpf_trampoline_get_progs() will cause progs array overflow as the progs field in the bpf_tramp_progs struct can only hold at most BPF_MAX_TRAMP_PROGS bpf programs.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-129""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.7"",""versionEndExcluding"":""5.10.120"",""matchCriteriaId"":""78702CD4-AEE5-45F6-90C7-1EB25AF09D08""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.45"",""matchCriteriaId"":""08D699AD-F4CE-4BDD-A97E-4997299C7712""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.13"",""matchCriteriaId"":""192FC54B-5367-49D6-B410-0285F14665B1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.2"",""matchCriteriaId"":""9FF255A1-64F4-4E31-AF44-C92FB8773BA2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/32c4559c61652f24c9fdd5440342196fe37453bc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4f8897bcc20b9ae44758e0572538d741ab66f0dc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7f845de2863334bed4f362e95853f5e7bc323737"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a2aa95b71c9bbec793b5c5fa50f0a80d882b3e8d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e36452d5da6325df7c10cffc60a9e68d21e2606d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49549,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:30.773,2025-03-10T21:22:55.893,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: x86/MCE/AMD: Fix memory leak when threshold_create_bank() fails In mce_threshold_create_device(), if threshold_create_bank() fails, the previously allocated threshold banks array @bp will be leaked because the call to mce_threshold_remove_device() will not free it. This happens because mce_threshold_remove_device() fetches the pointer through the threshold_banks per-CPU variable but bp is written there only after the bank creation is successful, and not before, when threshold_create_bank() fails. Add a helper which unwinds all the bank creation work previously done and pass into it the previously allocated threshold banks array for freeing. [ bp: Massage. ]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.8"",""versionEndExcluding"":""5.10.121"",""matchCriteriaId"":""6EB90EB1-2051-4828-B7F9-DDA87FD914C2""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""20D41697-0E8B-4B7D-8842-F17BF2AA21E1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/396b8e7ab2a99ddac57d3522b3da5e58cb608d37"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9708f1956eeb70c86943e0bc62fa3b0101b59616"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b4acb8e7f1594607bc9017ef0aacb40b24a003d6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cc0dd4456f9573bf8af9b4d8754433918e809e1e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e5f28623ceb103e13fc3d7bd45edf9818b227fd0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49550,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:30.863,2025-03-10T21:23:20.777,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: fs/ntfs3: provide block_invalidate_folio to fix memory leak The ntfs3 filesystem lacks the 'invalidate_folio' method and it causes memory leak. If you write to the filesystem and then unmount it, the cached written data are not freed and they are permanently leaked.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0753245a72ec99824677586499ee2e0919164b3f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/724bbe49c5e427cb077357d72d240a649f2e4054"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49551,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:30.950,2025-03-10T21:27:26.720,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: usb: isp1760: Fix out-of-bounds array access Running the driver through kasan gives an interesting splat: BUG: KASAN: global-out-of-bounds in isp1760_register+0x180/0x70c Read of size 20 at addr f1db2e64 by task swapper/0/1 (...) isp1760_register from isp1760_plat_probe+0x1d8/0x220 (...) This happens because the loop reading the regmap fields for the different ISP1760 variants look like this: for (i = 0; i < HC_FIELD_MAX; i++) { ... } Meaning it expects the arrays to be at least HC_FIELD_MAX - 1 long. However the arrays isp1760_hc_reg_fields[], isp1763_hc_reg_fields[], isp1763_hc_volatile_ranges[] and isp1763_dc_volatile_ranges[] are dynamically sized during compilation. Fix this by putting an empty assignment to the [HC_FIELD_MAX] and [DC_FIELD_MAX] array member at the end of each array. This will make the array one member longer than it needs to be, but avoids the risk of overwriting whatever is inside [HC_FIELD_MAX - 1] and is simple and intuitive to read. Also add comments explaining what is going on.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-125""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14"",""versionEndExcluding"":""5.15.46"",""matchCriteriaId"":""A27CF019-1F16-43FA-97F2-4D8F23EA7101""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.14"",""matchCriteriaId"":""15E2DD33-2255-4B76-9C15-04FF8CBAB252""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.3"",""matchCriteriaId"":""8E122216-2E9E-4B3E-B7B8-D575A45BA3C2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/26ae2c942b5702f2e43d36b2a4389cfb7d616b6a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/463bddd3ff1acf4036ddb80c34a715eb99debf46"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/47d39cb57e8669e507d17d9e0d067d2b3e3a87ae"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bf2558bbdce3ab1d6bcba09f354914e4515d0a2b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"",""baseScore"":7.1,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.2}]",,,,,,,,
CVE-2022-49552,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:31.040,2025-02-26T07:01:31.040,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: bpf: Fix combination of jit blinding and pointers to bpf subprogs. The combination of jit blinding and pointers to bpf subprogs causes: [ 36.989548] BUG: unable to handle page fault for address: 0000000100000001 [ 36.990342] #PF: supervisor instruction fetch in kernel mode [ 36.990968] #PF: error_code(0x0010) - not-present page [ 36.994859] RIP: 0010:0x100000001 [ 36.995209] Code: Unable to access opcode bytes at RIP 0xffffffd7. [ 37.004091] Call Trace: [ 37.004351] <TASK> [ 37.004576] ? bpf_loop+0x4d/0x70 [ 37.004932] ? bpf_prog_3899083f75e4c5de_F+0xe3/0x13b The jit blinding logic didn't recognize that ld_imm64 with an address of bpf subprogram is a special instruction and proceeded to randomize it. By itself it wouldn't have been an issue, but jit_subprogs() logic relies on two step process to JIT all subprogs and then JIT them again when addresses of all subprogs are known. Blinding process in the first JIT phase caused second JIT to miss adjustment of special ld_imm64. Fix this issue by ignoring special ld_imm64 instructions that don't have user controlled constants and shouldn't be blinded.",,,"[{""url"":""https://git.kernel.org/stable/c/4b6313cf99b0d51b49aeaea98ec76ca8161ecb80"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a029b02b47dd5bb87a21550d9d9a80cb4dd3f714"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d106a3e96fca30e44081eae9c27aab28fc132a46"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49553,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:31.133,2025-02-26T07:01:31.133,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: fs/ntfs3: validate BOOT sectors_per_clusters When the NTFS BOOT sectors_per_clusters field is > 0x80, it represents a shift value. Make sure that the shift value is not too large before using it (NTFS max cluster size is 2MB). Return -EVINVAL if it too large. This prevents negative shift values and shift values that are larger than the field size. Prevents this UBSAN error: UBSAN: shift-out-of-bounds in ../fs/ntfs3/super.c:673:16 shift exponent -192 is negative",,,"[{""url"":""https://git.kernel.org/stable/c/4746c49b11b2403f5b5b07c6eac9e60663dcd9a3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/58cf68a1886d14ffdc5c892ce483a82156769e88"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a2b6986316a2d106f6951e76db70fa4b2fde64a9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a3b774342fa752a5290c0de36375289dfcf4a260"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49554,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:31.223,2025-02-26T07:01:31.223,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: zsmalloc: fix races between asynchronous zspage free and page migration The asynchronous zspage free worker tries to lock a zspage's entire page list without defending against page migration. Since pages which haven't yet been locked can concurrently migrate off the zspage page list while lock_zspage() churns away, lock_zspage() can suffer from a few different lethal races. It can lock a page which no longer belongs to the zspage and unsafely dereference page_private(), it can unsafely dereference a torn pointer to the next page (since there's a data race), and it can observe a spurious NULL pointer to the next page and thus not lock all of the zspage's pages (since a single page migration will reconstruct the entire page list, and create_page_chain() unconditionally zeroes out each list pointer in the process). Fix the races by using migrate_read_lock() in lock_zspage() to synchronize with page migration.",,,"[{""url"":""https://git.kernel.org/stable/c/2505a981114dcb715f8977b8433f7540854851d8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3674d8a8dadd03a447dd21069d4dacfc3399b63b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3ec459c8810e658401be428d3168eacfc380bdd0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/645996efc2ae391246d595832aaa6f9d3cc338c7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8ba7b7c1dad1f6503c541778f31b33f7f62eb966"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c5402fb5f71f1a725f1e55d9c6799c0c7bec308f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fae05b2314b147a78fbed1dc4c645d9a66313758"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fc658c083904427abbf8f18280d517ee2668677c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49555,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:31.313,2025-02-26T07:01:31.313,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: Bluetooth: hci_qca: Use del_timer_sync() before freeing While looking at a crash report on a timer list being corrupted, which usually happens when a timer is freed while still active. This is commonly triggered by code calling del_timer() instead of del_timer_sync() just before freeing. One possible culprit is the hci_qca driver, which does exactly that. Eric mentioned that wake_retrans_timer could be rearmed via the work queue, so also move the destruction of the work queue before del_timer_sync().",,,"[{""url"":""https://git.kernel.org/stable/c/2717654ae022e6ea959a4b7b762702fe1a4690c2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/37d17f63d085d601011964ade7371aeebeb6ed4b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4989bb03342941f2b730b37dfa38bce27b543661"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/72ef98445aca568a81c2da050532500a8345ad3a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/db03727b4bbbbb36e6ef4cb655c670eefb6448e9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49556,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:31.407,2025-02-26T07:01:31.407,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: KVM: SVM: Use kzalloc for sev ioctl interfaces to prevent kernel data leak For some sev ioctl interfaces, the length parameter that is passed maybe less than or equal to SEV_FW_BLOB_MAX_SIZE, but larger than the data that PSP firmware returns. In this case, kmalloc will allocate memory that is the size of the input rather than the size of the data. Since PSP firmware doesn't fully overwrite the allocated buffer, these sev ioctl interface may return uninitialized kernel slab memory.",,,"[{""url"":""https://git.kernel.org/stable/c/401bef1f95de92c3a8c6eece46e02fa88d7285ee"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/57a01725339f9d82b099102ba2751621b1caab93"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bbdcc644b59e01e98c68894a9fab42b9687f42b0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d22d2474e3953996f03528b84b7f52cc26a39403"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d8fdb4b24097472ff6b3c0559448200d420b1418"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49557,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:31.503,2025-02-26T07:01:31.503,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: x86/fpu: KVM: Set the base guest FPU uABI size to sizeof(struct kvm_xsave) Set the starting uABI size of KVM's guest FPU to 'struct kvm_xsave', i.e. to KVM's historical uABI size. When saving FPU state for usersapce, KVM (well, now the FPU) sets the FP+SSE bits in the XSAVE header even if the host doesn't support XSAVE. Setting the XSAVE header allows the VM to be migrated to a host that does support XSAVE without the new host having to handle FPU state that may or may not be compatible with XSAVE. Setting the uABI size to the host's default size results in out-of-bounds writes (setting the FP+SSE bits) and data corruption (that is thankfully caught by KASAN) when running on hosts without XSAVE, e.g. on Core2 CPUs. WARN if the default size is larger than KVM's historical uABI size; all features that can push the FPU size beyond the historical size must be opt-in. ================================================================== BUG: KASAN: slab-out-of-bounds in fpu_copy_uabi_to_guest_fpstate+0x86/0x130 Read of size 8 at addr ffff888011e33a00 by task qemu-build/681 CPU: 1 PID: 681 Comm: qemu-build Not tainted 5.18.0-rc5-KASAN-amd64 #1 Hardware name: /DG35EC, BIOS ECG3510M.86A.0118.2010.0113.1426 01/13/2010 Call Trace: <TASK> dump_stack_lvl+0x34/0x45 print_report.cold+0x45/0x575 kasan_report+0x9b/0xd0 fpu_copy_uabi_to_guest_fpstate+0x86/0x130 kvm_arch_vcpu_ioctl+0x72a/0x1c50 [kvm] kvm_vcpu_ioctl+0x47f/0x7b0 [kvm] __x64_sys_ioctl+0x5de/0xc90 do_syscall_64+0x31/0x50 entry_SYSCALL_64_after_hwframe+0x44/0xae </TASK> Allocated by task 0: (stack is not available) The buggy address belongs to the object at ffff888011e33800 which belongs to the cache kmalloc-512 of size 512 The buggy address is located 0 bytes to the right of 512-byte region [ffff888011e33800, ffff888011e33a00) The buggy address belongs to the physical page: page:0000000089cd4adb refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x11e30 head:0000000089cd4adb order:2 compound_mapcount:0 compound_pincount:0 flags: 0x4000000000010200(slab|head|zone=1) raw: 4000000000010200 dead000000000100 dead000000000122 ffff888001041c80 raw: 0000000000000000 0000000080100010 00000001ffffffff 0000000000000000 page dumped because: kasan: bad access detected Memory state around the buggy address: ffff888011e33900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ffff888011e33980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 >ffff888011e33a00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc ^ ffff888011e33a80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc ffff888011e33b00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc ================================================================== Disabling lock debugging due to kernel taint",,,"[{""url"":""https://git.kernel.org/stable/c/9cf15ebb7dedfe2f27120743b8ea8441c99ac73c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c181acbd1a427859d5fda543b95fbae28f7f6068"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d187ba5312307d51818beafaad87d28a7d939adf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49558,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:31.597,2025-06-19T13:15:23.990,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: netfilter: nf_tables: double hook unregistration in netns path __nft_release_hooks() is called from pre_netns exit path which unregisters the hooks, then the NETDEV_UNREGISTER event is triggered which unregisters the hooks again. [ 565.221461] WARNING: CPU: 18 PID: 193 at net/netfilter/core.c:495 __nf_unregister_net_hook+0x247/0x270 [...] [ 565.246890] CPU: 18 PID: 193 Comm: kworker/u64:1 Tainted: G E 5.18.0-rc7+ #27 [ 565.253682] Workqueue: netns cleanup_net [ 565.257059] RIP: 0010:__nf_unregister_net_hook+0x247/0x270 [...] [ 565.297120] Call Trace: [ 565.300900] <TASK> [ 565.304683] nf_tables_flowtable_event+0x16a/0x220 [nf_tables] [ 565.308518] raw_notifier_call_chain+0x63/0x80 [ 565.312386] unregister_netdevice_many+0x54f/0xb50 Unregister and destroy netdev hook from netns pre_exit via kfree_rcu so the NETDEV_UNREGISTER path see unregistered hooks.",,,"[{""url"":""https://git.kernel.org/stable/c/3fac8ce48fa9fd61ee9056d3ed48b2edefca8b82"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/86c0154f4c3a56c5db8b9dd09e3ce885382c2c19"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9c413a8c8bb49cc16796371805ecb260e885bb2b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a3940dcf552f2393d1e8f263b386593f98abe829"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b09e6ccf0d12f9356e8e3508d3e3dce126298538"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f9a43007d3f7ba76d5e7f9421094f00f2ef202f8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49559,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:31.687,2025-02-26T07:01:31.687,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: KVM: x86: Drop WARNs that assert a triple fault never ""escapes"" from L2 Remove WARNs that sanity check that KVM never lets a triple fault for L2 escape and incorrectly end up in L1. In normal operation, the sanity check is perfectly valid, but it incorrectly assumes that it's impossible for userspace to induce KVM_REQ_TRIPLE_FAULT without bouncing through KVM_RUN (which guarantees kvm_check_nested_state() will see and handle the triple fault). The WARN can currently be triggered if userspace injects a machine check while L2 is active and CR4.MCE=0. And a future fix to allow save/restore of KVM_REQ_TRIPLE_FAULT, e.g. so that a synthesized triple fault isn't lost on migration, will make it trivially easy for userspace to trigger the WARN. Clearing KVM_REQ_TRIPLE_FAULT when forcibly leaving guest mode is tempting, but wrong, especially if/when the request is saved/restored, e.g. if userspace restores events (including a triple fault) and then restores nested state (which may forcibly leave guest mode). Ignoring the fact that KVM doesn't currently provide the necessary APIs, it's userspace's responsibility to manage pending events during save/restore. ------------[ cut here ]------------ WARNING: CPU: 7 PID: 1399 at arch/x86/kvm/vmx/nested.c:4522 nested_vmx_vmexit+0x7fe/0xd90 [kvm_intel] Modules linked in: kvm_intel kvm irqbypass CPU: 7 PID: 1399 Comm: state_test Not tainted 5.17.0-rc3+ #808 Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015 RIP: 0010:nested_vmx_vmexit+0x7fe/0xd90 [kvm_intel] Call Trace: <TASK> vmx_leave_nested+0x30/0x40 [kvm_intel] vmx_set_nested_state+0xca/0x3e0 [kvm_intel] kvm_arch_vcpu_ioctl+0xf49/0x13e0 [kvm] kvm_vcpu_ioctl+0x4b9/0x660 [kvm] __x64_sys_ioctl+0x83/0xb0 do_syscall_64+0x3b/0xc0 entry_SYSCALL_64_after_hwframe+0x44/0xae </TASK> ---[ end trace 0000000000000000 ]---",,,"[{""url"":""https://git.kernel.org/stable/c/45846661d10422ce9e22da21f8277540b29eca22"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7de373c9b48229e428ecdb8fbde269c5a8617fd2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8d3a2aa0976f57320ba89baf9d57fb158dd0cd0d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f476a59d5c86c02a79eef893c6da86735f2977ac"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49560,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:31.780,2025-03-10T21:25:29.677,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: exfat: check if cluster num is valid Syzbot reported slab-out-of-bounds read in exfat_clear_bitmap. This was triggered by reproducer calling truncute with size 0, which causes the following trace: BUG: KASAN: slab-out-of-bounds in exfat_clear_bitmap+0x147/0x490 fs/exfat/balloc.c:174 Read of size 8 at addr ffff888115aa9508 by task syz-executor251/365 Call Trace: __dump_stack lib/dump_stack.c:77 [inline] dump_stack_lvl+0x1e2/0x24b lib/dump_stack.c:118 print_address_description+0x81/0x3c0 mm/kasan/report.c:233 __kasan_report mm/kasan/report.c:419 [inline] kasan_report+0x1a4/0x1f0 mm/kasan/report.c:436 __asan_report_load8_noabort+0x14/0x20 mm/kasan/report_generic.c:309 exfat_clear_bitmap+0x147/0x490 fs/exfat/balloc.c:174 exfat_free_cluster+0x25a/0x4a0 fs/exfat/fatent.c:181 __exfat_truncate+0x99e/0xe00 fs/exfat/file.c:217 exfat_truncate+0x11b/0x4f0 fs/exfat/file.c:243 exfat_setattr+0xa03/0xd40 fs/exfat/file.c:339 notify_change+0xb76/0xe10 fs/attr.c:336 do_truncate+0x1ea/0x2d0 fs/open.c:65 Move the is_valid_cluster() helper from fatent.c to a common header to make it reusable in other *.c files. And add is_valid_cluster() to validate if cluster number is within valid range in exfat_clear_bitmap() and exfat_set_bitmap().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-125""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.7"",""versionEndExcluding"":""5.10.120"",""matchCriteriaId"":""78702CD4-AEE5-45F6-90C7-1EB25AF09D08""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.45"",""matchCriteriaId"":""08D699AD-F4CE-4BDD-A97E-4997299C7712""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.17.13"",""matchCriteriaId"":""192FC54B-5367-49D6-B410-0285F14665B1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.2"",""matchCriteriaId"":""9FF255A1-64F4-4E31-AF44-C92FB8773BA2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2193286402df2d9c53294f7a858d5e6fd7346e08"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/64ba4b15e5c045f8b746c6da5fc9be9a6b00b61d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7c58b14b6f9cde9f69e7fa053ab73f6e013a7131"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/82f723b8a5adf497f9e34c702a30ca7298615654"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c504167adc3248095a905fa0700a9693897cb5ed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"",""baseScore"":7.1,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.2}]",,,,,,,,
CVE-2022-49561,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:31.877,2025-02-26T07:01:31.877,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: netfilter: conntrack: re-fetch conntrack after insertion In case the conntrack is clashing, insertion can free skb->_nfct and set skb->_nfct to the already-confirmed entry. This wasn't found before because the conntrack entry and the extension space used to free'd after an rcu grace period, plus the race needs events enabled to trigger.",,,"[{""url"":""https://git.kernel.org/stable/c/01989d7eebb61c99bd4b88ebc8e261bd2f02caed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/04e4a11dc723c52db7a36dc58f0d69ce6426f8f0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/04f9e9104c969d8ce10a4a43634f641ed082092d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/56b14ecec97f39118bf85c9ac2438c5a949509ed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/91a36ec160ec1a0c8f5352b772dffcbb0b6023e3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/92a999d1963eed0df666284e20055136ceabd12f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b16bb373988da3ceb0308381634117e18b6ec60d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e97222b785e70e8973281666d709baad6523d8af"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49562,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:31.970,2025-02-26T07:01:31.970,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: KVM: x86: Use __try_cmpxchg_user() to update guest PTE A/D bits Use the recently introduced __try_cmpxchg_user() to update guest PTE A/D bits instead of mapping the PTE into kernel address space. The VM_PFNMAP path is broken as it assumes that vm_pgoff is the base pfn of the mapped VMA range, which is conceptually wrong as vm_pgoff is the offset relative to the file and has nothing to do with the pfn. The horrific hack worked for the original use case (backing guest memory with /dev/mem), but leads to accessing ""random"" pfns for pretty much any other VM_PFNMAP case.",,,"[{""url"":""https://git.kernel.org/stable/c/38b888911e8dc89b89d8147cfb1d2dbe6373bf78"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8089e5e1d18402fb8152d6b6815450a36fffa9b0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f122dfe4476890d60b8c679128cd2259ec96a24c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49563,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:32.060,2025-03-10T21:28:10.553,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: crypto: qat - add param check for RSA Reject requests with a source buffer that is bigger than the size of the key. This is to prevent a possible integer underflow that might happen when copying the source scatterlist into a linear buffer.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-191""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""0DFC6E4B-8C85-4056-80F1-C9129E42FE45""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/4d6d2adce08788b7667a6e58002682ea1bbf6a79"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9714061423b8b24b8afb31b8eb4df977c63f19c4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f993321e50ba7a8ba4f5b19939e1772a921a1c42"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49564,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:32.150,2025-03-10T21:19:21.127,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: crypto: qat - add param check for DH Reject requests with a source buffer that is bigger than the size of the key. This is to prevent a possible integer underflow that might happen when copying the source scatterlist into a linear buffer.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-191""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""0DFC6E4B-8C85-4056-80F1-C9129E42FE45""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2acbb8771f6ac82422886e63832ee7a0f4b1635b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/76c9216833e7c20a67c987cf89719a3f01666aaa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e7f979ed51f96495328157df663c835b17db1e30"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49565,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:32.240,2025-02-26T07:01:32.240,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: perf/x86/intel/lbr: Fix unchecked MSR access error on HSW The fuzzer triggers the below trace. [ 7763.384369] unchecked MSR access error: WRMSR to 0x689 (tried to write 0x1fffffff8101349e) at rIP: 0xffffffff810704a4 (native_write_msr+0x4/0x20) [ 7763.397420] Call Trace: [ 7763.399881] <TASK> [ 7763.401994] intel_pmu_lbr_restore+0x9a/0x1f0 [ 7763.406363] intel_pmu_lbr_sched_task+0x91/0x1c0 [ 7763.410992] __perf_event_task_sched_in+0x1cd/0x240 On a machine with the LBR format LBR_FORMAT_EIP_FLAGS2, when the TSX is disabled, a TSX quirk is required to access LBR from registers. The lbr_from_signext_quirk_needed() is introduced to determine whether the TSX quirk should be applied. However, the lbr_from_signext_quirk_needed() is invoked before the intel_pmu_lbr_init(), which parses the LBR format information. Without the correct LBR format information, the TSX quirk never be applied. Move the lbr_from_signext_quirk_needed() into the intel_pmu_lbr_init(). Checking x86_pmu.lbr_has_tsx in the lbr_from_signext_quirk_needed() is not required anymore. Both LBR_FORMAT_EIP_FLAGS2 and LBR_FORMAT_INFO have LBR_TSX flag, but only the LBR_FORMAT_EIP_FLAGS2 requirs the quirk. Update the comments accordingly.",,,"[{""url"":""https://git.kernel.org/stable/c/625bcd0685a1612225df83468c83412fc0edb3d7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b0380e13502adf7dd8be4c47d622c3522aae6c63"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49566,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:32.333,2025-03-10T21:19:26.347,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: crypto: qat - fix memory leak in RSA When an RSA key represented in form 2 (as defined in PKCS #1 V2.1) is used, some components of the private key persist even after the TFM is released. Replace the explicit calls to free the buffers in qat_rsa_exit_tfm() with a call to qat_rsa_clear_ctx() which frees all buffers referenced in the TFM context.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.8"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""AB678193-5BC5-499F-BD00-0B0AD62C511F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0f967fdc09955221a1951a279481b0bf4d359941"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/80a52e1ee7757b742f96bfb0d58f0c14eb6583d0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a843925e0287eebb4aa808666bf22c664dfe4c53"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49567,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:32.420,2025-03-10T21:20:08.247,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mm/mempolicy: fix uninit-value in mpol_rebind_policy() mpol_set_nodemask()(mm/mempolicy.c) does not set up nodemask when pol->mode is MPOL_LOCAL. Check pol->mode before access pol->w.cpuset_mems_allowed in mpol_rebind_policy()(mm/mempolicy.c). BUG: KMSAN: uninit-value in mpol_rebind_policy mm/mempolicy.c:352 [inline] BUG: KMSAN: uninit-value in mpol_rebind_task+0x2ac/0x2c0 mm/mempolicy.c:368 mpol_rebind_policy mm/mempolicy.c:352 [inline] mpol_rebind_task+0x2ac/0x2c0 mm/mempolicy.c:368 cpuset_change_task_nodemask kernel/cgroup/cpuset.c:1711 [inline] cpuset_attach+0x787/0x15e0 kernel/cgroup/cpuset.c:2278 cgroup_migrate_execute+0x1023/0x1d20 kernel/cgroup/cgroup.c:2515 cgroup_migrate kernel/cgroup/cgroup.c:2771 [inline] cgroup_attach_task+0x540/0x8b0 kernel/cgroup/cgroup.c:2804 __cgroup1_procs_write+0x5cc/0x7a0 kernel/cgroup/cgroup-v1.c:520 cgroup1_tasks_write+0x94/0xb0 kernel/cgroup/cgroup-v1.c:539 cgroup_file_write+0x4c2/0x9e0 kernel/cgroup/cgroup.c:3852 kernfs_fop_write_iter+0x66a/0x9f0 fs/kernfs/file.c:296 call_write_iter include/linux/fs.h:2162 [inline] new_sync_write fs/read_write.c:503 [inline] vfs_write+0x1318/0x2030 fs/read_write.c:590 ksys_write+0x28b/0x510 fs/read_write.c:643 __do_sys_write fs/read_write.c:655 [inline] __se_sys_write fs/read_write.c:652 [inline] __x64_sys_write+0xdb/0x120 fs/read_write.c:652 do_syscall_x64 arch/x86/entry/common.c:51 [inline] do_syscall_64+0x54/0xd0 arch/x86/entry/common.c:82 entry_SYSCALL_64_after_hwframe+0x44/0xae Uninit was created at: slab_post_alloc_hook mm/slab.h:524 [inline] slab_alloc_node mm/slub.c:3251 [inline] slab_alloc mm/slub.c:3259 [inline] kmem_cache_alloc+0x902/0x11c0 mm/slub.c:3264 mpol_new mm/mempolicy.c:293 [inline] do_set_mempolicy+0x421/0xb70 mm/mempolicy.c:853 kernel_set_mempolicy mm/mempolicy.c:1504 [inline] __do_sys_set_mempolicy mm/mempolicy.c:1510 [inline] __se_sys_set_mempolicy+0x44c/0xb60 mm/mempolicy.c:1507 __x64_sys_set_mempolicy+0xd8/0x110 mm/mempolicy.c:1507 do_syscall_x64 arch/x86/entry/common.c:51 [inline] do_syscall_64+0x54/0xd0 arch/x86/entry/common.c:82 entry_SYSCALL_64_after_hwframe+0x44/0xae KMSAN: uninit-value in mpol_rebind_task (2) https://syzkaller.appspot.com/bug?id=d6eb90f952c2a5de9ea718a1b873c55cb13b59dc This patch seems to fix below bug too. KMSAN: uninit-value in mpol_rebind_mm (2) https://syzkaller.appspot.com/bug?id=f2fecd0d7013f54ec4162f60743a2b28df40926b The uninit-value is pol->w.cpuset_mems_allowed in mpol_rebind_policy(). When syzkaller reproducer runs to the beginning of mpol_new(), mpol_new() mm/mempolicy.c do_mbind() mm/mempolicy.c kernel_mbind() mm/mempolicy.c `mode` is 1(MPOL_PREFERRED), nodes_empty(*nodes) is `true` and `flags` is 0. Then mode = MPOL_LOCAL; ... policy->mode = mode; policy->flags = flags; will be executed. So in mpol_set_nodemask(), mpol_set_nodemask() mm/mempolicy.c do_mbind() kernel_mbind() pol->mode is 4 (MPOL_LOCAL), that `nodemask` in `pol` is not initialized, which will be accessed in mpol_rebind_policy().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-908""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.325"",""matchCriteriaId"":""6FD0FC1F-AC56-4EF7-8913-24FBB31FDFA6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.290"",""matchCriteriaId"":""1F023E37-5DAE-491D-9971-00FC089E8C7E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.254"",""matchCriteriaId"":""56D38C39-4EB7-48A7-85D3-D4854AC7B3E8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""58A5EC97-5FF0-4B0A-8074-2A5A57644D59""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/018160ad314d75b1409129b2247b614a9f35894c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/13d51565cec1aa432a6ab363edc2bbc53c6f49cb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5735845906fb1d90fe597f8b503fc0a857d475e3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/777e563f10e91e91130fe06bee85220d508e7b9b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8c5429a04ccd8dbcc3c753dab2f4126774ec28d4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a1f8765f68bc9bf5744b365bb9f5e0b6db93edfe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/aaa1c5d635a6fca2043513ffb5be169f9cd17d9e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ddb3f0b68863bd1c5f43177eea476bce316d4993"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49568,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:32.517,2025-03-10T21:11:32.760,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: KVM: Don't null dereference ops->destroy A KVM device cleanup happens in either of two callbacks: 1) destroy() which is called when the VM is being destroyed; 2) release() which is called when a device fd is closed. Most KVM devices use 1) but Book3s's interrupt controller KVM devices (XICS, XIVE, XIVE-native) use 2) as they need to close and reopen during the machine execution. The error handling in kvm_ioctl_create_device() assumes destroy() is always defined which leads to NULL dereference as discovered by Syzkaller. This adds a checks for destroy!=NULL and adds a missing release(). This is not changing kvm_destroy_devices() as devices with defined release() should have been removed from the KVM devices list by then.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.4.210"",""matchCriteriaId"":""769A1563-4E73-4FA2-BDEB-9DBD40989582""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/170465715a60cbb7876e6b961b21bd3225469da8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3616776bc51cd3262bb1be60cc01c72e0a1959cf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d4a5a79b780891c5cbdfdc6124d46fdf8d13dba1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e8bc2427018826e02add7b0ed0fc625a60390ae5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e91665fbbf3ccb268b268a7d71a6513538d813ac"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49569,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:32.607,2025-03-10T21:11:35.827,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: spi: bcm2835: bcm2835_spi_handle_err(): fix NULL pointer deref for non DMA transfers In case a IRQ based transfer times out the bcm2835_spi_handle_err() function is called. Since commit 1513ceee70f2 (""spi: bcm2835: Drop dma_pending flag"") the TX and RX DMA transfers are unconditionally canceled, leading to NULL pointer derefs if ctlr->dma_tx or ctlr->dma_rx are not set. Fix the NULL pointer deref by checking that ctlr->dma_tx and ctlr->dma_rx are valid pointers before accessing them.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""7E96E649-47EC-458E-8AC7-5A642A2EF7A6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/49ffa473218012e765682343de2052eb4c1f06a7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4ceaa684459d414992acbefb4e4c31f2dfc50641"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/58466e05390043d2805685c70f55f3f59711bdf2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/684896e675edd8b669fd3e9f547c5038222d85bc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/76668d2a2f367d25ff448e6d7087406af7d7bb2b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49570,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:32.693,2025-03-10T21:19:40.783,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: gpio: gpio-xilinx: Fix integer overflow Current implementation is not able to configure more than 32 pins due to incorrect data type. So type casting with unsigned long to avoid it.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-190""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""DF6D28E5-50E7-41DF-8C6B-9A607F116EC2""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/32c094a09d5829ad9b02cdf667569aefa8de0ea6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6f16a5390640807dde420ee5ccbc4c95577aea6a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e129e5486b981d324057e6986059f852658b0d00"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49571,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:32.780,2025-03-10T21:04:22.707,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: Fix data-races around sysctl_tcp_max_reordering. While reading sysctl_tcp_max_reordering, it can be changed concurrently. Thus, we need to add READ_ONCE() to its readers.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.19"",""versionEndExcluding"":""4.19.254"",""matchCriteriaId"":""F45605C5-6E4D-416B-B48F-C6E46604E62A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""58A5EC97-5FF0-4B0A-8074-2A5A57644D59""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/064852663308c801861bd54789d81421fa4c2928"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/46deb91ac8a790286ad6d24cf92e7ab0ab2582bb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/50a1d3d097503a90cf84ebe120afcde37e9c33b3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5e38cee24f19d19280c68f1ac8bf6790d607f60a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a11e5b3e7a59fde1a90b0eaeaa82320495cf8cae"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ce3731c61589ed73364a5b55ce34131762ef9b60"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49572,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:32.877,2025-03-10T21:06:02.287,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: Fix data-races around sysctl_tcp_slow_start_after_idle. While reading sysctl_tcp_slow_start_after_idle, it can be changed concurrently. Thus, we need to add READ_ONCE() to its readers.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.18"",""versionEndExcluding"":""4.19.254"",""matchCriteriaId"":""FE70029C-E83E-4325-87B3-7B64A7790B31""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""58A5EC97-5FF0-4B0A-8074-2A5A57644D59""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0e3f82a03ec8c3808e87283e12946227415706c9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/369d99c2b89f54473adcf9acdf40ea562b5a6e0e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3b26e11b07a09b31247688bec61e2925d4a571b6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/41aeba4506f6b70ec7500c6fe202731a4ba29fe5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4845b5713ab18a1bb6e31d1fbb4d600240b8b691"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/68b6f9506747d507c7bfa374d178929b4157e8c6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49573,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:32.970,2025-03-10T21:06:23.280,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: Fix a data-race around sysctl_tcp_early_retrans. While reading sysctl_tcp_early_retrans, it can be changed concurrently. Thus, we need to add READ_ONCE() to its reader.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.5"",""versionEndExcluding"":""4.19.254"",""matchCriteriaId"":""FEA6FB77-04CE-4B7D-9EDA-A15604B8CDA6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""58A5EC97-5FF0-4B0A-8074-2A5A57644D59""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/11e8b013d16e5db63f8f76acceb5b86964098aaa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/488d3ad98ef7cddce7054193dbae6b4349c6807d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5037ca9e4b169cc9aed0174d658c3d81fdaf8ea5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/52e65865deb6a36718a463030500f16530eaab74"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/83767fe800a311370330d4ec83aa76093b744a80"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d5975f6376ce90c2c483ae36bf88c9cface4c13b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49574,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:33.063,2025-03-10T21:09:22.477,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: Fix data-races around sysctl_tcp_recovery. While reading sysctl_tcp_recovery, it can be changed concurrently. Thus, we need to add READ_ONCE() to its readers.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.4"",""versionEndExcluding"":""4.19.254"",""matchCriteriaId"":""06315BCE-8FDE-447B-9A7F-D2B70F13AA4D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""58A5EC97-5FF0-4B0A-8074-2A5A57644D59""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/52ee7f5c4811ce6be1becd14d38ba1f8a8a0df81"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/92c35113c63306091df9211375eebd0abd8c2160"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a31e2d0cb5cfa2aae3144cac04f25031d5d20fb4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c7a492db1f7c37c758a66915908677bd8bc5d368"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d8781f7cd04091744f474a2bada74772084b9dc9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e7d2ef837e14a971a05f60ea08c47f3fed1a36e4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49575,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:33.157,2025-03-10T21:09:15.843,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: Fix a data-race around sysctl_tcp_thin_linear_timeouts. While reading sysctl_tcp_thin_linear_timeouts, it can be changed concurrently. Thus, we need to add READ_ONCE() to its reader.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.34"",""versionEndExcluding"":""4.19.254"",""matchCriteriaId"":""C6C7F5D5-5446-4DCA-9E0F-87A4F4E57BDE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""58A5EC97-5FF0-4B0A-8074-2A5A57644D59""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/404c53ccdebd11f96954f4070cffac8e0b4d5cb6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/492f3713b282c0e67e951cd804edd22eccc25412"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7c6f2a86ca590d5187a073d987e9599985fb1c7c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a0f96c4f179cb3560078cefccef105e8f1701210"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cc133e4f4bc225079198192623945bb872c08143"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f4b0295be9a3c4260de4585fac4062e602a88ac7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49576,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:33.243,2025-03-10T21:09:11.687,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ipv4: Fix data-races around sysctl_fib_multipath_hash_fields. While reading sysctl_fib_multipath_hash_fields, it can be changed concurrently. Thus, we need to add READ_ONCE() to its readers.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""DF6D28E5-50E7-41DF-8C6B-9A607F116EC2""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/36f5b86f309b3b11295d087cd7433f1c897caf94"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/548d6678c4a3d43667e59686665f8674b82440a3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8895a9c2ac76fb9d3922fed4fe092c8ec5e5cccc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49577,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:33.333,2025-03-10T21:09:07.350,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: udp: Fix a data-race around sysctl_udp_l3mdev_accept. While reading sysctl_udp_l3mdev_accept, it can be changed concurrently. Thus, we need to add READ_ONCE() to its reader.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.11"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""ED1B4EB9-4060-42EF-A5C3-559416B24A87""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/3d72bb4188c708bb16758c60822fc4dda7a95174"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3f2ac2d6511bb0652abf4d7388d65bb9ff1c641c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cb0d28934ca10f99c47e2c6f451405d6c954fe48"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f39b03bd727a8fea62e82f10fe2e0d753b9930ff"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fcaef69c79ec222e55643e666b80b221e70fa6a8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49578,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:33.433,2025-03-10T21:20:41.973,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ip: Fix data-races around sysctl_ip_prot_sock. sysctl_ip_prot_sock is accessed concurrently, and there is always a chance of data-race. So, all readers and writers need some basic protection to avoid load/store-tearing.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.11"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""71D7FCD0-3DCF-4145-9258-A2987C1B29FB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/95724fe897a4ecf2be51452ef96e818568071664"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9add240f76af6d141d2eebd3a1558a0e503a993d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9b55c20f83369dd54541d9ddbe3a018a8377f451"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ef699813d99cc29e6e25c9f6da7766526cc8bd6e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49579,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:33.520,2025-03-10T21:09:03.167,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ipv4: Fix data-races around sysctl_fib_multipath_hash_policy. While reading sysctl_fib_multipath_hash_policy, it can be changed concurrently. Thus, we need to add READ_ONCE() to its readers.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.12"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""AD9715C9-CE55-44EB-A22D-F7D2795B2137""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/21fb844bc1dc1461f5038d655aa1a14f39e13049"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7998c12a08c97cc26660532c9f90a34bd7d8da5a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/918ee6592ab9a2ff5316d06cfd4aaef60ccabec6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49580,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:33.610,2025-03-10T21:08:59.397,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ipv4: Fix a data-race around sysctl_fib_multipath_use_neigh. While reading sysctl_fib_multipath_use_neigh, it can be changed concurrently. Thus, we need to add READ_ONCE() to its reader.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.7"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""13BD9D6D-9015-4576-8691-F6EF142F0FCD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/14e996577ed2799a1ed6ffeb71c76d63acb28444"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6727f39e99e0f545d815edebb6c94228485427ec"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/87507bcb4f5de16bb419e9509d874f4db6c0ad0f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b8d345db03b4deffb4f04219a51d3b1e94171b76"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e045d672ba06e1d35bacb56374d350de0ac99066"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49581,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:33.703,2025-02-26T07:01:33.703,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: be2net: Fix buffer overflow in be_get_module_eeprom be_cmd_read_port_transceiver_data assumes that it is given a buffer that is at least PAGE_DATA_LEN long, or twice that if the module supports SFF 8472. However, this is not always the case. Fix this by passing the desired offset and length to be_cmd_read_port_transceiver_data so that we only copy the bytes once.",,,"[{""url"":""https://git.kernel.org/stable/c/18043da94c023f3ef09c15017bdb04e8f695ef10"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/665cbe91de2f7c97c51ca8fce39aae26477c1948"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8ff4f9df73e5c551a72ee6034886c17e8de6596d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a5a8fc0679a8fd58d47aa2ebcfc5742631f753f9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a8569f76df7ec5b4b51155c57523a0b356db5741"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/aba8ff847f4f927ad7a1a1ee4a9f29989a1a728f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d7241f679a59cfe27f92cb5c6272cb429fb1f7ec"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fe4473fc7940f14c4a12db873b9729134c212654"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49582,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:33.807,2025-03-10T21:11:23.753,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: dsa: fix NULL pointer dereference in dsa_port_reset_vlan_filtering The ""ds"" iterator variable used in dsa_port_reset_vlan_filtering() -> dsa_switch_for_each_port() overwrites the ""dp"" received as argument, which is later used to call dsa_port_vlan_filtering() proper. As a result, switches which do enter that code path (the ones with vlan_filtering_is_global=true) will dereference an invalid dp in dsa_port_reset_vlan_filtering() after leaving a VLAN-aware bridge. Use a dedicated ""other_dp"" iterator variable to avoid this from happening.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1699b4d502eda3c7ea4070debad3ee570b5091b1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3240e12fe203a3a79b9814e83327106b770ed7b0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49583,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:33.897,2025-03-10T21:21:21.147,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: iavf: Fix handling of dummy receive descriptors Fix memory leak caused by not handling dummy receive descriptor properly. iavf_get_rx_buffer now sets the rx_buffer return value for dummy receive descriptors. Without this patch, when the hardware writes a dummy descriptor, iavf would not free the page allocated for the previous receive buffer. This is an unlikely event but can still happen. [Jesse: massaged commit message]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.1.20"",""versionEndExcluding"":""5.2"",""matchCriteriaId"":""EC3742A3-C6ED-4C21-A58F-884ACEC9E36C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.2.3"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""4FD250FE-03DB-40C8-AE19-554AA79A120A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2918419c06088f6709ceb543feb01752779ade4c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6edb818732fc05fda495f5b3a749bd1cee01398b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a9f49e0060301a9bfebeca76739158d0cf91cdf6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c6af94324911ef0846af1a5ce5e049ca736db34b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d88d59faf4e6f9cc4767664206afdb999b10ec77"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49584,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:33.987,2025-02-26T07:01:33.987,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ixgbe: Add locking to prevent panic when setting sriov_numvfs to zero It is possible to disable VFs while the PF driver is processing requests from the VF driver. This can result in a panic. BUG: unable to handle kernel paging request at 000000000000106c PGD 0 P4D 0 Oops: 0000 [#1] SMP NOPTI CPU: 8 PID: 0 Comm: swapper/8 Kdump: loaded Tainted: G I --------- - Hardware name: Dell Inc. PowerEdge R740/06WXJT, BIOS 2.8.2 08/27/2020 RIP: 0010:ixgbe_msg_task+0x4c8/0x1690 [ixgbe] Code: 00 00 48 8d 04 40 48 c1 e0 05 89 7c 24 24 89 fd 48 89 44 24 10 83 ff 01 0f 84 b8 04 00 00 4c 8b 64 24 10 4d 03 a5 48 22 00 00 <41> 80 7c 24 4c 00 0f 84 8a 03 00 00 0f b7 c7 83 f8 08 0f 84 8f 0a RSP: 0018:ffffb337869f8df8 EFLAGS: 00010002 RAX: 0000000000001020 RBX: 0000000000000000 RCX: 000000000000002b RDX: 0000000000000002 RSI: 0000000000000008 RDI: 0000000000000006 RBP: 0000000000000006 R08: 0000000000000002 R09: 0000000000029780 R10: 00006957d8f42832 R11: 0000000000000000 R12: 0000000000001020 R13: ffff8a00e8978ac0 R14: 000000000000002b R15: ffff8a00e8979c80 FS: 0000000000000000(0000) GS:ffff8a07dfd00000(0000) knlGS:00000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 000000000000106c CR3: 0000000063e10004 CR4: 00000000007726e0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 PKRU: 55555554 Call Trace: <IRQ> ? ttwu_do_wakeup+0x19/0x140 ? try_to_wake_up+0x1cd/0x550 ? ixgbevf_update_xcast_mode+0x71/0xc0 [ixgbevf] ixgbe_msix_other+0x17e/0x310 [ixgbe] __handle_irq_event_percpu+0x40/0x180 handle_irq_event_percpu+0x30/0x80 handle_irq_event+0x36/0x53 handle_edge_irq+0x82/0x190 handle_irq+0x1c/0x30 do_IRQ+0x49/0xd0 common_interrupt+0xf/0xf This can be eventually be reproduced with the following script: while : do echo 63 > /sys/class/net/<devname>/device/sriov_numvfs sleep 1 echo 0 > /sys/class/net/<devname>/device/sriov_numvfs sleep 1 done Add lock when disabling SR-IOV to prevent process VF mailbox communication.",,,"[{""url"":""https://git.kernel.org/stable/c/031af9e617a6f51075d97e56fc9e712c7dde2508"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/16f929a5e76fd047fd8697e1e568bdd7d771955c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1e53834ce541d4fe271cdcca7703e50be0a44f8a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9d925d2dc82cec2bcbd8625457645d8a548ab22e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b82de63f8f817b5735480293dda8e92ba8170c52"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49585,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:34.080,2025-03-10T21:08:55.510,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: Fix data-races around sysctl_tcp_fastopen_blackhole_timeout. While reading sysctl_tcp_fastopen_blackhole_timeout, it can be changed concurrently. Thus, we need to add READ_ONCE() to its readers.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.12"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""AD1C7832-881B-46D0-B04F-DEEDC40B1AF1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/021266ec640c7a4527e6cd4b7349a512b351de1d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0dc2f19d8c2636cebda7976b5ea40c6d69f0d891"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8afa5604e295046c02b79ccf9e2bbbf8d969d60e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a77a75a0e7f397550ab039f96115103e78dd5c69"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49586,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:34.167,2025-03-10T21:08:51.117,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: Fix data-races around sysctl_tcp_fastopen. While reading sysctl_tcp_fastopen, it can be changed concurrently. Thus, we need to add READ_ONCE() to its readers.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.6"",""versionEndExcluding"":""4.19.254"",""matchCriteriaId"":""4FD943C4-AACA-4BF5-A8B7-8B2475F6C652""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""58A5EC97-5FF0-4B0A-8074-2A5A57644D59""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/03da610696a32578fc4f986479341ce9d430df08"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/22938534c611136f35e2ca545bb668073ca5ef49"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/25d53d858a6c0b89a6e69e376c2a57c4f4c2c8cc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/448ab998947996a0a451f8229f19087964cf2670"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/539d9ab79eba3974b479cad61a8688c41fe62e12"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5a54213318c43f4009ae158347aa6016e3b9b55a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49587,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:34.260,2025-03-10T21:08:46.400,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: Fix a data-race around sysctl_tcp_notsent_lowat. While reading sysctl_tcp_notsent_lowat, it can be changed concurrently. Thus, we need to add READ_ONCE() to its reader.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.12"",""versionEndExcluding"":""4.9.325"",""matchCriteriaId"":""A3A70DD6-D2E6-4C07-87BE-FCC338F5BC3F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.290"",""matchCriteriaId"":""1F023E37-5DAE-491D-9971-00FC089E8C7E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.254"",""matchCriteriaId"":""56D38C39-4EB7-48A7-85D3-D4854AC7B3E8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""58A5EC97-5FF0-4B0A-8074-2A5A57644D59""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0f75343584ee474303e17efe0610bdd170af1d13"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/55be873695ed8912eb77ff46d1d1cadf028bd0f3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/62e56cfeb2ae4b53ae9ca24c80f54093250ce64a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/80d4d0c461674eea87f0977e12a2ecd334b9b79c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/91e21df688f8a75255ca9c459da39ac96300113a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c1b85c5a34294f7444c13bf828e0e84b0a0eed85"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e9362a993886613ef0284c2a4911c6017c97d803"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fd6f1284e380c377932186042ff0b5c987fb2b92"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49588,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:34.367,2025-03-10T21:08:40.567,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: Fix data-races around sysctl_tcp_migrate_req. While reading sysctl_tcp_migrate_req, it can be changed concurrently. Thus, we need to add READ_ONCE() to its readers.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.10.188"",""versionEndExcluding"":""5.11"",""matchCriteriaId"":""6D42E8C7-CD33-432A-AC09-DC524C88ECE4""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""DF6D28E5-50E7-41DF-8C6B-9A607F116EC2""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/4177f545895b1da08447a80692f30617154efa6e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6e569a11eea20a1ccebc3c4e6366bf0574a449e1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fcf6c6d8aeffebca66f37b17ef1b57112e5e09c1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49589,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:34.470,2025-03-10T20:47:27.720,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: igmp: Fix data-races around sysctl_igmp_qrv. While reading sysctl_igmp_qrv, it can be changed concurrently. Thus, we need to add READ_ONCE() to its readers. This test can be packed into a helper, so such changes will be in the follow-up series after net is merged into net-next. qrv ?: READ_ONCE(net->ipv4.sysctl_igmp_qrv);","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.18"",""versionEndExcluding"":""4.19.255"",""matchCriteriaId"":""A617EFB6-24F0-4201-BE74-5365BC7894AA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.209"",""matchCriteriaId"":""8A22815E-5E13-479C-8A92-BACF21F911EA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.135"",""matchCriteriaId"":""BB550DF5-C3A3-4009-A61F-C7293D5A081D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.59"",""matchCriteriaId"":""79909FF8-3A4D-4569-8AB9-60BACD5CCD5C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/8ebcc62c738f68688ee7c6fec2efe5bc6d3d7e60"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Mailing List"",""Patch""]},{""url"":""https://git.kernel.org/stable/c/9eeb3a7702998bdccbfcc37997b5dd9215b9a7f7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Mailing List"",""Patch""]},{""url"":""https://git.kernel.org/stable/c/b399ffafffba39f47b731b26a5da1dc0ffc4b3ad"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Mailing List"",""Patch""]},{""url"":""https://git.kernel.org/stable/c/c2954671010cd1127d1ffa328c6e6f8e99930982"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Mailing List"",""Patch""]},{""url"":""https://git.kernel.org/stable/c/c721324afc589f8ea54bae04756b150aeaae5fa4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Mailing List"",""Patch""]},{""url"":""https://git.kernel.org/stable/c/e20dd1b0e0ea15bee1e528536a0840dba972ca0e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Mailing List"",""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49590,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:34.573,2025-03-10T20:49:24.353,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: igmp: Fix data-races around sysctl_igmp_llm_reports. While reading sysctl_igmp_llm_reports, it can be changed concurrently. Thus, we need to add READ_ONCE() to its readers. This test can be packed into a helper, so such changes will be in the follow-up series after net is merged into net-next. if (ipv4_is_local_multicast(pmc->multiaddr) && !READ_ONCE(net->ipv4.sysctl_igmp_llm_reports))","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.3"",""versionEndExcluding"":""4.9.325"",""matchCriteriaId"":""443CB341-7435-4A5F-B08C-A31660B42A63""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.290"",""matchCriteriaId"":""1F023E37-5DAE-491D-9971-00FC089E8C7E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.254"",""matchCriteriaId"":""56D38C39-4EB7-48A7-85D3-D4854AC7B3E8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""58A5EC97-5FF0-4B0A-8074-2A5A57644D59""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1656ecaddf90e2a070ec2d2404cdae3edf80faca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Mailing List"",""Patch""]},{""url"":""https://git.kernel.org/stable/c/260446eb8e5541402b271343a4516f2b33dec1e4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Mailing List"",""Patch""]},{""url"":""https://git.kernel.org/stable/c/46307adceb67bdf2ec38408dd9cebc378a6b5c46"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Mailing List"",""Patch""]},{""url"":""https://git.kernel.org/stable/c/473aad9ad57ff760005377e6f45a2ad4210e08ce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Mailing List"",""Patch""]},{""url"":""https://git.kernel.org/stable/c/a84b4afaca2573ed3aed1f8854aefe3ca5a82e72"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Mailing List"",""Patch""]},{""url"":""https://git.kernel.org/stable/c/d77969e7d4ccc26bf1f414a39ef35050a83ba6d5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Mailing List"",""Patch""]},{""url"":""https://git.kernel.org/stable/c/ed876e99ccf417b8bd7fd8408ba5e8b008e46cc8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Mailing List"",""Patch""]},{""url"":""https://git.kernel.org/stable/c/f6da2267e71106474fbc0943dc24928b9cb79119"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Mailing List"",""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49591,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:34.667,2025-03-10T20:50:02.120,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: dsa: microchip: ksz_common: Fix refcount leak bug In ksz_switch_register(), we should call of_node_put() for the reference returned by of_get_child_by_name() which has increased the refcount.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.9"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""37654B03-0BD2-4BDB-8E49-08840D5ECD72""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/4165e02716518bbbe9c9104b39530d40928bc7ce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Mailing List"",""Patch""]},{""url"":""https://git.kernel.org/stable/c/88ec2ff42da3ac93b2437dc52fe25cd4372148e6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Mailing List"",""Patch""]},{""url"":""https://git.kernel.org/stable/c/a14bd7475452c51835dd5a0cee4c8fa48dd0b539"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Mailing List"",""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49592,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:34.760,2025-02-26T07:01:34.760,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: stmmac: fix dma queue left shift overflow issue When queue number is > 4, left shift overflows due to 32 bits integer variable. Mask calculation is wrong for MTL_RXQ_DMA_MAP1. If CONFIG_UBSAN is enabled, kernel dumps below warning: [ 10.363842] ================================================================== [ 10.363882] UBSAN: shift-out-of-bounds in /build/linux-intel-iotg-5.15-8e6Tf4/ linux-intel-iotg-5.15-5.15.0/drivers/net/ethernet/stmicro/stmmac/dwmac4_core.c:224:12 [ 10.363929] shift exponent 40 is too large for 32-bit type 'unsigned int' [ 10.363953] CPU: 1 PID: 599 Comm: NetworkManager Not tainted 5.15.0-1003-intel-iotg [ 10.363956] Hardware name: ADLINK Technology Inc. LEC-EL/LEC-EL, BIOS 0.15.11 12/22/2021 [ 10.363958] Call Trace: [ 10.363960] <TASK> [ 10.363963] dump_stack_lvl+0x4a/0x5f [ 10.363971] dump_stack+0x10/0x12 [ 10.363974] ubsan_epilogue+0x9/0x45 [ 10.363976] __ubsan_handle_shift_out_of_bounds.cold+0x61/0x10e [ 10.363979] ? wake_up_klogd+0x4a/0x50 [ 10.363983] ? vprintk_emit+0x8f/0x240 [ 10.363986] dwmac4_map_mtl_dma.cold+0x42/0x91 [stmmac] [ 10.364001] stmmac_mtl_configuration+0x1ce/0x7a0 [stmmac] [ 10.364009] ? dwmac410_dma_init_channel+0x70/0x70 [stmmac] [ 10.364020] stmmac_hw_setup.cold+0xf/0xb14 [stmmac] [ 10.364030] ? page_pool_alloc_pages+0x4d/0x70 [ 10.364034] ? stmmac_clear_tx_descriptors+0x6e/0xe0 [stmmac] [ 10.364042] stmmac_open+0x39e/0x920 [stmmac] [ 10.364050] __dev_open+0xf0/0x1a0 [ 10.364054] __dev_change_flags+0x188/0x1f0 [ 10.364057] dev_change_flags+0x26/0x60 [ 10.364059] do_setlink+0x908/0xc40 [ 10.364062] ? do_setlink+0xb10/0xc40 [ 10.364064] ? __nla_validate_parse+0x4c/0x1a0 [ 10.364068] __rtnl_newlink+0x597/0xa10 [ 10.364072] ? __nla_reserve+0x41/0x50 [ 10.364074] ? __kmalloc_node_track_caller+0x1d0/0x4d0 [ 10.364079] ? pskb_expand_head+0x75/0x310 [ 10.364082] ? nla_reserve_64bit+0x21/0x40 [ 10.364086] ? skb_free_head+0x65/0x80 [ 10.364089] ? security_sock_rcv_skb+0x2c/0x50 [ 10.364094] ? __cond_resched+0x19/0x30 [ 10.364097] ? kmem_cache_alloc_trace+0x15a/0x420 [ 10.364100] rtnl_newlink+0x49/0x70 This change fixes MTL_RXQ_DMA_MAP1 mask issue and channel/queue mapping warning. BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=216195",,,"[{""url"":""https://git.kernel.org/stable/c/508d86ead36cbd8dfb60773a33276790d668c473"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/573768dede0e2b7de38ecbc11cb3ee47643902dc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/613b065ca32e90209024ec4a6bb5ca887ee70980"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7c687a893f5cae5ca40d189635602e93af9bab73"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a3ac79f38d354b10925824899cdbd2caadce55ba"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ad2febdfbd01e1d092a08bfdba92ede79ea05ff3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e846bde09677fa3b203057846620b7ed96540f5f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49593,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:34.853,2025-03-10T20:51:03.090,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: Fix a data-race around sysctl_tcp_probe_interval. While reading sysctl_tcp_probe_interval, it can be changed concurrently. Thus, we need to add READ_ONCE() to its reader.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.1"",""versionEndExcluding"":""4.14.290"",""matchCriteriaId"":""BB72A895-C527-4FD1-AB91-6F4B520F2542""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.254"",""matchCriteriaId"":""56D38C39-4EB7-48A7-85D3-D4854AC7B3E8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""58A5EC97-5FF0-4B0A-8074-2A5A57644D59""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2a85388f1d94a9f8b5a529118a2c5eaa0520d85c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/73a11588751a2c13f25d9da8117efc9a79b1843f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/80dabd089086e6553b7acfcff2ec223bdada87a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b14cc8afbbcbc6dce4797913c0b85266b897f541"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b3798d3519eda9c409bb0815b0102f27ec42468d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c61aede097d350d890fa1edc9521b0072e14a0b8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e6b6f027e2854a51f345a5e3e808d7a88001d4f8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49594,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:34.947,2025-03-10T20:51:45.677,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: Fix a data-race around sysctl_tcp_mtu_probe_floor. While reading sysctl_tcp_mtu_probe_floor, it can be changed concurrently. Thus, we need to add READ_ONCE() to its reader.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""7E96E649-47EC-458E-8AC7-5A642A2EF7A6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/033963b220633ed1602d458e7e4ac06afa9fefb2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8e92d4423615a5257d0d871fc067aa561f597deb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cc36c37f5fe066c4708e623ead96dc8f57224bf5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d5bece4df6090395f891110ef52a6f82d16685db"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e2ecbf3f0aa88277d43908c53b99399d55729ff9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49595,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:35.040,2025-03-10T20:52:18.940,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: Fix a data-race around sysctl_tcp_probe_threshold. While reading sysctl_tcp_probe_threshold, it can be changed concurrently. Thus, we need to add READ_ONCE() to its reader.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.1"",""versionEndExcluding"":""4.9.325"",""matchCriteriaId"":""59349928-C040-410F-9AEF-F0E37775F4F0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.290"",""matchCriteriaId"":""1F023E37-5DAE-491D-9971-00FC089E8C7E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.254"",""matchCriteriaId"":""56D38C39-4EB7-48A7-85D3-D4854AC7B3E8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""58A5EC97-5FF0-4B0A-8074-2A5A57644D59""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/44768749980d53bc01980d9c060f736808d11af0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/92c0aa4175474483d6cf373314343d4e624e882a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/96900fa61777402eb5056269d8000aace33a8b6c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9b5dc7ad6da1373d3c60d4b869d688f996e5d219"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b04817c94fbd285a967d9b830b274fe9998c9c0b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d452ce36f2d4c402fa3f5275c9677f80166e7fc6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f524c3e7f6cdad66b3b6a912cef47b656f8b0de3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fa5fb2cf9393db898772db8cb897ed5fd265eb78"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49596,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:35.133,2025-03-10T20:52:57.903,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: Fix data-races around sysctl_tcp_min_snd_mss. While reading sysctl_tcp_min_snd_mss, it can be changed concurrently. Thus, we need to add READ_ONCE() to its readers.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.16.69"",""versionEndExcluding"":""3.17"",""matchCriteriaId"":""142E4A1F-B3D2-42A7-B6C0-CFFCA71E9DE1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.4.182"",""versionEndExcluding"":""4.5"",""matchCriteriaId"":""80679710-597A-438F-916F-EB59ACAC536F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.9.182"",""versionEndExcluding"":""4.10"",""matchCriteriaId"":""EBFC612F-00B5-4DB2-955B-F7FBE68B0DFF""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.14.127"",""versionEndExcluding"":""4.15"",""matchCriteriaId"":""BA040817-C3CC-4162-9719-DAC2271AAFC9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.19.52"",""versionEndExcluding"":""4.20"",""matchCriteriaId"":""3E9FBBF0-D54E-42D5-B04A-66E62644978C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.1.11"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""17831D82-0E1D-4A6E-9D29-A098431016D2""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0d8a39feb58910a7f7746b1770ee5578cc551fe6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0fc9357282df055e30990b29f4b7afa53ab42cdb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/78eb166cdefcc3221c8c7c1e2d514e91a2eb5014"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/97992e8feff33b3ae154a113ec398546bbacda80"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fdb96b69f5909ffcdd6f1e0902219fc6d7689ff7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49597,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:35.220,2025-03-10T20:54:24.560,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: Fix data-races around sysctl_tcp_base_mss. While reading sysctl_tcp_base_mss, it can be changed concurrently. Thus, we need to add READ_ONCE() to its readers.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.17"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""39FC5A69-1DAE-4AD2-B4AB-14DD87E3ED97""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/30b73edc1d2459ba2c71cb58fbf84a1a6e640fbf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4d7dea651b7fe0322be95054f64e3711afccc543"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/514d2254c7b8aa2d257f5ffc79f0d96be2d6bfda"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/88d78bc097cd8ebc6541e93316c9d9bf651b13e8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9ca18116bc16ec31b9a3ce28ea1350badfa36128"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49598,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:35.310,2025-03-10T20:53:46.410,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: Fix data-races around sysctl_tcp_mtu_probing. While reading sysctl_tcp_mtu_probing, it can be changed concurrently. Thus, we need to add READ_ONCE() to its readers.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.17"",""versionEndExcluding"":""4.19.254"",""matchCriteriaId"":""7949E902-CD08-4402-A5D4-69B7306B4EF2""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""58A5EC97-5FF0-4B0A-8074-2A5A57644D59""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/77a04845f0d28a3561494a5f3121488470a968a4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7e8fc428a7f680f1c4994a40e52d7f95a9a93038"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/aabe9438fdfe004e021d5a206227ec105dbe2416"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b0920ca09d9ce19980c8391b9002455baa9c1417"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f47d00e077e7d61baf69e46dde3210c886360207"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f966773e13cdd3f12baa90071b7b660f6c633ccb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49599,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:35.403,2025-03-10T20:54:57.747,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: Fix data-races around sysctl_tcp_l3mdev_accept. While reading sysctl_tcp_l3mdev_accept, it can be changed concurrently. Thus, we need to add READ_ONCE() to its readers.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.5"",""versionEndExcluding"":""5.10.137"",""matchCriteriaId"":""9871FC5B-B802-4E9A-99C3-65D7CE6FF883""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/08a75f10679470552a3a443f9aefd1399604d31d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1d9c81833dec46ccb52a1d0db970fefb7c4fa071"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7d38d86b818104cf88961f3aebea34da89364a8e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9ba9cd43b5776c27d25e5a32dde9e80bdeb1c6a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49600,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:35.497,2025-03-11T22:39:18.433,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ip: Fix a data-race around sysctl_ip_autobind_reuse. While reading sysctl_ip_autobind_reuse, it can be changed concurrently. Thus, we need to add READ_ONCE() to its reader.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.7"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""20788406-202A-4789-96AF-B2401847EC3D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0db232765887d9807df8bcb7b6f29b2871539eab"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/611ba70e5aca252ef43374dda97ed4cf1c47a07c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/87ceaa199a72c5856d49a030941fabcd5c3928d4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fa7cdcf9b28d13aac1eeb34b948db8a18e041341"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49601,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:35.603,2025-03-11T22:40:17.200,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tcp/dccp: Fix a data-race around sysctl_tcp_fwmark_accept. While reading sysctl_tcp_fwmark_accept, it can be changed concurrently. Thus, we need to add READ_ONCE() to its reader.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.16"",""versionEndExcluding"":""4.9.325"",""matchCriteriaId"":""3FE5928B-3AEF-4952-B830-13658E494EF5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.290"",""matchCriteriaId"":""1F023E37-5DAE-491D-9971-00FC089E8C7E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.254"",""matchCriteriaId"":""56D38C39-4EB7-48A7-85D3-D4854AC7B3E8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""58A5EC97-5FF0-4B0A-8074-2A5A57644D59""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/13207f9485b5de68decf296ceb0046f5eabb2485"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1a0008f9df59451d0a17806c1ee1a19857032fa8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/45fc82706a97242539d6b841ddd7a077ec20757b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/526d8cf8824f613c72dba2155542295e70135f62"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a7386602a2fe2f6192477e8ede291a815da09d81"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/abf70de2ec026ae8d7da4e79bec61888a880e00b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bf3134feffe61b7a0e21f60a04743f8da0958b53"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d4f65615db7fca3df9f7e79eadf937e6ddb03c54"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49602,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:35.717,2025-03-11T22:40:50.023,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ip: Fix a data-race around sysctl_fwmark_reflect. While reading sysctl_fwmark_reflect, it can be changed concurrently. Thus, we need to add READ_ONCE() to its reader.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.16"",""versionEndExcluding"":""4.9.325"",""matchCriteriaId"":""3FE5928B-3AEF-4952-B830-13658E494EF5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.290"",""matchCriteriaId"":""1F023E37-5DAE-491D-9971-00FC089E8C7E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.254"",""matchCriteriaId"":""56D38C39-4EB7-48A7-85D3-D4854AC7B3E8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""58A5EC97-5FF0-4B0A-8074-2A5A57644D59""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0ee76fe01ff3c0b4efaa500aecc90d7c8d3a8860"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/25a635a67c830766110410fea88ec4e6ee29684b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5e7a1be3e68deef250ad43cc91f7bb8d7d758b48"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/85d0b4dbd74b95cc492b1f4e34497d3f894f5d9a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9096edcf4854289f92252e086cf6e498c7f8c21d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a475ecc9ad919aa3ebdd4e4a6ee612b793bf74b3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/dccf8a67f30e18980d13f07006e5a536bbd1e136"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fc92e3b4bebfdd986ef1d2c5019f236837b0b982"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49603,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:35.817,2025-03-11T22:41:12.380,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ip: Fix data-races around sysctl_ip_fwd_update_priority. While reading sysctl_ip_fwd_update_priority, it can be changed concurrently. Thus, we need to add READ_ONCE() to its readers.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.19"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""152278A1-DA36-4820-A9D4-24F88A2ED3FE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/11038fa781ab916535c53351537b22d6d405667d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/351f81f7d7185d18a9ff76f8f8c2fa8c4eea563b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7bf9e18d9a5e99e3c83482973557e9f047b051e7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bcc03369d3277ae075ed421f0c8bf4adb5e65b74"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49604,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:35.910,2025-03-11T22:42:17.153,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ip: Fix data-races around sysctl_ip_fwd_use_pmtu. While reading sysctl_ip_fwd_use_pmtu, it can be changed concurrently. Thus, we need to add READ_ONCE() to its readers.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.14"",""versionEndExcluding"":""4.19.254"",""matchCriteriaId"":""E5C96F4A-1FCC-4D26-B025-CDA39AF62BBA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""58A5EC97-5FF0-4B0A-8074-2A5A57644D59""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/60c158dc7b1f0558f6cadd5b50d0386da0000d50"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7828309df0f89419a9349761a37c7d1b0da45697"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/93fbc06da1d819f3981a7bd7928c3641ea67b364"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b96ed5ccb09ae71103023ed13acefb194f609794"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e364b5f6ffbfc457a997ad09a7baa16c19581edc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/eb15262128b793e4b1d1c4514d3e6d19c3959764"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49605,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:36.000,2025-02-26T07:01:36.000,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: igc: Reinstate IGC_REMOVED logic and implement it properly The initially merged version of the igc driver code (via commit 146740f9abc4, ""igc: Add support for PF"") contained the following IGC_REMOVED checks in the igc_rd32/wr32() MMIO accessors: u32 igc_rd32(struct igc_hw *hw, u32 reg) { u8 __iomem *hw_addr = READ_ONCE(hw->hw_addr); u32 value = 0; if (IGC_REMOVED(hw_addr)) return ~value; value = readl(&hw_addr[reg]); /* reads should not return all F's */ if (!(~value) && (!reg || !(~readl(hw_addr)))) hw->hw_addr = NULL; return value; } And: #define wr32(reg, val) \ do { \ u8 __iomem *hw_addr = READ_ONCE((hw)->hw_addr); \ if (!IGC_REMOVED(hw_addr)) \ writel((val), &hw_addr[(reg)]); \ } while (0) E.g. igb has similar checks in its MMIO accessors, and has a similar macro E1000_REMOVED, which is implemented as follows: #define E1000_REMOVED(h) unlikely(!(h)) These checks serve to detect and take note of an 0xffffffff MMIO read return from the device, which can be caused by a PCIe link flap or some other kind of PCI bus error, and to avoid performing MMIO reads and writes from that point onwards. However, the IGC_REMOVED macro was not originally implemented: #ifndef IGC_REMOVED #define IGC_REMOVED(a) (0) #endif /* IGC_REMOVED */ This led to the IGC_REMOVED logic to be removed entirely in a subsequent commit (commit 3c215fb18e70, ""igc: remove IGC_REMOVED function""), with the rationale that such checks matter only for virtualization and that igc does not support virtualization -- but a PCIe device can become detached even without virtualization being in use, and without proper checks, a PCIe bus error affecting an igc adapter will lead to various NULL pointer dereferences, as the first access after the error will set hw->hw_addr to NULL, and subsequent accesses will blindly dereference this now-NULL pointer. This patch reinstates the IGC_REMOVED checks in igc_rd32/wr32(), and implements IGC_REMOVED the way it is done for igb, by checking for the unlikely() case of hw_addr being NULL. This change prevents the oopses seen when a PCIe link flap occurs on an igc adapter.",,,"[{""url"":""https://git.kernel.org/stable/c/16cb6717f4f42487ef10583eb8bc98e7d1e33d65"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/70965b6e5c03aa70cc754af1226b9f9cde0c4bf3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/77836dbe35382aaf8108489060c5c89530c77494"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7c1ddcee5311f3315096217881d2dbe47cc683f9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e75b73081f1ec169518773626c2ff3950476660b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49606,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:36.093,2025-02-26T07:01:36.093,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: RDMA/irdma: Fix sleep from invalid context BUG Taking the qos_mutex to process RoCEv2 QP's on netdev events causes a kernel splat. Fix this by removing the handling for RoCEv2 in irdma_cm_teardown_connections that uses the mutex. This handling is only needed for iWARP to avoid having connections established while the link is down or having connections remain functional after the IP address is removed. BUG: sleeping function called from invalid context at kernel/locking/mutex. Call Trace: kernel: dump_stack+0x66/0x90 kernel: ___might_sleep.cold.92+0x8d/0x9a kernel: mutex_lock+0x1c/0x40 kernel: irdma_cm_teardown_connections+0x28e/0x4d0 [irdma] kernel: ? check_preempt_curr+0x7a/0x90 kernel: ? select_idle_sibling+0x22/0x3c0 kernel: ? select_task_rq_fair+0x94c/0xc90 kernel: ? irdma_exec_cqp_cmd+0xc27/0x17c0 [irdma] kernel: ? __wake_up_common+0x7a/0x190 kernel: irdma_if_notify+0x3cc/0x450 [irdma] kernel: ? sched_clock_cpu+0xc/0xb0 kernel: irdma_inet6addr_event+0xc6/0x150 [irdma]",,,"[{""url"":""https://git.kernel.org/stable/c/2cae7e519032e4b4672cb9204d5586a441924364"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a4c5115140ed1833197bad9a6b80265840ff427f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cc0315564d6eec91c716d314b743321be24c70b3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49607,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:36.180,2025-03-13T21:55:55.090,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: perf/core: Fix data race between perf_event_set_output() and perf_mmap_close() Yang Jihing reported a race between perf_event_set_output() and perf_mmap_close(): CPU1 CPU2 perf_mmap_close(e2) if (atomic_dec_and_test(&e2->rb->mmap_count)) // 1 - > 0 detach_rest = true ioctl(e1, IOC_SET_OUTPUT, e2) perf_event_set_output(e1, e2) ... list_for_each_entry_rcu(e, &e2->rb->event_list, rb_entry) ring_buffer_attach(e, NULL); // e1 isn't yet added and // therefore not detached ring_buffer_attach(e1, e2->rb) list_add_rcu(&e1->rb_entry, &e2->rb->event_list) After this; e1 is attached to an unmapped rb and a subsequent perf_mmap() will loop forever more: again: mutex_lock(&e->mmap_mutex); if (event->rb) { ... if (!atomic_inc_not_zero(&e->rb->mmap_count)) { ... mutex_unlock(&e->mmap_mutex); goto again; } } The loop in perf_mmap_close() holds e2->mmap_mutex, while the attach in perf_event_set_output() holds e1->mmap_mutex. As such there is no serialization to avoid this race. Change perf_event_set_output() to take both e1->mmap_mutex and e2->mmap_mutex to alleviate that problem. Additionally, have the loop in perf_mmap() detach the rb directly, this avoids having to wait for the concurrent perf_mmap_close() to get around to doing it to make progress.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.2.49"",""versionEndExcluding"":""3.3"",""matchCriteriaId"":""2A0E6CA1-D820-4022-9A10-55C1BB83F02E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.4.52"",""versionEndExcluding"":""3.5"",""matchCriteriaId"":""B64F306D-C88E-4F4C-A677-1FD2635830E6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.9.8"",""versionEndExcluding"":""4.9.325"",""matchCriteriaId"":""2A44C19E-9011-43EB-8FE2-EC3270C84A19""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.290"",""matchCriteriaId"":""1F023E37-5DAE-491D-9971-00FC089E8C7E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.254"",""matchCriteriaId"":""56D38C39-4EB7-48A7-85D3-D4854AC7B3E8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""58A5EC97-5FF0-4B0A-8074-2A5A57644D59""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/17f5417194136517ee9bbd6511249e5310e5617c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3bbd868099287ff9027db59029b502fcfa2202a0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/43128b3eee337824158f34da6648163d2f2fb937"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/68e3c69803dada336893640110cb87221bb01dcf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/98c3c8fd0d4c560e0f8335b79c407bbf7fc9462c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a9391ff7a7c5f113d6f2bf6621d49110950de49c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/da3c256e2d0ebc87c7db0c605c9692b6f1722074"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f836f9ac95df15f1e0af4beb0ec20021e8c91998"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49608,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:36.270,2025-03-11T22:43:15.650,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: pinctrl: ralink: Check for null return of devm_kcalloc Because of the possible failure of the allocation, data->domains might be NULL pointer and will cause the dereference of the NULL pointer later. Therefore, it might be better to check it and directly return -ENOMEM without releasing data manually if fails, because the comment of the devm_kmalloc() says ""Memory allocated with this function is automatically freed on driver detach."".","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.18"",""versionEndExcluding"":""4.19.254"",""matchCriteriaId"":""3DA92F2C-49D5-45D6-A75B-D299D46581BB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""58A5EC97-5FF0-4B0A-8074-2A5A57644D59""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc7:*:*:*:*:*:*"",""matchCriteriaId"":""C178431E-AD82-4B3D-B70F-A273A02ABD5D""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/13596e6c9e541e90e5fc2c52b23f08b951370da9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/44016a85419ca0d4f1e4d0127b330f8e4e2a57d0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5595d30c4dc27d939635c3188c68203b6ece1711"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5694b162f275fb9a9f89422701b2b963be11e496"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6194c021496addc11763d1ffa89ce5751889fe3c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c3b821e8e406d5650e587b7ac624ac24e9b780a8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49609,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:36.363,2025-03-11T22:18:11.897,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: power/reset: arm-versatile: Fix refcount leak in versatile_reboot_probe of_find_matching_node_and_match() returns a node pointer with refcount incremented, we should use of_node_put() on it when not need anymore. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.18"",""versionEndExcluding"":""4.9.325"",""matchCriteriaId"":""258FC9E8-E811-4F26-8995-50FC2D38C3C3""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.290"",""matchCriteriaId"":""1F023E37-5DAE-491D-9971-00FC089E8C7E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.254"",""matchCriteriaId"":""56D38C39-4EB7-48A7-85D3-D4854AC7B3E8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.208"",""matchCriteriaId"":""58A5EC97-5FF0-4B0A-8074-2A5A57644D59""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.134"",""matchCriteriaId"":""4B697B47-6B36-47E0-95DC-054EC4633DEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.58"",""matchCriteriaId"":""13CF20C8-4DA9-4A21-AD13-7A5C22E5FB05""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.15"",""matchCriteriaId"":""EAD6B571-194C-43A2-A4AB-F68F869D13BC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/493ceca3271316e74639c89ff8ac35883de64256"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/49fa778ee044b00471dd9ccae5f6a121fffea1ac"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6689754b121bd487f99680280102b3a5cd7374af"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/71ab83ac65e2d671552374123bf920c1d698335a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/78bdf732cf5d74d1c6ecda06830a91f80a4aef6f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/80192eff64eee9b3bc0594a47381937b94b9d65a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a9ed3ad3a8d1dfbc829d86edb3236873a315db11"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b4d224eec96a18fa8959512cd9e5b6a50bd16a41"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49610,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:36.463,2025-02-26T07:01:36.463,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: KVM: VMX: Prevent RSB underflow before vmenter On VMX, there are some balanced returns between the time the guest's SPEC_CTRL value is written, and the vmenter. Balanced returns (matched by a preceding call) are usually ok, but it's at least theoretically possible an NMI with a deep call stack could empty the RSB before one of the returns. For maximum paranoia, don't allow *any* returns (balanced or otherwise) between the SPEC_CTRL write and the vmenter. [ bp: Fix 32-bit build. ]",,,"[{""url"":""https://git.kernel.org/stable/c/07853adc29a058c5fd143c14e5ac528448a72ed9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/afd743f6dde87296c6f3414706964c491bb85862"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49611,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:36.553,2025-02-26T07:01:36.553,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: x86/speculation: Fill RSB on vmexit for IBRS Prevent RSB underflow/poisoning attacks with RSB. While at it, add a bunch of comments to attempt to document the current state of tribal knowledge about RSB attacks and what exactly is being mitigated.",,,"[{""url"":""https://git.kernel.org/stable/c/17a9fc4a7b91f8599223631bb6ae6416bc0de1c0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3d323b99ff5c8c57005184056d65f6af5b0479d8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4d7f72b6e1bc630bec7e4cd51814bc2b092bf153"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8c38306e2e9257af4af2819aa287a4711ff36329"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8d5cff499a6d740c91ff37963907e0e983c37f0f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9756bba28470722dacb79ffce554336dd1f6a6cd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f744b88dfc201bf8092833ec70b23c720188b527"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49612,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:36.653,2025-02-26T07:01:36.653,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: power: supply: core: Fix boundary conditions in interpolation The functions power_supply_temp2resist_simple and power_supply_ocv2cap_simple handle boundary conditions incorrectly. The change was introduced in a4585ba2050f460f749bbaf2b67bd56c41e30283 (""power: supply: core: Use library interpolation""). There are two issues: First, the lines ""high = i - 1"" and ""high = i"" in ocv2cap have the wrong order compared to temp2resist. As a consequence, ocv2cap sets high=-1 if ocv>table[0].ocv, which causes an out-of-bounds read. Second, the logic of temp2resist is also not correct. Consider the case table[] = {{20, 100}, {10, 80}, {0, 60}}. For temp=5, we expect a resistance of 70% by interpolation. However, temp2resist sets high=low=2 and returns 60.",,,"[{""url"":""https://git.kernel.org/stable/c/093d27bb6f2d1963f927ef59c9a2d37059175426"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a762cee5d933fe4e2e1b773d60fc74fb8248d8c4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49613,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:36.747,2025-02-26T07:01:36.747,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: serial: 8250: Fix PM usage_count for console handover When console is enabled, univ8250_console_setup() calls serial8250_console_setup() before .dev is set to uart_port. Therefore, it will not call pm_runtime_get_sync(). Later, when the actual driver is going to take over univ8250_console_exit() is called. As .dev is already set, serial8250_console_exit() makes pm_runtime_put_sync() call with usage count being zero triggering PM usage count warning (extra debug for univ8250_console_setup(), univ8250_console_exit(), and serial8250_register_ports()): [ 0.068987] univ8250_console_setup ttyS0 nodev [ 0.499670] printk: console [ttyS0] enabled [ 0.717955] printk: console [ttyS0] printing thread started [ 1.960163] serial8250_register_ports assigned dev for ttyS0 [ 1.976830] printk: console [ttyS0] disabled [ 1.976888] printk: console [ttyS0] printing thread stopped [ 1.977073] univ8250_console_exit ttyS0 usage:0 [ 1.977075] serial8250 serial8250: Runtime PM usage count underflow! [ 1.977429] dw-apb-uart.6: ttyS0 at MMIO 0x4010006000 (irq = 33, base_baud = 115200) is a 16550A [ 1.977812] univ8250_console_setup ttyS0 usage:2 [ 1.978167] printk: console [ttyS0] printing thread started [ 1.978203] printk: console [ttyS0] enabled To fix the issue, call pm_runtime_get_sync() in serial8250_register_ports() as soon as .dev is set for an uart_port if it has console enabled. This problem became apparent only recently because 82586a721595 (""PM: runtime: Avoid device usage count underflows"") added the warning printout. I confirmed this problem also occurs with v5.18 (w/o the warning printout, obviously).",,,"[{""url"":""https://git.kernel.org/stable/c/190ce5cdc55d1b66ea582ac2be6fd5a72e3cc486"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5df66302f03f87ae8953785a882d78e911f00c55"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d9cb6fabc90102f9e61fe35bd0160db88f4f53b4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f9b11229b79c0fb2100b5bb4628a101b1d37fbf6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49614,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:36.837,2025-03-06T16:15:39.210,Rejected,[],Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.,,,[],,,,,,,,,
CVE-2022-49615,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:36.927,2025-03-11T22:43:46.047,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: rt711-sdca: fix kernel NULL pointer dereference when IO error The initial settings will be written before the codec probe function. But, the rt711->component doesn't be assigned yet. If IO error happened during initial settings operations, it will cause the kernel panic. This patch changed component->dev to slave->dev to fix this issue.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""2AE4EB02-9AE9-4E43-9205-BC9D6E9BFEA7""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1df793d479bef546569fc2e409ff8bb3f0fb8e99"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/269be8b2907378adf72d7347cfa43ef230351a06"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7bb71133cae88d3003a3490b97864af76533072b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49616,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:37.017,2025-02-26T07:01:37.017,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: rt7*-sdw: harden jack_detect_handler Realtek headset codec drivers typically check if the card is instantiated before proceeding with the jack detection. The rt700, rt711 and rt711-sdca are however missing a check on the card pointer, which can lead to NULL dereferences encountered in driver bind/unbind tests.",,,"[{""url"":""https://git.kernel.org/stable/c/0484271ab0ce50649329fa9dc23c50853c5b26a4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/07a606e1389a63b61cb8cd591026f30529117573"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1d75b73ec6d6b705cca528b36d8315e43e8d7fa5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49617,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:37.107,2025-02-26T07:01:37.107,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: Intel: sof_sdw: handle errors on card registration If the card registration fails, typically because of deferred probes, the device properties added for headset codecs are not removed, which leads to kernel oopses in driver bind/unbind tests. We already clean-up the device properties when the card is removed, this code can be moved as a helper and called upon card registration errors.",,,"[{""url"":""https://git.kernel.org/stable/c/09bca0ffc95c50369f1345d80ecfaca51864126f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f2556ce6b35ae0fc72000a4daa21ded12665e2f2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fe154c4ff376bc31041c6441958a08243df09c99"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49618,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:37.197,2025-03-11T22:44:26.980,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: pinctrl: aspeed: Fix potential NULL dereference in aspeed_pinmux_set_mux() pdesc could be null but still dereference pdesc->name and it will lead to a null pointer access. So we move a null check before dereference.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.132"",""matchCriteriaId"":""01F465FB-D228-46E3-B533-C63C075D2CAA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""AF59CE2F-BA66-4BFD-83AB-4576F3D1B49A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/3cb392b64304a05bf647e2e44efacd9a1f3c3c6a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/84a85d3fef2e75b1fe9fc2af6f5267122555a1ed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e162a24f1dd06c0dcae71f2565c9f3da2827b98e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ef1e38532f4b2f0f3b460e938a2e7076c3bed5ee"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49619,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:37.290,2025-03-11T22:44:33.637,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: sfp: fix memory leak in sfp_probe() sfp_probe() allocates a memory chunk from sfp with sfp_alloc(). When devm_add_action() fails, sfp is not freed, which leads to a memory leak. We should use devm_add_action_or_reset() instead of devm_add_action().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.14.289"",""matchCriteriaId"":""9E5899FB-DB6B-445F-A027-038ACC4005A9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.253"",""matchCriteriaId"":""2B22ACD7-9025-4AD5-AD6E-A929DEC79B75""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.207"",""matchCriteriaId"":""C27A52F3-82C8-4F03-BE80-38D11CDBD503""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.132"",""matchCriteriaId"":""46CE9FE9-22E3-45CA-8B5F-190C2CAFC5CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""AF59CE2F-BA66-4BFD-83AB-4576F3D1B49A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0a18d802d65cf662644fd1d369c86d84a5630652"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1545bc727625ea6e8decd717e5d1e8cc704ccf8f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/204543581a2f26bb3b997a304c0bd06926ba7f15"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/67dc32542a1fb7790d0853cf4a5cf859ac6a2002"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9ec5a97f327a89031fce6cfc3e95543c53936638"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ede990cfc42775bd0141e21f37ee365dcaeeb50f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f22ddc8a5278d7fb6369a0aeb0d8775a0aefaaee"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49620,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:37.387,2025-03-11T22:18:35.167,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: tipc: fix possible refcount leak in tipc_sk_create() Free sk in case tipc_sk_insert() fails.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.324"",""matchCriteriaId"":""A80C2198-DA65-4327-BD0A-7AD6302BF489""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.289"",""matchCriteriaId"":""9209AEEF-782D-43E6-AA5C-9F5B9CD6ED11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.253"",""matchCriteriaId"":""2B22ACD7-9025-4AD5-AD6E-A929DEC79B75""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.207"",""matchCriteriaId"":""C27A52F3-82C8-4F03-BE80-38D11CDBD503""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.132"",""matchCriteriaId"":""46CE9FE9-22E3-45CA-8B5F-190C2CAFC5CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""AF59CE2F-BA66-4BFD-83AB-4576F3D1B49A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/00aff3590fc0a73bddd3b743863c14e76fd35c0c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3b2957fc09fe1ac7f07f40dd50dd5f93e3f3a7a2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4919d82f7041157a421ca9bf39a78551d5ad8a1b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/638fa20b618b2bbcf86da71231624cc82121a036"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7bc9e7f70bc57d8f02ffea2a42094281effb15ef"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/833ecd0eae76eadf81d6d747bb5bc992d1151867"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ef488669b2652bde5b6ee5a409a5b048a2a50db4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/efa78f2ae363428525fb4981bb63c555ee79f3c7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49621,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:37.487,2025-03-11T22:18:54.483,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: cpufreq: pmac32-cpufreq: Fix refcount leak bug In pmac_cpufreq_init_MacRISC3(), we need to add corresponding of_node_put() for the three node pointers whose refcount have been incremented by of_find_node_by_name().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.324"",""matchCriteriaId"":""A80C2198-DA65-4327-BD0A-7AD6302BF489""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.289"",""matchCriteriaId"":""9209AEEF-782D-43E6-AA5C-9F5B9CD6ED11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.253"",""matchCriteriaId"":""2B22ACD7-9025-4AD5-AD6E-A929DEC79B75""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.207"",""matchCriteriaId"":""C27A52F3-82C8-4F03-BE80-38D11CDBD503""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.132"",""matchCriteriaId"":""46CE9FE9-22E3-45CA-8B5F-190C2CAFC5CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""AF59CE2F-BA66-4BFD-83AB-4576F3D1B49A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/37c16fc2cb13a13f3c0193bfc6f2edef7d7df7d7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3ea9dbf7c2f436952bca331c6f5d72f75aca224e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4513018d0bd739097570d26a7760551cba3deb56"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4585890ab2dbf455d80e254d3d859d4c1e357920"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4f242486bf46d314b2e3838cc64b56f008a3c4d7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/57289b6601fe78c09921599b042a0b430fb420ec"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8dda30f81c751b01cd71f2cfaeef26ad4393b1d1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ccd7567d4b6cf187fdfa55f003a9e461ee629e36"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49622,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:37.580,2025-03-24T19:48:44.753,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: netfilter: nf_tables: avoid skb access on nf_stolen When verdict is NF_STOLEN, the skb might have been freed. When tracing is enabled, this can result in a use-after-free: 1. access to skb->nf_trace 2. access to skb->mark 3. computation of trace id 4. dump of packet payload To avoid 1, keep a cached copy of skb->nf_trace in the trace state struct. Refresh this copy whenever verdict is != STOLEN. Avoid 2 by skipping skb->mark access if verdict is STOLEN. 3 is avoided by precomputing the trace id. Only dump the packet when verdict is not ""STOLEN"".","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""5E7A257D-D28B-46EB-BC21-AD8C60095E96""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0016d5d46d7440729a3132f61a8da3bf7f84e2ba"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e34b9ed96ce3b06c79bf884009b16961ca478f87"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49623,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:37.663,2025-03-11T22:21:01.493,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: powerpc/xive/spapr: correct bitmap allocation size kasan detects access beyond the end of the xibm->bitmap allocation: BUG: KASAN: slab-out-of-bounds in _find_first_zero_bit+0x40/0x140 Read of size 8 at addr c00000001d1d0118 by task swapper/0/1 CPU: 0 PID: 1 Comm: swapper/0 Not tainted 5.19.0-rc2-00001-g90df023b36dd #28 Call Trace: [c00000001d98f770] [c0000000012baab8] dump_stack_lvl+0xac/0x108 (unreliable) [c00000001d98f7b0] [c00000000068faac] print_report+0x37c/0x710 [c00000001d98f880] [c0000000006902c0] kasan_report+0x110/0x354 [c00000001d98f950] [c000000000692324] __asan_load8+0xa4/0xe0 [c00000001d98f970] [c0000000011c6ed0] _find_first_zero_bit+0x40/0x140 [c00000001d98f9b0] [c0000000000dbfbc] xive_spapr_get_ipi+0xcc/0x260 [c00000001d98fa70] [c0000000000d6d28] xive_setup_cpu_ipi+0x1e8/0x450 [c00000001d98fb30] [c000000004032a20] pSeries_smp_probe+0x5c/0x118 [c00000001d98fb60] [c000000004018b44] smp_prepare_cpus+0x944/0x9ac [c00000001d98fc90] [c000000004009f9c] kernel_init_freeable+0x2d4/0x640 [c00000001d98fd90] [c0000000000131e8] kernel_init+0x28/0x1d0 [c00000001d98fe10] [c00000000000cd54] ret_from_kernel_thread+0x5c/0x64 Allocated by task 0: kasan_save_stack+0x34/0x70 __kasan_kmalloc+0xb4/0xf0 __kmalloc+0x268/0x540 xive_spapr_init+0x4d0/0x77c pseries_init_irq+0x40/0x27c init_IRQ+0x44/0x84 start_kernel+0x2a4/0x538 start_here_common+0x1c/0x20 The buggy address belongs to the object at c00000001d1d0118 which belongs to the cache kmalloc-8 of size 8 The buggy address is located 0 bytes inside of 8-byte region [c00000001d1d0118, c00000001d1d0120) The buggy address belongs to the physical page: page:c00c000000074740 refcount:1 mapcount:0 mapping:0000000000000000 index:0xc00000001d1d0558 pfn:0x1d1d flags: 0x7ffff000000200(slab|node=0|zone=0|lastcpupid=0x7ffff) raw: 007ffff000000200 c00000001d0003c8 c00000001d0003c8 c00000001d010480 raw: c00000001d1d0558 0000000001e1000a 00000001ffffffff 0000000000000000 page dumped because: kasan: bad access detected Memory state around the buggy address: c00000001d1d0000: fc 00 fc fc fc fc fc fc fc fc fc fc fc fc fc fc c00000001d1d0080: fc fc 00 fc fc fc fc fc fc fc fc fc fc fc fc fc >c00000001d1d0100: fc fc fc 02 fc fc fc fc fc fc fc fc fc fc fc fc ^ c00000001d1d0180: fc fc fc fc 04 fc fc fc fc fc fc fc fc fc fc fc c00000001d1d0200: fc fc fc fc fc 04 fc fc fc fc fc fc fc fc fc fc This happens because the allocation uses the wrong unit (bits) when it should pass (BITS_TO_LONGS(count) * sizeof(long)) or equivalent. With small numbers of bits, the allocated object can be smaller than sizeof(long), which results in invalid accesses. Use bitmap_zalloc() to allocate and initialize the irq bitmap, paired with bitmap_free() for consistency.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-125""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""2AE4EB02-9AE9-4E43-9205-BC9D6E9BFEA7""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/10f2cd373e65bcd3be8f3cdc71c330c25763dfd8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/19fc5bb93c6bbdce8292b4d7eed04e2fa118d2fe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/99d1c36bddd93919072b5a51a89297bbb5ad6a6f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"",""baseScore"":7.1,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.2}]",,,,,,,,
CVE-2022-49624,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:37.753,2025-02-26T07:01:37.753,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: atlantic: remove aq_nic_deinit() when resume aq_nic_deinit() has been called while suspending, so we don't have to call it again on resume. Actually, call it again leads to another hang issue when resuming from S3. Jul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992345] Call Trace: Jul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992346] <TASK> Jul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992348] aq_nic_deinit+0xb4/0xd0 [atlantic] Jul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992356] aq_pm_thaw+0x7f/0x100 [atlantic] Jul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992362] pci_pm_resume+0x5c/0x90 Jul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992366] ? pci_pm_thaw+0x80/0x80 Jul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992368] dpm_run_callback+0x4e/0x120 Jul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992371] device_resume+0xad/0x200 Jul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992373] async_resume+0x1e/0x40 Jul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992374] async_run_entry_fn+0x33/0x120 Jul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992377] process_one_work+0x220/0x3c0 Jul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992380] worker_thread+0x4d/0x3f0 Jul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992382] ? process_one_work+0x3c0/0x3c0 Jul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992384] kthread+0x12a/0x150 Jul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992386] ? set_kthread_struct+0x40/0x40 Jul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992387] ret_from_fork+0x22/0x30 Jul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992391] </TASK> Jul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992392] ---[ end trace 1ec8c79604ed5e0d ]--- Jul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992394] PM: dpm_run_callback(): pci_pm_resume+0x0/0x90 returns -110 Jul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992397] atlantic 0000:02:00.0: PM: failed to resume async: error -110",,,"[{""url"":""https://git.kernel.org/stable/c/2e15c51fefaffaf9f72255eaef4fada05055e4c5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/58c90993933e7a76305519bc70da8c0cd2907c1f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/702419db7ded2e3686fbc05040b61d7428d611d5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c2978d0124f26e453ed30fda6a37f62d8c7f19cb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49625,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:37.847,2025-02-26T07:01:37.847,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: sfc: fix kernel panic when creating VF When creating VFs a kernel panic can happen when calling to efx_ef10_try_update_nic_stats_vf. When releasing a DMA coherent buffer, sometimes, I don't know in what specific circumstances, it has to unmap memory with vunmap. It is disallowed to do that in IRQ context or with BH disabled. Otherwise, we hit this line in vunmap, causing the crash: BUG_ON(in_interrupt()); This patch reenables BH to release the buffer. Log messages when the bug is hit: kernel BUG at mm/vmalloc.c:2727! invalid opcode: 0000 [#1] PREEMPT SMP NOPTI CPU: 6 PID: 1462 Comm: NetworkManager Kdump: loaded Tainted: G I --------- --- 5.14.0-119.el9.x86_64 #1 Hardware name: Dell Inc. PowerEdge R740/06WXJT, BIOS 2.8.2 08/27/2020 RIP: 0010:vunmap+0x2e/0x30 ...skip... Call Trace: __iommu_dma_free+0x96/0x100 efx_nic_free_buffer+0x2b/0x40 [sfc] efx_ef10_try_update_nic_stats_vf+0x14a/0x1c0 [sfc] efx_ef10_update_stats_vf+0x18/0x40 [sfc] efx_start_all+0x15e/0x1d0 [sfc] efx_net_open+0x5a/0xe0 [sfc] __dev_open+0xe7/0x1a0 __dev_change_flags+0x1d7/0x240 dev_change_flags+0x21/0x60 ...skip...",,,"[{""url"":""https://git.kernel.org/stable/c/16662524ec5da801fb78a1afcaf6e782f1cf103a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/68e5f32f0de9594629ff9e599294d9801c6187de"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/82bcb730f856086f033e6c04082eb4503d4c2fa4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ada74c5539eba06cf8b47d068f92e0b3963a9a6e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b82e4ad58a7fb72456503958a93060f87896e629"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b9072305270579a9d6afc9b926166231e5b1a7c8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d9840212a9c00507347c703f4fdeda16400407e0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/da346adcf5573fd8663cabfdfe8371009629a906"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49626,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:37.937,2025-03-24T19:49:38.357,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: sfc: fix use after free when disabling sriov Use after free is detected by kfence when disabling sriov. What was read after being freed was vf->pci_dev: it was freed from pci_disable_sriov and later read in efx_ef10_sriov_free_vf_vports, called from efx_ef10_sriov_free_vf_vswitching. Set the pointer to NULL at release time to not trying to read it later. Reproducer and dmesg log (note that kfence doesn't detect it every time): $ echo 1 > /sys/class/net/enp65s0f0np0/device/sriov_numvfs $ echo 0 > /sys/class/net/enp65s0f0np0/device/sriov_numvfs BUG: KFENCE: use-after-free read in efx_ef10_sriov_free_vf_vswitching+0x82/0x170 [sfc] Use-after-free read at 0x00000000ff3c1ba5 (in kfence-#224): efx_ef10_sriov_free_vf_vswitching+0x82/0x170 [sfc] efx_ef10_pci_sriov_disable+0x38/0x70 [sfc] efx_pci_sriov_configure+0x24/0x40 [sfc] sriov_numvfs_store+0xfe/0x140 kernfs_fop_write_iter+0x11c/0x1b0 new_sync_write+0x11f/0x1b0 vfs_write+0x1eb/0x280 ksys_write+0x5f/0xe0 do_syscall_64+0x5c/0x80 entry_SYSCALL_64_after_hwframe+0x44/0xae kfence-#224: 0x00000000edb8ef95-0x00000000671f5ce1, size=2792, cache=kmalloc-4k allocated by task 6771 on cpu 10 at 3137.860196s: pci_alloc_dev+0x21/0x60 pci_iov_add_virtfn+0x2a2/0x320 sriov_enable+0x212/0x3e0 efx_ef10_sriov_configure+0x67/0x80 [sfc] efx_pci_sriov_configure+0x24/0x40 [sfc] sriov_numvfs_store+0xba/0x140 kernfs_fop_write_iter+0x11c/0x1b0 new_sync_write+0x11f/0x1b0 vfs_write+0x1eb/0x280 ksys_write+0x5f/0xe0 do_syscall_64+0x5c/0x80 entry_SYSCALL_64_after_hwframe+0x44/0xae freed by task 6771 on cpu 12 at 3170.991309s: device_release+0x34/0x90 kobject_cleanup+0x3a/0x130 pci_iov_remove_virtfn+0xd9/0x120 sriov_disable+0x30/0xe0 efx_ef10_pci_sriov_disable+0x57/0x70 [sfc] efx_pci_sriov_configure+0x24/0x40 [sfc] sriov_numvfs_store+0xfe/0x140 kernfs_fop_write_iter+0x11c/0x1b0 new_sync_write+0x11f/0x1b0 vfs_write+0x1eb/0x280 ksys_write+0x5f/0xe0 do_syscall_64+0x5c/0x80 entry_SYSCALL_64_after_hwframe+0x44/0xae","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.2"",""versionEndExcluding"":""4.9.324"",""matchCriteriaId"":""2423841B-6626-4BBC-967E-B6216D5DB225""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.289"",""matchCriteriaId"":""9209AEEF-782D-43E6-AA5C-9F5B9CD6ED11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.253"",""matchCriteriaId"":""2B22ACD7-9025-4AD5-AD6E-A929DEC79B75""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.207"",""matchCriteriaId"":""C27A52F3-82C8-4F03-BE80-38D11CDBD503""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.132"",""matchCriteriaId"":""46CE9FE9-22E3-45CA-8B5F-190C2CAFC5CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""AF59CE2F-BA66-4BFD-83AB-4576F3D1B49A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/3199e34912d84cdfb8a93a984c5ae5c73fb13e84"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/58d93e9d160c0de6d867c7eb4c2206671a351eb1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9c854ae512b89229aeee93849e9bd4c115b37909"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bcad880865bfb421885364b1f0c7351280fe2b97"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c2240500817b3b4b996cdf2a461a3a5679f49b94"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c9e75bb22a26e391f189f5a5133dd63dcb57fdaa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e435c4aeeaa073091f7f3b7735af2ef5c97d63f2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ebe41da5d47ac0fff877e57bd14c54dccf168827"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49627,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:38.030,2025-03-11T22:35:54.760,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ima: Fix potential memory leak in ima_init_crypto() On failure to allocate the SHA1 tfm, IMA fails to initialize and exits without freeing the ima_algo_array. Add the missing kfree() for ima_algo_array to avoid the potential memory leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.8"",""versionEndExcluding"":""5.10.132"",""matchCriteriaId"":""16F7E0CA-54A9-49E4-B123-1C5929F2EE64""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""AF59CE2F-BA66-4BFD-83AB-4576F3D1B49A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/067d2521874135267e681c19d42761c601d503d6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/601ae26aa2802a4c10c94d7388a99eabdbefab2b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/830de9667b3ada0a75a3f098dfc7159709fe397b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c1d9702ceb4a091da6bee380627596d1fba09274"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49628,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:38.117,2025-02-26T07:01:38.117,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: stmmac: fix leaks in probe These two error paths should clean up before returning.",,,"[{""url"":""https://git.kernel.org/stable/c/23aa6d5088e3bd65de77c5c307237b9937f8b48a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dd91bc60f305610401b2196bedb573693d6c8e46"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f4bd3202a2b4194ab6c0ce61628095d54f994db4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49629,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:38.200,2025-03-11T22:36:36.063,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: nexthop: Fix data-races around nexthop_compat_mode. While reading nexthop_compat_mode, it can be changed concurrently. Thus, we need to add READ_ONCE() to its readers.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.8"",""versionEndExcluding"":""5.10.132"",""matchCriteriaId"":""16F7E0CA-54A9-49E4-B123-1C5929F2EE64""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""AF59CE2F-BA66-4BFD-83AB-4576F3D1B49A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0d17723afea3ae8c9f245c9bbd2ba5945b77e812"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a51040d4b120f3520df64fb0b9c63b31d69bea9b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ae3054f6fbccc90f14ecd6cf9b2c09a2401c64fd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bdf00bf24bef9be1ca641a6390fd5487873e0d2e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49630,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:38.290,2025-03-11T22:37:05.213,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: Fix a data-race around sysctl_tcp_ecn_fallback. While reading sysctl_tcp_ecn_fallback, it can be changed concurrently. Thus, we need to add READ_ONCE() to its reader.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.2"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""E986722F-76B4-40A4-B210-006A5264316F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/12b8d9ca7e678abc48195294494f1815b555d658"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1ec3d6c2626ee6e1b36b7bd006873a271406ba61"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8bcf7339f2cf70ea4461df6ea045d1aadfabfa11"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49631,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:38.380,2025-03-11T22:37:28.010,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: raw: Fix a data-race around sysctl_raw_l3mdev_accept. While reading sysctl_raw_l3mdev_accept, it can be changed concurrently. Thus, we need to add READ_ONCE() to its reader.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.0"",""versionEndExcluding"":""5.4.207"",""matchCriteriaId"":""B65F40D8-5B7C-4E61-8CAA-19C3B00F326D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.132"",""matchCriteriaId"":""46CE9FE9-22E3-45CA-8B5F-190C2CAFC5CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""AF59CE2F-BA66-4BFD-83AB-4576F3D1B49A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/038a87b3e460d2ee579c8b1bd3890d816d6687b1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1dace014928e6e385363032d359a04dee9158af0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/46e9c46203fd4676720ddca0fef7eff26826648e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ab5adca2e17d6595f3fc0e25ccb6bcbe2e01ca4f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cc9540ba5b3652c473af7e54892a48cdced87983"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49632,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:38.470,2025-03-11T22:37:48.373,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: icmp: Fix a data-race around sysctl_icmp_errors_use_inbound_ifaddr. While reading sysctl_icmp_errors_use_inbound_ifaddr, it can be changed concurrently. Thus, we need to add READ_ONCE() to its reader.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.12"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""F13BFA6B-1BEC-47A2-84BD-CED26E4027B5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/d2efabce81db7eed1c98fa1a3f203f0edd738ac3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/de9490c32bc10020efdd1509689a28f197d6dfb8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f9617844e4d5d6331dbce3fb19a24e5bda201e58"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49633,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:38.560,2025-03-11T22:30:02.070,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: icmp: Fix data-races around sysctl_icmp_echo_enable_probe. While reading sysctl_icmp_echo_enable_probe, it can be changed concurrently. Thus, we need to add READ_ONCE() to its readers.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.13"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""5B662086-EDB5-486B-BBBB-3CF9F4C88AB6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/05c615033174f1d19374f42285ccd8e9af13e427"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4a2f7083cc6cb72dade9a63699ca352fad26d1cd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cce955efa0ab81f7fb72e22beed372054c86005c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49634,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:38.647,2025-03-11T22:30:25.060,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: sysctl: Fix data-races in proc_dou8vec_minmax(). A sysctl variable is accessed concurrently, and there is always a chance of data-race. So, all readers and writers need some basic protection to avoid load/store-tearing. This patch changes proc_dou8vec_minmax() to use READ_ONCE() and WRITE_ONCE() internally to fix data-races on the sysctl side. For now, proc_dou8vec_minmax() itself is tolerant to a data-race, but we still need to add annotations on the other subsystem's side.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.13"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""5B662086-EDB5-486B-BBBB-3CF9F4C88AB6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/5f776daef0b5354615ec4b4234cd9539ca05f273"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7dee5d7747a69aa2be41f04c6a7ecfe3ac8cdf18"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e58b02e445463065b4078bf621561da75197853f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f177b382c33900d0e5a9766493c11a1074076f78"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49635,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:38.733,2025-02-26T07:01:38.733,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/i915/selftests: fix subtraction overflow bug On some machines hole_end can be small enough to cause subtraction overflow. On the other side (addr + 2 * min_alignment) can overflow in case of mock tests. This patch should handle both cases. (cherry picked from commit ab3edc679c552a466e4bf0b11af3666008bd65a2)",,,"[{""url"":""https://git.kernel.org/stable/c/333991c4e66b3d4b5613315f18016da80344f659"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e8997d2d6b8d764e12489f1af2a1ce1d7384ca2a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49636,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:38.827,2025-04-10T13:15:43.703,Modified,[],"In the Linux kernel, the following vulnerability has been resolved: vlan: fix memory leak in vlan_newlink() Blamed commit added back a bug I fixed in commit 9bbd917e0bec (""vlan: fix memory leak in vlan_dev_set_egress_priority"") If a memory allocation fails in vlan_changelink() after other allocations succeeded, we need to call vlan_dev_free_egress_priority() to free all allocated memory because after a failed ->newlink() we do not call any methods like ndo_uninit() or dev->priv_destructor(). In following example, if the allocation for last element 2000:2001 fails, we need to free eight prior allocations: ip link add link dummy0 dummy0.100 type vlan id 100 \ egress-qos-map 1:2 2:3 3:4 4:5 5:6 6:7 7:8 8:9 2000:2001 syzbot report was: BUG: memory leak unreferenced object 0xffff888117bd1060 (size 32): comm ""syz-executor408"", pid 3759, jiffies 4294956555 (age 34.090s) hex dump (first 32 bytes): 09 00 00 00 00 a0 00 00 00 00 00 00 00 00 00 00 ................ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [<ffffffff83fc60ad>] kmalloc include/linux/slab.h:600 [inline] [<ffffffff83fc60ad>] vlan_dev_set_egress_priority+0xed/0x170 net/8021q/vlan_dev.c:193 [<ffffffff83fc6628>] vlan_changelink+0x178/0x1d0 net/8021q/vlan_netlink.c:128 [<ffffffff83fc67c8>] vlan_newlink+0x148/0x260 net/8021q/vlan_netlink.c:185 [<ffffffff838b1278>] rtnl_newlink_create net/core/rtnetlink.c:3363 [inline] [<ffffffff838b1278>] __rtnl_newlink+0xa58/0xdc0 net/core/rtnetlink.c:3580 [<ffffffff838b1629>] rtnl_newlink+0x49/0x70 net/core/rtnetlink.c:3593 [<ffffffff838ac66c>] rtnetlink_rcv_msg+0x21c/0x5c0 net/core/rtnetlink.c:6089 [<ffffffff839f9c37>] netlink_rcv_skb+0x87/0x1d0 net/netlink/af_netlink.c:2501 [<ffffffff839f8da7>] netlink_unicast_kernel net/netlink/af_netlink.c:1319 [inline] [<ffffffff839f8da7>] netlink_unicast+0x397/0x4c0 net/netlink/af_netlink.c:1345 [<ffffffff839f9266>] netlink_sendmsg+0x396/0x710 net/netlink/af_netlink.c:1921 [<ffffffff8384dbf6>] sock_sendmsg_nosec net/socket.c:714 [inline] [<ffffffff8384dbf6>] sock_sendmsg+0x56/0x80 net/socket.c:734 [<ffffffff8384e15c>] ____sys_sendmsg+0x36c/0x390 net/socket.c:2488 [<ffffffff838523cb>] ___sys_sendmsg+0x8b/0xd0 net/socket.c:2542 [<ffffffff838525b8>] __sys_sendmsg net/socket.c:2571 [inline] [<ffffffff838525b8>] __do_sys_sendmsg net/socket.c:2580 [inline] [<ffffffff838525b8>] __se_sys_sendmsg net/socket.c:2578 [inline] [<ffffffff838525b8>] __x64_sys_sendmsg+0x78/0xf0 net/socket.c:2578 [<ffffffff845ad8d5>] do_syscall_x64 arch/x86/entry/common.c:50 [inline] [<ffffffff845ad8d5>] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80 [<ffffffff8460006a>] entry_SYSCALL_64_after_hwframe+0x46/0xb0","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15.142"",""versionEndExcluding"":""5.16"",""matchCriteriaId"":""129FDDA3-732E-48A0-BD90-B3D54CFC4E7E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""B8B21C94-C38C-4A91-8580-6D05C6F95378""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/4c43069bb1097dd6cc1cf0f7c43a36d1f7b3910b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/549de58dba4bf1b2adc72e9948b9c76fa88be9d2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/72a0b329114b1caa8e69dfa7cdad1dd3c69b8602"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/df27729a4fe0002dfd80c96fe1c142829c672728"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f5dc10b910bdac523e5947336445a77066c51bf9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49637,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:38.920,2025-03-11T22:31:54.830,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ipv4: Fix a data-race around sysctl_fib_sync_mem. While reading sysctl_fib_sync_mem, it can be changed concurrently. So, we need to add READ_ONCE() to avoid a data-race.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.2"",""versionEndExcluding"":""5.4.207"",""matchCriteriaId"":""3C1CD258-4E62-4637-AE47-A914838A5B30""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.132"",""matchCriteriaId"":""46CE9FE9-22E3-45CA-8B5F-190C2CAFC5CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""AF59CE2F-BA66-4BFD-83AB-4576F3D1B49A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/190cd4ff128373271e065afb20f1d2247b3f10c3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/418b191d5f223a8cb6cab09eae1f72c04ba6adf2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/73318c4b7dbd0e781aaababff17376b2894745c0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7c1acd98fb221dc0d847451b9ab86319f8b9916c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9be8aac91960ea32fd0e874758c9afee665c57d2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49638,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:39.010,2025-03-11T22:32:25.430,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: icmp: Fix data-races around sysctl. While reading icmp sysctl variables, they can be changed concurrently. So, we need to add READ_ONCE() to avoid data-races.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.18"",""versionEndExcluding"":""4.9.324"",""matchCriteriaId"":""86D6E5BE-2946-4C39-8AB8-0AE8ED114B4D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.289"",""matchCriteriaId"":""9209AEEF-782D-43E6-AA5C-9F5B9CD6ED11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.253"",""matchCriteriaId"":""2B22ACD7-9025-4AD5-AD6E-A929DEC79B75""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.207"",""matchCriteriaId"":""C27A52F3-82C8-4F03-BE80-38D11CDBD503""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.132"",""matchCriteriaId"":""46CE9FE9-22E3-45CA-8B5F-190C2CAFC5CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""AF59CE2F-BA66-4BFD-83AB-4576F3D1B49A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0cba7ca667ceb06934746ddd9833a25847bde81d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1740e5922fbb705637ae9fa5203db132fc45f9f6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/48d7ee321ea5182c6a70782aa186422a70e67e22"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/53ecd09ef2fb35fa69667ae8e414ef6b00fd3bf6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/798c2cf57c63ab39c8aac24d6a3d50f4fa5eeb06"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e088ceb73c24ab4774da391d54a6426f4bfaefce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e2828e8c605853f71267825c9415437c0a93e4f2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/edeec63b13c252193d626c2a48d7a2f0e7016dc2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49639,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:39.100,2025-03-11T22:32:47.653,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: cipso: Fix data-races around sysctl. While reading cipso sysctl variables, they can be changed concurrently. So, we need to add READ_ONCE() to avoid data-races.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.19"",""versionEndExcluding"":""4.9.324"",""matchCriteriaId"":""CA9A02AD-4BFC-4A8C-8770-649723AAECC5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.289"",""matchCriteriaId"":""9209AEEF-782D-43E6-AA5C-9F5B9CD6ED11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.253"",""matchCriteriaId"":""2B22ACD7-9025-4AD5-AD6E-A929DEC79B75""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.207"",""matchCriteriaId"":""C27A52F3-82C8-4F03-BE80-38D11CDBD503""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.132"",""matchCriteriaId"":""46CE9FE9-22E3-45CA-8B5F-190C2CAFC5CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""AF59CE2F-BA66-4BFD-83AB-4576F3D1B49A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/07b0caf8aeb9b82e6ecc6c292a3e47c7fcdb1148"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0e41a0f73ccb9be112a80bde3804a771633caaef"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2764f82bbc158d106693ae3ced3675cf4b963b35"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/59e26906b89cc35bb54476498772b45cbc32323f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c321e99d2725d11f7e6a4ebd9ce752259f0bae81"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ca26ca5e2f3eeb3e6fe699cd6effa3b4b2aa8698"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/dd44f04b9214adb68ef5684ae87a81ba03632250"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fe2a35fa2c4f9c8ce5ef970eb927031387f9446a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49640,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:39.193,2025-03-11T22:33:39.833,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: sysctl: Fix data races in proc_douintvec_minmax(). A sysctl variable is accessed concurrently, and there is always a chance of data-race. So, all readers and writers need some basic protection to avoid load/store-tearing. This patch changes proc_douintvec_minmax() to use READ_ONCE() and WRITE_ONCE() internally to fix data-races on the sysctl side. For now, proc_douintvec_minmax() itself is tolerant to a data-race, but we still need to add annotations on the other subsystem's side.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.13"",""versionEndExcluding"":""5.10.132"",""matchCriteriaId"":""106B1875-7F09-40A9-AED6-6ADF46608C64""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""AF59CE2F-BA66-4BFD-83AB-4576F3D1B49A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2d3b559df3ed39258737789aae2ae7973d205bc1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/40e0477a7371d101c55b69d9c32a7a1ed82ab5ea"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b60eddf98b9716651069dfda296c91311a7a6293"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e3a2144b3b6bf9ecafd91087c8b8b48171ec19df"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49641,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:39.280,2025-03-11T22:34:12.367,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: sysctl: Fix data races in proc_douintvec(). A sysctl variable is accessed concurrently, and there is always a chance of data-race. So, all readers and writers need some basic protection to avoid load/store-tearing. This patch changes proc_douintvec() to use READ_ONCE() and WRITE_ONCE() internally to fix data-races on the sysctl side. For now, proc_douintvec() itself is tolerant to a data-race, but we still need to add annotations on the other subsystem's side.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.4.24"",""versionEndExcluding"":""4.5"",""matchCriteriaId"":""2501777F-E671-4CBB-A181-BC0584394E2B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.7.7"",""versionEndExcluding"":""5.10.132"",""matchCriteriaId"":""F4E24501-E472-434F-B732-6C7449C39868""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""AF59CE2F-BA66-4BFD-83AB-4576F3D1B49A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/4762b532ec9539755aab61445d5da6e1926ccb99"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/630c76850d554d7140232e71b5d1663e88cffb54"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d335db59f7fb3353f56e52371f1ee796ae9c8f09"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d5d54714e329f646bd7af4994fc427d88ee68936"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49642,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:39.373,2025-02-26T07:01:39.373,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: stmmac: dwc-qos: Disable split header for Tegra194 There is a long-standing issue with the Synopsys DWC Ethernet driver for Tegra194 where random system crashes have been observed [0]. The problem occurs when the split header feature is enabled in the stmmac driver. In the bad case, a larger than expected buffer length is received and causes the calculation of the total buffer length to overflow. This results in a very large buffer length that causes the kernel to crash. Why this larger buffer length is received is not clear, however, the feedback from the NVIDIA design team is that the split header feature is not supported for Tegra194. Therefore, disable split header support for Tegra194 to prevent these random crashes from occurring. [0] https://lore.kernel.org/linux-tegra/b0b17697-f23e-8fa5-3757-604a86f3a095@nvidia.com/",,,"[{""url"":""https://git.kernel.org/stable/c/029c1c2059e9c4b38f97a06204cdecd10cfbeb8a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2968830c9b47ce093237483c6207c61065712386"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9cc8edc571b871d974b3289868553f9ce544aba6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cfa4caf3e881ad6dd366c903c34f1c7f21b857ab"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d5c315a787652c35045044877a249f7d5c8a4104"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49643,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:39.467,2025-03-11T22:34:40.033,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ima: Fix a potential integer overflow in ima_appraise_measurement When the ima-modsig is enabled, the rc passed to evm_verifyxattr() may be negative, which may cause the integer overflow problem.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-190""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4"",""versionEndExcluding"":""5.4.207"",""matchCriteriaId"":""8CDC07B9-0100-43EB-B768-A2AEB8FC17AF""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.132"",""matchCriteriaId"":""46CE9FE9-22E3-45CA-8B5F-190C2CAFC5CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""AF59CE2F-BA66-4BFD-83AB-4576F3D1B49A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/388f3df7c3c8b7f2a32b9ae0a9b2f9f6ad3b1b77"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/640cea4c2839a821adfbb703b590a5928abe9286"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/831e190175f10652be93b08436cc7bf2e62e4bb6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c8d5d81940938b5f6c0f495ca9538e7740416f30"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d2ee2cfc4aa85ff6a2a3b198a3a524ec54e3d999"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49644,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:39.567,2025-03-11T22:00:49.010,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/i915: fix a possible refcount leak in intel_dp_add_mst_connector() If drm_connector_init fails, intel_connector_free will be called to take care of proper free. So it is necessary to drop the refcount of port before intel_connector_free. (cherry picked from commit cea9ed611e85d36a05db52b6457bf584b7d969e2)","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""5.4.207"",""matchCriteriaId"":""B36FF6F3-0A74-4B80-ACC9-8284E4FA59EC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.132"",""matchCriteriaId"":""46CE9FE9-22E3-45CA-8B5F-190C2CAFC5CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""AF59CE2F-BA66-4BFD-83AB-4576F3D1B49A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/505114dda5bbfd07f4ce9a2df5b7d8ef5f2a1218"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/592f3bad00b7e2a95a6fb7a4f9e742c061c9c3c1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/72f231b9a88abcfac9f5ddaa1a0aacb3f9f87ba5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/85144df9ff4652816448369de76897c57cbb1b93"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a91522b4279bebb098106a19b91f82b9c3213be9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49645,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:39.677,2025-02-26T07:01:39.677,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/panfrost: Fix shrinker list corruption by madvise IOCTL Calling madvise IOCTL twice on BO causes memory shrinker list corruption and crashes kernel because BO is already on the list and it's added to the list again, while BO should be removed from the list before it's re-added. Fix it.",,,"[{""url"":""https://git.kernel.org/stable/c/0581613df7f9a4c5fac096ce1d5fb15b7b994240"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1807d8867402a58b831a7fc16832747ff559a0d1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/393594aad55179eb761af41533d8d1d6eb4543b0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9fc33eaaa979d112d10fea729edcd2a2e21aa912"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f036392edd9c49090781d8cca26ad6557a63bae4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49646,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:39.777,2025-02-26T07:01:39.777,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: wifi: mac80211: fix queue selection for mesh/OCB interfaces When using iTXQ, the code assumes that there is only one vif queue for broadcast packets, using the BE queue. Allowing non-BE queue marking violates that assumption and txq->ac == skb_queue_mapping is no longer guaranteed. This can cause issues with queue handling in the driver and also causes issues with the recent ATF change, resulting in an AQL underflow warning.",,,"[{""url"":""https://git.kernel.org/stable/c/41ecab279a70dced9005f4d55fa0fcde8938603f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/444be5a02b77f3b7a8ac9c1a0b074fbb3bd89cd0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/50e2ab39291947b6c6c7025cf01707c270fcde59"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5a9df31017999197b6e60535940f2f2fe1bd3b0d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e013ea2a51a94b903b396a8dff531a07d470335d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49647,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:39.863,2025-03-24T19:00:58.960,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: cgroup: Use separate src/dst nodes when preloading css_sets for migration Each cset (css_set) is pinned by its tasks. When we're moving tasks around across csets for a migration, we need to hold the source and destination csets to ensure that they don't go away while we're moving tasks about. This is done by linking cset->mg_preload_node on either the mgctx->preloaded_src_csets or mgctx->preloaded_dst_csets list. Using the same cset->mg_preload_node for both the src and dst lists was deemed okay as a cset can't be both the source and destination at the same time. Unfortunately, this overloading becomes problematic when multiple tasks are involved in a migration and some of them are identity noop migrations while others are actually moving across cgroups. For example, this can happen with the following sequence on cgroup1: #1> mkdir -p /sys/fs/cgroup/misc/a/b #2> echo $$ > /sys/fs/cgroup/misc/a/cgroup.procs #3> RUN_A_COMMAND_WHICH_CREATES_MULTIPLE_THREADS & #4> PID=$! #5> echo $PID > /sys/fs/cgroup/misc/a/b/tasks #6> echo $PID > /sys/fs/cgroup/misc/a/cgroup.procs the process including the group leader back into a. In this final migration, non-leader threads would be doing identity migration while the group leader is doing an actual one. After #3, let's say the whole process was in cset A, and that after #4, the leader moves to cset B. Then, during #6, the following happens: 1. cgroup_migrate_add_src() is called on B for the leader. 2. cgroup_migrate_add_src() is called on A for the other threads. 3. cgroup_migrate_prepare_dst() is called. It scans the src list. 4. It notices that B wants to migrate to A, so it tries to A to the dst list but realizes that its ->mg_preload_node is already busy. 5. and then it notices A wants to migrate to A as it's an identity migration, it culls it by list_del_init()'ing its ->mg_preload_node and putting references accordingly. 6. The rest of migration takes place with B on the src list but nothing on the dst list. This means that A isn't held while migration is in progress. If all tasks leave A before the migration finishes and the incoming task pins it, the cset will be destroyed leading to use-after-free. This is caused by overloading cset->mg_preload_node for both src and dst preload lists. We wanted to exclude the cset from the src list but ended up inadvertently excluding it from the dst list too. This patch fixes the issue by separating out cset->mg_preload_node into ->mg_src_preload_node and ->mg_dst_preload_node, so that the src and dst preloadings don't interfere with each other.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.16"",""versionEndExcluding"":""4.14.289"",""matchCriteriaId"":""C715C58E-FE6D-4E8A-B3B3-91BEE32F1721""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.253"",""matchCriteriaId"":""2B22ACD7-9025-4AD5-AD6E-A929DEC79B75""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.207"",""matchCriteriaId"":""C27A52F3-82C8-4F03-BE80-38D11CDBD503""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.132"",""matchCriteriaId"":""46CE9FE9-22E3-45CA-8B5F-190C2CAFC5CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""AF59CE2F-BA66-4BFD-83AB-4576F3D1B49A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/05f7658210d1d331e8dd4cb6e7bbbe3df5f5ac27"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/07fd5b6cdf3cc30bfde8fe0f644771688be04447"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0e41774b564befa6d271e8d5086bf870d617a4e6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/54aee4e5ce8c21555286a6333e46c1713880cf93"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7657e3958535d101a24ab4400f9b8062b9107cc4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ad44e05f3e016bdcb1ad25af35ade5b5f41ccd68"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cec2bbdcc14fbaa6b95ee15a7c423b05d97038be"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49648,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:39.957,2025-03-11T22:35:11.613,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tracing/histograms: Fix memory leak problem This reverts commit 46bbe5c671e06f070428b9be142cc4ee5cedebac. As commit 46bbe5c671e0 (""tracing: fix double free"") said, the ""double free"" problem reported by clang static analyzer is: > In parse_var_defs() if there is a problem allocating > var_defs.expr, the earlier var_defs.name is freed. > This free is duplicated by free_var_defs() which frees > the rest of the list. However, if there is a problem allocating N-th var_defs.expr: + in parse_var_defs(), the freed 'earlier var_defs.name' is actually the N-th var_defs.name; + then in free_var_defs(), the names from 0th to (N-1)-th are freed; IF ALLOCATING PROBLEM HAPPENED HERE!!! -+ \ | 0th 1th (N-1)-th N-th V +-------------+-------------+-----+-------------+----------- var_defs: | name | expr | name | expr | ... | name | expr | name | /// +-------------+-------------+-----+-------------+----------- These two frees don't act on same name, so there was no ""double free"" problem before. Conversely, after that commit, we get a ""memory leak"" problem because the above ""N-th var_defs.name"" is not freed. If enable CONFIG_DEBUG_KMEMLEAK and inject a fault at where the N-th var_defs.expr allocated, then execute on shell like: $ echo 'hist:key=call_site:val=$v1,$v2:v1=bytes_req,v2=bytes_alloc' > \ /sys/kernel/debug/tracing/events/kmem/kmalloc/trigger Then kmemleak reports: unreferenced object 0xffff8fb100ef3518 (size 8): comm ""bash"", pid 196, jiffies 4295681690 (age 28.538s) hex dump (first 8 bytes): 76 31 00 00 b1 8f ff ff v1...... backtrace: [<0000000038fe4895>] kstrdup+0x2d/0x60 [<00000000c99c049a>] event_hist_trigger_parse+0x206f/0x20e0 [<00000000ae70d2cc>] trigger_process_regex+0xc0/0x110 [<0000000066737a4c>] event_trigger_write+0x75/0xd0 [<000000007341e40c>] vfs_write+0xbb/0x2a0 [<0000000087fde4c2>] ksys_write+0x59/0xd0 [<00000000581e9cdf>] do_syscall_64+0x3a/0x80 [<00000000cf3b065c>] entry_SYSCALL_64_after_hwframe+0x46/0xb0","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.19.149"",""versionEndExcluding"":""4.19.253"",""matchCriteriaId"":""09EE9BBC-7D0D-4330-9AB8-A660909D800A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4.69"",""versionEndExcluding"":""5.4.207"",""matchCriteriaId"":""A61D2E61-AF99-4E32-AB1E-CF7ECE0A15AA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.8.13"",""versionEndExcluding"":""5.10.132"",""matchCriteriaId"":""03678599-1EF3-4852-9209-86F4922C0CFF""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""AF59CE2F-BA66-4BFD-83AB-4576F3D1B49A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/22eeff55679d9e7c0f768c79bfbd83e2f8142d89"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4d453eb5e1eec89971aa5b3262857ee26cfdffd3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/78a1400c42ee11197eb1f0f85ba51df9a4fdfff0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7edc3945bdce9c39198a10d6129377a5c53559c2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/eb622d5580b9e2ff694f62da6410618bd73853cb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ecc6dec12c33aa92c086cd702af9f544ddaf3c75"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49649,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:40.050,2025-03-11T22:24:42.743,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: xen/netback: avoid entering xenvif_rx_next_skb() with an empty rx queue xenvif_rx_next_skb() is expecting the rx queue not being empty, but in case the loop in xenvif_rx_action() is doing multiple iterations, the availability of another skb in the rx queue is not being checked. This can lead to crashes: [40072.537261] BUG: unable to handle kernel NULL pointer dereference at 0000000000000080 [40072.537407] IP: xenvif_rx_skb+0x23/0x590 [xen_netback] [40072.537534] PGD 0 P4D 0 [40072.537644] Oops: 0000 [#1] SMP NOPTI [40072.537749] CPU: 0 PID: 12505 Comm: v1-c40247-q2-gu Not tainted 4.12.14-122.121-default #1 SLE12-SP5 [40072.537867] Hardware name: HP ProLiant DL580 Gen9/ProLiant DL580 Gen9, BIOS U17 11/23/2021 [40072.537999] task: ffff880433b38100 task.stack: ffffc90043d40000 [40072.538112] RIP: e030:xenvif_rx_skb+0x23/0x590 [xen_netback] [40072.538217] RSP: e02b:ffffc90043d43de0 EFLAGS: 00010246 [40072.538319] RAX: 0000000000000000 RBX: ffffc90043cd7cd0 RCX: 00000000000000f7 [40072.538430] RDX: 0000000000000000 RSI: 0000000000000006 RDI: ffffc90043d43df8 [40072.538531] RBP: 000000000000003f R08: 000077ff80000000 R09: 0000000000000008 [40072.538644] R10: 0000000000007ff0 R11: 00000000000008f6 R12: ffffc90043ce2708 [40072.538745] R13: 0000000000000000 R14: ffffc90043d43ed0 R15: ffff88043ea748c0 [40072.538861] FS: 0000000000000000(0000) GS:ffff880484600000(0000) knlGS:0000000000000000 [40072.538988] CS: e033 DS: 0000 ES: 0000 CR0: 0000000080050033 [40072.539088] CR2: 0000000000000080 CR3: 0000000407ac8000 CR4: 0000000000040660 [40072.539211] Call Trace: [40072.539319] xenvif_rx_action+0x71/0x90 [xen_netback] [40072.539429] xenvif_kthread_guest_rx+0x14a/0x29c [xen_netback] Fix that by stopping the loop in case the rx queue becomes empty.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.9"",""versionEndExcluding"":""4.9.324"",""matchCriteriaId"":""FA144DE8-6BF0-4219-AA61-5F6BBE651EFA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.289"",""matchCriteriaId"":""9209AEEF-782D-43E6-AA5C-9F5B9CD6ED11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.253"",""matchCriteriaId"":""2B22ACD7-9025-4AD5-AD6E-A929DEC79B75""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.207"",""matchCriteriaId"":""C27A52F3-82C8-4F03-BE80-38D11CDBD503""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.132"",""matchCriteriaId"":""46CE9FE9-22E3-45CA-8B5F-190C2CAFC5CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.56"",""matchCriteriaId"":""AF59CE2F-BA66-4BFD-83AB-4576F3D1B49A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.13"",""matchCriteriaId"":""640221A7-96EE-4B48-8FE1-BA810131789B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc6:*:*:*:*:*:*"",""matchCriteriaId"":""00AE778B-BAEE-49EB-9F84-003B73D7862A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/5a071aefd6414af5a20321ab58a0557b81993687"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7425479d20f9e96f7c3ec8e8a93fe0d7478724cb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/94e8100678889ab428e68acadf042de723f094b9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b99174ac57fe5d8867448c03b23828e63f24cb1c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b9c32a6886af79d6e0ad87a7b01800ed079cdd02"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c0fcceb5f3f1ec197c014fe218c2f28108cacd27"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d5320c6a27aa975aff740f9cb481dcbde48f4348"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f0b5c819b062df8bf5f2acf4697e3871cb3722da"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49650,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:40.150,2025-02-26T07:01:40.150,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: dmaengine: qcom: bam_dma: fix runtime PM underflow Commit dbad41e7bb5f (""dmaengine: qcom: bam_dma: check if the runtime pm enabled"") caused unbalanced pm_runtime_get/put() calls when the bam is controlled remotely. This commit reverts it and just enables pm_runtime in all cases, the clk_* functions already just nop when the clock is NULL. Also clean up a bit by removing unnecessary bamclk null checks.",,,"[{""url"":""https://git.kernel.org/stable/c/0ac9c3dd0d6fe293cd5044cfad10bec27d171e4e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2f6ded79068cac8cff41d5d5632564165d98ee12"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b702a1077b51fcb39507cc3bd39206f539319a96"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49651,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:40.237,2025-03-24T19:03:58.443,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: srcu: Tighten cleanup_srcu_struct() GP checks Currently, cleanup_srcu_struct() checks for a grace period in progress, but it does not check for a grace period that has not yet started but which might start at any time. Such a situation could result in a use-after-free bug, so this commit adds a check for a grace period that is needed but not yet started to cleanup_srcu_struct().","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.18.11"",""matchCriteriaId"":""87059C94-C259-4650-B469-625FE475651B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/8ed00760203d8018bee042fbfe8e076579be2c2b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e997dda6502eefbc1032d6b0da7b353c53344b07"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49652,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:40.323,2025-03-11T22:01:25.590,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: dmaengine: ti: Fix refcount leak in ti_dra7_xbar_route_allocate of_parse_phandle() returns a node pointer with refcount incremented, we should use of_node_put() on it when not needed anymore. Add missing of_node_put() in to fix this.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.5"",""versionEndExcluding"":""4.9.323"",""matchCriteriaId"":""6F47A520-0EAE-45E4-9918-90E96DA7F744""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.288"",""matchCriteriaId"":""11E86C4E-715B-4E25-81E9-2FD98431E3FA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.252"",""matchCriteriaId"":""2CC8E927-649A-40AD-AB62-F7EE444BEF0F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.205"",""matchCriteriaId"":""844199C4-DEBE-4DA1-AB77-5A7984F9393B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.130"",""matchCriteriaId"":""8BF24898-7C80-443F-93F3-F82029BBFF72""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.54"",""matchCriteriaId"":""B2197EF1-3D9C-4EBA-9F94-6C8668E719B6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.11"",""matchCriteriaId"":""622F881E-3317-4653-9558-86008C2FBFD2""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/37147e22cd8dfc0412495cb361708836157a4486"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3bd66010398871807c1cebacee07d60ded1b1402"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/452b9dfd7aca96befce22634fadb111737f22bbe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/61b4ef19c346dc21ab1d4f39f5c412e3037b2bdc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b31ab132561c7f1b6459039152b8d09e44eb3565"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b5a817f8d62e9e13280928f3756e54854ae4962e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c132fe78ad7b4ce8b5d49a501a15c29d08eeb23a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cb9813d7eae917acd34436160a278b8b5d48ca53"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49653,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:40.420,2025-03-11T22:25:05.953,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: i2c: piix4: Fix a memory leak in the EFCH MMIO support The recently added support for EFCH MMIO regions introduced a memory leak in that code path. The leak is caused by the fact that release_resource() merely removes the resource from the tree but does not free its memory. We need to call release_mem_region() instead, which does free the memory. As a nice side effect, this brings back some symmetry between the legacy and MMIO paths.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15.42"",""versionEndExcluding"":""5.15.54"",""matchCriteriaId"":""06B4215D-581E-4AA1-AD85-5EEEB80BE75A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17.10"",""versionEndExcluding"":""5.18.11"",""matchCriteriaId"":""6580DB44-FFFF-48BD-84AD-350A42266201""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/8ad59b397f86a4d8014966fdc0552095a0c4fb2b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a3263e4cf8265f0c9eb0ed8a9b50f132c7a42e19"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d2bf1a6480e8d44658a8ac3bdcec081238873212"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49654,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:40.510,2025-02-26T07:01:40.510,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: dsa: qca8k: reset cpu port on MTU change It was discovered that the Documentation lacks of a fundamental detail on how to correctly change the MAX_FRAME_SIZE of the switch. In fact if the MAX_FRAME_SIZE is changed while the cpu port is on, the switch panics and cease to send any packet. This cause the mgmt ethernet system to not receive any packet (the slow fallback still works) and makes the device not reachable. To recover from this a switch reset is required. To correctly handle this, turn off the cpu ports before changing the MAX_FRAME_SIZE and turn on again after the value is applied.",,,"[{""url"":""https://git.kernel.org/stable/c/188c798f3c2554fa0d7147e9b97baf144b817019"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1993f5a06736ada59dd54b50dc96755a38796ee5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/386228c694bf1e7a7688e44412cb33500b0ac585"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49655,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:40.600,2025-02-26T07:01:40.600,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: fscache: Fix invalidation/lookup race If an NFS file is opened for writing and closed, fscache_invalidate() will be asked to invalidate the file - however, if the cookie is in the LOOKING_UP state (or the CREATING state), then request to invalidate doesn't get recorded for fscache_cookie_state_machine() to do something with. Fix this by making __fscache_invalidate() set a flag if it sees the cookie is in the LOOKING_UP state to indicate that we need to go to invalidation. Note that this requires a count on the n_accesses counter for the state machine, which that will release when it's done. fscache_cookie_state_machine() then shifts to the INVALIDATING state if it sees the flag. Without this, an nfs file can get corrupted if it gets modified locally and then read locally as the cache contents may not get updated.",,,"[{""url"":""https://git.kernel.org/stable/c/85e4ea1049c70fb99de5c6057e835d151fb647da"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b1ae9f617f8a5c848d9205b8e228c6f0d1af754b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49656,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:40.683,2025-03-11T22:08:11.720,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ARM: meson: Fix refcount leak in meson_smp_prepare_cpus of_find_compatible_node() returns a node pointer with refcount incremented, we should use of_node_put() on it when done. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.252"",""matchCriteriaId"":""2CC8E927-649A-40AD-AB62-F7EE444BEF0F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.205"",""matchCriteriaId"":""844199C4-DEBE-4DA1-AB77-5A7984F9393B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.130"",""matchCriteriaId"":""8BF24898-7C80-443F-93F3-F82029BBFF72""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.54"",""matchCriteriaId"":""B2197EF1-3D9C-4EBA-9F94-6C8668E719B6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.11"",""matchCriteriaId"":""622F881E-3317-4653-9558-86008C2FBFD2""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2e1bcd33478ef44e63a45457055060b5fe4118ad"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/34d2cd3fccced12b958b8848e3eff0ee4296764c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3cf8ece9113242c10f83c7675ea4f4f67959ee43"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3d90607e7e6afa89768b0aaa915b58bd2b849276"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7208101ded1e9dcc52c8f0f8b16474211c871c1a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c5fbf4f74c94fd60d5e9bf9f7f8268c3601562ca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49657,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:40.777,2025-03-11T22:25:32.113,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: usbnet: fix memory leak in error case usbnet_write_cmd_async() mixed up which buffers need to be freed in which error case. v2: add Fixes tag v3: fix uninitialized buf pointer","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.8"",""versionEndExcluding"":""4.9.323"",""matchCriteriaId"":""C5429E0D-ACDD-406D-8726-8B587830CD84""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.288"",""matchCriteriaId"":""11E86C4E-715B-4E25-81E9-2FD98431E3FA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.252"",""matchCriteriaId"":""2CC8E927-649A-40AD-AB62-F7EE444BEF0F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.205"",""matchCriteriaId"":""844199C4-DEBE-4DA1-AB77-5A7984F9393B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.130"",""matchCriteriaId"":""8BF24898-7C80-443F-93F3-F82029BBFF72""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.54"",""matchCriteriaId"":""B2197EF1-3D9C-4EBA-9F94-6C8668E719B6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.11"",""matchCriteriaId"":""622F881E-3317-4653-9558-86008C2FBFD2""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""1A0DE3B7-0FFB-45AA-9BD6-19870CA7C6FD""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0085da9df3dced730027923a6b48f58e9016af91"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/04894ab34faf40ab72a8a5ab5b404bb0606bbbff"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3eed421ca5c809da93456f69203d164d5220be3d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5269209f54dd8dfd15f9383f3a3a1fe8370764f8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b55a21b764c1e182014630fa5486d717484ac58f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d5165e657987ff4ba0ace896d4376a3718a9fbc3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/db89582ff330556188da856e01382ccbf3a5e706"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e7b4f69946a38209b4a4f660bf0e4cbed94f9b4b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49658,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:40.867,2025-02-26T07:01:40.867,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: bpf: Fix insufficient bounds propagation from adjust_scalar_min_max_vals Kuee reported a corner case where the tnum becomes constant after the call to __reg_bound_offset(), but the register's bounds are not, that is, its min bounds are still not equal to the register's max bounds. This in turn allows to leak pointers through turning a pointer register as is into an unknown scalar via adjust_ptr_min_max_vals(). Before: func#0 @0 0: R1=ctx(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) R10=fp(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) 0: (b7) r0 = 1 ; R0_w=scalar(imm=1,umin=1,umax=1,var_off=(0x1; 0x0)) 1: (b7) r3 = 0 ; R3_w=scalar(imm=0,umax=0,var_off=(0x0; 0x0)) 2: (87) r3 = -r3 ; R3_w=scalar() 3: (87) r3 = -r3 ; R3_w=scalar() 4: (47) r3 |= 32767 ; R3_w=scalar(smin=-9223372036854743041,umin=32767,var_off=(0x7fff; 0xffffffffffff8000),s32_min=-2147450881) 5: (75) if r3 s>= 0x0 goto pc+1 ; R3_w=scalar(umin=9223372036854808575,var_off=(0x8000000000007fff; 0x7fffffffffff8000),s32_min=-2147450881,u32_min=32767) 6: (95) exit from 5 to 7: R0=scalar(imm=1,umin=1,umax=1,var_off=(0x1; 0x0)) R1=ctx(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) R3=scalar(umin=32767,umax=9223372036854775807,var_off=(0x7fff; 0x7fffffffffff8000),s32_min=-2147450881) R10=fp(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) 7: (d5) if r3 s<= 0x8000 goto pc+1 ; R3=scalar(umin=32769,umax=9223372036854775807,var_off=(0x7fff; 0x7fffffffffff8000),s32_min=-2147450881,u32_min=32767) 8: (95) exit from 7 to 9: R0=scalar(imm=1,umin=1,umax=1,var_off=(0x1; 0x0)) R1=ctx(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) R3=scalar(umin=32767,umax=32768,var_off=(0x7fff; 0x8000)) R10=fp(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) 9: (07) r3 += -32767 ; R3_w=scalar(imm=0,umax=1,var_off=(0x0; 0x0)) <--- [*] 10: (95) exit What can be seen here is that R3=scalar(umin=32767,umax=32768,var_off=(0x7fff; 0x8000)) after the operation R3 += -32767 results in a 'malformed' constant, that is, R3_w=scalar(imm=0,umax=1,var_off=(0x0; 0x0)). Intersecting with var_off has not been done at that point via __update_reg_bounds(), which would have improved the umax to be equal to umin. Refactor the tnum <> min/max bounds information flow into a reg_bounds_sync() helper and use it consistently everywhere. After the fix, bounds have been corrected to R3_w=scalar(imm=0,umax=0,var_off=(0x0; 0x0)) and thus the register is regarded as a 'proper' constant scalar of 0. After: func#0 @0 0: R1=ctx(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) R10=fp(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) 0: (b7) r0 = 1 ; R0_w=scalar(imm=1,umin=1,umax=1,var_off=(0x1; 0x0)) 1: (b7) r3 = 0 ; R3_w=scalar(imm=0,umax=0,var_off=(0x0; 0x0)) 2: (87) r3 = -r3 ; R3_w=scalar() 3: (87) r3 = -r3 ; R3_w=scalar() 4: (47) r3 |= 32767 ; R3_w=scalar(smin=-9223372036854743041,umin=32767,var_off=(0x7fff; 0xffffffffffff8000),s32_min=-2147450881) 5: (75) if r3 s>= 0x0 goto pc+1 ; R3_w=scalar(umin=9223372036854808575,var_off=(0x8000000000007fff; 0x7fffffffffff8000),s32_min=-2147450881,u32_min=32767) 6: (95) exit from 5 to 7: R0=scalar(imm=1,umin=1,umax=1,var_off=(0x1; 0x0)) R1=ctx(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) R3=scalar(umin=32767,umax=9223372036854775807,var_off=(0x7fff; 0x7fffffffffff8000),s32_min=-2147450881) R10=fp(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) 7: (d5) if r3 s<= 0x8000 goto pc+1 ; R3=scalar(umin=32769,umax=9223372036854775807,var_off=(0x7fff; 0x7fffffffffff8000),s32_min=-2147450881,u32_min=32767) 8: (95) exit from 7 to 9: R0=scalar(imm=1,umin=1,umax=1,var_off=(0x1; 0x0)) R1=ctx(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) R3=scalar(umin=32767,umax=32768,var_off=(0x7fff; 0x8000)) R10=fp(off=0 ---truncated---",,,"[{""url"":""https://git.kernel.org/stable/c/3844d153a41adea718202c10ae91dc96b37453b5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a7de8d436db92bab8b1f44624297c2554a6ac36b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b2a28bb36664c94375926cbbb91976242847699d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e917be1f83ea14a68b3cf64d3da9968eaf991dae"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49659,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:40.957,2025-02-26T07:01:40.957,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: can: m_can: m_can_{read_fifo,echo_tx_event}(): shift timestamp to full 32 bits In commit 1be37d3b0414 (""can: m_can: fix periph RX path: use rx-offload to ensure skbs are sent from softirq context"") the RX path for peripheral devices was switched to RX-offload. Received CAN frames are pushed to RX-offload together with a timestamp. RX-offload is designed to handle overflows of the timestamp correctly, if 32 bit timestamps are provided. The timestamps of m_can core are only 16 bits wide. So this patch shifts them to full 32 bit before passing them to RX-offload.",,,"[{""url"":""https://git.kernel.org/stable/c/2a2914a5bd7f38efe55a8372178146de82e0bce9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4c3333693f07313f5f0145a922f14a7d3c0f4f21"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c7333f79888497bfd75dcd02a94eaf836dd1042c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49660,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:41.043,2025-02-26T13:15:34.227,Rejected,[],Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.,,,[],,,,,,,,,
CVE-2022-49661,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:41.137,2025-02-26T07:01:41.137,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: can: gs_usb: gs_usb_open/close(): fix memory leak The gs_usb driver appears to suffer from a malady common to many USB CAN adapter drivers in that it performs usb_alloc_coherent() to allocate a number of USB request blocks (URBs) for RX, and then later relies on usb_kill_anchored_urbs() to free them, but this doesn't actually free them. As a result, this may be leaking DMA memory that's been used by the driver. This commit is an adaptation of the techniques found in the esd_usb2 driver where a similar design pattern led to a memory leak. It explicitly frees the RX URBs and their DMA memory via a call to usb_free_coherent(). Since the RX URBs were allocated in the gs_can_open(), we remove them in gs_can_close() rather than in the disconnect function as was done in esd_usb2. For more information, see the 928150fad41b (""can: esd_usb2: fix memory leak"").",,,"[{""url"":""https://git.kernel.org/stable/c/0e60230bc64355c80abe993d1719fdb318094e20"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2bda24ef95c0311ab93bda00db40486acf30bd0a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/339fa9f80d3b94177a7a459c6d115d3b56007d5a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6f655b5e13fa4b27e915b6c209ac0da74fd75963"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c1d806bc29ff7ffe0e2a023583c8720ed96cb0b0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d0b8e223998866b3e7b2895927d4e9689b0a80d8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d91492638b054f4a359621ef216242be5973ed6b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ffb6cc6601ec7c8fa963dcf76025df4a02f2cf5c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49662,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:41.230,2025-02-26T07:01:41.230,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ipv6: fix lockdep splat in in6_dump_addrs() As reported by syzbot, we should not use rcu_dereference() when rcu_read_lock() is not held. WARNING: suspicious RCU usage 5.19.0-rc2-syzkaller #0 Not tainted net/ipv6/addrconf.c:5175 suspicious rcu_dereference_check() usage! other info that might help us debug this: rcu_scheduler_active = 2, debug_locks = 1 1 lock held by syz-executor326/3617: #0: ffffffff8d5848e8 (rtnl_mutex){+.+.}-{3:3}, at: netlink_dump+0xae/0xc20 net/netlink/af_netlink.c:2223 stack backtrace: CPU: 0 PID: 3617 Comm: syz-executor326 Not tainted 5.19.0-rc2-syzkaller #0 Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011 Call Trace: <TASK> __dump_stack lib/dump_stack.c:88 [inline] dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106 in6_dump_addrs+0x12d1/0x1790 net/ipv6/addrconf.c:5175 inet6_dump_addr+0x9c1/0xb50 net/ipv6/addrconf.c:5300 netlink_dump+0x541/0xc20 net/netlink/af_netlink.c:2275 __netlink_dump_start+0x647/0x900 net/netlink/af_netlink.c:2380 netlink_dump_start include/linux/netlink.h:245 [inline] rtnetlink_rcv_msg+0x73e/0xc90 net/core/rtnetlink.c:6046 netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2501 netlink_unicast_kernel net/netlink/af_netlink.c:1319 [inline] netlink_unicast+0x543/0x7f0 net/netlink/af_netlink.c:1345 netlink_sendmsg+0x917/0xe10 net/netlink/af_netlink.c:1921 sock_sendmsg_nosec net/socket.c:714 [inline] sock_sendmsg+0xcf/0x120 net/socket.c:734 ____sys_sendmsg+0x6eb/0x810 net/socket.c:2492 ___sys_sendmsg+0xf3/0x170 net/socket.c:2546 __sys_sendmsg net/socket.c:2575 [inline] __do_sys_sendmsg net/socket.c:2584 [inline] __se_sys_sendmsg net/socket.c:2582 [inline] __x64_sys_sendmsg+0x132/0x220 net/socket.c:2582 do_syscall_x64 arch/x86/entry/common.c:50 [inline] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80 entry_SYSCALL_64_after_hwframe+0x46/0xb0",,,"[{""url"":""https://git.kernel.org/stable/c/2930ee1a166df0e12fe9fec4b79cc3dc9634ae45"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4e43e64d0f1332fcc503babad4dc31aead7131ca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b39fda51c32dd879451e0119881f31493bf83283"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49663,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:41.323,2025-02-26T07:01:41.323,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: tunnels: do not assume mac header is set in skb_tunnel_check_pmtu() Recently added debug in commit f9aefd6b2aa3 (""net: warn if mac header was not set"") caught a bug in skb_tunnel_check_pmtu(), as shown in this syzbot report [1]. In ndo_start_xmit() paths, there is really no need to use skb->mac_header, because skb->data is supposed to point at it. [1] WARNING: CPU: 1 PID: 8604 at include/linux/skbuff.h:2784 skb_mac_header_len include/linux/skbuff.h:2784 [inline] WARNING: CPU: 1 PID: 8604 at include/linux/skbuff.h:2784 skb_tunnel_check_pmtu+0x5de/0x2f90 net/ipv4/ip_tunnel_core.c:413 Modules linked in: CPU: 1 PID: 8604 Comm: syz-executor.3 Not tainted 5.19.0-rc2-syzkaller-00443-g8720bd951b8e #0 Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011 RIP: 0010:skb_mac_header_len include/linux/skbuff.h:2784 [inline] RIP: 0010:skb_tunnel_check_pmtu+0x5de/0x2f90 net/ipv4/ip_tunnel_core.c:413 Code: 00 00 00 00 fc ff df 4c 89 fa 48 c1 ea 03 80 3c 02 00 0f 84 b9 fe ff ff 4c 89 ff e8 7c 0f d7 f9 e9 ac fe ff ff e8 c2 13 8a f9 <0f> 0b e9 28 fc ff ff e8 b6 13 8a f9 48 8b 54 24 70 48 b8 00 00 00 RSP: 0018:ffffc90002e4f520 EFLAGS: 00010212 RAX: 0000000000000324 RBX: ffff88804d5fd500 RCX: ffffc90005b52000 RDX: 0000000000040000 RSI: ffffffff87f05e3e RDI: 0000000000000003 RBP: ffffc90002e4f650 R08: 0000000000000003 R09: 000000000000ffff R10: 000000000000ffff R11: 0000000000000000 R12: 000000000000ffff R13: 0000000000000000 R14: 000000000000ffcd R15: 000000000000001f FS: 00007f3babba9700(0000) GS:ffff8880b9b00000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 0000000020000080 CR3: 0000000075319000 CR4: 00000000003506e0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Call Trace: <TASK> geneve_xmit_skb drivers/net/geneve.c:927 [inline] geneve_xmit+0xcf8/0x35d0 drivers/net/geneve.c:1107 __netdev_start_xmit include/linux/netdevice.h:4805 [inline] netdev_start_xmit include/linux/netdevice.h:4819 [inline] __dev_direct_xmit+0x500/0x730 net/core/dev.c:4309 dev_direct_xmit include/linux/netdevice.h:3007 [inline] packet_direct_xmit+0x1b8/0x2c0 net/packet/af_packet.c:282 packet_snd net/packet/af_packet.c:3073 [inline] packet_sendmsg+0x21f4/0x55d0 net/packet/af_packet.c:3104 sock_sendmsg_nosec net/socket.c:714 [inline] sock_sendmsg+0xcf/0x120 net/socket.c:734 ____sys_sendmsg+0x6eb/0x810 net/socket.c:2489 ___sys_sendmsg+0xf3/0x170 net/socket.c:2543 __sys_sendmsg net/socket.c:2572 [inline] __do_sys_sendmsg net/socket.c:2581 [inline] __se_sys_sendmsg net/socket.c:2579 [inline] __x64_sys_sendmsg+0x132/0x220 net/socket.c:2579 do_syscall_x64 arch/x86/entry/common.c:50 [inline] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80 entry_SYSCALL_64_after_hwframe+0x46/0xb0 RIP: 0033:0x7f3baaa89109 Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48 RSP: 002b:00007f3babba9168 EFLAGS: 00000246 ORIG_RAX: 000000000000002e RAX: ffffffffffffffda RBX: 00007f3baab9bf60 RCX: 00007f3baaa89109 RDX: 0000000000000000 RSI: 0000000020000a00 RDI: 0000000000000003 RBP: 00007f3baaae305d R08: 0000000000000000 R09: 0000000000000000 R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000 R13: 00007ffe74f2543f R14: 00007f3babba9300 R15: 0000000000022000 </TASK>",,,"[{""url"":""https://git.kernel.org/stable/c/32dcf62efa0003f92a976aea0c57f118e689de8b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/59c51c3b545128a92ebfb6dbae990d3abee110e7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/674a641e5b67e16ba3112eacd680ff87b38539de"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/853a7614880231747040cada91d2b8d2e995c51a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49664,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:41.420,2025-03-11T22:25:53.450,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tipc: move bc link creation back to tipc_node_create Shuang Li reported a NULL pointer dereference crash: [] BUG: kernel NULL pointer dereference, address: 0000000000000068 [] RIP: 0010:tipc_link_is_up+0x5/0x10 [tipc] [] Call Trace: [] <IRQ> [] tipc_bcast_rcv+0xa2/0x190 [tipc] [] tipc_node_bc_rcv+0x8b/0x200 [tipc] [] tipc_rcv+0x3af/0x5b0 [tipc] [] tipc_udp_recv+0xc7/0x1e0 [tipc] It was caused by the 'l' passed into tipc_bcast_rcv() is NULL. When it creates a node in tipc_node_check_dest(), after inserting the new node into hashtable in tipc_node_create(), it creates the bc link. However, there is a gap between this insert and bc link creation, a bc packet may come in and get the node from the hashtable then try to dereference its bc link, which is NULL. This patch is to fix it by moving the bc link creation before inserting into the hashtable. Note that for a preliminary node becoming ""real"", the bc link creation should also be called before it's rehashed, as we don't create it for preliminary nodes.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4.287"",""versionEndExcluding"":""5.10.129"",""matchCriteriaId"":""2CED68CD-DF2D-4A28-BAB6-F04A71D588FB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.53"",""matchCriteriaId"":""70DCF327-F4B6-4CDB-8C9E-98E909E60127""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.10"",""matchCriteriaId"":""8261A22B-B156-4045-AE8E-AA9E95E7930C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/35fcb2ba35b4d9b592b558c3bcc6e0d90e213588"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/456bc338871c4a52117dd5ef29cce3745456d248"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cb8092d70a6f5f01ec1490fce4d35efed3ed996c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e52910e671f58c619e33dac476b11b35e2d3ab6f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49665,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:41.513,2025-02-26T07:01:41.513,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: platform/x86: thinkpad_acpi: Fix a memory leak of EFCH MMIO resource Unlike release_mem_region(), a call to release_resource() does not free the resource, so it has to be freed explicitly to avoid a memory leak.",,,"[{""url"":""https://git.kernel.org/stable/c/3884bf75fa044c73e843d95dd71a424e80ebb095"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d2f33f0c3ad7b0d5262d9b986f1353265fad7a08"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49666,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:41.600,2025-02-26T07:01:41.600,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: powerpc/memhotplug: Add add_pages override for PPC With commit ffa0b64e3be5 (""powerpc: Fix virt_addr_valid() for 64-bit Book3E & 32-bit"") the kernel now validate the addr against high_memory value. This results in the below BUG_ON with dax pfns. [ 635.798741][T26531] kernel BUG at mm/page_alloc.c:5521! 1:mon> e cpu 0x1: Vector: 700 (Program Check) at [c000000007287630] pc: c00000000055ed48: free_pages.part.0+0x48/0x110 lr: c00000000053ca70: tlb_finish_mmu+0x80/0xd0 sp: c0000000072878d0 msr: 800000000282b033 current = 0xc00000000afabe00 paca = 0xc00000037ffff300 irqmask: 0x03 irq_happened: 0x05 pid = 26531, comm = 50-landscape-sy kernel BUG at :5521! Linux version 5.19.0-rc3-14659-g4ec05be7c2e1 (kvaneesh@ltc-boston8) (gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0, GNU ld (GNU Binutils for Ubuntu) 2.34) #625 SMP Thu Jun 23 00:35:43 CDT 2022 1:mon> t [link register ] c00000000053ca70 tlb_finish_mmu+0x80/0xd0 [c0000000072878d0] c00000000053ca54 tlb_finish_mmu+0x64/0xd0 (unreliable) [c000000007287900] c000000000539424 exit_mmap+0xe4/0x2a0 [c0000000072879e0] c00000000019fc1c mmput+0xcc/0x210 [c000000007287a20] c000000000629230 begin_new_exec+0x5e0/0xf40 [c000000007287ae0] c00000000070b3cc load_elf_binary+0x3ac/0x1e00 [c000000007287c10] c000000000627af0 bprm_execve+0x3b0/0xaf0 [c000000007287cd0] c000000000628414 do_execveat_common.isra.0+0x1e4/0x310 [c000000007287d80] c00000000062858c sys_execve+0x4c/0x60 [c000000007287db0] c00000000002c1b0 system_call_exception+0x160/0x2c0 [c000000007287e10] c00000000000c53c system_call_common+0xec/0x250 The fix is to make sure we update high_memory on memory hotplug. This is similar to what x86 does in commit 3072e413e305 (""mm/memory_hotplug: introduce add_pages"")",,,"[{""url"":""https://git.kernel.org/stable/c/84d146fd35a01b08e9515041de60f0f915a417d5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/89296ac435e2cf8a5101f7fab8f0c7b754b92052"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ac790d09885d36143076e7e02825c541e8eee899"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49667,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:41.687,2025-03-24T19:07:43.713,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: bonding: fix use-after-free after 802.3ad slave unbind commit 0622cab0341c (""bonding: fix 802.3ad aggregator reselection""), resolve case, when there is several aggregation groups in the same bond. bond_3ad_unbind_slave will invalidate (clear) aggregator when __agg_active_ports return zero. So, ad_clear_agg can be executed even, when num_of_ports!=0. Than bond_3ad_unbind_slave can be executed again for, previously cleared aggregator. NOTE: at this time bond_3ad_unbind_slave will not update slave ports list, because lag_ports==NULL. So, here we got slave ports, pointing to freed aggregator memory. Fix with checking actual number of ports in group (as was before commit 0622cab0341c (""bonding: fix 802.3ad aggregator reselection"") ), before ad_clear_agg(). The KASAN logs are as follows: [ 767.617392] ================================================================== [ 767.630776] BUG: KASAN: use-after-free in bond_3ad_state_machine_handler+0x13dc/0x1470 [ 767.638764] Read of size 2 at addr ffff00011ba9d430 by task kworker/u8:7/767 [ 767.647361] CPU: 3 PID: 767 Comm: kworker/u8:7 Tainted: G O 5.15.11 #15 [ 767.655329] Hardware name: DNI AmazonGo1 A7040 board (DT) [ 767.660760] Workqueue: lacp_1 bond_3ad_state_machine_handler [ 767.666468] Call trace: [ 767.668930] dump_backtrace+0x0/0x2d0 [ 767.672625] show_stack+0x24/0x30 [ 767.675965] dump_stack_lvl+0x68/0x84 [ 767.679659] print_address_description.constprop.0+0x74/0x2b8 [ 767.685451] kasan_report+0x1f0/0x260 [ 767.689148] __asan_load2+0x94/0xd0 [ 767.692667] bond_3ad_state_machine_handler+0x13dc/0x1470","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.7"",""versionEndExcluding"":""4.9.322"",""matchCriteriaId"":""C4226359-06D5-41B1-B299-5B0357988B43""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.287"",""matchCriteriaId"":""73A0453B-4AA7-4F16-B8F2-4DDB2510943D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.251"",""matchCriteriaId"":""83E1438F-F12B-4581-9EF4-B104DAEFFD41""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.204"",""matchCriteriaId"":""73056417-5BD5-453F-8EEC-2D5C48185372""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.129"",""matchCriteriaId"":""DAAE3E52-3C60-40CA-A245-AE5660F45CD8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.53"",""matchCriteriaId"":""70DCF327-F4B6-4CDB-8C9E-98E909E60127""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.10"",""matchCriteriaId"":""8261A22B-B156-4045-AE8E-AA9E95E7930C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/050133e1aa2cb49bb17be847d48a4431598ef562"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2765749def4765c5052a4c66445cf4c96fcccdbc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/63b2fe509f69b90168a75e04e14573dccf7984e6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/893825289ba840afd86bfffcb6f7f363c73efff8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a853b7a3a9fd1d74a4ccdd9cd73512b7dace2f1e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b90ac60303063a43e17dd4aec159067599d255e6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ef0af7d08d26c5333ff4944a559279464edf6f15"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f162f7c348fa2a5555bafdb5cc890b89b221e69c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49668,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:41.780,2025-03-11T22:09:28.633,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: PM / devfreq: exynos-ppmu: Fix refcount leak in of_get_devfreq_events of_get_child_by_name() returns a node pointer with refcount incremented, we should use of_node_put() on it when done. This function only calls of_node_put() in normal path, missing it in error paths. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.0"",""versionEndExcluding"":""5.4.204"",""matchCriteriaId"":""362570AA-00CD-4314-9B1A-3EB71E9C7D7C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.129"",""matchCriteriaId"":""DAAE3E52-3C60-40CA-A245-AE5660F45CD8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.53"",""matchCriteriaId"":""70DCF327-F4B6-4CDB-8C9E-98E909E60127""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.10"",""matchCriteriaId"":""8261A22B-B156-4045-AE8E-AA9E95E7930C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/01121e39ef537289926ae6f5374dce92c796d863"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/194781229d4cbc804b8ded13156eb8addce87d6c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bdecd912e99acfd61507f1720d3f4eed1b3418d8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e65027fdebbacd40595e96ef7b5d2418f71bddf2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f44b799603a9b5d2e375b0b2d54dd0b791eddfc2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49669,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:41.870,2025-03-24T19:27:11.643,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mptcp: fix race on unaccepted mptcp sockets When the listener socket owning the relevant request is closed, it frees the unaccepted subflows and that causes later deletion of the paired MPTCP sockets. The mptcp socket's worker can run in the time interval between such delete operations. When that happens, any access to msk->first will cause an UaF access, as the subflow cleanup did not cleared such field in the mptcp socket. Address the issue explicitly traversing the listener socket accept queue at close time and performing the needed cleanup on the pending msk. Note that the locking is a bit tricky, as we need to acquire the msk socket lock, while still owning the subflow socket one.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17"",""versionEndExcluding"":""5.18.10"",""matchCriteriaId"":""9545F2C7-C654-49EE-904D-DE0CBC8E81C0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/6aeed9045071f2252ff4e98fc13d1e304f33e5b0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a8a3e95c74e48c2c9b07b81fafda9122993f2e12"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49670,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:41.953,2025-03-11T22:26:35.913,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: linux/dim: Fix divide by 0 in RDMA DIM Fix a divide 0 error in rdma_dim_stats_compare() when prev->cpe_ratio == 0. CallTrace: Hardware name: H3C R4900 G3/RS33M2C9S, BIOS 2.00.37P21 03/12/2020 task: ffff880194b78000 task.stack: ffffc90006714000 RIP: 0010:backport_rdma_dim+0x10e/0x240 [mlx_compat] RSP: 0018:ffff880c10e83ec0 EFLAGS: 00010202 RAX: 0000000000002710 RBX: ffff88096cd7f780 RCX: 0000000000000064 RDX: 0000000000000000 RSI: 0000000000000002 RDI: 0000000000000001 RBP: 0000000000000001 R08: 0000000000000000 R09: 0000000000000000 R10: 0000000000000000 R11: 0000000000000000 R12: 000000001d7c6c09 R13: ffff88096cd7f780 R14: ffff880b174fe800 R15: 0000000000000000 FS: 0000000000000000(0000) GS:ffff880c10e80000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00000000a0965b00 CR3: 000000000200a003 CR4: 00000000007606e0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 PKRU: 55555554 Call Trace: <IRQ> ib_poll_handler+0x43/0x80 [ib_core] irq_poll_softirq+0xae/0x110 __do_softirq+0xd1/0x28c irq_exit+0xde/0xf0 do_IRQ+0x54/0xe0 common_interrupt+0x8f/0x8f </IRQ> ? cpuidle_enter_state+0xd9/0x2a0 ? cpuidle_enter_state+0xc7/0x2a0 ? do_idle+0x170/0x1d0 ? cpu_startup_entry+0x6f/0x80 ? start_secondary+0x1b9/0x210 ? secondary_startup_64+0xa5/0xb0 Code: 0f 87 e1 00 00 00 8b 4c 24 14 44 8b 43 14 89 c8 4d 63 c8 44 29 c0 99 31 d0 29 d0 31 d2 48 98 48 8d 04 80 48 8d 04 80 48 c1 e0 02 <49> f7 f1 48 83 f8 0a 0f 86 c1 00 00 00 44 39 c1 7f 10 48 89 df RIP: backport_rdma_dim+0x10e/0x240 [mlx_compat] RSP: ffff880c10e83ec0","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-369""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.3"",""versionEndExcluding"":""5.4.204"",""matchCriteriaId"":""4125506A-5C4C-4016-89AA-A82C5F553128""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.129"",""matchCriteriaId"":""DAAE3E52-3C60-40CA-A245-AE5660F45CD8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.53"",""matchCriteriaId"":""70DCF327-F4B6-4CDB-8C9E-98E909E60127""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.10"",""matchCriteriaId"":""8261A22B-B156-4045-AE8E-AA9E95E7930C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0b6e0eb5c45e79e9095de2498cc0ca5ec563fc5e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0fe3dbbefb74a8575f61d7801b08dbc50523d60d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5af106f8e072aebd88b95e164a08fa320651a99a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7c1963391af51ee322378d1b2849c60e9037f069"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fae2a9fb1eaf348ad8732f90d42ebbb971bd7e95"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49671,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:42.043,2025-03-11T22:27:13.447,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: RDMA/cm: Fix memory leak in ib_cm_insert_listen cm_alloc_id_priv() allocates resource for the cm_id_priv. When cm_init_listen() fails it doesn't free it, leading to memory leak. Add the missing error unwind.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.7"",""versionEndExcluding"":""5.10.129"",""matchCriteriaId"":""715E2A43-C27C-4BF4-B372-90B7F98682A3""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.53"",""matchCriteriaId"":""70DCF327-F4B6-4CDB-8C9E-98E909E60127""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.10"",""matchCriteriaId"":""8261A22B-B156-4045-AE8E-AA9E95E7930C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""2E9C0DB0-D349-489F-A3D6-B77214E93A8A""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2990f223ffa7bb25422956b9f79f9176a5b38346"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2febf09a8a8ae4accf908f043f1bab1421056568"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/889000874c1204e47c7f2a4945db262a47e7efc9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b0cab8b517aeaf2592c3479294f934209c41a26f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49672,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:42.130,2025-02-26T07:01:42.130,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: tun: unlink NAPI from device on destruction Syzbot found a race between tun file and device destruction. NAPIs live in struct tun_file which can get destroyed before the netdev so we have to del them explicitly. The current code is missing deleting the NAPI if the queue was detached first.",,,"[{""url"":""https://git.kernel.org/stable/c/3b9bc84d311104906d2b4995a9a02d7b7ddab2db"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8145f77d38de4f88b8a69e1463f5c09ba189d77c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/82e729aee59acefe135fceffadcbc5b86dd4f1b9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8661d4b8faa2f7ee7a559969c0a7c57f077b1728"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a8cf919022373c97a84fe596bbea544f909c485d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bec1be0a745ab420718217e3e0d9542a75108989"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49673,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:42.223,2025-02-26T07:01:42.223,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: dm raid: fix KASAN warning in raid5_add_disks There's a KASAN warning in raid5_add_disk when running the LVM testsuite. The warning happens in the test lvconvert-raid-reshape-linear_to_raid6-single-type.sh. We fix the warning by verifying that rdev->saved_raid_disk is within limits.",,,"[{""url"":""https://git.kernel.org/stable/c/02cffb1921edadd9b6e4eee7ada4a5213e8ba12e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2d4e7c9898c20fb3d3f55381cab601761aab7d64"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2fb2928728038280bd925ce2aafb4997e9d47ee9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3553a69bb52be2deba61d0ca064c41aee842bb35"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/617b365872a247480e9dcd50a32c8d1806b21861"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d5b06039b195d4b6f94f5d345b1e4ac1975a9832"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d8bca518d5272fe349e0a722fdb9e3acb661f3f0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f157bd9cf377a947fdb7035e69466b6ecdc17c17"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49674,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:42.320,2025-02-26T07:01:42.320,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: dm raid: fix accesses beyond end of raid member array On dm-raid table load (using raid_ctr), dm-raid allocates an array rs->devs[rs->raid_disks] for the raid device members. rs->raid_disks is defined by the number of raid metadata and image tupples passed into the target's constructor. In the case of RAID layout changes being requested, that number can be different from the current number of members for existing raid sets as defined in their superblocks. Example RAID layout changes include: - raid1 legs being added/removed - raid4/5/6/10 number of stripes changed (stripe reshaping) - takeover to higher raid level (e.g. raid5 -> raid6) When accessing array members, rs->raid_disks must be used in control loops instead of the potentially larger value in rs->md.raid_disks. Otherwise it will cause memory access beyond the end of the rs->devs array. Fix this by changing code that is prone to out-of-bounds access. Also fix validate_raid_redundancy() to validate all devices that are added. Also, use braces to help clean up raid_iterate_devices(). The out-of-bounds memory accesses was discovered using KASAN. This commit was verified to pass all LVM2 RAID tests (with KASAN enabled).",,,"[{""url"":""https://git.kernel.org/stable/c/332bd0778775d0cf105c4b9e03e460b590749916"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5e161a8826b63c0b8b43e4a7fad1f956780f42ab"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6352b2f4d8e95ec0ae576d7705435d64cfa29503"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/90de15357504c8097ab29769dc6852e16281e9e8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9bf2b0757b04c78dc5d6e3a198acca98457b32a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bcff98500ea3b4e7615ec31d2bdd326bc1ef5134"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/df1a5ab0dd0775f2ea101c71f2addbc4c0ea0f85"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49675,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:42.413,2025-02-26T07:01:42.413,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: tick/nohz: unexport __init-annotated tick_nohz_full_setup() EXPORT_SYMBOL and __init is a bad combination because the .init.text section is freed up after the initialization. Hence, modules cannot use symbols annotated __init. The access to a freed symbol may end up with kernel panic. modpost used to detect it, but it had been broken for a decade. Commit 28438794aba4 (""modpost: fix section mismatch check for exported init/exit sections"") fixed it so modpost started to warn it again, then this showed up: MODPOST vmlinux.symvers WARNING: modpost: vmlinux.o(___ksymtab_gpl+tick_nohz_full_setup+0x0): Section mismatch in reference from the variable __ksymtab_tick_nohz_full_setup to the function .init.text:tick_nohz_full_setup() The symbol tick_nohz_full_setup is exported and annotated __init Fix this by removing the __init annotation of tick_nohz_full_setup or drop the export. Drop the export because tick_nohz_full_setup() is only called from the built-in code in kernel/sched/isolation.c.",,,"[{""url"":""https://git.kernel.org/stable/c/2390095113e98fc52fffe35c5206d30d9efe3f78"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c4ff3ffe0138234774602152fe67e3a898c615c6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ea32b27e2f8c58c92bff5ecba7fcf64b97707089"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f4a80ec8c51d68be4b7a7830c510f75080c5e417"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49676,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:42.500,2025-03-11T22:09:48.203,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: memory: samsung: exynos5422-dmc: Fix refcount leak in of_get_dram_timings of_parse_phandle() returns a node pointer with refcount incremented, we should use of_node_put() on it when not need anymore. This function doesn't call of_node_put() in some error paths. To unify the structure, Add put_node label and goto it on errors.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.127"",""matchCriteriaId"":""758A1E17-EBCF-401B-83C7-B682D38D61BE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.51"",""matchCriteriaId"":""B43F7696-8D52-482D-9080-84279B0CB38C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.8"",""matchCriteriaId"":""0172D3FA-DDEB-482A-A270-4A1495A8798C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1332661e09304b7b8e84e5edc11811ba08d12abe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/889aad2203e09eed2071ca8985c25e9d6aea5735"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bb2a481778c60f912c363e271ae46b55ff8132db"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cde4480b5ab06195b9164184b0c02ced71e601b4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49677,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:42.587,2025-03-11T22:12:10.480,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ARM: cns3xxx: Fix refcount leak in cns3xxx_init of_find_compatible_node() returns a node pointer with refcount incremented, we should use of_node_put() on it when done. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.10"",""versionEndExcluding"":""4.9.321"",""matchCriteriaId"":""8DBDE85E-B776-4182-A4DB-EE04C7945F4A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.286"",""matchCriteriaId"":""1425627F-375A-4BB1-9AB9-5EE617FF8D45""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.250"",""matchCriteriaId"":""022AD3A2-7FC8-41A3-9709-72100A894A55""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.202"",""matchCriteriaId"":""F90471AA-9F14-4DC3-9688-99E9F537D3F1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.127"",""matchCriteriaId"":""758A1E17-EBCF-401B-83C7-B682D38D61BE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.51"",""matchCriteriaId"":""B43F7696-8D52-482D-9080-84279B0CB38C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.8"",""matchCriteriaId"":""0172D3FA-DDEB-482A-A270-4A1495A8798C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1ba904b6b16e08de5aed7c1349838d9cd0d178c5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/45bebbc8cea7d586a6216dc62814bdb380b9b29b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/68d4303bf59662b64bd555e2aa0518282d20aa4f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b8b84e01ca94e2e1f5492353e9c24dab520b2e5b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c980392af1473d6d5662f70d8089c8e6d85144a4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d1359e4129ad43e43972a28838b87291c51de23d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/da3ee7cd2f15922ad88a7ca6deee2eafdc7cd214"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/dc5170aae24e04068fd5ea125d06c0ab51f48a27"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49678,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:42.680,2025-03-11T22:12:59.580,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: soc: bcm: brcmstb: pm: pm-arm: Fix refcount leak in brcmstb_pm_probe of_find_matching_node() returns a node pointer with refcount incremented, we should use of_node_put() on it when not need anymore. Add missing of_node_put() to avoid refcount leak. In brcmstb_init_sram, it pass dn to of_address_to_resource(), of_address_to_resource() will call of_find_device_by_node() to take reference, so we should release the reference returned by of_find_matching_node().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.250"",""matchCriteriaId"":""022AD3A2-7FC8-41A3-9709-72100A894A55""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.202"",""matchCriteriaId"":""F90471AA-9F14-4DC3-9688-99E9F537D3F1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.127"",""matchCriteriaId"":""758A1E17-EBCF-401B-83C7-B682D38D61BE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.51"",""matchCriteriaId"":""B43F7696-8D52-482D-9080-84279B0CB38C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.8"",""matchCriteriaId"":""0172D3FA-DDEB-482A-A270-4A1495A8798C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/10ba9d499a9fd82ed40897e734ba19870a879407"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/30bbfeb480ae8b5ee43199d72417b232590440c2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/37d838de369b07b596c19ff3662bf0293fdb09ee"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4f5877bdf7b593e988f1924f4c3df6523f80b39c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/734a4d15142bb4c8ecad2d8ec70d7564e78ae34d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/dcafd5463d8f20c4f90ddc138a5738adb99f74c8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49679,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:42.773,2025-03-11T22:13:31.107,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ARM: Fix refcount leak in axxia_boot_secondary of_find_compatible_node() returns a node pointer with refcount incremented, we should use of_node_put() on it when done. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.16"",""versionEndExcluding"":""4.9.321"",""matchCriteriaId"":""4E32FA08-35D7-4037-A905-3A0C9963EFB6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.286"",""matchCriteriaId"":""1425627F-375A-4BB1-9AB9-5EE617FF8D45""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.250"",""matchCriteriaId"":""022AD3A2-7FC8-41A3-9709-72100A894A55""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.202"",""matchCriteriaId"":""F90471AA-9F14-4DC3-9688-99E9F537D3F1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.127"",""matchCriteriaId"":""758A1E17-EBCF-401B-83C7-B682D38D61BE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.51"",""matchCriteriaId"":""B43F7696-8D52-482D-9080-84279B0CB38C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.8"",""matchCriteriaId"":""0172D3FA-DDEB-482A-A270-4A1495A8798C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/29ca9c4efacccdc15104a8d4bf10b5183fc92840"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3c19fe3f04f4f4e7a2b722c2fd3c98356fc1d72b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/44a5b3a073e5aaa5720929dba95b2725eb32bb65"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4d9c60e868f7cf8e09956e7d5bb44d807d712699"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/71e12e5b02674459a24f16e965255d63b31fe049"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7c7ff68daa93d8c4cdea482da4f2429c0398fcde"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a9b76c232a1ce4cbf27862097f7eb634dcc779eb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b385cb59aac8d61c29bc72ebf3d19a536914af96"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49680,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:42.867,2025-03-11T22:16:10.590,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ARM: exynos: Fix refcount leak in exynos_map_pmu of_find_matching_node() returns a node pointer with refcount incremented, we should use of_node_put() on it when not need anymore. Add missing of_node_put() to avoid refcount leak. of_node_put() checks null pointer.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.17"",""versionEndExcluding"":""4.9.321"",""matchCriteriaId"":""67F509D9-AC56-4F40-AF99-7BA6DFC997B2""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.286"",""matchCriteriaId"":""1425627F-375A-4BB1-9AB9-5EE617FF8D45""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.250"",""matchCriteriaId"":""022AD3A2-7FC8-41A3-9709-72100A894A55""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.202"",""matchCriteriaId"":""F90471AA-9F14-4DC3-9688-99E9F537D3F1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.127"",""matchCriteriaId"":""758A1E17-EBCF-401B-83C7-B682D38D61BE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.51"",""matchCriteriaId"":""B43F7696-8D52-482D-9080-84279B0CB38C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.8"",""matchCriteriaId"":""0172D3FA-DDEB-482A-A270-4A1495A8798C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/31d09571bb071c20f6bdc0bb7ac1ef8dd2987c04"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/545ae5cbae839ce39bfe09828e413f1c916082de"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/68f28d52e6cbab8dcfa249cac4356d1d0573e868"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7571bcecf01b69f0d3ec60ca41ce5d4c75411a4a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c4c79525042a4a7df96b73477feaf232fe44ae81"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d23f76018e17618559da9eea179d137362023f95"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f9b77a52937582a5b99a5a07e4ef1e2f48f87347"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fc354856e9fad9cd36e2ad28f9da70716025055a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49681,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:42.963,2025-03-11T22:16:28.673,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: xtensa: xtfpga: Fix refcount leak bug in setup In machine_setup(), of_find_compatible_node() will return a node pointer with refcount incremented. We should use of_node_put() when it is not used anymore.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.321"",""matchCriteriaId"":""36F903AC-A5C3-49AD-8C55-493B1E4C5BFE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.286"",""matchCriteriaId"":""1425627F-375A-4BB1-9AB9-5EE617FF8D45""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.250"",""matchCriteriaId"":""022AD3A2-7FC8-41A3-9709-72100A894A55""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.202"",""matchCriteriaId"":""F90471AA-9F14-4DC3-9688-99E9F537D3F1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.127"",""matchCriteriaId"":""758A1E17-EBCF-401B-83C7-B682D38D61BE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.51"",""matchCriteriaId"":""B43F7696-8D52-482D-9080-84279B0CB38C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.8"",""matchCriteriaId"":""0172D3FA-DDEB-482A-A270-4A1495A8798C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0162451723178602c37f0555d235dfa17e486112"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0715d0e60052662c3f225342062f174dd721d1c7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/173940b3ae40114d4179c251a98ee039dc9cd5b3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/35d7e961be68732eb3acaeba81fb81ca16eafd05"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6c0839cf1b9e1b3c88da6af76794583cbfae8da3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9b30c5c8884eda3f541229899671cebbad15979b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a52972ee706b438302eb0350e61f378eb191e3d1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b12d5c52f073a0420622aaf2f21b615cce8b36cc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49682,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:43.063,2025-03-11T21:55:08.853,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: xtensa: Fix refcount leak bug in time.c In calibrate_ccount(), of_find_compatible_node() will return a node pointer with refcount incremented. We should use of_node_put() when it is not used anymore.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.321"",""matchCriteriaId"":""36F903AC-A5C3-49AD-8C55-493B1E4C5BFE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.286"",""matchCriteriaId"":""1425627F-375A-4BB1-9AB9-5EE617FF8D45""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.250"",""matchCriteriaId"":""022AD3A2-7FC8-41A3-9709-72100A894A55""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.202"",""matchCriteriaId"":""F90471AA-9F14-4DC3-9688-99E9F537D3F1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.127"",""matchCriteriaId"":""758A1E17-EBCF-401B-83C7-B682D38D61BE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.51"",""matchCriteriaId"":""B43F7696-8D52-482D-9080-84279B0CB38C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.8"",""matchCriteriaId"":""0172D3FA-DDEB-482A-A270-4A1495A8798C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0dcc1dd8a5dd9240639f1051dfaa2dffc9fbbde5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0e403a383c14b63c86bd9df085b7e573e9caee64"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3e5eb904d9ba657308fc75a5de434b0e58dcb8d7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7de4502af68f4f3932f450157f5483eb7b33cb74"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a0117dc956429f2ede17b323046e1968d1849150"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/af0ff2da01521144bc11194f4c26485d7c9cee73"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e5234a9d64a976abd134a14710dcd5188158a7c5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f1eaf4ba5372ad111f687a80c67e270708e14c23"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49683,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:43.153,2025-03-11T21:55:33.950,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: iio: adc: adi-axi-adc: Fix refcount leak in adi_axi_adc_attach_client of_parse_phandle() returns a node pointer with refcount incremented, we should use of_node_put() on it when not need anymore. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.8"",""versionEndExcluding"":""5.10.127"",""matchCriteriaId"":""FC77A441-0D6E-4521-A9E5-3066E772A407""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.51"",""matchCriteriaId"":""B43F7696-8D52-482D-9080-84279B0CB38C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.8"",""matchCriteriaId"":""0172D3FA-DDEB-482A-A270-4A1495A8798C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/501652a2ad5450b4908e1f204ce75b2414c305b7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5eaa84e1605035a90a64d25b6cba79e89d188175"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ab7bf025cee89db73c649216ddd2bc589c3d3862"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ada7b0c0dedafd7d059115adf49e48acba3153a8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49684,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:43.247,2025-03-11T21:55:56.003,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: iio: adc: aspeed: Fix refcount leak in aspeed_adc_set_trim_data of_find_node_by_name() returns a node pointer with refcount incremented, we should use of_node_put() on it when done. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.8"",""matchCriteriaId"":""0172D3FA-DDEB-482A-A270-4A1495A8798C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/8a2b6b5687984a010ed094b4f436a2f091987758"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9664491db50a84be92696c8fad2c3b49a7a5f36f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49685,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:43.340,2025-03-24T19:27:25.203,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: iio: trigger: sysfs: fix use-after-free on remove Ensure that the irq_work has completed before the trigger is freed. ================================================================== BUG: KASAN: use-after-free in irq_work_run_list Read of size 8 at addr 0000000064702248 by task python3/25 Call Trace: irq_work_run_list irq_work_tick update_process_times tick_sched_handle tick_sched_timer __hrtimer_run_queues hrtimer_interrupt Allocated by task 25: kmem_cache_alloc_trace iio_sysfs_trig_add dev_attr_store sysfs_kf_write kernfs_fop_write_iter new_sync_write vfs_write ksys_write sys_write Freed by task 25: kfree iio_sysfs_trig_remove dev_attr_store sysfs_kf_write kernfs_fop_write_iter new_sync_write vfs_write ksys_write sys_write ==================================================================","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.7"",""versionEndExcluding"":""4.9.321"",""matchCriteriaId"":""59A5EE02-2844-49CB-93F4-511FFBACF9CF""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.286"",""matchCriteriaId"":""1425627F-375A-4BB1-9AB9-5EE617FF8D45""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.250"",""matchCriteriaId"":""022AD3A2-7FC8-41A3-9709-72100A894A55""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.202"",""matchCriteriaId"":""F90471AA-9F14-4DC3-9688-99E9F537D3F1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.127"",""matchCriteriaId"":""758A1E17-EBCF-401B-83C7-B682D38D61BE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.51"",""matchCriteriaId"":""B43F7696-8D52-482D-9080-84279B0CB38C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.8"",""matchCriteriaId"":""0172D3FA-DDEB-482A-A270-4A1495A8798C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/31ff3309b47d98313c61b8301bf595820cc3cc33"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4687c3f955240ca2a576bdc3f742d4d915b6272d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4ef1e521be610b720daeb7cf899fedc7db0274c4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5e39397d60dacc7f5d81d442c1c958eaaaf31128"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/78601726d4a59a291acc5a52da1d3a0a6831e4e8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b07a30a774b3c3e584a68dc91779c68ea2da4813"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d6111e7bdb8ec27eb43d01c4cd4ff1620a75f7f2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fd5d8fb298a2866c337da635c79d63c3afabcaf7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49686,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:43.437,2025-02-26T07:01:43.437,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: usb: gadget: uvc: fix list double add in uvcg_video_pump A panic can occur if the endpoint becomes disabled and the uvcg_video_pump adds the request back to the req_free list after it has already been queued to the endpoint. The endpoint complete will add the request back to the req_free list. Invalidate the local request handle once it's been queued. <6>[ 246.796704][T13726] configfs-gadget gadget: uvc: uvc_function_set_alt(1, 0) <3>[ 246.797078][ T26] list_add double add: new=ffffff878bee5c40, prev=ffffff878bee5c40, next=ffffff878b0f0a90. <6>[ 246.797213][ T26] ------------[ cut here ]------------ <2>[ 246.797224][ T26] kernel BUG at lib/list_debug.c:31! <6>[ 246.807073][ T26] Call trace: <6>[ 246.807180][ T26] uvcg_video_pump+0x364/0x38c <6>[ 246.807366][ T26] process_one_work+0x2a4/0x544 <6>[ 246.807394][ T26] worker_thread+0x350/0x784 <6>[ 246.807442][ T26] kthread+0x2ac/0x320",,,"[{""url"":""https://git.kernel.org/stable/c/96163f835e65f8c9897487fac965819f0651d671"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d95ac8b920de1d39525fadc408ce675697626ca6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49687,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:43.527,2025-02-26T07:01:43.527,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: virtio_net: fix xdp_rxq_info bug after suspend/resume The following sequence currently causes a driver bug warning when using virtio_net: # ip link set eth0 up # echo mem > /sys/power/state (or e.g. # rtcwake -s 10 -m mem) <resume> # ip link set eth0 down Missing register, driver bug WARNING: CPU: 0 PID: 375 at net/core/xdp.c:138 xdp_rxq_info_unreg+0x58/0x60 Call trace: xdp_rxq_info_unreg+0x58/0x60 virtnet_close+0x58/0xac __dev_close_many+0xac/0x140 __dev_change_flags+0xd8/0x210 dev_change_flags+0x24/0x64 do_setlink+0x230/0xdd0 ... This happens because virtnet_freeze() frees the receive_queue completely (including struct xdp_rxq_info) but does not call xdp_rxq_info_unreg(). Similarly, virtnet_restore() sets up the receive_queue again but does not call xdp_rxq_info_reg(). Actually, parts of virtnet_freeze_down() and virtnet_restore_up() are almost identical to virtnet_close() and virtnet_open(): only the calls to xdp_rxq_info_(un)reg() are missing. This means that we can fix this easily and avoid such problems in the future by just calling virtnet_close()/open() from the freeze/restore handlers. Aside from adding the missing xdp_rxq_info calls the only difference is that the refill work is only cancelled if netif_running(). However, this should not make any functional difference since the refill work should only be active if the network interface is actually up.",,,"[{""url"":""https://git.kernel.org/stable/c/340fbdc8011f2dc678f622c5ce1cbb5ab8305de7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/57ee40f1b198b59d43c216fbc4672f9300d3c8b0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8af52fe9fd3bf5e7478da99193c0632276e1dfce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8c7a32b7c15555beddc5810c3334d9cefff061bf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8d7fe9ad6fddc2af8bde4b921b4f8fab231ed38c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9222672fa6370f0ec3d899662cb8680e9282fc4c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49688,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:43.617,2025-02-26T07:01:43.617,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: afs: Fix dynamic root getattr The recent patch to make afs_getattr consult the server didn't account for the pseudo-inodes employed by the dynamic root-type afs superblock not having a volume or a server to access, and thus an oops occurs if such a directory is stat'd. Fix this by checking to see if the vnode->volume pointer actually points anywhere before following it in afs_getattr(). This can be tested by stat'ing a directory in /afs. It may be sufficient just to do ""ls /afs"" and the oops looks something like: BUG: kernel NULL pointer dereference, address: 0000000000000020 ... RIP: 0010:afs_getattr+0x8b/0x14b ... Call Trace: <TASK> vfs_statx+0x79/0xf5 vfs_fstatat+0x49/0x62",,,"[{""url"":""https://git.kernel.org/stable/c/2b2bba96526f25f2eba74ecadb031de2e05a83ce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/65c24caf1b9f5b08397c6e805ec24ebc390c6e4d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7844ceada44eca740d31beb3d97b8511b1ca0a9b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7b564e3254b7db5fbfbf11a824627a6c31b932b4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cb78d1b5efffe4cf97e16766329dd7358aed3deb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e3a232e5767051483ffad4cef7d0a89d292a192b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49689,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:43.710,2025-02-26T13:15:34.300,Rejected,[],Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.,,,[],,,,,,,,,
CVE-2022-49690,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:43.803,2025-02-26T15:15:17.703,Rejected,[],Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.,,,[],,,,,,,,,
CVE-2022-49691,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:43.893,2025-02-26T07:01:43.893,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: erspan: do not assume transport header is always set Rewrite tests in ip6erspan_tunnel_xmit() and erspan_fb_xmit() to not assume transport header is set. syzbot reported: WARNING: CPU: 0 PID: 1350 at include/linux/skbuff.h:2911 skb_transport_header include/linux/skbuff.h:2911 [inline] WARNING: CPU: 0 PID: 1350 at include/linux/skbuff.h:2911 ip6erspan_tunnel_xmit+0x15af/0x2eb0 net/ipv6/ip6_gre.c:963 Modules linked in: CPU: 0 PID: 1350 Comm: aoe_tx0 Not tainted 5.19.0-rc2-syzkaller-00160-g274295c6e53f #0 Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.14.0-2 04/01/2014 RIP: 0010:skb_transport_header include/linux/skbuff.h:2911 [inline] RIP: 0010:ip6erspan_tunnel_xmit+0x15af/0x2eb0 net/ipv6/ip6_gre.c:963 Code: 0f 47 f0 40 88 b5 7f fe ff ff e8 8c 16 4b f9 89 de bf ff ff ff ff e8 a0 12 4b f9 66 83 fb ff 0f 85 1d f1 ff ff e8 71 16 4b f9 <0f> 0b e9 43 f0 ff ff e8 65 16 4b f9 48 8d 85 30 ff ff ff ba 60 00 RSP: 0018:ffffc90005daf910 EFLAGS: 00010293 RAX: 0000000000000000 RBX: 000000000000ffff RCX: 0000000000000000 RDX: ffff88801f032100 RSI: ffffffff882e8d3f RDI: 0000000000000003 RBP: ffffc90005dafab8 R08: 0000000000000003 R09: 000000000000ffff R10: 000000000000ffff R11: 0000000000000000 R12: ffff888024f21d40 R13: 000000000000a288 R14: 00000000000000b0 R15: ffff888025a2e000 FS: 0000000000000000(0000) GS:ffff88802c800000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 0000001b2e425000 CR3: 000000006d099000 CR4: 0000000000152ef0 Call Trace: <TASK> __netdev_start_xmit include/linux/netdevice.h:4805 [inline] netdev_start_xmit include/linux/netdevice.h:4819 [inline] xmit_one net/core/dev.c:3588 [inline] dev_hard_start_xmit+0x188/0x880 net/core/dev.c:3604 sch_direct_xmit+0x19f/0xbe0 net/sched/sch_generic.c:342 __dev_xmit_skb net/core/dev.c:3815 [inline] __dev_queue_xmit+0x14a1/0x3900 net/core/dev.c:4219 dev_queue_xmit include/linux/netdevice.h:2994 [inline] tx+0x6a/0xc0 drivers/block/aoe/aoenet.c:63 kthread+0x1e7/0x3b0 drivers/block/aoe/aoecmd.c:1229 kthread+0x2e9/0x3a0 kernel/kthread.c:376 ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:302 </TASK>",,,"[{""url"":""https://git.kernel.org/stable/c/02da602bc2f353dccd9e489a604490034ded941e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2c8aeffc7c586d53e1d380f010bdca4f710f2480"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/301bd140ed0b24f0da660874c7e8a47dad8c8222"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a3b2470399f679587c45abe56e551caf10becca2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cec9867ee55478ef5dcb2adf030fe0c442a4c4ee"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fb401f37f6eadf24956d93687e5758c163c0d12b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49692,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:43.990,2025-03-11T22:27:35.653,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: phy: at803x: fix NULL pointer dereference on AR9331 PHY Latest kernel will explode on the PHY interrupt config, since it depends now on allocated priv. So, run probe to allocate priv to fix it. ar9331_switch ethernet.1:10 lan0 (uninitialized): PHY [!ahb!ethernet@1a000000!mdio!switch@10:00] driver [Qualcomm Atheros AR9331 built-in PHY] (irq=13) CPU 0 Unable to handle kernel paging request at virtual address 0000000a, epc == 8050e8a8, ra == 80504b34 ... Call Trace: [<8050e8a8>] at803x_config_intr+0x5c/0xd0 [<80504b34>] phy_request_interrupt+0xa8/0xd0 [<8050289c>] phylink_bringup_phy+0x2d8/0x3ac [<80502b68>] phylink_fwnode_phy_connect+0x118/0x130 [<8074d8ec>] dsa_slave_create+0x270/0x420 [<80743b04>] dsa_port_setup+0x12c/0x148 [<8074580c>] dsa_register_switch+0xaf0/0xcc0 [<80511344>] ar9331_sw_probe+0x370/0x388 [<8050cb78>] mdio_probe+0x44/0x70 [<804df300>] really_probe+0x200/0x424 [<804df7b4>] __driver_probe_device+0x290/0x298 [<804df810>] driver_probe_device+0x54/0xe4 [<804dfd50>] __device_attach_driver+0xe4/0x130 [<804dcb00>] bus_for_each_drv+0xb4/0xd8 [<804dfac4>] __device_attach+0x104/0x1a4 [<804ddd24>] bus_probe_device+0x48/0xc4 [<804deb44>] deferred_probe_work_func+0xf0/0x10c [<800a0ffc>] process_one_work+0x314/0x4d4 [<800a17fc>] worker_thread+0x2a4/0x354 [<800a9a54>] kthread+0x134/0x13c [<8006306c>] ret_from_kernel_thread+0x14/0x1c Same Issue would affect some other PHYs (QCA8081, QCA9561), so fix it too.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.8"",""matchCriteriaId"":""38D180E5-530F-4351-9BC3-DF4D61BC7610""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/66fa352215e8455ba2e5f33793535795bd3e36ca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9926de7315be3d606cc011a305ad9adb9e8e14c9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49693,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:44.080,2025-03-11T21:57:03.753,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/msm/mdp4: Fix refcount leak in mdp4_modeset_init_intf of_graph_get_remote_node() returns remote device node pointer with refcount incremented, we should use of_node_put() on it when not need anymore. Add missing of_node_put() to avoid refcount leak. Patchwork: https://patchwork.freedesktop.org/patch/488473/","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.12"",""versionEndExcluding"":""5.4.202"",""matchCriteriaId"":""8D83D733-62A9-4B35-BFBD-D6B3F5765670""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.127"",""matchCriteriaId"":""758A1E17-EBCF-401B-83C7-B682D38D61BE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.51"",""matchCriteriaId"":""B43F7696-8D52-482D-9080-84279B0CB38C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.8"",""matchCriteriaId"":""0172D3FA-DDEB-482A-A270-4A1495A8798C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/3c39a17197733bc37786ed68c83267c2f491840b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b9cc4598607cb7f7eae5c75fc1e3209cd52ff5e0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d1592d3e362cc59b29f15019707b16c695d70ca3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d16a4339825e64f9ddcdff5277982d640bae933b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d607da76fd2b1cf1d377af9d9b7c6f8fecbb0e1d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49694,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:44.170,2025-03-24T19:27:40.550,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: block: disable the elevator int del_gendisk The elevator is only used for file system requests, which are stopped in del_gendisk. Move disabling the elevator and freeing the scheduler tags to the end of del_gendisk instead of doing that work in disk_release and blk_cleanup_queue to avoid a use after free on q->tag_set from disk_release as the tag_set might not be alive at that point. Move the blk_qos_exit call as well, as it just depends on the elevator exit and would be the only reason to keep the not exactly cheap queue freeze in disk_release.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.8"",""matchCriteriaId"":""0172D3FA-DDEB-482A-A270-4A1495A8798C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/50e34d78815e474d410f342fbe783b18192ca518"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f28699fafc047ec33299da01e928c3a0073c5cc6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49695,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:44.260,2025-03-24T19:28:39.110,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: igb: fix a use-after-free issue in igb_clean_tx_ring Fix the following use-after-free bug in igb_clean_tx_ring routine when the NIC is running in XDP mode. The issue can be triggered redirecting traffic into the igb NIC and then closing the device while the traffic is flowing. [ 73.322719] CPU: 1 PID: 487 Comm: xdp_redirect Not tainted 5.18.3-apu2 #9 [ 73.330639] Hardware name: PC Engines APU2/APU2, BIOS 4.0.7 02/28/2017 [ 73.337434] RIP: 0010:refcount_warn_saturate+0xa7/0xf0 [ 73.362283] RSP: 0018:ffffc9000081f798 EFLAGS: 00010282 [ 73.367761] RAX: 0000000000000000 RBX: ffffc90000420f80 RCX: 0000000000000000 [ 73.375200] RDX: ffff88811ad22d00 RSI: ffff88811ad171e0 RDI: ffff88811ad171e0 [ 73.382590] RBP: 0000000000000900 R08: ffffffff82298f28 R09: 0000000000000058 [ 73.390008] R10: 0000000000000219 R11: ffffffff82280f40 R12: 0000000000000090 [ 73.397356] R13: ffff888102343a40 R14: ffff88810359e0e4 R15: 0000000000000000 [ 73.404806] FS: 00007ff38d31d740(0000) GS:ffff88811ad00000(0000) knlGS:0000000000000000 [ 73.413129] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 73.419096] CR2: 000055cff35f13f8 CR3: 0000000106391000 CR4: 00000000000406e0 [ 73.426565] Call Trace: [ 73.429087] <TASK> [ 73.431314] igb_clean_tx_ring+0x43/0x140 [igb] [ 73.436002] igb_down+0x1d7/0x220 [igb] [ 73.439974] __igb_close+0x3c/0x120 [igb] [ 73.444118] igb_xdp+0x10c/0x150 [igb] [ 73.447983] ? igb_pci_sriov_configure+0x70/0x70 [igb] [ 73.453362] dev_xdp_install+0xda/0x110 [ 73.457371] dev_xdp_attach+0x1da/0x550 [ 73.461369] do_setlink+0xfd0/0x10f0 [ 73.465166] ? __nla_validate_parse+0x89/0xc70 [ 73.469714] rtnl_setlink+0x11a/0x1e0 [ 73.473547] rtnetlink_rcv_msg+0x145/0x3d0 [ 73.477709] ? rtnl_calcit.isra.0+0x130/0x130 [ 73.482258] netlink_rcv_skb+0x8d/0x110 [ 73.486229] netlink_unicast+0x230/0x340 [ 73.490317] netlink_sendmsg+0x215/0x470 [ 73.494395] __sys_sendto+0x179/0x190 [ 73.498268] ? move_addr_to_user+0x37/0x70 [ 73.502547] ? __sys_getsockname+0x84/0xe0 [ 73.506853] ? netlink_setsockopt+0x1c1/0x4a0 [ 73.511349] ? __sys_setsockopt+0xc8/0x1d0 [ 73.515636] __x64_sys_sendto+0x20/0x30 [ 73.519603] do_syscall_64+0x3b/0x80 [ 73.523399] entry_SYSCALL_64_after_hwframe+0x44/0xae [ 73.528712] RIP: 0033:0x7ff38d41f20c [ 73.551866] RSP: 002b:00007fff3b945a68 EFLAGS: 00000246 ORIG_RAX: 000000000000002c [ 73.559640] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007ff38d41f20c [ 73.567066] RDX: 0000000000000034 RSI: 00007fff3b945b30 RDI: 0000000000000003 [ 73.574457] RBP: 0000000000000003 R08: 0000000000000000 R09: 0000000000000000 [ 73.581852] R10: 0000000000000000 R11: 0000000000000246 R12: 00007fff3b945ab0 [ 73.589179] R13: 0000000000000000 R14: 0000000000000003 R15: 00007fff3b945b30 [ 73.596545] </TASK> [ 73.598842] ---[ end trace 0000000000000000 ]---","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.10"",""versionEndExcluding"":""5.10.127"",""matchCriteriaId"":""17C6DD28-56C5-4F2F-8125-786544F1C9E4""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.51"",""matchCriteriaId"":""B43F7696-8D52-482D-9080-84279B0CB38C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.8"",""matchCriteriaId"":""0172D3FA-DDEB-482A-A270-4A1495A8798C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2af944210dc23d43d8208dafac4df7be7e3c168b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3f6a57ee8544ec3982f8a3cbcbf4aea7d47eb9ec"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/68a0ed06dcd5d3ea732d011c0b83d66e4791f521"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c12a2c9b1b460ed72e6b3c33aac1ef51b0329b66"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49696,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:44.357,2025-03-25T13:39:35.560,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tipc: fix use-after-free Read in tipc_named_reinit syzbot found the following issue on: ================================================================== BUG: KASAN: use-after-free in tipc_named_reinit+0x94f/0x9b0 net/tipc/name_distr.c:413 Read of size 8 at addr ffff88805299a000 by task kworker/1:9/23764 CPU: 1 PID: 23764 Comm: kworker/1:9 Not tainted 5.18.0-rc4-syzkaller-00878-g17d49e6e8012 #0 Hardware name: Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011 Workqueue: events tipc_net_finalize_work Call Trace: <TASK> __dump_stack lib/dump_stack.c:88 [inline] dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106 print_address_description.constprop.0.cold+0xeb/0x495 mm/kasan/report.c:313 print_report mm/kasan/report.c:429 [inline] kasan_report.cold+0xf4/0x1c6 mm/kasan/report.c:491 tipc_named_reinit+0x94f/0x9b0 net/tipc/name_distr.c:413 tipc_net_finalize+0x234/0x3d0 net/tipc/net.c:138 process_one_work+0x996/0x1610 kernel/workqueue.c:2289 worker_thread+0x665/0x1080 kernel/workqueue.c:2436 kthread+0x2e9/0x3a0 kernel/kthread.c:376 ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:298 </TASK> [...] ================================================================== In the commit d966ddcc3821 (""tipc: fix a deadlock when flushing scheduled work""), the cancel_work_sync() function just to make sure ONLY the work tipc_net_finalize_work() is executing/pending on any CPU completed before tipc namespace is destroyed through tipc_exit_net(). But this function is not guaranteed the work is the last queued. So, the destroyed instance may be accessed in the work which will try to enqueue later. In order to completely fix, we re-order the calling of cancel_work_sync() to make sure the work tipc_net_finalize_work() was last queued and it must be completed by calling cancel_work_sync().","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4.83"",""versionEndExcluding"":""5.5"",""matchCriteriaId"":""89DFEADE-E552-4D59-BEA8-8CDC23D1DBEE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.9.14"",""versionEndExcluding"":""5.10.127"",""matchCriteriaId"":""AA01C0B2-1717-4416-AE10-348629F36041""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.51"",""matchCriteriaId"":""B43F7696-8D52-482D-9080-84279B0CB38C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.8"",""matchCriteriaId"":""0172D3FA-DDEB-482A-A270-4A1495A8798C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/361c5521c1e49843b710f455cae3c0a50b714323"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8b246ddd394d7d9640816611693b0096b998e27a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/911600bf5a5e84bfda4d33ee32acc75ecf6159f0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cd7789e659e84f137631dc1f5ec8d794f2700e6c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49697,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:44.450,2025-02-26T07:01:44.450,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: bpf: Fix request_sock leak in sk lookup helpers A customer reported a request_socket leak in a Calico cloud environment. We found that a BPF program was doing a socket lookup with takes a refcnt on the socket and that it was finding the request_socket but returning the parent LISTEN socket via sk_to_full_sk() without decrementing the child request socket 1st, resulting in request_sock slab object leak. This patch retains the existing behaviour of returning full socks to the caller but it also decrements the child request_socket if one is present before doing so to prevent the leak. Thanks to Curtis Taylor for all the help in diagnosing and testing this. And thanks to Antoine Tenart for the reproducer and patch input. v2 of this patch contains, refactor as per Daniel Borkmann's suggestions to validate RCU flags on the listen socket so that it balances with bpf_sk_release() and update comments as per Martin KaFai Lau's suggestion. One small change to Daniels suggestion, put ""sk = sk2"" under ""if (sk2 != sk)"" to avoid an extra instruction.",,,"[{""url"":""https://git.kernel.org/stable/c/3046a827316c0e55fc563b4fb78c93b9ca5c7c37"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/516760f1d2979903eaad5b437256913c5cd98416"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5a62b5ba4c0ce8315b6382cd4ace81b48cd121cd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8ffe2e50e9678c8373027492035f094b130437f1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b03607437ea81b850599f705096b05b85e7a4a71"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49698,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:44.547,2025-02-26T07:01:44.547,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: netfilter: use get_random_u32 instead of prandom bh might occur while updating per-cpu rnd_state from user context, ie. local_out path. BUG: using smp_processor_id() in preemptible [00000000] code: nginx/2725 caller is nft_ng_random_eval+0x24/0x54 [nft_numgen] Call Trace: check_preemption_disabled+0xde/0xe0 nft_ng_random_eval+0x24/0x54 [nft_numgen] Use the random driver instead, this also avoids need for local prandom state. Moreover, prandom now uses the random driver since d4150779e60f (""random32: use real rng for non-deterministic randomness""). Based on earlier patch from Pablo Neira.",,,"[{""url"":""https://git.kernel.org/stable/c/15cc30ac2a8d7185f8ebf97dd1ddd90a7c79783b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6ce71f83f798be7e1ca68707fec449fbecb38852"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b1fd94e704571f98b21027340eecf821b2bdffba"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d0906b0fffc9f19bc42708ca3e84e2089088386c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49699,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:44.640,2025-02-26T07:01:44.640,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: filemap: Handle sibling entries in filemap_get_read_batch() If a read races with an invalidation followed by another read, it is possible for a folio to be replaced with a higher-order folio. If that happens, we'll see a sibling entry for the new folio in the next iteration of the loop. This manifests as a NULL pointer dereference while holding the RCU read lock. Handle this by simply returning. The next call will find the new folio and handle it correctly. The other ways of handling this rare race are more complex and it's just not worth it.",,,"[{""url"":""https://git.kernel.org/stable/c/a66f131d30e53000f08301776bf85c912ef47aad"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cb995f4eeba9d268fd4b56c2423ad6c1d1ea1b82"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49700,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:44.740,2025-03-25T13:37:51.227,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mm/slub: add missing TID updates on slab deactivation The fastpath in slab_alloc_node() assumes that c->slab is stable as long as the TID stays the same. However, two places in __slab_alloc() currently don't update the TID when deactivating the CPU slab. If multiple operations race the right way, this could lead to an object getting lost; or, in an even more unlikely situation, it could even lead to an object being freed onto the wrong slab's freelist, messing up the `inuse` counter and eventually causing a page to be freed to the page allocator while it still contains slab objects. (I haven't actually tested these cases though, this is just based on looking at the code. Writing testcases for this stuff seems like it'd be a pain...) The race leading to state inconsistency is (all operations on the same CPU and kmem_cache): - task A: begin do_slab_free(): - read TID - read pcpu freelist (==NULL) - check `slab == c->slab` (true) - [PREEMPT A->B] - task B: begin slab_alloc_node(): - fastpath fails (`c->freelist` is NULL) - enter __slab_alloc() - slub_get_cpu_ptr() (disables preemption) - enter ___slab_alloc() - take local_lock_irqsave() - read c->freelist as NULL - get_freelist() returns NULL - write `c->slab = NULL` - drop local_unlock_irqrestore() - goto new_slab - slub_percpu_partial() is NULL - get_partial() returns NULL - slub_put_cpu_ptr() (enables preemption) - [PREEMPT B->A] - task A: finish do_slab_free(): - this_cpu_cmpxchg_double() succeeds() - [CORRUPT STATE: c->slab==NULL, c->freelist!=NULL] From there, the object on c->freelist will get lost if task B is allowed to continue from here: It will proceed to the retry_load_slab label, set c->slab, then jump to load_freelist, which clobbers c->freelist. But if we instead continue as follows, we get worse corruption: - task A: run __slab_free() on object from other struct slab: - CPU_PARTIAL_FREE case (slab was on no list, is now on pcpu partial) - task A: run slab_alloc_node() with NUMA node constraint: - fastpath fails (c->slab is NULL) - call __slab_alloc() - slub_get_cpu_ptr() (disables preemption) - enter ___slab_alloc() - c->slab is NULL: goto new_slab - slub_percpu_partial() is non-NULL - set c->slab to slub_percpu_partial(c) - [CORRUPT STATE: c->slab points to slab-1, c->freelist has objects from slab-2] - goto redo - node_match() fails - goto deactivate_slab - existing c->freelist is passed into deactivate_slab() - inuse count of slab-1 is decremented to account for object from slab-2 At this point, the inuse count of slab-1 is 1 lower than it should be. This means that if we free all allocated objects in slab-1 except for one, SLUB will think that slab-1 is completely unused, and may free its page, leading to use-after-free.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.1"",""versionEndExcluding"":""4.9.323"",""matchCriteriaId"":""2B9BA632-0605-4759-8828-79C0E7F757FD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.288"",""matchCriteriaId"":""11E86C4E-715B-4E25-81E9-2FD98431E3FA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.252"",""matchCriteriaId"":""2CC8E927-649A-40AD-AB62-F7EE444BEF0F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.205"",""matchCriteriaId"":""844199C4-DEBE-4DA1-AB77-5A7984F9393B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.130"",""matchCriteriaId"":""8BF24898-7C80-443F-93F3-F82029BBFF72""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.54"",""matchCriteriaId"":""B2197EF1-3D9C-4EBA-9F94-6C8668E719B6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.8"",""matchCriteriaId"":""0172D3FA-DDEB-482A-A270-4A1495A8798C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0515cc9b6b24877f59b222ade704bfaa42caa2a6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/197e257da473c725dfe47759c3ee02f2398d8ea5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/308c6d0e1f200fd26c71270c6e6bfcf0fc6ff082"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6c32496964da0dc230cea763a0e934b2e02dabd5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d6a597450e686d4c6388bd3cdcb17224b4dae7f0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e2b2f0e2e34d71ae6c2a1114fd3c525930e84bc7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e7e3e90d671078455a3a08189f89d85b3da2de9e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/eeaa345e128515135ccb864c04482180c08e3259"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49701,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:44.930,2025-02-26T07:01:44.930,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: ibmvfc: Allocate/free queue resource only during probe/remove Currently, the sub-queues and event pool resources are allocated/freed for every CRQ connection event such as reset and LPM. This exposes the driver to a couple issues. First the inefficiency of freeing and reallocating memory that can simply be resued after being sanitized. Further, a system under memory pressue runs the risk of allocation failures that could result in a crippled driver. Finally, there is a race window where command submission/compeletion can try to pull/return elements from/to an event pool that is being deleted or already has been deleted due to the lack of host state around freeing/allocating resources. The following is an example of list corruption following a live partition migration (LPM): Oops: Exception in kernel mode, sig: 5 [#1] LE PAGE_SIZE=64K MMU=Hash SMP NR_CPUS=2048 NUMA pSeries Modules linked in: vfat fat isofs cdrom ext4 mbcache jbd2 nft_counter nft_compat nf_tables nfnetlink rpadlpar_io rpaphp xsk_diag nfsv3 nfs_acl nfs lockd grace fscache netfs rfkill bonding tls sunrpc pseries_rng drm drm_panel_orientation_quirks xfs libcrc32c dm_service_time sd_mod t10_pi sg ibmvfc scsi_transport_fc ibmveth vmx_crypto dm_multipath dm_mirror dm_region_hash dm_log dm_mod ipmi_devintf ipmi_msghandler fuse CPU: 0 PID: 2108 Comm: ibmvfc_0 Kdump: loaded Not tainted 5.14.0-70.9.1.el9_0.ppc64le #1 NIP: c0000000007c4bb0 LR: c0000000007c4bac CTR: 00000000005b9a10 REGS: c00000025c10b760 TRAP: 0700 Not tainted (5.14.0-70.9.1.el9_0.ppc64le) MSR: 800000000282b033 <SF,VEC,VSX,EE,FP,ME,IR,DR,RI,LE> CR: 2800028f XER: 0000000f CFAR: c0000000001f55bc IRQMASK: 0 GPR00: c0000000007c4bac c00000025c10ba00 c000000002a47c00 000000000000004e GPR04: c0000031e3006f88 c0000031e308bd00 c00000025c10b768 0000000000000027 GPR08: 0000000000000000 c0000031e3009dc0 00000031e0eb0000 0000000000000000 GPR12: c0000031e2ffffa8 c000000002dd0000 c000000000187108 c00000020fcee2c0 GPR16: 0000000000000000 0000000000000000 0000000000000000 0000000000000000 GPR20: 0000000000000000 0000000000000000 0000000000000000 c008000002f81300 GPR24: 5deadbeef0000100 5deadbeef0000122 c000000263ba6910 c00000024cc88000 GPR28: 000000000000003c c0000002430a0000 c0000002430ac300 000000000000c300 NIP [c0000000007c4bb0] __list_del_entry_valid+0x90/0x100 LR [c0000000007c4bac] __list_del_entry_valid+0x8c/0x100 Call Trace: [c00000025c10ba00] [c0000000007c4bac] __list_del_entry_valid+0x8c/0x100 (unreliable) [c00000025c10ba60] [c008000002f42284] ibmvfc_free_queue+0xec/0x210 [ibmvfc] [c00000025c10bb10] [c008000002f4246c] ibmvfc_deregister_scsi_channel+0xc4/0x160 [ibmvfc] [c00000025c10bba0] [c008000002f42580] ibmvfc_release_sub_crqs+0x78/0x130 [ibmvfc] [c00000025c10bc20] [c008000002f4f6cc] ibmvfc_do_work+0x5c4/0xc70 [ibmvfc] [c00000025c10bce0] [c008000002f4fdec] ibmvfc_work+0x74/0x1e8 [ibmvfc] [c00000025c10bda0] [c0000000001872b8] kthread+0x1b8/0x1c0 [c00000025c10be10] [c00000000000cd64] ret_from_kernel_thread+0x5c/0x64 Instruction dump: 40820034 38600001 38210060 4e800020 7c0802a6 7c641b78 3c62fe7a 7d254b78 3863b590 f8010070 4ba309cd 60000000 <0fe00000> 7c0802a6 3c62fe7a 3863b640 ---[ end trace 11a2b65a92f8b66c ]--- ibmvfc 30000003: Send warning. Receive queue closed, will retry. Add registration/deregistration helpers that are called instead during connection resets to sanitize and reconfigure the queues.",,,"[{""url"":""https://git.kernel.org/stable/c/161ec2a0807ddd58bc0f24f3e1e7e3d4fef5297f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/72ea7fe0db73d65c7d977208842d8ade9b823de9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9f23c499ca601b2a1e1d2e761d03964b739bca0e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49702,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:45.827,2025-02-26T07:01:45.827,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: btrfs: fix hang during unmount when block group reclaim task is running When we start an unmount, at close_ctree(), if we have the reclaim task running and in the middle of a data block group relocation, we can trigger a deadlock when stopping an async reclaim task, producing a trace like the following: [629724.498185] task:kworker/u16:7 state:D stack: 0 pid:681170 ppid: 2 flags:0x00004000 [629724.499760] Workqueue: events_unbound btrfs_async_reclaim_metadata_space [btrfs] [629724.501267] Call Trace: [629724.501759] <TASK> [629724.502174] __schedule+0x3cb/0xed0 [629724.502842] schedule+0x4e/0xb0 [629724.503447] btrfs_wait_on_delayed_iputs+0x7c/0xc0 [btrfs] [629724.504534] ? prepare_to_wait_exclusive+0xc0/0xc0 [629724.505442] flush_space+0x423/0x630 [btrfs] [629724.506296] ? rcu_read_unlock_trace_special+0x20/0x50 [629724.507259] ? lock_release+0x220/0x4a0 [629724.507932] ? btrfs_get_alloc_profile+0xb3/0x290 [btrfs] [629724.508940] ? do_raw_spin_unlock+0x4b/0xa0 [629724.509688] btrfs_async_reclaim_metadata_space+0x139/0x320 [btrfs] [629724.510922] process_one_work+0x252/0x5a0 [629724.511694] ? process_one_work+0x5a0/0x5a0 [629724.512508] worker_thread+0x52/0x3b0 [629724.513220] ? process_one_work+0x5a0/0x5a0 [629724.514021] kthread+0xf2/0x120 [629724.514627] ? kthread_complete_and_exit+0x20/0x20 [629724.515526] ret_from_fork+0x22/0x30 [629724.516236] </TASK> [629724.516694] task:umount state:D stack: 0 pid:719055 ppid:695412 flags:0x00004000 [629724.518269] Call Trace: [629724.518746] <TASK> [629724.519160] __schedule+0x3cb/0xed0 [629724.519835] schedule+0x4e/0xb0 [629724.520467] schedule_timeout+0xed/0x130 [629724.521221] ? lock_release+0x220/0x4a0 [629724.521946] ? lock_acquired+0x19c/0x420 [629724.522662] ? trace_hardirqs_on+0x1b/0xe0 [629724.523411] __wait_for_common+0xaf/0x1f0 [629724.524189] ? usleep_range_state+0xb0/0xb0 [629724.524997] __flush_work+0x26d/0x530 [629724.525698] ? flush_workqueue_prep_pwqs+0x140/0x140 [629724.526580] ? lock_acquire+0x1a0/0x310 [629724.527324] __cancel_work_timer+0x137/0x1c0 [629724.528190] close_ctree+0xfd/0x531 [btrfs] [629724.529000] ? evict_inodes+0x166/0x1c0 [629724.529510] generic_shutdown_super+0x74/0x120 [629724.530103] kill_anon_super+0x14/0x30 [629724.530611] btrfs_kill_super+0x12/0x20 [btrfs] [629724.531246] deactivate_locked_super+0x31/0xa0 [629724.531817] cleanup_mnt+0x147/0x1c0 [629724.532319] task_work_run+0x5c/0xa0 [629724.532984] exit_to_user_mode_prepare+0x1a6/0x1b0 [629724.533598] syscall_exit_to_user_mode+0x16/0x40 [629724.534200] do_syscall_64+0x48/0x90 [629724.534667] entry_SYSCALL_64_after_hwframe+0x44/0xae [629724.535318] RIP: 0033:0x7fa2b90437a7 [629724.535804] RSP: 002b:00007ffe0b7e4458 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6 [629724.536912] RAX: 0000000000000000 RBX: 00007fa2b9182264 RCX: 00007fa2b90437a7 [629724.538156] RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000555d6cf20dd0 [629724.539053] RBP: 0000555d6cf20ba0 R08: 0000000000000000 R09: 00007ffe0b7e3200 [629724.539956] R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000 [629724.540883] R13: 0000555d6cf20dd0 R14: 0000555d6cf20cb0 R15: 0000000000000000 [629724.541796] </TASK> This happens because: 1) Before entering close_ctree() we have the async block group reclaim task running and relocating a data block group; 2) There's an async metadata (or data) space reclaim task running; 3) We enter close_ctree() and park the cleaner kthread; 4) The async space reclaim task is at flush_space() and runs all the existing delayed iputs; 5) Before the async space reclaim task calls btrfs_wait_on_delayed_iputs(), the block group reclaim task which is doing the data block group relocation, creates a delayed iput at replace_file_extents() (called when COWing leaves that have file extent items pointing to relocated data exten ---truncated---",,,"[{""url"":""https://git.kernel.org/stable/c/31e70e527806c546a72262f2fc3d982ee23c42d3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/341d33128a940c6634175dcb6ca92dc454cfa7d2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9fadb11f1295289e0da4d3342ecb6b92c1c99540"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49703,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:45.947,2025-03-11T22:28:03.087,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: ibmvfc: Store vhost pointer during subcrq allocation Currently the back pointer from a queue to the vhost adapter isn't set until after subcrq interrupt registration. The value is available when a queue is first allocated and can/should be also set for primary and async queues as well as subcrqs. This fixes a crash observed during kexec/kdump on Power 9 with legacy XICS interrupt controller where a pending subcrq interrupt from the previous kernel can be replayed immediately upon IRQ registration resulting in dereference of a garbage backpointer in ibmvfc_interrupt_scsi(). Kernel attempted to read user page (58) - exploit attempt? (uid: 0) BUG: Kernel NULL pointer dereference on read at 0x00000058 Faulting instruction address: 0xc008000003216a08 Oops: Kernel access of bad area, sig: 11 [#1] ... NIP [c008000003216a08] ibmvfc_interrupt_scsi+0x40/0xb0 [ibmvfc] LR [c0000000082079e8] __handle_irq_event_percpu+0x98/0x270 Call Trace: [c000000047fa3d80] [c0000000123e6180] 0xc0000000123e6180 (unreliable) [c000000047fa3df0] [c0000000082079e8] __handle_irq_event_percpu+0x98/0x270 [c000000047fa3ea0] [c000000008207d18] handle_irq_event+0x98/0x188 [c000000047fa3ef0] [c00000000820f564] handle_fasteoi_irq+0xc4/0x310 [c000000047fa3f40] [c000000008205c60] generic_handle_irq+0x50/0x80 [c000000047fa3f60] [c000000008015c40] __do_irq+0x70/0x1a0 [c000000047fa3f90] [c000000008016d7c] __do_IRQ+0x9c/0x130 [c000000014622f60] [0000000020000000] 0x20000000 [c000000014622ff0] [c000000008016e50] do_IRQ+0x40/0xa0 [c000000014623020] [c000000008017044] replay_soft_interrupts+0x194/0x2f0 [c000000014623210] [c0000000080172a8] arch_local_irq_restore+0x108/0x170 [c000000014623240] [c000000008eb1008] _raw_spin_unlock_irqrestore+0x58/0xb0 [c000000014623270] [c00000000820b12c] __setup_irq+0x49c/0x9f0 [c000000014623310] [c00000000820b7c0] request_threaded_irq+0x140/0x230 [c000000014623380] [c008000003212a50] ibmvfc_register_scsi_channel+0x1e8/0x2f0 [ibmvfc] [c000000014623450] [c008000003213d1c] ibmvfc_init_sub_crqs+0xc4/0x1f0 [ibmvfc] [c0000000146234d0] [c0080000032145a8] ibmvfc_reset_crq+0x150/0x210 [ibmvfc] [c000000014623550] [c0080000032147c8] ibmvfc_init_crq+0x160/0x280 [ibmvfc] [c0000000146235f0] [c00800000321a9cc] ibmvfc_probe+0x2a4/0x530 [ibmvfc]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.12"",""versionEndExcluding"":""5.15.51"",""matchCriteriaId"":""4F253781-33CA-48EF-8F4F-312C5101785F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.8"",""matchCriteriaId"":""0172D3FA-DDEB-482A-A270-4A1495A8798C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/6d38e3b614ded59da8b95377a98df969a5a5627a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8540f66196ca35b7b5e902932571c18b9fde0cd1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/aeaadcde1a60138bceb65de3cdaeec78170b4459"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49704,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:46.060,2025-03-11T21:57:27.077,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: 9p: fix fid refcount leak in v9fs_vfs_get_link we check for protocol version later than required, after a fid has been obtained. Just move the version check earlier.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.51"",""matchCriteriaId"":""B43F7696-8D52-482D-9080-84279B0CB38C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.8"",""matchCriteriaId"":""0172D3FA-DDEB-482A-A270-4A1495A8798C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/e5690f263208c5abce7451370b7786eb25b405eb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e7b6d622bd812013eb39c8f4cd65b7ee8ede1e02"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f0126bcaee81dabc1926012126aa74caa03a4c6e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49705,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:46.177,2025-03-11T21:57:46.553,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: 9p: fix fid refcount leak in v9fs_vfs_atomic_open_dotl We need to release directory fid if we fail halfway through open This fixes fid leaking with xfstests generic 531","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.51"",""matchCriteriaId"":""B43F7696-8D52-482D-9080-84279B0CB38C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.8"",""matchCriteriaId"":""0172D3FA-DDEB-482A-A270-4A1495A8798C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""F3068028-F453-4A1C-B80F-3F5609ACEF60""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/22832ac3eb5be3f7168816a76b64c1284e12eb3c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8bc5412ba1a45edfd1e451874c483c26a097af2b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/beca774fc51a9ba8abbc869cf0c3d965ff17cd24"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49706,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:46.403,2025-02-26T07:01:46.403,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: zonefs: fix zonefs_iomap_begin() for reads If a readahead is issued to a sequential zone file with an offset exactly equal to the current file size, the iomap type is set to IOMAP_UNWRITTEN, which will prevent an IO, but the iomap length is calculated as 0. This causes a WARN_ON() in iomap_iter(): [17309.548939] WARNING: CPU: 3 PID: 2137 at fs/iomap/iter.c:34 iomap_iter+0x9cf/0xe80 [...] [17309.650907] RIP: 0010:iomap_iter+0x9cf/0xe80 [...] [17309.754560] Call Trace: [17309.757078] <TASK> [17309.759240] ? lock_is_held_type+0xd8/0x130 [17309.763531] iomap_readahead+0x1a8/0x870 [17309.767550] ? iomap_read_folio+0x4c0/0x4c0 [17309.771817] ? lockdep_hardirqs_on_prepare+0x400/0x400 [17309.778848] ? lock_release+0x370/0x750 [17309.784462] ? folio_add_lru+0x217/0x3f0 [17309.790220] ? reacquire_held_locks+0x4e0/0x4e0 [17309.796543] read_pages+0x17d/0xb60 [17309.801854] ? folio_add_lru+0x238/0x3f0 [17309.807573] ? readahead_expand+0x5f0/0x5f0 [17309.813554] ? policy_node+0xb5/0x140 [17309.819018] page_cache_ra_unbounded+0x27d/0x450 [17309.825439] filemap_get_pages+0x500/0x1450 [17309.831444] ? filemap_add_folio+0x140/0x140 [17309.837519] ? lock_is_held_type+0xd8/0x130 [17309.843509] filemap_read+0x28c/0x9f0 [17309.848953] ? zonefs_file_read_iter+0x1ea/0x4d0 [zonefs] [17309.856162] ? trace_contention_end+0xd6/0x130 [17309.862416] ? __mutex_lock+0x221/0x1480 [17309.868151] ? zonefs_file_read_iter+0x166/0x4d0 [zonefs] [17309.875364] ? filemap_get_pages+0x1450/0x1450 [17309.881647] ? __mutex_unlock_slowpath+0x15e/0x620 [17309.888248] ? wait_for_completion_io_timeout+0x20/0x20 [17309.895231] ? lock_is_held_type+0xd8/0x130 [17309.901115] ? lock_is_held_type+0xd8/0x130 [17309.906934] zonefs_file_read_iter+0x356/0x4d0 [zonefs] [17309.913750] new_sync_read+0x2d8/0x520 [17309.919035] ? __x64_sys_lseek+0x1d0/0x1d0 Furthermore, this causes iomap_readahead() to loop forever as iomap_readahead_iter() always returns 0, making no progress. Fix this by treating reads after the file size as access to holes, setting the iomap type to IOMAP_HOLE, the iomap addr to IOMAP_NULL_ADDR and using the length argument as is for the iomap length. To simplify the code with this change, zonefs_iomap_begin() is split into the read variant, zonefs_read_iomap_begin() and zonefs_read_iomap_ops, and the write variant, zonefs_write_iomap_begin() and zonefs_write_iomap_ops.",,,"[{""url"":""https://git.kernel.org/stable/c/355be6131164c5bacf2e810763835aecb6e01fcb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3a7f05f104347b407e865c10be2675cd833a4e48"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c1c1204c0d0c1dccc1310b9277fb2bd8b663d8fe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c2f71b9bb398e2e573bdc2574149f42b45efe410"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49707,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:46.500,2025-03-11T22:28:37.880,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ext4: add reserved GDT blocks check We capture a NULL pointer issue when resizing a corrupt ext4 image which is freshly clear resize_inode feature (not run e2fsck). It could be simply reproduced by following steps. The problem is because of the resize_inode feature was cleared, and it will convert the filesystem to meta_bg mode in ext4_resize_fs(), but the es->s_reserved_gdt_blocks was not reduced to zero, so could we mistakenly call reserve_backup_gdb() and passing an uninitialized resize_inode to it when adding new group descriptors. mkfs.ext4 /dev/sda 3G tune2fs -O ^resize_inode /dev/sda #forget to run requested e2fsck mount /dev/sda /mnt resize2fs /dev/sda 8G ======== BUG: kernel NULL pointer dereference, address: 0000000000000028 CPU: 19 PID: 3243 Comm: resize2fs Not tainted 5.18.0-rc7-00001-gfde086c5ebfd #748 ... RIP: 0010:ext4_flex_group_add+0xe08/0x2570 ... Call Trace: <TASK> ext4_resize_fs+0xbec/0x1660 __ext4_ioctl+0x1749/0x24e0 ext4_ioctl+0x12/0x20 __x64_sys_ioctl+0xa6/0x110 do_syscall_64+0x3b/0x90 entry_SYSCALL_64_after_hwframe+0x44/0xae RIP: 0033:0x7f2dd739617b ======== The fix is simple, add a check in ext4_resize_begin() to make sure that the es->s_reserved_gdt_blocks is zero when the resize_inode feature is disabled.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.320"",""matchCriteriaId"":""CF939175-79DE-4866-B38C-4C8F9896B785""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.285"",""matchCriteriaId"":""6D4E7BA7-6B66-4B9A-991A-AD516DADF77D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.249"",""matchCriteriaId"":""8A08E48B-CA77-4A21-9558-17D61C146BE9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.200"",""matchCriteriaId"":""80B2AE57-4A7E-40BB-8C83-33D4436CE199""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.124"",""matchCriteriaId"":""6442F2CD-FF1C-4574-9948-138835E635D7""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.49"",""matchCriteriaId"":""697D250E-E0A4-41BE-BB54-96385E129206""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.6"",""matchCriteriaId"":""CDD33A19-B51E-4090-A47B-073098916815""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0dc2fca8e4f9ac4a40e8424a10163369cca0cc06"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/33b1bba31f4c784d33d2c2517964bdccdc9204cd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7c921328ac760bba780bdace41f4cd045f7f1405"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/af75c481a2e45e70f62f5942c93695e95bf7bd21"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b55c3cd102a6f48b90e61c44f7f3dda8c290c694"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b9747263b13e5290ac4d63bec47e38f701303cad"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bfd004a1d3a062aac300523d406ac1f3e5f1a82c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fba54289176702a7caac0b64738406775817f451"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49708,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:46.607,2025-02-26T07:01:46.607,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ext4: fix bug_on ext4_mb_use_inode_pa Hulk Robot reported a BUG_ON: ================================================================== kernel BUG at fs/ext4/mballoc.c:3211! [...] RIP: 0010:ext4_mb_mark_diskspace_used.cold+0x85/0x136f [...] Call Trace: ext4_mb_new_blocks+0x9df/0x5d30 ext4_ext_map_blocks+0x1803/0x4d80 ext4_map_blocks+0x3a4/0x1a10 ext4_writepages+0x126d/0x2c30 do_writepages+0x7f/0x1b0 __filemap_fdatawrite_range+0x285/0x3b0 file_write_and_wait_range+0xb1/0x140 ext4_sync_file+0x1aa/0xca0 vfs_fsync_range+0xfb/0x260 do_fsync+0x48/0xa0 [...] ================================================================== Above issue may happen as follows: ------------------------------------- do_fsync vfs_fsync_range ext4_sync_file file_write_and_wait_range __filemap_fdatawrite_range do_writepages ext4_writepages mpage_map_and_submit_extent mpage_map_one_extent ext4_map_blocks ext4_mb_new_blocks ext4_mb_normalize_request >>> start + size <= ac->ac_o_ex.fe_logical ext4_mb_regular_allocator ext4_mb_simple_scan_group ext4_mb_use_best_found ext4_mb_new_preallocation ext4_mb_new_inode_pa ext4_mb_use_inode_pa >>> set ac->ac_b_ex.fe_len <= 0 ext4_mb_mark_diskspace_used >>> BUG_ON(ac->ac_b_ex.fe_len <= 0); we can easily reproduce this problem with the following commands: `fallocate -l100M disk` `mkfs.ext4 -b 1024 -g 256 disk` `mount disk /mnt` `fsstress -d /mnt -l 0 -n 1000 -p 1` The size must be smaller than or equal to EXT4_BLOCKS_PER_GROUP. Therefore, ""start + size <= ac->ac_o_ex.fe_logical"" may occur when the size is truncated. So start should be the start position of the group where ac_o_ex.fe_logical is located after alignment. In addition, when the value of fe_logical or EXT4_BLOCKS_PER_GROUP is very large, the value calculated by start_off is more accurate.",,,"[{""url"":""https://git.kernel.org/stable/c/5707d721d1819db57dba57b1d4623034fcb32047"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6880fb2e64331b9fdc85d3f32b1d7e81ad8703f1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6fdaf31ad5f3d3afab744dfd9a8b0d9142aa881f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/887a3e9ad4b8309a2266bce7ae749b2bf1f7a687"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/90f0f9d45dff0128c0fca0d2358c4153b024afa6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a08f789d2ab5242c07e716baf9a835725046be89"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a37c1359714da42517dd19d36fc3c4d17edba832"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a6b31616e5afe1d3972cb0682a373e50597faf5c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49709,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:46.710,2025-02-26T07:01:46.710,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: cfi: Fix __cfi_slowpath_diag RCU usage with cpuidle RCU_NONIDLE usage during __cfi_slowpath_diag can result in an invalid RCU state in the cpuidle code path: WARNING: CPU: 1 PID: 0 at kernel/rcu/tree.c:613 rcu_eqs_enter+0xe4/0x138 ... Call trace: rcu_eqs_enter+0xe4/0x138 rcu_idle_enter+0xa8/0x100 cpuidle_enter_state+0x154/0x3a8 cpuidle_enter+0x3c/0x58 do_idle.llvm.6590768638138871020+0x1f4/0x2ec cpu_startup_entry+0x28/0x2c secondary_start_kernel+0x1b8/0x220 __secondary_switched+0x94/0x98 Instead, call rcu_irq_enter/exit to wake up RCU only when needed and disable interrupts for the entire CFI shadow/module check when we do.",,,"[{""url"":""https://git.kernel.org/stable/c/57cd6d157eb479f0a8e820fd36b7240845c8a937"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/75f3a5fa2ad049c85ab5d5ee1ed9cfaa7e62c5ed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ca3897f2ac02ceae5e6fa794f83c36f9885b93da"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49710,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:46.800,2025-02-26T07:01:46.800,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: dm mirror log: round up region bitmap size to BITS_PER_LONG The code in dm-log rounds up bitset_size to 32 bits. It then uses find_next_zero_bit_le on the allocated region. find_next_zero_bit_le accesses the bitmap using unsigned long pointers. So, on 64-bit architectures, it may access 4 bytes beyond the allocated size. Fix this bug by rounding up bitset_size to BITS_PER_LONG. This bug was found by running the lvm2 testsuite with kasan.",,,"[{""url"":""https://git.kernel.org/stable/c/0d2209b54f1de0c2f99cab246d4cf2cfe24aaaa9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/85e123c27d5cbc22cfdc01de1e2ca1d9003a02d0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9a02f3275acc628c0d956be771405ced79ac36df"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ae460312875159285cef5bf3dc654593f404a1ef"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ba751f0d25f07aa21ce9b85372a3792bf7969d13"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49711,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:46.893,2025-03-24T19:28:55.660,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: bus: fsl-mc-bus: fix KASAN use-after-free in fsl_mc_bus_remove() In fsl_mc_bus_remove(), mc->root_mc_bus_dev->mc_io is passed to fsl_destroy_mc_io(). However, mc->root_mc_bus_dev is already freed in fsl_mc_device_remove(). Then reference to mc->root_mc_bus_dev->mc_io triggers KASAN use-after-free. To avoid the use-after-free, keep the reference to mc->root_mc_bus_dev->mc_io in a local variable and pass to fsl_destroy_mc_io(). This patch needs rework to apply to kernels older than v5.15.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.8"",""versionEndExcluding"":""5.15.49"",""matchCriteriaId"":""3E725C36-556D-45F1-9140-84626556BEC6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.6"",""matchCriteriaId"":""CDD33A19-B51E-4090-A47B-073098916815""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/161b68b0a728377aaa10a8e14c70e7734f3c9ff7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/928ea98252ad75118950941683893cf904541da9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ccd1751092341ac120a961835211f9f2e3735963"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49712,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:46.987,2025-03-11T21:58:07.837,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: usb: gadget: lpc32xx_udc: Fix refcount leak in lpc32xx_udc_probe of_parse_phandle() returns a node pointer with refcount incremented, we should use of_node_put() on it when not need anymore. Add missing of_node_put() to avoid refcount leak. of_node_put() will check NULL pointer.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.5"",""versionEndExcluding"":""4.9.320"",""matchCriteriaId"":""FEC46686-BCE1-40AE-B7B6-D3622B692592""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.285"",""matchCriteriaId"":""6D4E7BA7-6B66-4B9A-991A-AD516DADF77D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.249"",""matchCriteriaId"":""8A08E48B-CA77-4A21-9558-17D61C146BE9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.200"",""matchCriteriaId"":""80B2AE57-4A7E-40BB-8C83-33D4436CE199""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.124"",""matchCriteriaId"":""6442F2CD-FF1C-4574-9948-138835E635D7""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.49"",""matchCriteriaId"":""697D250E-E0A4-41BE-BB54-96385E129206""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.6"",""matchCriteriaId"":""CDD33A19-B51E-4090-A47B-073098916815""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0ef6917c0524da5b88496b9706628ffef108b9bb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2a598da14856ead80c726b38ba426c68637d9211"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/46da1e4a8b6329479433b2a4056941dfdd7f3efd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4757c9ade34178b351580133771f510b5ffcf9c8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/57901c658f77d9ea2e772f35cb38e47efb54c558"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/727c82d003e0ec64411fd1257a9a57de4ad7a99a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b75bddfcc18170ce8e3fb695a76ec2dec4ce0ea5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d85e4e6284a91aa2d1ab004e9d84b9c09b4aa203"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49713,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:47.083,2025-03-11T22:29:03.663,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: usb: dwc2: Fix memory leak in dwc2_hcd_init usb_create_hcd will alloc memory for hcd, and we should call usb_put_hcd to free it when platform_get_resource() fails to prevent memory leak. goto error2 label instead error1 to fix this.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.14.250"",""versionEndExcluding"":""4.14.285"",""matchCriteriaId"":""86F1C27F-B293-4E48-9DAE-8879D53C4B8C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.19.210"",""versionEndExcluding"":""4.19.249"",""matchCriteriaId"":""E1C1A647-79B2-4F43-9C68-441B6FD1D669""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4.152"",""versionEndExcluding"":""5.4.200"",""matchCriteriaId"":""3E5DA857-7252-4DFF-B474-50B19234A37D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.10.72"",""versionEndExcluding"":""5.10.124"",""matchCriteriaId"":""CA558F1E-D360-425A-B7FA-F4BFFB129A76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14.11"",""versionEndExcluding"":""5.15.49"",""matchCriteriaId"":""CB11FD1B-38CF-4C19-AD60-7B0F98858FEA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.6"",""matchCriteriaId"":""CDD33A19-B51E-4090-A47B-073098916815""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/3755278f078460b021cd0384562977bf2039a57a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/52bfcedbfd5bf962dbdcb6e761f4d0dd3ba26dfd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6506aff2dc2f7059aa3d45ee2e8639b25e87090f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/701d8ec01e0f229d4db6f43d3d64ee479120cbeb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/84e6d0af87e27bbc0db94f2e7323b34abe17b6e5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/981ee40649e5fd9550f82db1fbb3bfab037da346"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a44a8a762f7fe9ad3c065813d058e835a6180cb2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49714,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:47.170,2025-03-11T21:58:25.357,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: irqchip/realtek-rtl: Fix refcount leak in map_interrupts of_find_node_by_phandle() returns a node pointer with refcount incremented, we should use of_node_put() on it when not need anymore. This function doesn't call of_node_put() in error path. Call of_node_put() directly after of_property_read_u32() to cover both normal path and error path.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.12"",""versionEndExcluding"":""5.15.49"",""matchCriteriaId"":""221B6156-276D-47B6-90BA-72B70F1B6C83""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.6"",""matchCriteriaId"":""CDD33A19-B51E-4090-A47B-073098916815""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/e85b1b797de0e7a271b906291ce28245822820b8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/eff4780f83d0ae3e5b6c02ff5d999dc4c1c5c8ce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f6d6223df0666fbc054e3a8c6ac14eb0af37c286"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49715,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:47.257,2025-03-11T21:59:24.737,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: irqchip/gic-v3: Fix refcount leak in gic_populate_ppi_partitions of_find_node_by_phandle() returns a node pointer with refcount incremented, we should use of_node_put() on it when not need anymore. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.7"",""versionEndExcluding"":""4.19.249"",""matchCriteriaId"":""82421C1C-DACA-43D2-98E8-D4F1C44A17FB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.200"",""matchCriteriaId"":""80B2AE57-4A7E-40BB-8C83-33D4436CE199""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.124"",""matchCriteriaId"":""6442F2CD-FF1C-4574-9948-138835E635D7""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.49"",""matchCriteriaId"":""697D250E-E0A4-41BE-BB54-96385E129206""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.6"",""matchCriteriaId"":""CDD33A19-B51E-4090-A47B-073098916815""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/506a88a5bf261d76a5214c0338a320f2214c67ac"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8d884c08eeb83142a7173cb46bcff0434ec42cf1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c136c2924a59a399aa789858cfb320d481964fb7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cc5984cf270b69d03f9f4b27063e535036c659e9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e824482e2c5edacc961b7dd30a92fd47606c3036"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fa1ad9d4cc47ca2470cd904ad4519f05d7e43a2b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49716,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:47.350,2025-03-11T21:59:45.273,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: irqchip/gic-v3: Fix error handling in gic_populate_ppi_partitions of_get_child_by_name() returns a node pointer with refcount incremented, we should use of_node_put() on it when not need anymore. When kcalloc fails, it missing of_node_put() and results in refcount leak. Fix this by goto out_put_node label.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4"",""versionEndExcluding"":""5.4.200"",""matchCriteriaId"":""D95D8CDF-D629-470D-8F5A-0241E6344D98""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.124"",""matchCriteriaId"":""6442F2CD-FF1C-4574-9948-138835E635D7""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.49"",""matchCriteriaId"":""697D250E-E0A4-41BE-BB54-96385E129206""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.6"",""matchCriteriaId"":""CDD33A19-B51E-4090-A47B-073098916815""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0b325d993995a321f6ab4e6c51f0504ec092bf5b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/58e67c81e229351027d28c610638378606e33a08"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7c9dd9d23f26dabcfb14148b9acdfba540418b19"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c83c34c57798fc41faefcf078be78683db2f4beb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ec8401a429ffee34ccf38cebf3443f8d5ae6cb0d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49717,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:47.440,2025-03-07T20:48:28.593,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: irqchip/apple-aic: Fix refcount leak in build_fiq_affinity of_find_node_by_phandle() returns a node pointer with refcount incremented, we should use of_node_put() on it when not need anymore. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.6"",""matchCriteriaId"":""3815945B-C3E7-44FC-BDE0-A35B04E44DD4""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2dc14cebe5dc053434b507bb24e6821cb795050f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b1ac803f47cb1615468f35cf1ccb553c52087301"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49718,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:47.527,2025-03-07T20:48:16.940,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: irqchip/apple-aic: Fix refcount leak in aic_of_ic_init of_get_child_by_name() returns a node pointer with refcount incremented, we should use of_node_put() on it when not need anymore. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""5.18.6"",""matchCriteriaId"":""3815945B-C3E7-44FC-BDE0-A35B04E44DD4""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/3d45670fab3c25a7452721e4588cc95c51cda134"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6c0010d1dc67c89bcc857c46f542efe318f84ddc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49719,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:47.613,2025-03-07T20:48:04.233,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: irqchip/gic/realview: Fix refcount leak in realview_gic_of_init of_find_matching_node_and_match() returns a node pointer with refcount incremented, we should use of_node_put() on it when not need anymore. Add missing of_node_put() to avoid refcount leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.6"",""versionEndExcluding"":""4.9.320"",""matchCriteriaId"":""48428FE0-6929-489B-9101-6D6AA6E49BD3""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.285"",""matchCriteriaId"":""6D4E7BA7-6B66-4B9A-991A-AD516DADF77D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.249"",""matchCriteriaId"":""8A08E48B-CA77-4A21-9558-17D61C146BE9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.200"",""matchCriteriaId"":""80B2AE57-4A7E-40BB-8C83-33D4436CE199""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.124"",""matchCriteriaId"":""6442F2CD-FF1C-4574-9948-138835E635D7""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.49"",""matchCriteriaId"":""697D250E-E0A4-41BE-BB54-96385E129206""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.6"",""matchCriteriaId"":""CDD33A19-B51E-4090-A47B-073098916815""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/16b603cb8d34c2d917983918db1f88c8b831baaa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/486f68f85085d9b16ae097679b1486dcb1b6eb69"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/56526c3883fc7a1f5898b1d40a02c8b8685a5d92"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5d38720661a4b9c87705c206a6081177ffb8ec1d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/87da903ce632d5689bef66d56ee5dae700d82104"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b634af84bc1edece4e63317b0ad95618dd3a8693"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e52a58b79f11755ea7e877015c4a1704303fa55f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f4b98e314888cc51486421bcf6d52852452ea48b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49720,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:47.703,2025-03-07T20:47:04.900,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: block: Fix handling of offline queues in blk_mq_alloc_request_hctx() This patch prevents that test nvme/004 triggers the following: UBSAN: array-index-out-of-bounds in block/blk-mq.h:135:9 index 512 is out of range for type 'long unsigned int [512]' Call Trace: show_stack+0x52/0x58 dump_stack_lvl+0x49/0x5e dump_stack+0x10/0x12 ubsan_epilogue+0x9/0x3b __ubsan_handle_out_of_bounds.cold+0x44/0x49 blk_mq_alloc_request_hctx+0x304/0x310 __nvme_submit_sync_cmd+0x70/0x200 [nvme_core] nvmf_connect_io_queue+0x23e/0x2a0 [nvme_fabrics] nvme_loop_connect_io_queues+0x8d/0xb0 [nvme_loop] nvme_loop_create_ctrl+0x58e/0x7d0 [nvme_loop] nvmf_create_ctrl+0x1d7/0x4d0 [nvme_fabrics] nvmf_dev_write+0xae/0x111 [nvme_fabrics] vfs_write+0x144/0x560 ksys_write+0xb7/0x140 __x64_sys_write+0x42/0x50 do_syscall_64+0x35/0x80 entry_SYSCALL_64_after_hwframe+0x44/0xae","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-129""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.16"",""versionEndExcluding"":""5.10.214"",""matchCriteriaId"":""C07D8F07-95C2-4A5A-9A9A-024B35AF459D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.49"",""matchCriteriaId"":""697D250E-E0A4-41BE-BB54-96385E129206""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.6"",""matchCriteriaId"":""CDD33A19-B51E-4090-A47B-073098916815""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""BF8547FC-C849-4F1B-804B-A93AE2F04A92""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/14dc7a18abbe4176f5626c13c333670da8e06aa1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7fa28a7c3d74933a4fc22d341b60927952f31c19"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b202a0bd2580ee5b0453772c46d464152fafff73"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b5e65ef044d627effdc2599040b6d204e003f955"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49721,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:47.793,2025-02-26T07:01:47.793,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: arm64: ftrace: consistently handle PLTs. Sometimes it is necessary to use a PLT entry to call an ftrace trampoline. This is handled by ftrace_make_call() and ftrace_make_nop(), with each having *almost* identical logic, but this is not handled by ftrace_modify_call() since its introduction in commit: 3b23e4991fb66f6d (""arm64: implement ftrace with regs"") Due to this, if we ever were to call ftrace_modify_call() for a callsite which requires a PLT entry for a trampoline, then either: a) If the old addr requires a trampoline, ftrace_modify_call() will use an out-of-range address to generate the 'old' branch instruction. This will result in warnings from aarch64_insn_gen_branch_imm() and ftrace_modify_code(), and no instructions will be modified. As ftrace_modify_call() will return an error, this will result in subsequent internal ftrace errors. b) If the old addr does not require a trampoline, but the new addr does, ftrace_modify_call() will use an out-of-range address to generate the 'new' branch instruction. This will result in warnings from aarch64_insn_gen_branch_imm(), and ftrace_modify_code() will replace the 'old' branch with a BRK. This will result in a kernel panic when this BRK is later executed. Practically speaking, case (a) is vastly more likely than case (b), and typically this will result in internal ftrace errors that don't necessarily affect the rest of the system. This can be demonstrated with an out-of-tree test module which triggers ftrace_modify_call(), e.g. | # insmod test_ftrace.ko | test_ftrace: Function test_function raw=0xffffb3749399201c, callsite=0xffffb37493992024 | branch_imm_common: offset out of range | branch_imm_common: offset out of range | ------------[ ftrace bug ]------------ | ftrace failed to modify | [<ffffb37493992024>] test_function+0x8/0x38 [test_ftrace] | actual: 1d:00:00:94 | Updating ftrace call site to call a different ftrace function | ftrace record flags: e0000002 | (2) R | expected tramp: ffffb374ae42ed54 | ------------[ cut here ]------------ | WARNING: CPU: 0 PID: 165 at kernel/trace/ftrace.c:2085 ftrace_bug+0x280/0x2b0 | Modules linked in: test_ftrace(+) | CPU: 0 PID: 165 Comm: insmod Not tainted 5.19.0-rc2-00002-g4d9ead8b45ce #13 | Hardware name: linux,dummy-virt (DT) | pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--) | pc : ftrace_bug+0x280/0x2b0 | lr : ftrace_bug+0x280/0x2b0 | sp : ffff80000839ba00 | x29: ffff80000839ba00 x28: 0000000000000000 x27: ffff80000839bcf0 | x26: ffffb37493994180 x25: ffffb374b0991c28 x24: ffffb374b0d70000 | x23: 00000000ffffffea x22: ffffb374afcc33b0 x21: ffffb374b08f9cc8 | x20: ffff572b8462c000 x19: ffffb374b08f9000 x18: ffffffffffffffff | x17: 6c6c6163202c6331 x16: ffffb374ae5ad110 x15: ffffb374b0d51ee4 | x14: 0000000000000000 x13: 3435646532346561 x12: 3437336266666666 | x11: 203a706d61727420 x10: 6465746365707865 x9 : ffffb374ae5149e8 | x8 : 336266666666203a x7 : 706d617274206465 x6 : 00000000fffff167 | x5 : ffff572bffbc4a08 x4 : 00000000fffff167 x3 : 0000000000000000 | x2 : 0000000000000000 x1 : ffff572b84461e00 x0 : 0000000000000022 | Call trace: | ftrace_bug+0x280/0x2b0 | ftrace_replace_code+0x98/0xa0 | ftrace_modify_all_code+0xe0/0x144 | arch_ftrace_update_code+0x14/0x20 | ftrace_startup+0xf8/0x1b0 | register_ftrace_function+0x38/0x90 | test_ftrace_init+0xd0/0x1000 [test_ftrace] | do_one_initcall+0x50/0x2b0 | do_init_module+0x50/0x1f0 | load_module+0x17c8/0x1d64 | __do_sys_finit_module+0xa8/0x100 | __arm64_sys_finit_module+0x2c/0x3c | invoke_syscall+0x50/0x120 | el0_svc_common.constprop.0+0xdc/0x100 | do_el0_svc+0x3c/0xd0 | el0_svc+0x34/0xb0 | el0t_64_sync_handler+0xbc/0x140 | el0t_64_sync+0x18c/0x190 | ---[ end trace 0000000000000000 ]--- We can solve this by consistently determining whether to use a PLT entry for an address. Note that since (the earlier) commit: f1a54ae9 ---truncated---",,,"[{""url"":""https://git.kernel.org/stable/c/a6253579977e4c6f7818eeb05bf2bc65678a7187"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bc28fde90937a920f7714ec4408269cac744f796"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/db73aa9466338ec821ed2a0b01721fe4d06876b1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dcecc96ed16f73417de5550f384e348c9d56f279"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49722,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:47.887,2025-02-26T07:01:47.887,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ice: Fix memory corruption in VF driver Disable VF's RX/TX queues, when it's disabled. VF can have queues enabled, when it requests a reset. If PF driver assumes that VF is disabled, while VF still has queues configured, VF may unmap DMA resources. In such scenario device still can map packets to memory, which ends up silently corrupting it. Previously, VF driver could experience memory corruption, which lead to crash: [ 5119.170157] BUG: unable to handle kernel paging request at 00001b9780003237 [ 5119.170166] PGD 0 P4D 0 [ 5119.170173] Oops: 0002 [#1] PREEMPT_RT SMP PTI [ 5119.170181] CPU: 30 PID: 427592 Comm: kworker/u96:2 Kdump: loaded Tainted: G W I --------- - - 4.18.0-372.9.1.rt7.166.el8.x86_64 #1 [ 5119.170189] Hardware name: Dell Inc. PowerEdge R740/014X06, BIOS 2.3.10 08/15/2019 [ 5119.170193] Workqueue: iavf iavf_adminq_task [iavf] [ 5119.170219] RIP: 0010:__page_frag_cache_drain+0x5/0x30 [ 5119.170238] Code: 0f 0f b6 77 51 85 f6 74 07 31 d2 e9 05 df ff ff e9 90 fe ff ff 48 8b 05 49 db 33 01 eb b4 0f 1f 80 00 00 00 00 0f 1f 44 00 00 <f0> 29 77 34 74 01 c3 48 8b 07 f6 c4 80 74 0f 0f b6 77 51 85 f6 74 [ 5119.170244] RSP: 0018:ffffa43b0bdcfd78 EFLAGS: 00010282 [ 5119.170250] RAX: ffffffff896b3e40 RBX: ffff8fb282524000 RCX: 0000000000000002 [ 5119.170254] RDX: 0000000049000000 RSI: 0000000000000000 RDI: 00001b9780003203 [ 5119.170259] RBP: ffff8fb248217b00 R08: 0000000000000022 R09: 0000000000000009 [ 5119.170262] R10: 2b849d6300000000 R11: 0000000000000020 R12: 0000000000000000 [ 5119.170265] R13: 0000000000001000 R14: 0000000000000009 R15: 0000000000000000 [ 5119.170269] FS: 0000000000000000(0000) GS:ffff8fb1201c0000(0000) knlGS:0000000000000000 [ 5119.170274] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 5119.170279] CR2: 00001b9780003237 CR3: 00000008f3e1a003 CR4: 00000000007726e0 [ 5119.170283] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 [ 5119.170286] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 [ 5119.170290] PKRU: 55555554 [ 5119.170292] Call Trace: [ 5119.170298] iavf_clean_rx_ring+0xad/0x110 [iavf] [ 5119.170324] iavf_free_rx_resources+0xe/0x50 [iavf] [ 5119.170342] iavf_free_all_rx_resources.part.51+0x30/0x40 [iavf] [ 5119.170358] iavf_virtchnl_completion+0xd8a/0x15b0 [iavf] [ 5119.170377] ? iavf_clean_arq_element+0x210/0x280 [iavf] [ 5119.170397] iavf_adminq_task+0x126/0x2e0 [iavf] [ 5119.170416] process_one_work+0x18f/0x420 [ 5119.170429] worker_thread+0x30/0x370 [ 5119.170437] ? process_one_work+0x420/0x420 [ 5119.170445] kthread+0x151/0x170 [ 5119.170452] ? set_kthread_struct+0x40/0x40 [ 5119.170460] ret_from_fork+0x35/0x40 [ 5119.170477] Modules linked in: iavf sctp ip6_udp_tunnel udp_tunnel mlx4_en mlx4_core nfp tls vhost_net vhost vhost_iotlb tap tun xt_CHECKSUM ipt_MASQUERADE xt_conntrack ipt_REJECT nf_reject_ipv4 nft_compat nft_counter nft_chain_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 nf_tables nfnetlink bridge stp llc rpcsec_gss_krb5 auth_rpcgss nfsv4 dns_resolver nfs lockd grace fscache sunrpc intel_rapl_msr iTCO_wdt iTCO_vendor_support dell_smbios wmi_bmof dell_wmi_descriptor dcdbas kvm_intel kvm irqbypass intel_rapl_common isst_if_common skx_edac irdma nfit libnvdimm x86_pkg_temp_thermal i40e intel_powerclamp coretemp crct10dif_pclmul crc32_pclmul ghash_clmulni_intel ib_uverbs rapl ipmi_ssif intel_cstate intel_uncore mei_me pcspkr acpi_ipmi ib_core mei lpc_ich i2c_i801 ipmi_si ipmi_devintf wmi ipmi_msghandler acpi_power_meter xfs libcrc32c sd_mod t10_pi sg mgag200 drm_kms_helper syscopyarea sysfillrect sysimgblt fb_sys_fops ice ahci drm libahci crc32c_intel libata tg3 megaraid_sas [ 5119.170613] i2c_algo_bit dm_mirror dm_region_hash dm_log dm_mod fuse [last unloaded: iavf] [ 5119.170627] CR2: 00001b9780003237",,,"[{""url"":""https://git.kernel.org/stable/c/1bb8253b1dd44cf004e12c333acc6f25ee286cf3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/efe41860008e57fb6b69855b4b93fdf34bc42798"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49723,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:47.980,2025-02-26T07:01:47.980,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/i915/reset: Fix error_state_read ptr + offset use Fix our pointer offset usage in error_state_read when there is no i915_gpu_coredump but buf offset is non-zero. This fixes a kernel page fault can happen when multiple tests are running concurrently in a loop and one is producing engine resets and consuming the i915 error_state dump while the other is forcing full GT resets. (takes a while to trigger). The dmesg call trace: [ 5590.803000] BUG: unable to handle page fault for address: ffffffffa0b0e000 [ 5590.803009] #PF: supervisor read access in kernel mode [ 5590.803013] #PF: error_code(0x0000) - not-present page [ 5590.803016] PGD 5814067 P4D 5814067 PUD 5815063 PMD 109de4067 PTE 0 [ 5590.803022] Oops: 0000 [#1] PREEMPT SMP NOPTI [ 5590.803026] CPU: 5 PID: 13656 Comm: i915_hangman Tainted: G U 5.17.0-rc5-ups69-guc-err-capt-rev6+ #136 [ 5590.803033] Hardware name: Intel Corporation Alder Lake Client Platform/AlderLake-M LP4x RVP, BIOS ADLPFWI1.R00. 3031.A02.2201171222 01/17/2022 [ 5590.803039] RIP: 0010:memcpy_erms+0x6/0x10 [ 5590.803045] Code: fe ff ff cc eb 1e 0f 1f 00 48 89 f8 48 89 d1 48 c1 e9 03 83 e2 07 f3 48 a5 89 d1 f3 a4 c3 66 0f 1f 44 00 00 48 89 f8 48 89 d1 <f3> a4 c3 0f 1f 80 00 00 00 00 48 89 f8 48 83 fa 20 72 7e 40 38 fe [ 5590.803054] RSP: 0018:ffffc90003a8fdf0 EFLAGS: 00010282 [ 5590.803057] RAX: ffff888107ee9000 RBX: ffff888108cb1a00 RCX: 0000000000000f8f [ 5590.803061] RDX: 0000000000001000 RSI: ffffffffa0b0e000 RDI: ffff888107ee9071 [ 5590.803065] RBP: 0000000000000000 R08: 0000000000000001 R09: 0000000000000001 [ 5590.803069] R10: 0000000000000001 R11: 0000000000000002 R12: 0000000000000019 [ 5590.803073] R13: 0000000000174fff R14: 0000000000001000 R15: ffff888107ee9000 [ 5590.803077] FS: 00007f62a99bee80(0000) GS:ffff88849f880000(0000) knlGS:0000000000000000 [ 5590.803082] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 5590.803085] CR2: ffffffffa0b0e000 CR3: 000000010a1a8004 CR4: 0000000000770ee0 [ 5590.803089] PKRU: 55555554 [ 5590.803091] Call Trace: [ 5590.803093] <TASK> [ 5590.803096] error_state_read+0xa1/0xd0 [i915] [ 5590.803175] kernfs_fop_read_iter+0xb2/0x1b0 [ 5590.803180] new_sync_read+0x116/0x1a0 [ 5590.803185] vfs_read+0x114/0x1b0 [ 5590.803189] ksys_read+0x63/0xe0 [ 5590.803193] do_syscall_64+0x38/0xc0 [ 5590.803197] entry_SYSCALL_64_after_hwframe+0x44/0xae [ 5590.803201] RIP: 0033:0x7f62aaea5912 [ 5590.803204] Code: c0 e9 b2 fe ff ff 50 48 8d 3d 5a b9 0c 00 e8 05 19 02 00 0f 1f 44 00 00 f3 0f 1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 0f 05 <48> 3d 00 f0 ff ff 77 56 c3 0f 1f 44 00 00 48 83 ec 28 48 89 54 24 [ 5590.803213] RSP: 002b:00007fff5b659ae8 EFLAGS: 00000246 ORIG_RAX: 0000000000000000 [ 5590.803218] RAX: ffffffffffffffda RBX: 0000000000100000 RCX: 00007f62aaea5912 [ 5590.803221] RDX: 000000000008b000 RSI: 00007f62a8c4000f RDI: 0000000000000006 [ 5590.803225] RBP: 00007f62a8bcb00f R08: 0000000000200010 R09: 0000000000101000 [ 5590.803229] R10: 0000000000000001 R11: 0000000000000246 R12: 0000000000000006 [ 5590.803233] R13: 0000000000075000 R14: 00007f62a8acb010 R15: 0000000000200000 [ 5590.803238] </TASK> [ 5590.803240] Modules linked in: i915 ttm drm_buddy drm_dp_helper drm_kms_helper syscopyarea sysfillrect sysimgblt fb_sys_fops prime_numbers nfnetlink br_netfilter overlay mei_pxp mei_hdcp x86_pkg_temp_thermal coretemp kvm_intel snd_hda_codec_hdmi snd_hda_intel ---truncated---",,,"[{""url"":""https://git.kernel.org/stable/c/606e5d565605e26bf61a0933a6d56940f339c080"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/63b26fe0252f923e6aca373e3ad4b31202dcd331"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c9b576d0c7bf55aeae1a736da7974fa202c4394d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f4c5eba87675a07a6c28cdaca7366aeb4258ec78"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49724,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:48.073,2025-02-26T07:01:48.073,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: tty: goldfish: Fix free_irq() on remove Pass the correct dev_id to free_irq() to fix this splat when the driver is unbound: WARNING: CPU: 0 PID: 30 at kernel/irq/manage.c:1895 free_irq Trying to free already-free IRQ 65 Call Trace: warn_slowpath_fmt free_irq goldfish_tty_remove platform_remove device_remove device_release_driver_internal device_driver_detach unbind_store drv_attr_store ...",,,"[{""url"":""https://git.kernel.org/stable/c/499e13aac6c762e1e828172b0f0f5275651d6512"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/65ca4db68b6819244df9024aea4be55edf8af1ef"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a6fcd7ffd76a9c1d998a2d02d518c78a55c5bed8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c4b0b8edccb0cfb15a8cecf4161e0571d3daac64"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c83a1d40dc624070a203eb383ef9fb60eb634136"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f7183c76d500324b8b5bd0af5e663cfa57b7b836"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fb15e79cacddfbc62264e6e807bde50ad688e988"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49725,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:48.167,2025-02-26T07:01:48.167,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: i40e: Fix call trace in setup_tx_descriptors After PF reset and ethtool -t there was call trace in dmesg sometimes leading to panic. When there was some time, around 5 seconds, between reset and test there were no errors. Problem was that pf reset calls i40e_vsi_close in prep_for_reset and ethtool -t calls i40e_vsi_close in diag_test. If there was not enough time between those commands the second i40e_vsi_close starts before previous i40e_vsi_close was done which leads to crash. Add check to diag_test if pf is in reset and don't start offline tests if it is true. Add netif_info(""testing failed"") into unhappy path of i40e_diag_test()",,,"[{""url"":""https://git.kernel.org/stable/c/0a4e5a3dc5e41212870e6043895ae02455c93f63"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/15950157e2c24865b696db1c9ccc72743ae0e967"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/322271351b0e41565171e4cce70ea41854fac115"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5ba9956ca57e361fb13ea369bb753eb33177acc7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/814092927a215f5ca6c08249ec72a205e0b473cd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fd5855e6b1358e816710afee68a1d2bc685176ca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ff6e03fe84bc917bb0c907d02de668c2fe101712"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49726,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:48.257,2025-02-26T07:01:48.257,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: clocksource: hyper-v: unexport __init-annotated hv_init_clocksource() EXPORT_SYMBOL and __init is a bad combination because the .init.text section is freed up after the initialization. Hence, modules cannot use symbols annotated __init. The access to a freed symbol may end up with kernel panic. modpost used to detect it, but it has been broken for a decade. Recently, I fixed modpost so it started to warn it again, then this showed up in linux-next builds. There are two ways to fix it: - Remove __init - Remove EXPORT_SYMBOL I chose the latter for this case because the only in-tree call-site, arch/x86/kernel/cpu/mshyperv.c is never compiled as modular. (CONFIG_HYPERVISOR_GUEST is boolean)",,,"[{""url"":""https://git.kernel.org/stable/c/0414eab7c78f3518143d383e448d44fc573ac6d2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/245b993d8f6c4e25f19191edfbd8080b645e12b1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/937fcbb55a1e48a6422e87e8f49422c92265f102"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cff3a7ce6e81418b6e8bac941779bbf5d342d626"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/db965e2757d95f695e606856418cd84003dd036d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49727,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:48.347,2025-03-07T20:46:49.640,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ipv6: Fix signed integer overflow in l2tp_ip6_sendmsg When len >= INT_MAX - transhdrlen, ulen = len + transhdrlen will be overflow. To fix, we can follow what udpv6 does and subtract the transhdrlen from the max.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-190""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.320"",""matchCriteriaId"":""CF939175-79DE-4866-B38C-4C8F9896B785""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.285"",""matchCriteriaId"":""6D4E7BA7-6B66-4B9A-991A-AD516DADF77D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.249"",""matchCriteriaId"":""8A08E48B-CA77-4A21-9558-17D61C146BE9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.200"",""matchCriteriaId"":""80B2AE57-4A7E-40BB-8C83-33D4436CE199""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.124"",""matchCriteriaId"":""6442F2CD-FF1C-4574-9948-138835E635D7""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.49"",""matchCriteriaId"":""697D250E-E0A4-41BE-BB54-96385E129206""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.6"",""matchCriteriaId"":""CDD33A19-B51E-4090-A47B-073098916815""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/034246122f5c5e2e2a0b9fe04e24517920e9beb1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0e818d433fc2718fe4da044ffca7431812a7e04e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/27a37755ceb401111ded76810359d3adc4b268a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2cf73c7cb6125083408d77f43d0e84d86aed0000"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2f42389d270f2304c8855b0b63498a5a4d0c053d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6c4e3486d21173d60925ef52e512cae727b43d30"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b8879ca1fd7348b4d5db7db86dcb97f60c73d751"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f638a84afef3dfe10554c51820c16e39a278c915"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49728,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:48.433,2025-04-10T13:15:43.850,Modified,[],"In the Linux kernel, the following vulnerability has been resolved: ipv6: Fix signed integer overflow in __ip6_append_data Resurrect ubsan overflow checks and ubsan report this warning, fix it by change the variable [length] type to size_t. UBSAN: signed-integer-overflow in net/ipv6/ip6_output.c:1489:19 2147479552 + 8567 cannot be represented in type 'int' CPU: 0 PID: 253 Comm: err Not tainted 5.16.0+ #1 Hardware name: linux,dummy-virt (DT) Call trace: dump_backtrace+0x214/0x230 show_stack+0x30/0x78 dump_stack_lvl+0xf8/0x118 dump_stack+0x18/0x30 ubsan_epilogue+0x18/0x60 handle_overflow+0xd0/0xf0 __ubsan_handle_add_overflow+0x34/0x44 __ip6_append_data.isra.48+0x1598/0x1688 ip6_append_data+0x128/0x260 udpv6_sendmsg+0x680/0xdd0 inet6_sendmsg+0x54/0x90 sock_sendmsg+0x70/0x88 ____sys_sendmsg+0xe8/0x368 ___sys_sendmsg+0x98/0xe0 __sys_sendmmsg+0xf4/0x3b8 __arm64_sys_sendmmsg+0x34/0x48 invoke_syscall+0x64/0x160 el0_svc_common.constprop.4+0x124/0x300 do_el0_svc+0x44/0xc8 el0_svc+0x3c/0x1e8 el0t_64_sync_handler+0x88/0xb0 el0t_64_sync+0x16c/0x170 Changes since v1: -Change the variable [length] type to unsigned, as Eric Dumazet suggested. Changes since v2: -Don't change exthdrlen type in ip6_make_skb, as Paolo Abeni suggested. Changes since v3: -Don't change ulen type in udpv6_sendmsg and l2tp_ip6_sendmsg, as Jakub Kicinski suggested.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-190""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.18.6"",""matchCriteriaId"":""2D54A7D5-1B43-4A68-BEEB-808744204DED""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/70549c80fe80ac4e2a22068c76ebebced24f7e74"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/84dc940890e91e42898e4443a093281702440abf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f26422eabeb517629568edf8c2dd9c6cb9147584"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f93431c86b631bbca5614c66f966bf3ddb3c2803"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49729,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:48.523,2025-03-07T20:46:08.627,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: nfc: nfcmrvl: Fix memory leak in nfcmrvl_play_deferred Similar to the handling of play_deferred in commit 19cfe912c37b (""Bluetooth: btusb: Fix memory leak in play_deferred""), we thought a patch might be needed here as well. Currently usb_submit_urb is called directly to submit deferred tx urbs after unanchor them. So the usb_giveback_urb_bh would failed to unref it in usb_unanchor_urb and cause memory leak. Put those urbs in tx_anchor to avoid the leak, and also fix the error handling.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.320"",""matchCriteriaId"":""CF939175-79DE-4866-B38C-4C8F9896B785""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.285"",""matchCriteriaId"":""6D4E7BA7-6B66-4B9A-991A-AD516DADF77D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.249"",""matchCriteriaId"":""8A08E48B-CA77-4A21-9558-17D61C146BE9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.200"",""matchCriteriaId"":""80B2AE57-4A7E-40BB-8C83-33D4436CE199""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.124"",""matchCriteriaId"":""6442F2CD-FF1C-4574-9948-138835E635D7""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.49"",""matchCriteriaId"":""697D250E-E0A4-41BE-BB54-96385E129206""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.6"",""matchCriteriaId"":""CDD33A19-B51E-4090-A47B-073098916815""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0eeec1a8b0cd38c47edeb042980a6aeacecf35ed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1eb0afecfb9cd0f38424b82bd9aaa542310934ee"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3e7c7df6991ac349f2fa8540047757df666e610f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3eadc560c1919b8193d17334145dad9a917960e4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6616872cfe7f0474a22dd1f12699f95bcf81a54d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6b4d8b44e7163a77fe942f5b80e1651c1b78c537"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8a4d480702b71184fabcf379b80bf7539716752e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f21f908347712b8288ffe83b531b5e977042b29c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49730,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:48.620,2025-03-24T19:32:33.903,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: lpfc: Resolve NULL ptr dereference after an ELS LOGO is aborted A use-after-free crash can occur after an ELS LOGO is aborted. Specifically, a nodelist structure is freed and then ndlp->vport->cfg_log_verbose is dereferenced in lpfc_nlp_get() when the discovery state machine is mistakenly called a second time with NLP_EVT_DEVICE_RM argument. Rework lpfc_cmpl_els_logo() to prevent the duplicate calls to release a nodelist structure.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.15.49"",""matchCriteriaId"":""46FCCFB6-4A30-4EEC-9131-1DE5FD00F3B0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.6"",""matchCriteriaId"":""CDD33A19-B51E-4090-A47B-073098916815""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/5e83869e29448958f8ae2c6911f350318f75e4fc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b1b3440f437b75fb2a9b0cfe58df461e40eca474"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/eea34ce23dc3a595695856dc73bb132a9c5a2902"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49731,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T07:01:48.710,2025-03-07T20:46:01.040,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ata: libata-core: fix NULL pointer deref in ata_host_alloc_pinfo() In an unlikely (and probably wrong?) case that the 'ppi' parameter of ata_host_alloc_pinfo() points to an array starting with a NULL pointer, there's going to be a kernel oops as the 'pi' local variable won't get reassigned from the initial value of NULL. Initialize 'pi' instead to '&ata_dummy_port_info' to fix the possible kernel oops for good... Found by Linux Verification Center (linuxtesting.org) with the SVACE static analysis tool.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.320"",""matchCriteriaId"":""CF939175-79DE-4866-B38C-4C8F9896B785""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.285"",""matchCriteriaId"":""6D4E7BA7-6B66-4B9A-991A-AD516DADF77D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.249"",""matchCriteriaId"":""8A08E48B-CA77-4A21-9558-17D61C146BE9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.200"",""matchCriteriaId"":""80B2AE57-4A7E-40BB-8C83-33D4436CE199""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.124"",""matchCriteriaId"":""6442F2CD-FF1C-4574-9948-138835E635D7""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.49"",""matchCriteriaId"":""697D250E-E0A4-41BE-BB54-96385E129206""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.18.6"",""matchCriteriaId"":""CDD33A19-B51E-4090-A47B-073098916815""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:5.19:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""A8C30C2D-F82D-4D37-AB48-D76ABFBD5377""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/07cbdb4807d369fbda73062a91b570c4dc5ec429"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1ac5efee33f29e704226506d429b84575a5d66f8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/253334f84c81bc6a43af489f108c0bddad989eef"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/36cd19e7d4e5571d77a2ed20c5b6ef50cf57734a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a810bd5af06977a847d1f202b22d7defd5c62497"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bf476fe22aa1851bab4728e0c49025a6a0bea307"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ca4693e6e06e4fd2b240c0fec47aa2498c94848e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ff128fbea720bf763fa345680dda5f050bc24a47"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49732,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-02-26T15:15:17.843,2025-02-26T15:15:17.843,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: sock: redo the psock vs ULP protection check Commit 8a59f9d1e3d4 (""sock: Introduce sk->sk_prot->psock_update_sk_prot()"") has moved the inet_csk_has_ulp(sk) check from sk_psock_init() to the new tcp_bpf_update_proto() function. I'm guessing that this was done to allow creating psocks for non-inet sockets. Unfortunately the destruction path for psock includes the ULP unwind, so we need to fail the sk_psock_init() itself. Otherwise if ULP is already present we'll notice that later, and call tcp_update_ulp() with the sk_proto of the ULP itself, which will most likely result in the ULP looping its callbacks.",,,"[{""url"":""https://git.kernel.org/stable/c/72fa0f65b56605b8a9ae9fba2082f2123f7fe017"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/922309e50befb0cfa5cb65e4989b7706d6578846"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e34a07c0ae3906f97eb18df50902e2a01c1015b6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49733,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-02T15:15:11.480,2025-03-05T14:54:00.890,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ALSA: pcm: oss: Fix race at SNDCTL_DSP_SYNC There is a small race window at snd_pcm_oss_sync() that is called from OSS PCM SNDCTL_DSP_SYNC ioctl; namely the function calls snd_pcm_oss_make_ready() at first, then takes the params_lock mutex for the rest. When the stream is set up again by another thread between them, it leads to inconsistency, and may result in unexpected results such as NULL dereference of OSS buffer as a fuzzer spotted recently. The fix is simply to cover snd_pcm_oss_make_ready() call into the same params_lock mutex with snd_pcm_oss_make_ready_locked() variant.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""},{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.4.215"",""matchCriteriaId"":""C1F13D37-AD51-4E30-9FD7-F6B539CE6CED""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.148"",""matchCriteriaId"":""A125CF4C-603D-4ED4-AE18-CFC7C8D5CCF1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.68"",""matchCriteriaId"":""C440CED2-FE3C-495D-839C-857FFC6F523A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""5.19.9"",""matchCriteriaId"":""B4895A99-6E1B-4C76-A510-FDED00AD7D29""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.0:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E8BD11A3-8643-49B6-BADE-5029A0117325""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.0:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""5F0AD220-F6A9-4012-8636-155F1B841FAD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.0:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""A46498B3-78E1-4623-AAE1-94D29A42BE4E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.0:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""F8446E87-F5F6-41CA-8201-BAE0F0CA6DD9""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/4051324a6dafd7053c74c475e80b3ba10ae672b0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/723ac5ab2891b6c10dd6cc78ef5456af593490eb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8015ef9e8a0ee5cecfd0cb6805834d007ab26f86"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8423f0b6d513b259fdab9c9bf4aaa6188d054c2d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fce793a056c604b41a298317cf704dae255f1b36"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49737,cve@mitre.org,2025-03-16T01:15:35.543,2025-03-17T16:15:17.540,Awaiting Analysis,[],"In X.Org X server 20.11 through 21.1.16, when a client application uses easystroke for mouse gestures, the main thread modifies various data structures used by the input thread without acquiring a lock, aka a race condition. In particular, AttachDevice in dix/devices.c does not acquire an input lock.","[{""source"":""cve@mitre.org"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-413""}]}]",,"[{""url"":""https://bugs.debian.org/cgi-bin/bugreport.cgi?att=1;bug=1081338;filename=dix-Hold-input-lock-for-AttachDevice.patch;msg=5"",""source"":""cve@mitre.org""},{""url"":""https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1081338"",""source"":""cve@mitre.org""},{""url"":""https://gitlab.freedesktop.org/xorg/xserver/-/commit/dc7cb45482cea6ccec22d117ca0b489500b4d0a0"",""source"":""cve@mitre.org""},{""url"":""https://gitlab.freedesktop.org/xorg/xserver/-/issues/1260"",""source"":""cve@mitre.org""},{""url"":""https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1081338"",""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0""}]","[{""source"":""cve@mitre.org"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:L/I:L/A:H"",""baseScore"":7.7,""baseSeverity"":""HIGH"",""attackVector"":""NETWORK"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""CHANGED"",""confidentialityImpact"":""LOW"",""integrityImpact"":""LOW"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.3}]",,,,,,,,
CVE-2022-49738,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:38.340,2025-04-14T20:38:36.153,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: f2fs: fix to do sanity check on i_extra_isize in is_alive() syzbot found a f2fs bug: BUG: KASAN: slab-out-of-bounds in data_blkaddr fs/f2fs/f2fs.h:2891 [inline] BUG: KASAN: slab-out-of-bounds in is_alive fs/f2fs/gc.c:1117 [inline] BUG: KASAN: slab-out-of-bounds in gc_data_segment fs/f2fs/gc.c:1520 [inline] BUG: KASAN: slab-out-of-bounds in do_garbage_collect+0x386a/0x3df0 fs/f2fs/gc.c:1734 Read of size 4 at addr ffff888076557568 by task kworker/u4:3/52 CPU: 1 PID: 52 Comm: kworker/u4:3 Not tainted 6.1.0-rc4-syzkaller-00362-gfef7fd48922d #0 Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/26/2022 Workqueue: writeback wb_workfn (flush-7:0) Call Trace: <TASK> __dump_stack lib/dump_stack.c:88 [inline] dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106 print_address_description mm/kasan/report.c:284 [inline] print_report+0x15e/0x45d mm/kasan/report.c:395 kasan_report+0xbb/0x1f0 mm/kasan/report.c:495 data_blkaddr fs/f2fs/f2fs.h:2891 [inline] is_alive fs/f2fs/gc.c:1117 [inline] gc_data_segment fs/f2fs/gc.c:1520 [inline] do_garbage_collect+0x386a/0x3df0 fs/f2fs/gc.c:1734 f2fs_gc+0x88c/0x20a0 fs/f2fs/gc.c:1831 f2fs_balance_fs+0x544/0x6b0 fs/f2fs/segment.c:410 f2fs_write_inode+0x57e/0xe20 fs/f2fs/inode.c:753 write_inode fs/fs-writeback.c:1440 [inline] __writeback_single_inode+0xcfc/0x1440 fs/fs-writeback.c:1652 writeback_sb_inodes+0x54d/0xf90 fs/fs-writeback.c:1870 wb_writeback+0x2c5/0xd70 fs/fs-writeback.c:2044 wb_do_writeback fs/fs-writeback.c:2187 [inline] wb_workfn+0x2dc/0x12f0 fs/fs-writeback.c:2227 process_one_work+0x9bf/0x1710 kernel/workqueue.c:2289 worker_thread+0x665/0x1080 kernel/workqueue.c:2436 kthread+0x2e4/0x3a0 kernel/kthread.c:376 ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:306 The root cause is that we forgot to do sanity check on .i_extra_isize in below path, result in accessing invalid address later, fix it. - gc_data_segment - is_alive - data_blkaddr - offset_in_addr","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-125""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.4.232"",""matchCriteriaId"":""B50AC354-4651-4CDE-8EA9-58A9A917F725""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.168"",""matchCriteriaId"":""12258A3F-04BD-49C9-9C6B-D3C1945E8910""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.93"",""matchCriteriaId"":""98FAC10E-42A0-4372-B1A0-A49CF672890E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.1.11"",""matchCriteriaId"":""535D03F4-DA02-49FE-934E-668827E6407B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/5b25035fb888cb2f78bf0b9c9f95b1dc54480d36"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/914e38f02a490dafd980ff0f39cccedc074deb29"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/97ccfffcc061e54ce87e4a51a40e2e9cb0b7076a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d3b7b4afd6b2c344eabf9cc26b8bfa903c164c7c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e5142a4935c1f15841d06047b8130078fc4d7b8f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"",""baseScore"":7.1,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.2}]",,,,,,,,
CVE-2022-49739,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:38.460,2025-03-28T18:11:49.747,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: gfs2: Always check inode size of inline inodes Check if the inode size of stuffed (inline) inodes is within the allowed range when reading inodes from disk (gfs2_dinode_in()). This prevents us from on-disk corruption. The two checks in stuffed_readpage() and gfs2_unstuffer_page() that just truncate inline data to the maximum allowed size don't actually make sense, and they can be removed now as well.",,,"[{""url"":""https://git.kernel.org/stable/c/45df749f827c286adbc951f2a4865b67f0442ba9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/46c9088cabd4d0469fdb61ac2a9c5003057fe94d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4d4cb76636134bf9a0c9c3432dae936f99954586"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/70376c7ff31221f1d21db5611d8209e677781d3a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7c414f6f06e9a3934901b6edc3177ae5a1e07094"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d458a0984429c2d47e60254f5bc4119cbafe83a2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49740,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:38.583,2025-04-14T20:26:30.123,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: wifi: brcmfmac: Check the count value of channel spec to prevent out-of-bounds reads This patch fixes slab-out-of-bounds reads in brcmfmac that occur in brcmf_construct_chaninfo() and brcmf_enable_bw40_2g() when the count value of channel specifications provided by the device is greater than the length of 'list->element[]', decided by the size of the 'list' allocated with kzalloc(). The patch adds checks that make the functions free the buffer and return -EINVAL if that is the case. Note that the negative return is handled by the caller, brcmf_setup_wiphybands() or brcmf_cfg80211_attach(). Found by a modified version of syzkaller. Crash Report from brcmf_construct_chaninfo(): ================================================================== BUG: KASAN: slab-out-of-bounds in brcmf_setup_wiphybands+0x1238/0x1430 Read of size 4 at addr ffff888115f24600 by task kworker/0:2/1896 CPU: 0 PID: 1896 Comm: kworker/0:2 Tainted: G W O 5.14.0+ #132 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.1-0-ga5cab58e9a3f-prebuilt.qemu.org 04/01/2014 Workqueue: usb_hub_wq hub_event Call Trace: dump_stack_lvl+0x57/0x7d print_address_description.constprop.0.cold+0x93/0x334 kasan_report.cold+0x83/0xdf brcmf_setup_wiphybands+0x1238/0x1430 brcmf_cfg80211_attach+0x2118/0x3fd0 brcmf_attach+0x389/0xd40 brcmf_usb_probe+0x12de/0x1690 usb_probe_interface+0x25f/0x710 really_probe+0x1be/0xa90 __driver_probe_device+0x2ab/0x460 driver_probe_device+0x49/0x120 __device_attach_driver+0x18a/0x250 bus_for_each_drv+0x123/0x1a0 __device_attach+0x207/0x330 bus_probe_device+0x1a2/0x260 device_add+0xa61/0x1ce0 usb_set_configuration+0x984/0x1770 usb_generic_driver_probe+0x69/0x90 usb_probe_device+0x9c/0x220 really_probe+0x1be/0xa90 __driver_probe_device+0x2ab/0x460 driver_probe_device+0x49/0x120 __device_attach_driver+0x18a/0x250 bus_for_each_drv+0x123/0x1a0 __device_attach+0x207/0x330 bus_probe_device+0x1a2/0x260 device_add+0xa61/0x1ce0 usb_new_device.cold+0x463/0xf66 hub_event+0x10d5/0x3330 process_one_work+0x873/0x13e0 worker_thread+0x8b/0xd10 kthread+0x379/0x450 ret_from_fork+0x1f/0x30 Allocated by task 1896: kasan_save_stack+0x1b/0x40 __kasan_kmalloc+0x7c/0x90 kmem_cache_alloc_trace+0x19e/0x330 brcmf_setup_wiphybands+0x290/0x1430 brcmf_cfg80211_attach+0x2118/0x3fd0 brcmf_attach+0x389/0xd40 brcmf_usb_probe+0x12de/0x1690 usb_probe_interface+0x25f/0x710 really_probe+0x1be/0xa90 __driver_probe_device+0x2ab/0x460 driver_probe_device+0x49/0x120 __device_attach_driver+0x18a/0x250 bus_for_each_drv+0x123/0x1a0 __device_attach+0x207/0x330 bus_probe_device+0x1a2/0x260 device_add+0xa61/0x1ce0 usb_set_configuration+0x984/0x1770 usb_generic_driver_probe+0x69/0x90 usb_probe_device+0x9c/0x220 really_probe+0x1be/0xa90 __driver_probe_device+0x2ab/0x460 driver_probe_device+0x49/0x120 __device_attach_driver+0x18a/0x250 bus_for_each_drv+0x123/0x1a0 __device_attach+0x207/0x330 bus_probe_device+0x1a2/0x260 device_add+0xa61/0x1ce0 usb_new_device.cold+0x463/0xf66 hub_event+0x10d5/0x3330 process_one_work+0x873/0x13e0 worker_thread+0x8b/0xd10 kthread+0x379/0x450 ret_from_fork+0x1f/0x30 The buggy address belongs to the object at ffff888115f24000 which belongs to the cache kmalloc-2k of size 2048 The buggy address is located 1536 bytes inside of 2048-byte region [ffff888115f24000, ffff888115f24800) Memory state around the buggy address: ffff888115f24500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ffff888115f24580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 >ffff888115f24600: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc ^ ffff888115f24680: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc ffff888115f24700: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc ================================================================== Crash Report from brcmf_enable_bw40_2g(): ========== ---truncated---","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-125""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.4.232"",""matchCriteriaId"":""B50AC354-4651-4CDE-8EA9-58A9A917F725""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.168"",""matchCriteriaId"":""12258A3F-04BD-49C9-9C6B-D3C1945E8910""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.93"",""matchCriteriaId"":""98FAC10E-42A0-4372-B1A0-A49CF672890E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.1.11"",""matchCriteriaId"":""535D03F4-DA02-49FE-934E-668827E6407B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/4920ab131b2dbae7464b72bdcac465d070254209"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9cf5e99c1ae1a85286a76c9a970202750538394c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b2e412879595821ff1b5545cbed5f108fba7f5b6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e4991910f15013db72f6ec0db7038ea67a57052e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f06de1bb6d61f0c18b0213bbc6298960037f9d42"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"",""baseScore"":7.1,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.2}]",,,,,,,,
CVE-2022-49741,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:38.720,2025-04-14T20:26:41.627,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: fbdev: smscufx: fix error handling code in ufx_usb_probe The current error handling code in ufx_usb_probe have many unmatching issues, e.g., missing ufx_free_usb_list, destroy_modedb label should only include framebuffer_release, fb_dealloc_cmap only matches fb_alloc_cmap. My local syzkaller reports a memory leak bug: memory leak in ufx_usb_probe BUG: memory leak unreferenced object 0xffff88802f879580 (size 128): comm ""kworker/0:7"", pid 17416, jiffies 4295067474 (age 46.710s) hex dump (first 32 bytes): 80 21 7c 2e 80 88 ff ff 18 d0 d0 0c 80 88 ff ff .!|............. 00 d0 d0 0c 80 88 ff ff e0 ff ff ff 0f 00 00 00 ................ backtrace: [<ffffffff814c99a0>] kmalloc_trace+0x20/0x90 mm/slab_common.c:1045 [<ffffffff824d219c>] kmalloc include/linux/slab.h:553 [inline] [<ffffffff824d219c>] kzalloc include/linux/slab.h:689 [inline] [<ffffffff824d219c>] ufx_alloc_urb_list drivers/video/fbdev/smscufx.c:1873 [inline] [<ffffffff824d219c>] ufx_usb_probe+0x11c/0x15a0 drivers/video/fbdev/smscufx.c:1655 [<ffffffff82d17927>] usb_probe_interface+0x177/0x370 drivers/usb/core/driver.c:396 [<ffffffff82712f0d>] call_driver_probe drivers/base/dd.c:560 [inline] [<ffffffff82712f0d>] really_probe+0x12d/0x390 drivers/base/dd.c:639 [<ffffffff8271322f>] __driver_probe_device+0xbf/0x140 drivers/base/dd.c:778 [<ffffffff827132da>] driver_probe_device+0x2a/0x120 drivers/base/dd.c:808 [<ffffffff82713c27>] __device_attach_driver+0xf7/0x150 drivers/base/dd.c:936 [<ffffffff82710137>] bus_for_each_drv+0xb7/0x100 drivers/base/bus.c:427 [<ffffffff827136b5>] __device_attach+0x105/0x2d0 drivers/base/dd.c:1008 [<ffffffff82711d36>] bus_probe_device+0xc6/0xe0 drivers/base/bus.c:487 [<ffffffff8270e242>] device_add+0x642/0xdc0 drivers/base/core.c:3517 [<ffffffff82d14d5f>] usb_set_configuration+0x8ef/0xb80 drivers/usb/core/message.c:2170 [<ffffffff82d2576c>] usb_generic_driver_probe+0x8c/0xc0 drivers/usb/core/generic.c:238 [<ffffffff82d16ffc>] usb_probe_device+0x5c/0x140 drivers/usb/core/driver.c:293 [<ffffffff82712f0d>] call_driver_probe drivers/base/dd.c:560 [inline] [<ffffffff82712f0d>] really_probe+0x12d/0x390 drivers/base/dd.c:639 [<ffffffff8271322f>] __driver_probe_device+0xbf/0x140 drivers/base/dd.c:778 Fix this bug by rewriting the error handling code in ufx_usb_probe.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.4.232"",""matchCriteriaId"":""B50AC354-4651-4CDE-8EA9-58A9A917F725""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.168"",""matchCriteriaId"":""12258A3F-04BD-49C9-9C6B-D3C1945E8910""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.93"",""matchCriteriaId"":""98FAC10E-42A0-4372-B1A0-A49CF672890E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.1.11"",""matchCriteriaId"":""535D03F4-DA02-49FE-934E-668827E6407B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1b4c08844628dfc8d72d3f51b657f2a5e63b7b4b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3931014367ef31d26af65386a4ca496f50f0cfdf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3b3d3127f5b4291ae4caaf50f7b66089ad600480"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/64fa364ad3245508d393e16ed4886f92d7eb423c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b76449ee75e21acfe9fa4c653d8598f191ed7d68"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49742,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:38.847,2025-04-14T20:27:03.027,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: f2fs: initialize locks earlier in f2fs_fill_super() syzbot is reporting lockdep warning at f2fs_handle_error() [1], for spin_lock(&sbi->error_lock) is called before spin_lock_init() is called. For safe locking in error handling, move initialization of locks (and obvious structures) in f2fs_fill_super() to immediately after memory allocation.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""6.1.11"",""matchCriteriaId"":""345F000B-5A9F-41D4-831B-E85C394DDAE4""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/92b4cf5b48955a4bdd15fe4e2067db8ebd87f04c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ddeff03bb33810fcf2f0c18e03d099cf0aacda62"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49743,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:38.967,2025-03-28T18:11:49.747,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ovl: Use ""buf"" flexible array for memcpy() destination The ""buf"" flexible array needs to be the memcpy() destination to avoid false positive run-time warning from the recent FORTIFY_SOURCE hardening: memcpy: detected field-spanning write (size 93) of single field ""&fh->fb"" at fs/overlayfs/export.c:799 (size 21)",,,"[{""url"":""https://git.kernel.org/stable/c/07a96977b2f462337a9121302de64277b8747ab1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a77141a06367825d639ac51b04703d551163e36c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cf8aa9bf97cadf85745506c6a3e244b22c268d63"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49744,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:39.093,2025-03-28T18:11:49.747,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: mm/uffd: fix pte marker when fork() without fork event Patch series ""mm: Fixes on pte markers"". Patch 1 resolves the syzkiller report from Pengfei. Patch 2 further harden pte markers when used with the recent swapin error markers. The major case is we should persist a swapin error marker after fork(), so child shouldn't read a corrupted page. This patch (of 2): When fork(), dst_vma is not guaranteed to have VM_UFFD_WP even if src may have it and has pte marker installed. The warning is improper along with the comment. The right thing is to inherit the pte marker when needed, or keep the dst pte empty. A vague guess is this happened by an accident when there's the prior patch to introduce src/dst vma into this helper during the uffd-wp feature got developed and I probably messed up in the rebase, since if we replace dst_vma with src_vma the warning & comment it all makes sense too. Hugetlb did exactly the right here (copy_hugetlb_page_range()). Fix the general path. Reproducer: https://github.com/xupengfe/syzkaller_logs/blob/main/221208_115556_copy_page_range/repro.c Bugzilla report: https://bugzilla.kernel.org/show_bug.cgi?id=216808",,,"[{""url"":""https://git.kernel.org/stable/c/2d11727655bf931776fb541f5862daf04bd5bf02"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/49d6d7fb631345b0f2957a7c4be24ad63903150f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49745,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:39.220,2025-03-28T18:11:49.747,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: fpga: m10bmc-sec: Fix probe rollback Handle probe error rollbacks properly to avoid leaks.",,,"[{""url"":""https://git.kernel.org/stable/c/60ce26d10e5850f33cc76fce52f5377045e75a15"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/74cff472d3d66db13b5ef64f40dfa42383f71ff7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49746,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:39.343,2025-04-14T20:27:15.143,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: dmaengine: imx-sdma: Fix a possible memory leak in sdma_transfer_init If the function sdma_load_context() fails, the sdma_desc will be freed, but the allocated desc->bd is forgot to be freed. We already met the sdma_load_context() failure case and the log as below: [ 450.699064] imx-sdma 30bd0000.dma-controller: Timeout waiting for CH0 ready ... In this case, the desc->bd will not be freed without this change.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.19.272"",""matchCriteriaId"":""AF12370B-6ABA-4859-9DA9-6A12ADABDF35""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.231"",""matchCriteriaId"":""79CA608C-BC5E-4BB5-9250-771AEC44F412""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.167"",""matchCriteriaId"":""3B6D1442-2F69-4ED4-9A3E-23FCDBEE6094""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.92"",""matchCriteriaId"":""82E7FA6E-E503-40DE-995C-EB8E2C9CDAE3""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.1.10"",""matchCriteriaId"":""482D2612-A4D4-4A68-AC23-52F6BE89878B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""FF501633-2F44-4913-A8EE-B021929F49F6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""2BDA597B-CAC1-4DF0-86F0-42E142C654E9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""725C78C9-12CE-406F-ABE8-0813A01D66E8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""A127C155-689C-4F67-B146-44A57F4BFD85""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1417f59ac0b02130ee56c0c50794b9b257be3d17"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/43acd767bd90c5d4172ce7fee5d9007a9a08dea9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/80ee99e52936b2c04cc37b17a14b2ae2f9d282ac"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bd0050b7ffa87c7b260d563646af612f4112a778"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ce4745a6b8016fae74c95dcd457d4ceef7d98af1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/dbe634ce824329d8f14079c3e9f8f11670894bec"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49747,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:39.477,2025-03-28T18:11:49.747,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: erofs/zmap.c: Fix incorrect offset calculation Effective offset to add to length was being incorrectly calculated, which resulted in iomap->length being set to 0, triggering a WARN_ON in iomap_iter_done(). Fix that, and describe it in comments. This was reported as a crash by syzbot under an issue about a warning encountered in iomap_iter_done(), but unrelated to erofs. C reproducer: https://syzkaller.appspot.com/text?tag=ReproC&x=1037a6b2880000 Kernel config: https://syzkaller.appspot.com/text?tag=KernelConfig&x=e2021a61197ebe02 Dashboard link: https://syzkaller.appspot.com/bug?extid=a8e049cd3abd342936b6",,,"[{""url"":""https://git.kernel.org/stable/c/2144859229c1e74f52d3ea067338d314a83a8afb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6acd87d50998ef0afafc441613aeaf5a8f5c9eff"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9f31d8c889d9a4e47bfcc6c4537d0c9f89fe582c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49748,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:39.597,2025-04-14T20:27:28.673,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: perf/x86/amd: fix potential integer overflow on shift of a int The left shift of int 32 bit integer constant 1 is evaluated using 32 bit arithmetic and then passed as a 64 bit function argument. In the case where i is 32 or more this can lead to an overflow. Avoid this by shifting using the BIT_ULL macro instead.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-190""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4.22"",""versionEndExcluding"":""5.4.231"",""matchCriteriaId"":""ABC74FD6-0366-4773-94D0-F91DACEE3A1A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5.6"",""versionEndExcluding"":""5.10.166"",""matchCriteriaId"":""49400A90-8418-4C7D-B0F2-72D9751BF141""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.91"",""matchCriteriaId"":""91C2E92D-CC25-4FBD-8824-56A148119D7E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.1.9"",""matchCriteriaId"":""ED5B6045-B1D2-4E03-B194-9005A351BCAE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""FF501633-2F44-4913-A8EE-B021929F49F6""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/08245672cdc6505550d1a5020603b0a8d4a6dcc7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/14cc13e433e1067557435b1adbf05608d7d47a93"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a4d01fb87ece45d4164fd725890211ccf9a307a9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f84c9b72fb200633774704d8020f769c88a4b249"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fbf7b0e4cef3b5470b610f14fb9faa5ee7f63954"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49749,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:39.730,2025-04-14T20:27:38.340,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: i2c: designware: use casting of u64 in clock multiplication to avoid overflow In functions i2c_dw_scl_lcnt() and i2c_dw_scl_hcnt() may have overflow by depending on the values of the given parameters including the ic_clk. For example in our use case where ic_clk is larger than one million, multiplication of ic_clk * 4700 will result in 32 bit overflow. Add cast of u64 to the calculation to avoid multiplication overflow, and use the corresponding define for divide.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-190""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.2"",""versionEndExcluding"":""5.10.166"",""matchCriteriaId"":""A6E2C72E-F792-48C7-A39A-07D12CCA9732""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.91"",""matchCriteriaId"":""91C2E92D-CC25-4FBD-8824-56A148119D7E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.1.9"",""matchCriteriaId"":""ED5B6045-B1D2-4E03-B194-9005A351BCAE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""FF501633-2F44-4913-A8EE-B021929F49F6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""2BDA597B-CAC1-4DF0-86F0-42E142C654E9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""725C78C9-12CE-406F-ABE8-0813A01D66E8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""A127C155-689C-4F67-B146-44A57F4BFD85""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""D34127CC-68F5-4703-A5F6-5006F803E4AE""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2f29d780bd691d20e89e5b35d5e6568607115e94"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9f36aae9e80e79b7a6d62227eaa96935166be9fe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c8c37bc514514999e62a17e95160ed9ebf75ca8d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ed173f77fd28a3e4fffc13b3f28687b9eba61157"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49750,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:39.850,2025-04-14T20:16:13.217,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: cpufreq: CPPC: Add u64 casts to avoid overflowing The fields of the _CPC object are unsigned 32-bits values. To avoid overflows while using _CPC's values, add 'u64' casts.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-190""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""6.1.9"",""matchCriteriaId"":""B217F2F3-06C6-4332-8EE1-0360743FEF08""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""FF501633-2F44-4913-A8EE-B021929F49F6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""2BDA597B-CAC1-4DF0-86F0-42E142C654E9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""725C78C9-12CE-406F-ABE8-0813A01D66E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/7d596bbc66a52ff2c7a83d7e0ee840cb07e2a045"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f5f94b9c8b805d87ff185caf9779c3a4d07819e3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49751,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:39.970,2025-04-14T20:16:24.670,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: w1: fix WARNING after calling w1_process() I got the following WARNING message while removing driver(ds2482): ------------[ cut here ]------------ do not call blocking ops when !TASK_RUNNING; state=1 set at [<000000002d50bfb6>] w1_process+0x9e/0x1d0 [wire] WARNING: CPU: 0 PID: 262 at kernel/sched/core.c:9817 __might_sleep+0x98/0xa0 CPU: 0 PID: 262 Comm: w1_bus_master1 Tainted: G N 6.1.0-rc3+ #307 RIP: 0010:__might_sleep+0x98/0xa0 Call Trace: exit_signals+0x6c/0x550 do_exit+0x2b4/0x17e0 kthread_exit+0x52/0x60 kthread+0x16d/0x1e0 ret_from_fork+0x1f/0x30 The state of task is set to TASK_INTERRUPTIBLE in loop in w1_process(), set it to TASK_RUNNING when it breaks out of the loop to avoid the warning.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-noinfo""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.28"",""versionEndExcluding"":""4.14.305"",""matchCriteriaId"":""3110F0F7-4B63-4FC3-890B-D2A72AFE3583""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.272"",""matchCriteriaId"":""83C4B95C-BD08-4683-A26E-2A65333F2D15""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.231"",""matchCriteriaId"":""79CA608C-BC5E-4BB5-9250-771AEC44F412""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.166"",""matchCriteriaId"":""A44D9D24-661C-40D4-8735-4CEB1C7C02F2""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.91"",""matchCriteriaId"":""91C2E92D-CC25-4FBD-8824-56A148119D7E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.1.9"",""matchCriteriaId"":""ED5B6045-B1D2-4E03-B194-9005A351BCAE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""FF501633-2F44-4913-A8EE-B021929F49F6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""2BDA597B-CAC1-4DF0-86F0-42E142C654E9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""725C78C9-12CE-406F-ABE8-0813A01D66E8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""A127C155-689C-4F67-B146-44A57F4BFD85""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/190b5c3bbd5df685bb1063bda048831d72b8f1d4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/216f35db6ec6a667cd9db4838d657c1d2f4684da"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/276052159ba94d4d9f5b453fb4707d6798c6b845"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/36225a7c72e9e3e1ce4001b6ce72849f5c9a2d3b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/89c62cee5d4d65ac75d99b5f986f7f94290e888f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bccd6df4c177b1ad766f16565ccc298653d027d0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cfc7462ff824ed6718ed0272ee9aae88e20d469a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49752,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:40.110,2025-04-14T20:16:40.710,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: device property: fix of node refcount leak in fwnode_graph_get_next_endpoint() The 'parent' returned by fwnode_graph_get_port_parent() with refcount incremented when 'prev' is not NULL, it needs be put when finish using it. Because the parent is const, introduce a new variable to store the returned fwnode, then put it before returning from fwnode_graph_get_next_endpoint().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15"",""versionEndExcluding"":""5.15.91"",""matchCriteriaId"":""21EEE3D1-0886-406D-BF6E-28331027E3AB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.1.9"",""matchCriteriaId"":""ED5B6045-B1D2-4E03-B194-9005A351BCAE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""FF501633-2F44-4913-A8EE-B021929F49F6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""2BDA597B-CAC1-4DF0-86F0-42E142C654E9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""725C78C9-12CE-406F-ABE8-0813A01D66E8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""A127C155-689C-4F67-B146-44A57F4BFD85""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/39af728649b05e88a2b40e714feeee6451c3f18e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7701a4bd45c11f9a289d8f262fad05705a012339"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e75485fc589ec729cc182aa9b41dfb6c15ae6f6e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49753,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:40.227,2025-04-01T15:41:09.700,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: dmaengine: Fix double increment of client_count in dma_chan_get() The first time dma_chan_get() is called for a channel the channel client_count is incorrectly incremented twice for public channels, first in balance_ref_count(), and again prior to returning. This results in an incorrect client count which will lead to the channel resources not being freed when they should be. A simple test of repeated module load and unload of async_tx on a Dell Power Edge R7425 also shows this resulting in a kref underflow warning. [ 124.329662] async_tx: api initialized (async) [ 129.000627] async_tx: api initialized (async) [ 130.047839] ------------[ cut here ]------------ [ 130.052472] refcount_t: underflow; use-after-free. [ 130.057279] WARNING: CPU: 3 PID: 19364 at lib/refcount.c:28 refcount_warn_saturate+0xba/0x110 [ 130.065811] Modules linked in: async_tx(-) rfkill intel_rapl_msr intel_rapl_common amd64_edac edac_mce_amd ipmi_ssif kvm_amd dcdbas kvm mgag200 drm_shmem_helper acpi_ipmi irqbypass drm_kms_helper ipmi_si syscopyarea sysfillrect rapl pcspkr ipmi_devintf sysimgblt fb_sys_fops k10temp i2c_piix4 ipmi_msghandler acpi_power_meter acpi_cpufreq vfat fat drm fuse xfs libcrc32c sd_mod t10_pi sg ahci crct10dif_pclmul libahci crc32_pclmul crc32c_intel ghash_clmulni_intel igb megaraid_sas i40e libata i2c_algo_bit ccp sp5100_tco dca dm_mirror dm_region_hash dm_log dm_mod [last unloaded: async_tx] [ 130.117361] CPU: 3 PID: 19364 Comm: modprobe Kdump: loaded Not tainted 5.14.0-185.el9.x86_64 #1 [ 130.126091] Hardware name: Dell Inc. PowerEdge R7425/02MJ3T, BIOS 1.18.0 01/17/2022 [ 130.133806] RIP: 0010:refcount_warn_saturate+0xba/0x110 [ 130.139041] Code: 01 01 e8 6d bd 55 00 0f 0b e9 72 9d 8a 00 80 3d 26 18 9c 01 00 75 85 48 c7 c7 f8 a3 03 9d c6 05 16 18 9c 01 01 e8 4a bd 55 00 <0f> 0b e9 4f 9d 8a 00 80 3d 01 18 9c 01 00 0f 85 5e ff ff ff 48 c7 [ 130.157807] RSP: 0018:ffffbf98898afe68 EFLAGS: 00010286 [ 130.163036] RAX: 0000000000000000 RBX: ffff9da06028e598 RCX: 0000000000000000 [ 130.170172] RDX: ffff9daf9de26480 RSI: ffff9daf9de198a0 RDI: ffff9daf9de198a0 [ 130.177316] RBP: ffff9da7cddf3970 R08: 0000000000000000 R09: 00000000ffff7fff [ 130.184459] R10: ffffbf98898afd00 R11: ffffffff9d9e8c28 R12: ffff9da7cddf1970 [ 130.191596] R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000 [ 130.198739] FS: 00007f646435c740(0000) GS:ffff9daf9de00000(0000) knlGS:0000000000000000 [ 130.206832] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 130.212586] CR2: 00007f6463b214f0 CR3: 00000008ab98c000 CR4: 00000000003506e0 [ 130.219729] Call Trace: [ 130.222192] <TASK> [ 130.224305] dma_chan_put+0x10d/0x110 [ 130.227988] dmaengine_put+0x7a/0xa0 [ 130.231575] __do_sys_delete_module.constprop.0+0x178/0x280 [ 130.237157] ? syscall_trace_enter.constprop.0+0x145/0x1d0 [ 130.242652] do_syscall_64+0x5c/0x90 [ 130.246240] ? exc_page_fault+0x62/0x150 [ 130.250178] entry_SYSCALL_64_after_hwframe+0x63/0xcd [ 130.255243] RIP: 0033:0x7f6463a3f5ab [ 130.258830] Code: 73 01 c3 48 8b 0d 75 a8 1b 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa b8 b0 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 45 a8 1b 00 f7 d8 64 89 01 48 [ 130.277591] RSP: 002b:00007fff22f972c8 EFLAGS: 00000206 ORIG_RAX: 00000000000000b0 [ 130.285164] RAX: ffffffffffffffda RBX: 000055b6786edd40 RCX: 00007f6463a3f5ab [ 130.292303] RDX: 0000000000000000 RSI: 0000000000000800 RDI: 000055b6786edda8 [ 130.299443] RBP: 000055b6786edd40 R08: 0000000000000000 R09: 0000000000000000 [ 130.306584] R10: 00007f6463b9eac0 R11: 0000000000000206 R12: 000055b6786edda8 [ 130.313731] R13: 0000000000000000 R14: 000055b6786edda8 R15: 00007fff22f995f8 [ 130.320875] </TASK> [ 130.323081] ---[ end trace eff7156d56b5cf25 ]--- cat /sys/class/dma/dma0chan*/in_use would get the wrong result. 2 2 2 Test-by: Jie Hai <haijie1@huawei.com>","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.0"",""versionEndExcluding"":""4.14.305"",""matchCriteriaId"":""C1DBED98-CE57-4144-9FE0-CD02221FF86E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.272"",""matchCriteriaId"":""83C4B95C-BD08-4683-A26E-2A65333F2D15""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.231"",""matchCriteriaId"":""79CA608C-BC5E-4BB5-9250-771AEC44F412""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.166"",""matchCriteriaId"":""A44D9D24-661C-40D4-8735-4CEB1C7C02F2""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.91"",""matchCriteriaId"":""91C2E92D-CC25-4FBD-8824-56A148119D7E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.1.9"",""matchCriteriaId"":""ED5B6045-B1D2-4E03-B194-9005A351BCAE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""FF501633-2F44-4913-A8EE-B021929F49F6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""2BDA597B-CAC1-4DF0-86F0-42E142C654E9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""725C78C9-12CE-406F-ABE8-0813A01D66E8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""A127C155-689C-4F67-B146-44A57F4BFD85""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/142d644fd2cc059ffa042fbfb68e766433ef3afd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/18dd3b30d4c7e8440c63118c7a7b687372b9567f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1b409e14b4b7af034e0450f95c165b6c5c87dbc1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/42ecd72f02cd657b00b559621e7ef7d2c4d3e5f1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/71c601965532c38030133535f7cd93c1efa75af1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c6221afe573413fd2981e291f7df4a58283e0654"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f3dc1b3b4750851a94212dba249703dd0e50bb20"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49754,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:40.423,2025-04-14T20:16:54.943,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: Bluetooth: Fix a buffer overflow in mgmt_mesh_add() Smatch Warning: net/bluetooth/mgmt_util.c:375 mgmt_mesh_add() error: __memcpy() 'mesh_tx->param' too small (48 vs 50) Analysis: 'mesh_tx->param' is array of size 48. This is the destination. u8 param[sizeof(struct mgmt_cp_mesh_send) + 29]; // 19 + 29 = 48. But in the caller 'mesh_send' we reject only when len > 50. len > (MGMT_MESH_SEND_SIZE + 31) // 19 + 31 = 50.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-120""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""6.1"",""versionEndExcluding"":""6.1.9"",""matchCriteriaId"":""C236A960-CD77-4B51-AC4F-FDD32DBB1D4D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""FF501633-2F44-4913-A8EE-B021929F49F6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""2BDA597B-CAC1-4DF0-86F0-42E142C654E9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""725C78C9-12CE-406F-ABE8-0813A01D66E8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""A127C155-689C-4F67-B146-44A57F4BFD85""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2185e0fdbb2137f22a9dd9fcbf6481400d56299b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ed818fd8c531abf561b379995ee7cc4c68029464"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49755,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:40.640,2025-04-01T15:40:57.590,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: usb: gadget: f_fs: Prevent race during ffs_ep0_queue_wait While performing fast composition switch, there is a possibility that the process of ffs_ep0_write/ffs_ep0_read get into a race condition due to ep0req being freed up from functionfs_unbind. Consider the scenario that the ffs_ep0_write calls the ffs_ep0_queue_wait by taking a lock &ffs->ev.waitq.lock. However, the functionfs_unbind isn't bounded so it can go ahead and mark the ep0req to NULL, and since there is no NULL check in ffs_ep0_queue_wait we will end up in use-after-free. Fix this by making a serialized execution between the two functions using a mutex_lock(ffs->mutex).","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.35"",""versionEndExcluding"":""4.14.305"",""matchCriteriaId"":""61643C98-1E94-411D-9C33-E5B3EA3B2167""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.272"",""matchCriteriaId"":""83C4B95C-BD08-4683-A26E-2A65333F2D15""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.231"",""matchCriteriaId"":""79CA608C-BC5E-4BB5-9250-771AEC44F412""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.166"",""matchCriteriaId"":""A44D9D24-661C-40D4-8735-4CEB1C7C02F2""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.91"",""matchCriteriaId"":""91C2E92D-CC25-4FBD-8824-56A148119D7E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.1.9"",""matchCriteriaId"":""ED5B6045-B1D2-4E03-B194-9005A351BCAE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""FF501633-2F44-4913-A8EE-B021929F49F6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""2BDA597B-CAC1-4DF0-86F0-42E142C654E9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""725C78C9-12CE-406F-ABE8-0813A01D66E8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""A127C155-689C-4F67-B146-44A57F4BFD85""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/6a19da111057f69214b97c62fb0ac59023970850"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6aee197b7fbcd61596a78b47d553f2f99111f217"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6dd9ea05534f323668db94fcc2726c7a84547e78"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a8d40942df074f4ebcb9bd3413596d92f323b064"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ae8e136bcaae96163b5821984de1036efc9abb1a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e9036e951f93fb8d7b5e9d6e2c7f94a4da312ae4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/facf353c9e8d7885b686d9a4b173d4e0af6441d2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49756,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:40.787,2025-04-14T20:17:05.523,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: phy: usb: sunplus: Fix potential null-ptr-deref in sp_usb_phy_probe() sp_usb_phy_probe() will call platform_get_resource_byname() that may fail and return NULL. devm_ioremap() will use usbphy->moon4_res_mem->start as input, which may causes null-ptr-deref. Check the ret value of platform_get_resource_byname() to avoid the null-ptr-deref.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""6.1"",""versionEndExcluding"":""6.1.9"",""matchCriteriaId"":""C236A960-CD77-4B51-AC4F-FDD32DBB1D4D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""FF501633-2F44-4913-A8EE-B021929F49F6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""2BDA597B-CAC1-4DF0-86F0-42E142C654E9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""725C78C9-12CE-406F-ABE8-0813A01D66E8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""A127C155-689C-4F67-B146-44A57F4BFD85""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/17eee264ef386ef30a69dd70e36f29893b85c170"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d838b5c99bcecd593b4710a93fce8fdbf122395b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49757,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:40.910,2025-04-15T14:51:20.980,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: EDAC/highbank: Fix memory leak in highbank_mc_probe() When devres_open_group() fails, it returns -ENOMEM without freeing memory allocated by edac_mc_alloc(). Call edac_mc_free() on the error handling path to avoid a memory leak. [ bp: Massage commit message. ]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.6"",""versionEndExcluding"":""4.14.305"",""matchCriteriaId"":""3DC5C536-62C0-420A-B822-C506B8E6DC4D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.272"",""matchCriteriaId"":""83C4B95C-BD08-4683-A26E-2A65333F2D15""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.231"",""matchCriteriaId"":""79CA608C-BC5E-4BB5-9250-771AEC44F412""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.166"",""matchCriteriaId"":""A44D9D24-661C-40D4-8735-4CEB1C7C02F2""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.91"",""matchCriteriaId"":""91C2E92D-CC25-4FBD-8824-56A148119D7E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.1.9"",""matchCriteriaId"":""ED5B6045-B1D2-4E03-B194-9005A351BCAE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""FF501633-2F44-4913-A8EE-B021929F49F6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""2BDA597B-CAC1-4DF0-86F0-42E142C654E9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""725C78C9-12CE-406F-ABE8-0813A01D66E8""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0db40e23b56d217eebd385bebb64057ef764b2c7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/329fbd260352a7b9a83781d8b8bd96f95844a51f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8d23f5d25264beb223ee79cdb530b88c237719fc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b7863ef8a8f0fee96b4eb41211f4918c0e047253"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/caffa7fed1397d1395052272c93900176de86557"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e7a293658c20a7945014570e1921bf7d25d68a36"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f1b3e23ed8df87d779ee86ac37f379e79a24169a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49758,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:41.043,2025-04-15T14:51:37.410,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: reset: uniphier-glue: Fix possible null-ptr-deref It will cause null-ptr-deref when resource_size(res) invoked, if platform_get_resource() returns NULL.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.19"",""versionEndExcluding"":""5.15.91"",""matchCriteriaId"":""79B5FEEE-D349-48C0-9DEC-54BE866296B6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.1.9"",""matchCriteriaId"":""ED5B6045-B1D2-4E03-B194-9005A351BCAE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""FF501633-2F44-4913-A8EE-B021929F49F6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""2BDA597B-CAC1-4DF0-86F0-42E142C654E9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""725C78C9-12CE-406F-ABE8-0813A01D66E8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""A127C155-689C-4F67-B146-44A57F4BFD85""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/3a2390c6777e3f6662980c6cfc25cafe9e4fef98"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/633bad3dc81ce2aa561f704ec091e49eb647bd0b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/95de286200b2a046da01c4aeba02ae9220d68ca4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49759,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:41.163,2025-04-15T14:51:51.090,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: VMCI: Use threaded irqs instead of tasklets The vmci_dispatch_dgs() tasklet function calls vmci_read_data() which uses wait_event() resulting in invalid sleep in an atomic context (and therefore potentially in a deadlock). Use threaded irqs to fix this issue and completely remove usage of tasklets. [ 20.264639] BUG: sleeping function called from invalid context at drivers/misc/vmw_vmci/vmci_guest.c:145 [ 20.264643] in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 762, name: vmtoolsd [ 20.264645] preempt_count: 101, expected: 0 [ 20.264646] RCU nest depth: 0, expected: 0 [ 20.264647] 1 lock held by vmtoolsd/762: [ 20.264648] #0: ffff0000874ae440 (sk_lock-AF_VSOCK){+.+.}-{0:0}, at: vsock_connect+0x60/0x330 [vsock] [ 20.264658] Preemption disabled at: [ 20.264659] [<ffff80000151d7d8>] vmci_send_datagram+0x44/0xa0 [vmw_vmci] [ 20.264665] CPU: 0 PID: 762 Comm: vmtoolsd Not tainted 5.19.0-0.rc8.20220727git39c3c396f813.60.fc37.aarch64 #1 [ 20.264667] Hardware name: VMware, Inc. VBSA/VBSA, BIOS VEFI 12/31/2020 [ 20.264668] Call trace: [ 20.264669] dump_backtrace+0xc4/0x130 [ 20.264672] show_stack+0x24/0x80 [ 20.264673] dump_stack_lvl+0x88/0xb4 [ 20.264676] dump_stack+0x18/0x34 [ 20.264677] __might_resched+0x1a0/0x280 [ 20.264679] __might_sleep+0x58/0x90 [ 20.264681] vmci_read_data+0x74/0x120 [vmw_vmci] [ 20.264683] vmci_dispatch_dgs+0x64/0x204 [vmw_vmci] [ 20.264686] tasklet_action_common.constprop.0+0x13c/0x150 [ 20.264688] tasklet_action+0x40/0x50 [ 20.264689] __do_softirq+0x23c/0x6b4 [ 20.264690] __irq_exit_rcu+0x104/0x214 [ 20.264691] irq_exit_rcu+0x1c/0x50 [ 20.264693] el1_interrupt+0x38/0x6c [ 20.264695] el1h_64_irq_handler+0x18/0x24 [ 20.264696] el1h_64_irq+0x68/0x6c [ 20.264697] preempt_count_sub+0xa4/0xe0 [ 20.264698] _raw_spin_unlock_irqrestore+0x64/0xb0 [ 20.264701] vmci_send_datagram+0x7c/0xa0 [vmw_vmci] [ 20.264703] vmci_datagram_dispatch+0x84/0x100 [vmw_vmci] [ 20.264706] vmci_datagram_send+0x2c/0x40 [vmw_vmci] [ 20.264709] vmci_transport_send_control_pkt+0xb8/0x120 [vmw_vsock_vmci_transport] [ 20.264711] vmci_transport_connect+0x40/0x7c [vmw_vsock_vmci_transport] [ 20.264713] vsock_connect+0x278/0x330 [vsock] [ 20.264715] __sys_connect_file+0x8c/0xc0 [ 20.264718] __sys_connect+0x84/0xb4 [ 20.264720] __arm64_sys_connect+0x2c/0x3c [ 20.264721] invoke_syscall+0x78/0x100 [ 20.264723] el0_svc_common.constprop.0+0x68/0x124 [ 20.264724] do_el0_svc+0x38/0x4c [ 20.264725] el0_svc+0x60/0x180 [ 20.264726] el0t_64_sync_handler+0x11c/0x150 [ 20.264728] el0t_64_sync+0x190/0x194","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""6.1.8"",""matchCriteriaId"":""322A7D37-5D31-4288-87E6-2947F4E61BE1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""FF501633-2F44-4913-A8EE-B021929F49F6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""2BDA597B-CAC1-4DF0-86F0-42E142C654E9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""725C78C9-12CE-406F-ABE8-0813A01D66E8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""A127C155-689C-4F67-B146-44A57F4BFD85""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/3daed6345d5880464f46adab871d208e1baa2f3a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/548ea9dd5e01b0ecf53d2563004c80abd636743d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49760,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:41.280,2025-03-28T18:11:49.747,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: mm/hugetlb: fix PTE marker handling in hugetlb_change_protection() Patch series ""mm/hugetlb: uffd-wp fixes for hugetlb_change_protection()"". Playing with virtio-mem and background snapshots (using uffd-wp) on hugetlb in QEMU, I managed to trigger a VM_BUG_ON(). Looking into the details, hugetlb_change_protection() seems to not handle uffd-wp correctly in all cases. Patch #1 fixes my test case. I don't have reproducers for patch #2, as it requires running into migration entries. I did not yet check in detail yet if !hugetlb code requires similar care. This patch (of 2): There are two problematic cases when stumbling over a PTE marker in hugetlb_change_protection(): (1) We protect an uffd-wp PTE marker a second time using uffd-wp: we will end up in the ""!huge_pte_none(pte)"" case and mess up the PTE marker. (2) We unprotect a uffd-wp PTE marker: we will similarly end up in the ""!huge_pte_none(pte)"" case even though we cleared the PTE, because the ""pte"" variable is stale. We'll mess up the PTE marker. For example, if we later stumble over such a ""wrongly modified"" PTE marker, we'll treat it like a present PTE that maps some garbage page. This can, for example, be triggered by mapping a memfd backed by huge pages, registering uffd-wp, uffd-wp'ing an unmapped page and (a) uffd-wp'ing it a second time; or (b) uffd-unprotecting it; or (c) unregistering uffd-wp. Then, ff we trigger fallocate(FALLOC_FL_PUNCH_HOLE) on that file range, we will run into a VM_BUG_ON: [ 195.039560] page:00000000ba1f2987 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x0 [ 195.039565] flags: 0x7ffffc0001000(reserved|node=0|zone=0|lastcpupid=0x1fffff) [ 195.039568] raw: 0007ffffc0001000 ffffe742c0000008 ffffe742c0000008 0000000000000000 [ 195.039569] raw: 0000000000000000 0000000000000000 00000001ffffffff 0000000000000000 [ 195.039569] page dumped because: VM_BUG_ON_PAGE(compound && !PageHead(page)) [ 195.039573] ------------[ cut here ]------------ [ 195.039574] kernel BUG at mm/rmap.c:1346! [ 195.039579] invalid opcode: 0000 [#1] PREEMPT SMP NOPTI [ 195.039581] CPU: 7 PID: 4777 Comm: qemu-system-x86 Not tainted 6.0.12-200.fc36.x86_64 #1 [ 195.039583] Hardware name: LENOVO 20WNS1F81N/20WNS1F81N, BIOS N35ET50W (1.50 ) 09/15/2022 [ 195.039584] RIP: 0010:page_remove_rmap+0x45b/0x550 [ 195.039588] Code: [...] [ 195.039589] RSP: 0018:ffffbc03c3633ba8 EFLAGS: 00010292 [ 195.039591] RAX: 0000000000000040 RBX: ffffe742c0000000 RCX: 0000000000000000 [ 195.039592] RDX: 0000000000000002 RSI: ffffffff8e7aac1a RDI: 00000000ffffffff [ 195.039592] RBP: 0000000000000001 R08: 0000000000000000 R09: ffffbc03c3633a08 [ 195.039593] R10: 0000000000000003 R11: ffffffff8f146328 R12: ffff9b04c42754b0 [ 195.039594] R13: ffffffff8fcc6328 R14: ffffbc03c3633c80 R15: ffff9b0484ab9100 [ 195.039595] FS: 00007fc7aaf68640(0000) GS:ffff9b0bbf7c0000(0000) knlGS:0000000000000000 [ 195.039596] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 195.039597] CR2: 000055d402c49110 CR3: 0000000159392003 CR4: 0000000000772ee0 [ 195.039598] PKRU: 55555554 [ 195.039599] Call Trace: [ 195.039600] <TASK> [ 195.039602] __unmap_hugepage_range+0x33b/0x7d0 [ 195.039605] unmap_hugepage_range+0x55/0x70 [ 195.039608] hugetlb_vmdelete_list+0x77/0xa0 [ 195.039611] hugetlbfs_fallocate+0x410/0x550 [ 195.039612] ? _raw_spin_unlock_irqrestore+0x23/0x40 [ 195.039616] vfs_fallocate+0x12e/0x360 [ 195.039618] __x64_sys_fallocate+0x40/0x70 [ 195.039620] do_syscall_64+0x58/0x80 [ 195.039623] ? syscall_exit_to_user_mode+0x17/0x40 [ 195.039624] ? do_syscall_64+0x67/0x80 [ 195.039626] entry_SYSCALL_64_after_hwframe+0x63/0xcd [ 195.039628] RIP: 0033:0x7fc7b590651f [ 195.039653] Code: [...] [ 195.039654] RSP: 002b:00007fc7aaf66e70 EFLAGS: 00000293 ORIG_RAX: 000000000000011d [ 195.039655] RAX: ffffffffffffffda RBX: 0000558ef4b7f370 RCX: 00007fc7b590651f ---truncated---",,,"[{""url"":""https://git.kernel.org/stable/c/0e678153f5be7e6c8d28835f5a678618da4b7a9c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6062c992e912df1eedad52cf64efb3d48e8d35c5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49761,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-03-27T17:15:41.407,2025-04-01T15:40:43.063,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: btrfs: always report error in run_one_delayed_ref() Currently we have a btrfs_debug() for run_one_delayed_ref() failure, but if end users hit such problem, there will be no chance that btrfs_debug() is enabled. This can lead to very little useful info for debugging. This patch will: - Add extra info for error reporting Including: * logical bytenr * num_bytes * type * action * ref_mod - Replace the btrfs_debug() with btrfs_err() - Move the error reporting into run_one_delayed_ref() This is to avoid use-after-free, the @node can be freed in the caller. This error should only be triggered at most once. As if run_one_delayed_ref() failed, we trigger the error message, then causing the call chain to error out: btrfs_run_delayed_refs() `- btrfs_run_delayed_refs() `- btrfs_run_delayed_refs_for_head() `- run_one_delayed_ref() And we will abort the current transaction in btrfs_run_delayed_refs(). If we have to run delayed refs for the abort transaction, run_one_delayed_ref() will just cleanup the refs and do nothing, thus no new error messages would be output.","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.165"",""matchCriteriaId"":""7289B566-F15A-4087-ACC5-2366902846E7""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.90"",""matchCriteriaId"":""E995CDA5-7223-4FDB-BAD3-81B22C763A43""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.1.8"",""matchCriteriaId"":""A6AFE6C9-3F59-4711-B2CF-7D6682FF6BD0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""FF501633-2F44-4913-A8EE-B021929F49F6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.2:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""2BDA597B-CAC1-4DF0-86F0-42E142C654E9""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/18bd1c9c02e64a3567f90c83c2c8b855531c8098"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/39f501d68ec1ed5cd5c66ac6ec2a7131c517bb92"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/853ffa1511b058c79a4c9bb1407b3b20ce311792"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fdb4a70bb768d2a87890409597529ad81cb3de8a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""134c704f-9b21-4f2e-91b3-4a467353bcc0"",""type"":""Secondary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49762,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:15:58.933,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ntfs: check overflow when iterating ATTR_RECORDs Kernel iterates over ATTR_RECORDs in mft record in ntfs_attr_find(). Because the ATTR_RECORDs are next to each other, kernel can get the next ATTR_RECORD from end address of current ATTR_RECORD, through current ATTR_RECORD length field. The problem is that during iteration, when kernel calculates the end address of current ATTR_RECORD, kernel may trigger an integer overflow bug in executing `a = (ATTR_RECORD*)((u8*)a + le32_to_cpu(a->length))`. This may wrap, leading to a forever iteration on 32bit systems. This patch solves it by adding some checks on calculating end address of current ATTR_RECORD during iteration.",,,"[{""url"":""https://git.kernel.org/stable/c/45683723f6b53e39e8a4cec0894e61fd6ec71989"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5559eb5809353a83a40a1e4e7f066431c7b83020"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/63095f4f3af59322bea984a6ae44337439348fe0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/785b2af9654b8beac55644e36da0085c5d776361"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/86f36de14dce5802856bb7a5921d74439db00b64"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/957732a09c3828267c2819d31c425aa793dd475b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b612f924f296408d7d02fb4cd01218afd4ed7184"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b63ddb3ba61e2d3539f87e095c881e552bc45dab"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49763,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:15:59.047,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ntfs: fix use-after-free in ntfs_attr_find() Patch series ""ntfs: fix bugs about Attribute"", v2. This patchset fixes three bugs relative to Attribute in record: Patch 1 adds a sanity check to ensure that, attrs_offset field in first mft record loading from disk is within bounds. Patch 2 moves the ATTR_RECORD's bounds checking earlier, to avoid dereferencing ATTR_RECORD before checking this ATTR_RECORD is within bounds. Patch 3 adds an overflow checking to avoid possible forever loop in ntfs_attr_find(). Without patch 1 and patch 2, the kernel triggersa KASAN use-after-free detection as reported by Syzkaller. Although one of patch 1 or patch 2 can fix this, we still need both of them. Because patch 1 fixes the root cause, and patch 2 not only fixes the direct cause, but also fixes the potential out-of-bounds bug. This patch (of 3): Syzkaller reported use-after-free read as follows: ================================================================== BUG: KASAN: use-after-free in ntfs_attr_find+0xc02/0xce0 fs/ntfs/attrib.c:597 Read of size 2 at addr ffff88807e352009 by task syz-executor153/3607 [...] Call Trace: <TASK> __dump_stack lib/dump_stack.c:88 [inline] dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106 print_address_description mm/kasan/report.c:317 [inline] print_report.cold+0x2ba/0x719 mm/kasan/report.c:433 kasan_report+0xb1/0x1e0 mm/kasan/report.c:495 ntfs_attr_find+0xc02/0xce0 fs/ntfs/attrib.c:597 ntfs_attr_lookup+0x1056/0x2070 fs/ntfs/attrib.c:1193 ntfs_read_inode_mount+0x89a/0x2580 fs/ntfs/inode.c:1845 ntfs_fill_super+0x1799/0x9320 fs/ntfs/super.c:2854 mount_bdev+0x34d/0x410 fs/super.c:1400 legacy_get_tree+0x105/0x220 fs/fs_context.c:610 vfs_get_tree+0x89/0x2f0 fs/super.c:1530 do_new_mount fs/namespace.c:3040 [inline] path_mount+0x1326/0x1e20 fs/namespace.c:3370 do_mount fs/namespace.c:3383 [inline] __do_sys_mount fs/namespace.c:3591 [inline] __se_sys_mount fs/namespace.c:3568 [inline] __x64_sys_mount+0x27f/0x300 fs/namespace.c:3568 do_syscall_x64 arch/x86/entry/common.c:50 [inline] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80 entry_SYSCALL_64_after_hwframe+0x63/0xcd [...] </TASK> The buggy address belongs to the physical page: page:ffffea0001f8d400 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x7e350 head:ffffea0001f8d400 order:3 compound_mapcount:0 compound_pincount:0 flags: 0xfff00000010200(slab|head|node=0|zone=1|lastcpupid=0x7ff) raw: 00fff00000010200 0000000000000000 dead000000000122 ffff888011842140 raw: 0000000000000000 0000000000040004 00000001ffffffff 0000000000000000 page dumped because: kasan: bad access detected Memory state around the buggy address: ffff88807e351f00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc ffff88807e351f80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc >ffff88807e352000: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb ^ ffff88807e352080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb ffff88807e352100: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb ================================================================== Kernel will loads $MFT/$DATA's first mft record in ntfs_read_inode_mount(). Yet the problem is that after loading, kernel doesn't check whether attrs_offset field is a valid value. To be more specific, if attrs_offset field is larger than bytes_allocated field, then it may trigger the out-of-bounds read bug(reported as use-after-free bug) in ntfs_attr_find(), when kernel tries to access the corresponding mft record's attribute. This patch solves it by adding the sanity check between attrs_offset field and bytes_allocated field, after loading the first mft record.",,,"[{""url"":""https://git.kernel.org/stable/c/266bd5306286316758e6246ea0345133427b0f62"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4863f815463034f588a035cfd99cdca97a4f1069"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5330c423b86263ac7883fef0260b9e2229cb531e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/79f3ac7dcd12c05b7539239a4c6fa229a50d786c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b825bfbbaafbe8da2037e3a778ad660c59f9e054"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d0006d739738a658a9c29b438444259d9f71dfa0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d85a1bec8e8d552ab13163ca1874dcd82f3d1550"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fb2004bafd1932e08d21ca604ee5844f2b7f212d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49764,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:15:59.170,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: bpf: Prevent bpf program recursion for raw tracepoint probes We got report from sysbot [1] about warnings that were caused by bpf program attached to contention_begin raw tracepoint triggering the same tracepoint by using bpf_trace_printk helper that takes trace_printk_lock lock. Call Trace: <TASK> ? trace_event_raw_event_bpf_trace_printk+0x5f/0x90 bpf_trace_printk+0x2b/0xe0 bpf_prog_a9aec6167c091eef_prog+0x1f/0x24 bpf_trace_run2+0x26/0x90 native_queued_spin_lock_slowpath+0x1c6/0x2b0 _raw_spin_lock_irqsave+0x44/0x50 bpf_trace_printk+0x3f/0xe0 bpf_prog_a9aec6167c091eef_prog+0x1f/0x24 bpf_trace_run2+0x26/0x90 native_queued_spin_lock_slowpath+0x1c6/0x2b0 _raw_spin_lock_irqsave+0x44/0x50 bpf_trace_printk+0x3f/0xe0 bpf_prog_a9aec6167c091eef_prog+0x1f/0x24 bpf_trace_run2+0x26/0x90 native_queued_spin_lock_slowpath+0x1c6/0x2b0 _raw_spin_lock_irqsave+0x44/0x50 bpf_trace_printk+0x3f/0xe0 bpf_prog_a9aec6167c091eef_prog+0x1f/0x24 bpf_trace_run2+0x26/0x90 native_queued_spin_lock_slowpath+0x1c6/0x2b0 _raw_spin_lock_irqsave+0x44/0x50 __unfreeze_partials+0x5b/0x160 ... The can be reproduced by attaching bpf program as raw tracepoint on contention_begin tracepoint. The bpf prog calls bpf_trace_printk helper. Then by running perf bench the spin lock code is forced to take slow path and call contention_begin tracepoint. Fixing this by skipping execution of the bpf program if it's already running, Using bpf prog 'active' field, which is being currently used by trampoline programs for the same reason. Moving bpf_prog_inc_misses_counter to syscall.c because trampoline.c is compiled in just for CONFIG_BPF_JIT option. [1] https://lore.kernel.org/bpf/YxhFe3EwqchC%2FfYf@krava/T/#t",,,"[{""url"":""https://git.kernel.org/stable/c/05b24ff9b2cfabfcfd951daaa915a036ab53c9e1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2e5399879024fedd6cdc41f73fbf9bbe7208f899"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49765,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:15:59.277,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net/9p: use a dedicated spinlock for trans_fd Shamelessly copying the explanation from Tetsuo Handa's suggested patch[1] (slightly reworded): syzbot is reporting inconsistent lock state in p9_req_put()[2], for p9_tag_remove() from p9_req_put() from IRQ context is using spin_lock_irqsave() on ""struct p9_client""->lock but trans_fd (not from IRQ context) is using spin_lock(). Since the locks actually protect different things in client.c and in trans_fd.c, just replace trans_fd.c's lock by a new one specific to the transport (client.c's protect the idr for fid/tag allocations, while trans_fd.c's protects its own req list and request status field that acts as the transport's state machine)",,,"[{""url"":""https://git.kernel.org/stable/c/296ab4a813841ba1d5f40b03190fd1bd8f25aab0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/43bbadb7e4636dc02f6a283c2a39e6438e6173cd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/717b9b4f38703d7f5293059e3a242d16f76fa045"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49766,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:15:59.380,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: netlink: Bounds-check struct nlmsgerr creation In preparation for FORTIFY_SOURCE doing bounds-check on memcpy(), switch from __nlmsg_put to nlmsg_put(), and explain the bounds check for dealing with the memcpy() across a composite flexible array struct. Avoids this future run-time warning: memcpy: detected field-spanning write (size 32) of single field ""&errmsg->msg"" at net/netlink/af_netlink.c:2447 (size 16)",,,"[{""url"":""https://git.kernel.org/stable/c/710d21fdff9a98d621cd4e64167f3ef8af4e2fd1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/aff4eb16f589c3af322a2582044bca365381fcd6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49767,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:15:59.483,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: 9p/trans_fd: always use O_NONBLOCK read/write syzbot is reporting hung task at p9_fd_close() [1], for p9_mux_poll_stop() from p9_conn_destroy() from p9_fd_close() is failing to interrupt already started kernel_read() from p9_fd_read() from p9_read_work() and/or kernel_write() from p9_fd_write() from p9_write_work() requests. Since p9_socket_open() sets O_NONBLOCK flag, p9_mux_poll_stop() does not need to interrupt kernel_read()/kernel_write(). However, since p9_fd_open() does not set O_NONBLOCK flag, but pipe blocks unless signal is pending, p9_mux_poll_stop() needs to interrupt kernel_read()/kernel_write() when the file descriptor refers to a pipe. In other words, pipe file descriptor needs to be handled as if socket file descriptor. We somehow need to interrupt kernel_read()/kernel_write() on pipes. A minimal change, which this patch is doing, is to set O_NONBLOCK flag from p9_fd_open(), for O_NONBLOCK flag does not affect reading/writing of regular files. But this approach changes O_NONBLOCK flag on userspace- supplied file descriptors (which might break userspace programs), and O_NONBLOCK flag could be changed by userspace. It would be possible to set O_NONBLOCK flag every time p9_fd_read()/p9_fd_write() is invoked, but still remains small race window for clearing O_NONBLOCK flag. If we don't want to manipulate O_NONBLOCK flag, we might be able to surround kernel_read()/kernel_write() with set_thread_flag(TIF_SIGPENDING) and recalc_sigpending(). Since p9_read_work()/p9_write_work() works are processed by kernel threads which process global system_wq workqueue, signals could not be delivered from remote threads when p9_mux_poll_stop() from p9_conn_destroy() from p9_fd_close() is called. Therefore, calling set_thread_flag(TIF_SIGPENDING)/recalc_sigpending() every time would be needed if we count on signals for making kernel_read()/kernel_write() non-blocking. [Dominique: add comment at Christian's suggestion]",,,"[{""url"":""https://git.kernel.org/stable/c/0b5e6bd72b8171364616841603a70e4ba9837063"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/0e07032b4b4724b8ad1003698cb81083c1818999"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5af16182c5639349415118e9e9aecd8355f7a08b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7abf40f06a76c0dff42eada10597917e9776fbd4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9f8554615df668e4bf83294633ee9d232b28ce45"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a8e2fc8f7b41fa9d9ca5f624f4e4d34fce5b40a9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b1ad04da7fe4515e2ce2d5f2dcab3b5b6d45614b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ef575281b21e9a34dfae544a187c6aac2ae424a9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49768,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:15:59.597,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: 9p: trans_fd/p9_conn_cancel: drop client lock earlier syzbot reported a double-lock here and we no longer need this lock after requests have been moved off to local list: just drop the lock earlier.",,,"[{""url"":""https://git.kernel.org/stable/c/52f1c45dde9136f964d63a77d19826c8a74e2c7f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/612c977f5d481f551d03d83d0aef588845c1300c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/82825dbf393f7c7979d462f9609a15bde8092b3f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/96760723aae1b45f733f702abb4333137143909f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a4f1a01b2e81378fce9ca528d4d8a049e4b58fcd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e3031280fe4eaf61a09e60823331f81f321be8e1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f14858bc77c567e089965962877ee726ffad0556"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fec1406f5e7ab20b71f6d231792b0040e3300aaf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49769,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:15:59.710,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: gfs2: Check sb_bsize_shift after reading superblock Fuzzers like to scribble over sb_bsize_shift but in reality it's very unlikely that this field would be corrupted on its own. Nevertheless it should be checked to avoid the possibility of messy mount errors due to bad calculations. It's always a fixed value based on the block size so we can just check that it's the expected value. Tested with: mkfs.gfs2 -O -p lock_nolock /dev/vdb for i in 0 -1 64 65 32 33; do gfs2_edit -p sb field sb_bsize_shift $i /dev/vdb mount /dev/vdb /mnt/test && umount /mnt/test done Before this patch we get a withdraw after [ 76.413681] gfs2: fsid=loop0.0: fatal: invalid metadata block [ 76.413681] bh = 19 (type: exp=5, found=4) [ 76.413681] function = gfs2_meta_buffer, file = fs/gfs2/meta_io.c, line = 492 and with UBSAN configured we also get complaints like [ 76.373395] UBSAN: shift-out-of-bounds in fs/gfs2/ops_fstype.c:295:19 [ 76.373815] shift exponent 4294967287 is too large for 64-bit type 'long unsigned int' After the patch, these complaints don't appear, mount fails immediately and we get an explanation in dmesg.",,,"[{""url"":""https://git.kernel.org/stable/c/15c83fa0fd659dd9fbdc940a560b61236e876a80"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/16670534c7cff1acd918a6a5ec751b14e7436b76"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1ad197097343568066a8ffaa27ee7d0ae6d9f476"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/28275a7c84d21c55ab3282d897f284d8d527173c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5fa30be7ba81191b0a0c7239a89befc0c94286d5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/670f8ce56dd0632dc29a0322e188cc73ce3c6b92"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8b6534c9ae9dba5489703a19d8ba6c8f2cfa33c2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d6b1e8ea6f3418c3b461ad5a35cdc93c996b2c87"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49770,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:15:59.920,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ceph: avoid putting the realm twice when decoding snaps fails When decoding the snaps fails it maybe leaving the 'first_realm' and 'realm' pointing to the same snaprealm memory. And then it'll put it twice and could cause random use-after-free, BUG_ON, etc issues.",,,"[{""url"":""https://git.kernel.org/stable/c/044bc6d3c2c0e9090b0841e7b723875756534b45"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/274e4c79a3a2a24fba7cfe0e41113f1138785c37"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2f6e2de3a5289004650118b61f138fe7c28e1905"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/51884d153f7ec85e18d607b2467820a90e0f4359"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cb7495fe957526555782ce0723f79ce92a6db22e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fd879c83e87735ab8f00ef7755752cf0cbae24b2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49771,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:00.237,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: dm ioctl: fix misbehavior if list_versions races with module loading __list_versions will first estimate the required space using the ""dm_target_iterate(list_version_get_needed, &needed)"" call and then will fill the space using the ""dm_target_iterate(list_version_get_info, &iter_info)"" call. Each of these calls locks the targets using the ""down_read(&_lock)"" and ""up_read(&_lock)"" calls, however between the first and second ""dm_target_iterate"" there is no lock held and the target modules can be loaded at this point, so the second ""dm_target_iterate"" call may need more space than what was the first ""dm_target_iterate"" returned. The code tries to handle this overflow (see the beginning of list_version_get_info), however this handling is incorrect. The code sets ""param->data_size = param->data_start + needed"" and ""iter_info.end = (char *)vers+len"" - ""needed"" is the size returned by the first dm_target_iterate call; ""len"" is the size of the buffer allocated by userspace. ""len"" may be greater than ""needed""; in this case, the code will write up to ""len"" bytes into the buffer, however param->data_size is set to ""needed"", so it may write data past the param->data_size value. The ioctl interface copies only up to param->data_size into userspace, thus part of the result will be truncated. Fix this bug by setting ""iter_info.end = (char *)vers + needed;"" - this guarantees that the second ""dm_target_iterate"" call will write only up to the ""needed"" buffer and it will exit with ""DM_BUFFER_FULL_FLAG"" if it overflows the ""needed"" space - in this case, userspace will allocate a larger buffer and retry. Note that there is also a bug in list_version_get_needed - we need to add ""strlen(tt->name) + 1"" to the needed size, not ""strlen(tt->name)"".",,,"[{""url"":""https://git.kernel.org/stable/c/0c8d4112df329bf3dfbf27693f918c3b08676538"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3a1c35d72dc0b34d1e746ed705790c0f630aa427"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4fe1ec995483737f3d2a14c3fe1d8fe634972979"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5398b8e275bf81a2517b327d216c0f37ac9ac5ae"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6a818db0d5aecf80d4ba9e10ac153f60adc629ca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6ffce7a92ef5c68f7e5d6f4d722c2f96280c064b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b545c0e1e4094d4de2bdfe9a3823f9154b0c0005"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f59f5a269ca5e43c567aca7f1f52500a0186e9b7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49772,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:00.347,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ALSA: usb-audio: Drop snd_BUG_ON() from snd_usbmidi_output_open() snd_usbmidi_output_open() has a check of the NULL port with snd_BUG_ON(). snd_BUG_ON() was used as this shouldn't have happened, but in reality, the NULL port may be seen when the device gives an invalid endpoint setup at the descriptor, hence the driver skips the allocation. That is, the check itself is valid and snd_BUG_ON() should be dropped from there. Otherwise it's confusing as if it were a real bug, as recently syzbot stumbled on it.",,,"[{""url"":""https://git.kernel.org/stable/c/00f5f1bbf815a39e9eecb468d12ca55d3360eb10"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/02b94885b2fdf1808b1874e009bfb90753f8f4db"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/368a01e5064c13946d032ab1d65ba95020a39cc5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/872c9314769e89d8bda74ff3ac584756a45ee752"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a80369c8ca50bc885d14386087a834659ec54a54"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ad72c3c3f6eb81d2cb189ec71e888316adada5df"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c43991065f36f7628cd124e037b8750c4617a7a7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e7dc436aea80308a9268e6d2d85f910ff107de9b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49773,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:00.453,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/amd/display: Fix optc2_configure warning on dcn314 [Why] dcn314 uses optc2_configure_crc() that wraps optc1_configure_crc() + set additional registers not applicable to dcn314. It's not critical but when used leads to warning like: WARNING: drivers/gpu/drm/amd/amdgpu/../display/dc/dc_helper.c Call Trace: <TASK> generic_reg_set_ex+0x6d/0xe0 [amdgpu] optc2_configure_crc+0x60/0x80 [amdgpu] dc_stream_configure_crc+0x129/0x150 [amdgpu] amdgpu_dm_crtc_configure_crc_source+0x5d/0xe0 [amdgpu] [How] Use optc1_configure_crc() directly",,,"[{""url"":""https://git.kernel.org/stable/c/e7e4f77c991c9abf90924929a9d55f90b0bb78de"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f67ef5aa88e3db0a13ae3befab2ddf14ac00a91c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49774,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:00.557,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: KVM: x86/xen: Fix eventfd error handling in kvm_xen_eventfd_assign() Should not call eventfd_ctx_put() in case of error. [Introduce new goto target instead. - Paolo]",,,"[{""url"":""https://git.kernel.org/stable/c/7353633814f6e5b4899fb9ee1483709d6bb0e1cd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d76f46f47dfde220712d1420ee5dbc546c8fc674"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49775,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:00.650,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: tcp: cdg: allow tcp_cdg_release() to be called multiple times Apparently, mptcp is able to call tcp_disconnect() on an already disconnected flow. This is generally fine, unless current congestion control is CDG, because it might trigger a double-free [1] Instead of fixing MPTCP, and future bugs, we can make tcp_disconnect() more resilient. [1] BUG: KASAN: double-free in slab_free mm/slub.c:3539 [inline] BUG: KASAN: double-free in kfree+0xe2/0x580 mm/slub.c:4567 CPU: 0 PID: 3645 Comm: kworker/0:7 Not tainted 6.0.0-syzkaller-02734-g0326074ff465 #0 Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/22/2022 Workqueue: events mptcp_worker Call Trace: <TASK> __dump_stack lib/dump_stack.c:88 [inline] dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106 print_address_description mm/kasan/report.c:317 [inline] print_report.cold+0x2ba/0x719 mm/kasan/report.c:433 kasan_report_invalid_free+0x81/0x190 mm/kasan/report.c:462 ____kasan_slab_free+0x18b/0x1c0 mm/kasan/common.c:356 kasan_slab_free include/linux/kasan.h:200 [inline] slab_free_hook mm/slub.c:1759 [inline] slab_free_freelist_hook+0x8b/0x1c0 mm/slub.c:1785 slab_free mm/slub.c:3539 [inline] kfree+0xe2/0x580 mm/slub.c:4567 tcp_disconnect+0x980/0x1e20 net/ipv4/tcp.c:3145 __mptcp_close_ssk+0x5ca/0x7e0 net/mptcp/protocol.c:2327 mptcp_do_fastclose net/mptcp/protocol.c:2592 [inline] mptcp_worker+0x78c/0xff0 net/mptcp/protocol.c:2627 process_one_work+0x991/0x1610 kernel/workqueue.c:2289 worker_thread+0x665/0x1080 kernel/workqueue.c:2436 kthread+0x2e4/0x3a0 kernel/kthread.c:376 ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:306 </TASK> Allocated by task 3671: kasan_save_stack+0x1e/0x40 mm/kasan/common.c:38 kasan_set_track mm/kasan/common.c:45 [inline] set_alloc_info mm/kasan/common.c:437 [inline] ____kasan_kmalloc mm/kasan/common.c:516 [inline] ____kasan_kmalloc mm/kasan/common.c:475 [inline] __kasan_kmalloc+0xa9/0xd0 mm/kasan/common.c:525 kmalloc_array include/linux/slab.h:640 [inline] kcalloc include/linux/slab.h:671 [inline] tcp_cdg_init+0x10d/0x170 net/ipv4/tcp_cdg.c:380 tcp_init_congestion_control+0xab/0x550 net/ipv4/tcp_cong.c:193 tcp_reinit_congestion_control net/ipv4/tcp_cong.c:217 [inline] tcp_set_congestion_control+0x96c/0xaa0 net/ipv4/tcp_cong.c:391 do_tcp_setsockopt+0x505/0x2320 net/ipv4/tcp.c:3513 tcp_setsockopt+0xd4/0x100 net/ipv4/tcp.c:3801 mptcp_setsockopt+0x35f/0x2570 net/mptcp/sockopt.c:844 __sys_setsockopt+0x2d6/0x690 net/socket.c:2252 __do_sys_setsockopt net/socket.c:2263 [inline] __se_sys_setsockopt net/socket.c:2260 [inline] __x64_sys_setsockopt+0xba/0x150 net/socket.c:2260 do_syscall_x64 arch/x86/entry/common.c:50 [inline] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80 entry_SYSCALL_64_after_hwframe+0x63/0xcd Freed by task 16: kasan_save_stack+0x1e/0x40 mm/kasan/common.c:38 kasan_set_track+0x21/0x30 mm/kasan/common.c:45 kasan_set_free_info+0x20/0x30 mm/kasan/generic.c:370 ____kasan_slab_free mm/kasan/common.c:367 [inline] ____kasan_slab_free+0x166/0x1c0 mm/kasan/common.c:329 kasan_slab_free include/linux/kasan.h:200 [inline] slab_free_hook mm/slub.c:1759 [inline] slab_free_freelist_hook+0x8b/0x1c0 mm/slub.c:1785 slab_free mm/slub.c:3539 [inline] kfree+0xe2/0x580 mm/slub.c:4567 tcp_cleanup_congestion_control+0x70/0x120 net/ipv4/tcp_cong.c:226 tcp_v4_destroy_sock+0xdd/0x750 net/ipv4/tcp_ipv4.c:2254 tcp_v6_destroy_sock+0x11/0x20 net/ipv6/tcp_ipv6.c:1969 inet_csk_destroy_sock+0x196/0x440 net/ipv4/inet_connection_sock.c:1157 tcp_done+0x23b/0x340 net/ipv4/tcp.c:4649 tcp_rcv_state_process+0x40e7/0x4990 net/ipv4/tcp_input.c:6624 tcp_v6_do_rcv+0x3fc/0x13c0 net/ipv6/tcp_ipv6.c:1525 tcp_v6_rcv+0x2e8e/0x3830 net/ipv6/tcp_ipv6.c:1759 ip6_protocol_deliver_rcu+0x2db/0x1950 net/ipv6/ip6_input.c:439 ip6_input_finish+0x14c/0x2c0 net/ipv6/ip6_input.c:484 NF_HOOK include/linux/netfilter.h:302 [inline] NF_HOOK include/linux/netfilter.h:296 [inline] ip6_input+0x9c/0xd ---truncated---",,,"[{""url"":""https://git.kernel.org/stable/c/0b19171439016a8e4c97eafe543670ac86e2b8fe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1b639be27cbf428a5ca01dcf8b5d654194c956f8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/35309be06b6feded2ab2cafbc2bca8534c2fa41e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4026033907cc6186d86b48daa4a252c860db2536"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/72e560cb8c6f80fc2b4afc5d3634a32465e13a51"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/78be2ee0112409ae4e9ee9e326151e0559b3d239"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9e481d87349d2282f400ee1d010a169c99f766b8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b49026d9c86f35a4c5bfb8d7345c9c4379828c6b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49776,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:00.763,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: macvlan: enforce a consistent minimal mtu macvlan should enforce a minimal mtu of 68, even at link creation. This patch avoids the current behavior (which could lead to crashes in ipv6 stack if the link is brought up) $ ip link add macvlan1 link eno1 mtu 8 type macvlan # This should fail ! $ ip link sh dev macvlan1 5: macvlan1@eno1: <BROADCAST,MULTICAST> mtu 8 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/ether 02:47:6c:24:74:82 brd ff:ff:ff:ff:ff:ff $ ip link set macvlan1 mtu 67 Error: mtu less than device minimum. $ ip link set macvlan1 mtu 68 $ ip link set macvlan1 mtu 8 Error: mtu less than device minimum.",,,"[{""url"":""https://git.kernel.org/stable/c/2b055c719d8f94c15ec9b7659978133030c6a353"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/650137a7c0b2892df2e5b0bc112d7b09a78c93c8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a62aa84fe19eb24d083d600a074c009a0a66d4f3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b64085b00044bdf3cd1c9825e9ef5b2e0feae91a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d2fee7d121d189c6dc905b727d60e7043a6655bb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e41cbf98df22d08402e65174d147cbb187fe1a33"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e929ec98c0c3b10d9c07f3776df0c1a02d7a763e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49777,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:00.870,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: Input: i8042 - fix leaking of platform device on module removal Avoid resetting the module-wide i8042_platform_device pointer in i8042_probe() or i8042_remove(), so that the device can be properly destroyed by i8042_exit() on module unload.",,,"[{""url"":""https://git.kernel.org/stable/c/3f25add5ecf88de0f8ff2b27b6c0731a1f1b38ed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4f348b60c79671eee33c1389efe89109c93047da"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/81cd7e8489278d28794e7b272950c3e00c344e44"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/81df118e79b2136b5c016394f67a051dc508b7b6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a32cd7feb0127bf629a82686b6e2c128139a86e5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d5f7f6e63fed9c2ed09725d90059a28907e197e3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49778,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:00.980,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: arm64/mm: fix incorrect file_map_count for non-leaf pmd/pud The page table check trigger BUG_ON() unexpectedly when collapse hugepage: ------------[ cut here ]------------ kernel BUG at mm/page_table_check.c:82! Internal error: Oops - BUG: 00000000f2000800 [#1] SMP Dumping ftrace buffer: (ftrace buffer empty) Modules linked in: CPU: 6 PID: 68 Comm: khugepaged Not tainted 6.1.0-rc3+ #750 Hardware name: linux,dummy-virt (DT) pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--) pc : page_table_check_clear.isra.0+0x258/0x3f0 lr : page_table_check_clear.isra.0+0x240/0x3f0 [...] Call trace: page_table_check_clear.isra.0+0x258/0x3f0 __page_table_check_pmd_clear+0xbc/0x108 pmdp_collapse_flush+0xb0/0x160 collapse_huge_page+0xa08/0x1080 hpage_collapse_scan_pmd+0xf30/0x1590 khugepaged_scan_mm_slot.constprop.0+0x52c/0xac8 khugepaged+0x338/0x518 kthread+0x278/0x2f8 ret_from_fork+0x10/0x20 [...] Since pmd_user_accessible_page() doesn't check if a pmd is leaf, it decrease file_map_count for a non-leaf pmd comes from collapse_huge_page(). and so trigger BUG_ON() unexpectedly. Fix this problem by using pmd_leaf() insteal of pmd_present() in pmd_user_accessible_page(). Moreover, use pud_leaf() for pud_user_accessible_page() too.",,,"[{""url"":""https://git.kernel.org/stable/c/2d458046df634088611d44fd77f45465e833ef78"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5b47348fc0b18a78c96f8474cc90b7525ad1bbfe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49779,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:01.080,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: kprobes: Skip clearing aggrprobe's post_handler in kprobe-on-ftrace case In __unregister_kprobe_top(), if the currently unregistered probe has post_handler but other child probes of the aggrprobe do not have post_handler, the post_handler of the aggrprobe is cleared. If this is a ftrace-based probe, there is a problem. In later calls to disarm_kprobe(), we will use kprobe_ftrace_ops because post_handler is NULL. But we're armed with kprobe_ipmodify_ops. This triggers a WARN in __disarm_kprobe_ftrace() and may even cause use-after-free: Failed to disarm kprobe-ftrace at kernel_clone+0x0/0x3c0 (error -2) WARNING: CPU: 5 PID: 137 at kernel/kprobes.c:1135 __disarm_kprobe_ftrace.isra.21+0xcf/0xe0 Modules linked in: testKprobe_007(-) CPU: 5 PID: 137 Comm: rmmod Not tainted 6.1.0-rc4-dirty #18 [...] Call Trace: <TASK> __disable_kprobe+0xcd/0xe0 __unregister_kprobe_top+0x12/0x150 ? mutex_lock+0xe/0x30 unregister_kprobes.part.23+0x31/0xa0 unregister_kprobe+0x32/0x40 __x64_sys_delete_module+0x15e/0x260 ? do_user_addr_fault+0x2cd/0x6b0 do_syscall_64+0x3a/0x90 entry_SYSCALL_64_after_hwframe+0x63/0xcd [...] For the kprobe-on-ftrace case, we keep the post_handler setting to identify this aggrprobe armed with kprobe_ipmodify_ops. This way we can disarm it correctly.",,,"[{""url"":""https://git.kernel.org/stable/c/55788ebbe8b365b4375bd56b4ba7db79d393a370"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5dd7caf0bdc5d0bae7cf9776b4d739fb09bd5ebb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7b0007b28dd970176f2e297c06ae63eea2447127"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7d606ae1abcc3eab5408e42444d789dc7def51b8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c49cc2c059b503e962c2f13a806c105f9b757df4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49780,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:01.200,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: target: tcm_loop: Fix possible name leak in tcm_loop_setup_hba_bus() If device_register() fails in tcm_loop_setup_hba_bus(), the name allocated by dev_set_name() need be freed. As comment of device_register() says, it should use put_device() to give up the reference in the error path. So fix this by calling put_device(), then the name can be freed in kobject_cleanup(). The 'tl_hba' will be freed in tcm_loop_release_adapter(), so it don't need goto error label in this case.",,,"[{""url"":""https://git.kernel.org/stable/c/28f7ff5e7559d226e63c7c5de74eb075a83d8c53"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/41a6b8b527a5957fab41c3c05e25ad125268e2e9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/75205f1b47a88c3fac4f30bd7567e89b2887c7fd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a636772988bafab89278e7bb3420d8e8eacfe912"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bc68e428d4963af0201e92159629ab96948f0893"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dce0589a3faec9e2e543e97bca7e62592ec85585"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49781,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:01.307,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: perf/x86/amd: Fix crash due to race between amd_pmu_enable_all, perf NMI and throttling amd_pmu_enable_all() does: if (!test_bit(idx, cpuc->active_mask)) continue; amd_pmu_enable_event(cpuc->events[idx]); A perf NMI of another event can come between these two steps. Perf NMI handler internally disables and enables _all_ events, including the one which nmi-intercepted amd_pmu_enable_all() was in process of enabling. If that unintentionally enabled event has very low sampling period and causes immediate successive NMI, causing the event to be throttled, cpuc->events[idx] and cpuc->active_mask gets cleared by x86_pmu_stop(). This will result in amd_pmu_enable_event() getting called with event=NULL when amd_pmu_enable_all() resumes after handling the NMIs. This causes a kernel crash: BUG: kernel NULL pointer dereference, address: 0000000000000198 #PF: supervisor read access in kernel mode #PF: error_code(0x0000) - not-present page [...] Call Trace: <TASK> amd_pmu_enable_all+0x68/0xb0 ctx_resched+0xd9/0x150 event_function+0xb8/0x130 ? hrtimer_start_range_ns+0x141/0x4a0 ? perf_duration_warn+0x30/0x30 remote_function+0x4d/0x60 __flush_smp_call_function_queue+0xc4/0x500 flush_smp_call_function_queue+0x11d/0x1b0 do_idle+0x18f/0x2d0 cpu_startup_entry+0x19/0x20 start_secondary+0x121/0x160 secondary_startup_64_no_verify+0xe5/0xeb </TASK> amd_pmu_disable_all()/amd_pmu_enable_all() calls inside perf NMI handler were recently added as part of BRS enablement but I'm not sure whether we really need them. We can just disable BRS in the beginning and enable it back while returning from NMI. This will solve the issue by not enabling those events whose active_masks are set but are not yet enabled in hw pmu.",,,"[{""url"":""https://git.kernel.org/stable/c/baa014b9543c8e5e94f5d15b66abfe60750b8284"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fd5e454b856ed86b090336e269695d9908609b71"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49782,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:01.410,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: perf: Improve missing SIGTRAP checking To catch missing SIGTRAP we employ a WARN in __perf_event_overflow(), which fires if pending_sigtrap was already set: returning to user space without consuming pending_sigtrap, and then having the event fire again would re-enter the kernel and trigger the WARN. This, however, seemed to miss the case where some events not associated with progress in the user space task can fire and the interrupt handler runs before the IRQ work meant to consume pending_sigtrap (and generate the SIGTRAP). syzbot gifted us this stack trace: | WARNING: CPU: 0 PID: 3607 at kernel/events/core.c:9313 __perf_event_overflow | Modules linked in: | CPU: 0 PID: 3607 Comm: syz-executor100 Not tainted 6.1.0-rc2-syzkaller-00073-g88619e77b33d #0 | Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/11/2022 | RIP: 0010:__perf_event_overflow+0x498/0x540 kernel/events/core.c:9313 | <...> | Call Trace: | <TASK> | perf_swevent_hrtimer+0x34f/0x3c0 kernel/events/core.c:10729 | __run_hrtimer kernel/time/hrtimer.c:1685 [inline] | __hrtimer_run_queues+0x1c6/0xfb0 kernel/time/hrtimer.c:1749 | hrtimer_interrupt+0x31c/0x790 kernel/time/hrtimer.c:1811 | local_apic_timer_interrupt arch/x86/kernel/apic/apic.c:1096 [inline] | __sysvec_apic_timer_interrupt+0x17c/0x640 arch/x86/kernel/apic/apic.c:1113 | sysvec_apic_timer_interrupt+0x40/0xc0 arch/x86/kernel/apic/apic.c:1107 | asm_sysvec_apic_timer_interrupt+0x16/0x20 arch/x86/include/asm/idtentry.h:649 | <...> | </TASK> In this case, syzbot produced a program with event type PERF_TYPE_SOFTWARE and config PERF_COUNT_SW_CPU_CLOCK. The hrtimer manages to fire again before the IRQ work got a chance to run, all while never having returned to user space. Improve the WARN to check for real progress in user space: approximate this by storing a 32-bit hash of the current IP into pending_sigtrap, and if an event fires while pending_sigtrap still matches the previous IP, we assume no progress (false negatives are possible given we could return to user space and trigger again on the same IP).",,,"[{""url"":""https://git.kernel.org/stable/c/35c60b4e8ca76712dd03bafe2598e31578248916"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b09221f1b4944d2866d06ac35e59d7a6f8916c9f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bb88f9695460bec25aa30ba9072595025cf6c8af"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49783,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:01.510,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: x86/fpu: Drop fpregs lock before inheriting FPU permissions Mike Galbraith reported the following against an old fork of preempt-rt but the same issue also applies to the current preempt-rt tree. BUG: sleeping function called from invalid context at kernel/locking/spinlock_rt.c:46 in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 1, name: systemd preempt_count: 1, expected: 0 RCU nest depth: 0, expected: 0 Preemption disabled at: fpu_clone CPU: 6 PID: 1 Comm: systemd Tainted: G E (unreleased) Call Trace: <TASK> dump_stack_lvl ? fpu_clone __might_resched rt_spin_lock fpu_clone ? copy_thread ? copy_process ? shmem_alloc_inode ? kmem_cache_alloc ? kernel_clone ? __do_sys_clone ? do_syscall_64 ? __x64_sys_rt_sigprocmask ? syscall_exit_to_user_mode ? do_syscall_64 ? syscall_exit_to_user_mode ? do_syscall_64 ? syscall_exit_to_user_mode ? do_syscall_64 ? exc_page_fault ? entry_SYSCALL_64_after_hwframe </TASK> Mike says: The splat comes from fpu_inherit_perms() being called under fpregs_lock(), and us reaching the spin_lock_irq() therein due to fpu_state_size_dynamic() returning true despite static key __fpu_state_size_dynamic having never been enabled. Mike's assessment looks correct. fpregs_lock on a PREEMPT_RT kernel disables preemption so calling spin_lock_irq() in fpu_inherit_perms() is unsafe. This problem exists since commit 9e798e9aa14c (""x86/fpu: Prepare fpu_clone() for dynamically enabled features""). Even though the original bug report should not have enabled the paths at all, the bug still exists. fpregs_lock is necessary when editing the FPU registers or a task's FP state but it is not necessary for fpu_inherit_perms(). The only write of any FP state in fpu_inherit_perms() is for the new child which is not running yet and cannot context switch or be borrowed by a kernel thread yet. Hence, fpregs_lock is not protecting anything in the new child until clone() completes and can be dropped earlier. The siglock still needs to be acquired by fpu_inherit_perms() as the read of the parent's permissions has to be serialised. [ bp: Cleanup splat. ]",,,"[{""url"":""https://git.kernel.org/stable/c/36b038791e1e2baea892e9276588815fd14894b4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c6e8a7a1780af3da65e78a615f7d0874da6aabb0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49784,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:01.610,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: perf/x86/amd/uncore: Fix memory leak for events array When a CPU comes online, the per-CPU NB and LLC uncore contexts are freed but not the events array within the context structure. This causes a memory leak as identified by the kmemleak detector. [...] unreferenced object 0xffff8c5944b8e320 (size 32): comm ""swapper/0"", pid 1, jiffies 4294670387 (age 151.072s) hex dump (first 32 bytes): 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [<000000000759fb79>] amd_uncore_cpu_up_prepare+0xaf/0x230 [<00000000ddc9e126>] cpuhp_invoke_callback+0x2cf/0x470 [<0000000093e727d4>] cpuhp_issue_call+0x14d/0x170 [<0000000045464d54>] __cpuhp_setup_state_cpuslocked+0x11e/0x330 [<0000000069f67cbd>] __cpuhp_setup_state+0x6b/0x110 [<0000000015365e0f>] amd_uncore_init+0x260/0x321 [<00000000089152d2>] do_one_initcall+0x3f/0x1f0 [<000000002d0bd18d>] kernel_init_freeable+0x1ca/0x212 [<0000000030be8dde>] kernel_init+0x11/0x120 [<0000000059709e59>] ret_from_fork+0x22/0x30 unreferenced object 0xffff8c5944b8dd40 (size 64): comm ""swapper/0"", pid 1, jiffies 4294670387 (age 151.072s) hex dump (first 32 bytes): 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [<00000000306efe8b>] amd_uncore_cpu_up_prepare+0x183/0x230 [<00000000ddc9e126>] cpuhp_invoke_callback+0x2cf/0x470 [<0000000093e727d4>] cpuhp_issue_call+0x14d/0x170 [<0000000045464d54>] __cpuhp_setup_state_cpuslocked+0x11e/0x330 [<0000000069f67cbd>] __cpuhp_setup_state+0x6b/0x110 [<0000000015365e0f>] amd_uncore_init+0x260/0x321 [<00000000089152d2>] do_one_initcall+0x3f/0x1f0 [<000000002d0bd18d>] kernel_init_freeable+0x1ca/0x212 [<0000000030be8dde>] kernel_init+0x11/0x120 [<0000000059709e59>] ret_from_fork+0x22/0x30 [...] Fix the problem by freeing the events array before freeing the uncore context.",,,"[{""url"":""https://git.kernel.org/stable/c/bdfe34597139cfcecd47a2eb97fea44d77157491"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f75be9885d49e3717de962345c4572ddab52b178"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49785,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:01.713,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: x86/sgx: Add overflow check in sgx_validate_offset_length() sgx_validate_offset_length() function verifies ""offset"" and ""length"" arguments provided by userspace, but was missing an overflow check on their addition. Add it.",,,"[{""url"":""https://git.kernel.org/stable/c/3b1c10fb754b0b67165e3f055a4208e5ba26dc89"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5277e3d633a5d4157987f4aff068caa55e36db19"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f0861f49bd946ff94fce4f82509c45e167f63690"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49786,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:01.813,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: blk-cgroup: properly pin the parent in blkcg_css_online blkcg_css_online is supposed to pin the blkcg of the parent, but 397c9f46ee4d refactored things and along the way, changed it to pin the css instead. This results in extra pins, and we end up leaking blkcgs and cgroups.",,,"[{""url"":""https://git.kernel.org/stable/c/d118247e404d6338f7b90636a3c6b95a387ed163"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d7dbd43f4a828fa1d9a8614d5b0ac40aee6375fe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49787,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:01.920,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: mmc: sdhci-pci: Fix possible memory leak caused by missing pci_dev_put() pci_get_device() will increase the reference count for the returned pci_dev. We need to use pci_dev_put() to decrease the reference count before amd_probe() returns. There is no problem for the 'smbus_dev == NULL' branch because pci_dev_put() can also handle the NULL input parameter case.",,,"[{""url"":""https://git.kernel.org/stable/c/222cfa0118aa68687ace74aab8fdf77ce8fbd7e6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/27f712cd47d65e14cd52cc32a23d42aeef583d5d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/35bca18092685b488003509fef7055aa2d4f2ebc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4423866d31a06a810db22062ed13389416a66b22"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5dbd6378dbf96787d6dbcca44156c511ae085ea3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7570e5b5419ffd34b6dc45a88c51e113a9a187e3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a99a547658e5d451f01ed307426286716b6f01bf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49788,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:02.027,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: misc/vmw_vmci: fix an infoleak in vmci_host_do_receive_datagram() `struct vmci_event_qp` allocated by qp_notify_peer() contains padding, which may carry uninitialized data to the userspace, as observed by KMSAN: BUG: KMSAN: kernel-infoleak in instrument_copy_to_user ./include/linux/instrumented.h:121 instrument_copy_to_user ./include/linux/instrumented.h:121 _copy_to_user+0x5f/0xb0 lib/usercopy.c:33 copy_to_user ./include/linux/uaccess.h:169 vmci_host_do_receive_datagram drivers/misc/vmw_vmci/vmci_host.c:431 vmci_host_unlocked_ioctl+0x33d/0x43d0 drivers/misc/vmw_vmci/vmci_host.c:925 vfs_ioctl fs/ioctl.c:51 ... Uninit was stored to memory at: kmemdup+0x74/0xb0 mm/util.c:131 dg_dispatch_as_host drivers/misc/vmw_vmci/vmci_datagram.c:271 vmci_datagram_dispatch+0x4f8/0xfc0 drivers/misc/vmw_vmci/vmci_datagram.c:339 qp_notify_peer+0x19a/0x290 drivers/misc/vmw_vmci/vmci_queue_pair.c:1479 qp_broker_attach drivers/misc/vmw_vmci/vmci_queue_pair.c:1662 qp_broker_alloc+0x2977/0x2f30 drivers/misc/vmw_vmci/vmci_queue_pair.c:1750 vmci_qp_broker_alloc+0x96/0xd0 drivers/misc/vmw_vmci/vmci_queue_pair.c:1940 vmci_host_do_alloc_queuepair drivers/misc/vmw_vmci/vmci_host.c:488 vmci_host_unlocked_ioctl+0x24fd/0x43d0 drivers/misc/vmw_vmci/vmci_host.c:927 ... Local variable ev created at: qp_notify_peer+0x54/0x290 drivers/misc/vmw_vmci/vmci_queue_pair.c:1456 qp_broker_attach drivers/misc/vmw_vmci/vmci_queue_pair.c:1662 qp_broker_alloc+0x2977/0x2f30 drivers/misc/vmw_vmci/vmci_queue_pair.c:1750 Bytes 28-31 of 48 are uninitialized Memory access of size 48 starts at ffff888035155e00 Data copied to user address 0000000020000100 Use memset() to prevent the infoleaks. Also speculatively fix qp_notify_peer_local(), which may suffer from the same problem.",,,"[{""url"":""https://git.kernel.org/stable/c/5a275528025ae4bc7e2232866856dfebf84b2fad"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/62634b43d3c4e1bf62fd540196f7081bf0885c0a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/76c50d77b928a33e5290aaa9fdc10e88254ff8c7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7ccf7229b96fadc3a185d1391f814a604c7ef609"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8e2f33c598370bcf828bab4d667d1d38bcd3c57d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e5b0d06d9b10f5f43101bd6598b076c347f9295f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e7061dd1fef2dfb6458cd521aef27aa66f510d31"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f04586c2315cfd03d72ad0395705435e7ed07b1a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49789,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:02.143,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: zfcp: Fix double free of FSF request when qdio send fails We used to use the wrong type of integer in 'zfcp_fsf_req_send()' to cache the FSF request ID when sending a new FSF request. This is used in case the sending fails and we need to remove the request from our internal hash table again (so we don't keep an invalid reference and use it when we free the request again). In 'zfcp_fsf_req_send()' we used to cache the ID as 'int' (signed and 32 bit wide), but the rest of the zfcp code (and the firmware specification) handles the ID as 'unsigned long'/'u64' (unsigned and 64 bit wide [s390x ELF ABI]). For one this has the obvious problem that when the ID grows past 32 bit (this can happen reasonably fast) it is truncated to 32 bit when storing it in the cache variable and so doesn't match the original ID anymore. The second less obvious problem is that even when the original ID has not yet grown past 32 bit, as soon as the 32nd bit is set in the original ID (0x80000000 = 2'147'483'648) we will have a mismatch when we cast it back to 'unsigned long'. As the cached variable is of a signed type, the compiler will choose a sign-extending instruction to load the 32 bit variable into a 64 bit register (e.g.: 'lgf %r11,188(%r15)'). So once we pass the cached variable into 'zfcp_reqlist_find_rm()' to remove the request again all the leading zeros will be flipped to ones to extend the sign and won't match the original ID anymore (this has been observed in practice). If we can't successfully remove the request from the hash table again after 'zfcp_qdio_send()' fails (this happens regularly when zfcp cannot notify the adapter about new work because the adapter is already gone during e.g. a ChpID toggle) we will end up with a double free. We unconditionally free the request in the calling function when 'zfcp_fsf_req_send()' fails, but because the request is still in the hash table we end up with a stale memory reference, and once the zfcp adapter is either reset during recovery or shutdown we end up freeing the same memory twice. The resulting stack traces vary depending on the kernel and have no direct correlation to the place where the bug occurs. Here are three examples that have been seen in practice: list_del corruption. next->prev should be 00000001b9d13800, but was 00000000dead4ead. (next=00000001bd131a00) ------------[ cut here ]------------ kernel BUG at lib/list_debug.c:62! monitor event: 0040 ilc:2 [#1] PREEMPT SMP Modules linked in: ... CPU: 9 PID: 1617 Comm: zfcperp0.0.1740 Kdump: loaded Hardware name: ... Krnl PSW : 0704d00180000000 00000003cbeea1f8 (__list_del_entry_valid+0x98/0x140) R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:1 PM:0 RI:0 EA:3 Krnl GPRS: 00000000916d12f1 0000000080000000 000000000000006d 00000003cb665cd6 0000000000000001 0000000000000000 0000000000000000 00000000d28d21e8 00000000d3844000 00000380099efd28 00000001bd131a00 00000001b9d13800 00000000d3290100 0000000000000000 00000003cbeea1f4 00000380099efc70 Krnl Code: 00000003cbeea1e8: c020004f68a7 larl %r2,00000003cc8d7336 00000003cbeea1ee: c0e50027fd65 brasl %r14,00000003cc3e9cb8 #00000003cbeea1f4: af000000 mc 0,0 >00000003cbeea1f8: c02000920440 larl %r2,00000003cd12aa78 00000003cbeea1fe: c0e500289c25 brasl %r14,00000003cc3fda48 00000003cbeea204: b9040043 lgr %r4,%r3 00000003cbeea208: b9040051 lgr %r5,%r1 00000003cbeea20c: b9040032 lgr %r3,%r2 Call Trace: [<00000003cbeea1f8>] __list_del_entry_valid+0x98/0x140 ([<00000003cbeea1f4>] __list_del_entry_valid+0x94/0x140) [<000003ff7ff502fe>] zfcp_fsf_req_dismiss_all+0xde/0x150 [zfcp] [<000003ff7ff49cd0>] zfcp_erp_strategy_do_action+0x160/0x280 [zfcp] ---truncated---",,,"[{""url"":""https://git.kernel.org/stable/c/0954256e970ecf371b03a6c9af2cf91b9c4085ff"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/11edbdee4399401f533adda9bffe94567aa08b96"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1bf8ed585501bb2dd0b5f67c824eab45adfbdccd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/90a49a6b015fa439cd62e45121390284c125a91f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d2c7d8f58e9cde8ac8d1f75e9d66c2a813ffe0ab"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49790,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:02.260,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: Input: iforce - invert valid length check when fetching device IDs syzbot is reporting uninitialized value at iforce_init_device() [1], for commit 6ac0aec6b0a6 (""Input: iforce - allow callers supply data buffer when fetching device IDs"") is checking that valid length is shorter than bytes to read. Since iforce_get_id_packet() stores valid length when returning 0, the caller needs to check that valid length is longer than or equals to bytes to read.",,,"[{""url"":""https://git.kernel.org/stable/c/24cc679abbf31477d0cc6106ec83c2fbae6b3cdf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5d53797ce7ce8fb1d95a5bebc5efa9418c4217a3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6365569d62a75ddf53fb0c2936c16587a365984c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b8ebf250997c5fb253582f42bfe98673801ebebd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fdd57c20d4408cac3c3c535c120d244e083406c9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49791,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:02.367,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: io_uring: fix multishot accept request leaks Having REQ_F_POLLED set doesn't guarantee that the request is executed as a multishot from the polling path. Fortunately for us, if the code thinks it's multishot issue when it's not, it can only ask to skip completion so leaking the request. Use issue_flags to mark multipoll issues.",,,"[{""url"":""https://git.kernel.org/stable/c/0e4626de856ef8f25ecd9c716e76d4f95ce95639"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/91482864768a874c4290ef93b84a78f4f1dac51b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49792,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:02.460,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: iio: adc: mp2629: fix potential array out of bound access Add sentinel at end of maps to avoid potential array out of bound access in iio core.",,,"[{""url"":""https://git.kernel.org/stable/c/1678d4abb2dc2ca3b05b998a9d88616976e4f947"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/399b2105a2240e730b9f3880bd8f154247539aa7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ca1547ab15f48dc81624183ae17a2fd1bad06dfc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d95b85c5084ad70011988861ee864529eefa1da0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49793,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:02.563,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: iio: trigger: sysfs: fix possible memory leak in iio_sysfs_trig_init() dev_set_name() allocates memory for name, it need be freed when device_add() fails, call put_device() to give up the reference that hold in device_initialize(), so that it can be freed in kobject_cleanup() when the refcount hit to 0. Fault injection test can trigger this: unreferenced object 0xffff8e8340a7b4c0 (size 32): comm ""modprobe"", pid 243, jiffies 4294678145 (age 48.845s) hex dump (first 32 bytes): 69 69 6f 5f 73 79 73 66 73 5f 74 72 69 67 67 65 iio_sysfs_trigge 72 00 a7 40 83 8e ff ff 00 86 13 c4 f6 ee ff ff r..@............ backtrace: [<0000000074999de8>] __kmem_cache_alloc_node+0x1e9/0x360 [<00000000497fd30b>] __kmalloc_node_track_caller+0x44/0x1a0 [<000000003636c520>] kstrdup+0x2d/0x60 [<0000000032f84da2>] kobject_set_name_vargs+0x1e/0x90 [<0000000092efe493>] dev_set_name+0x4e/0x70",,,"[{""url"":""https://git.kernel.org/stable/c/0dd52e141afde089304de470148d311b05c14564"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2c4e65285bdea23fd36d2ff376006ac64db6f42e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5a39382aa5411d64b25a71516c2c7480aab13bb7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/656f670613662b6cc77aad14112db2803ad18fa8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8dddf2699da296c84205582aaead6b43dd7e8c4b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b47bb521961f027b4dcf8683337a7a1ba9e5ea1f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/efa17e90e1711bdb084e3954fa44afb6647331c0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f68c96821b61d2c71a35dbb8bf90c347fad624d9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49794,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:02.673,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: iio: adc: at91_adc: fix possible memory leak in at91_adc_allocate_trigger() If iio_trigger_register() returns error, it should call iio_trigger_free() to give up the reference that hold in iio_trigger_alloc(), so that it can call iio_trig_release() to free memory when the refcount hit to 0.",,,"[{""url"":""https://git.kernel.org/stable/c/1bf8c0aff8fb5c4edf3ba6728e6bedbd610d7f4b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2b29a7f2d52fb5281b30cf61c947d88bab18a29b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/65f20301607d07ee279b0804d11a05a62a6c1a1c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7b75515728b628a9a7540f201efdeb8ca7299385"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/85d2a8b287a89853c0dcfc5a97b5e9d36376fe37"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a0d98ae5a62a7bbad8fcf9fa22e0a1274197bbc4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c27a3b6ba23350708cf5ab9962337447b51eb76d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c3ce73f60599a483dca7becd4112508833a40ef9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49795,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:02.783,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: rethook: fix a potential memleak in rethook_alloc() In rethook_alloc(), the variable rh is not freed or passed out if handler is NULL, which could lead to a memleak, fix it. [Masami: Add ""rethook:"" tag to the title.] Acke-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>",,,"[{""url"":""https://git.kernel.org/stable/c/0a1ebe35cb3b7aa1f4b26b37e2a0b9ae68dc4ffb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cbc5d1f9a8cc40ba2bc6779b36d2ea1f65bc027c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49796,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:02.887,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: tracing: kprobe: Fix potential null-ptr-deref on trace_array in kprobe_event_gen_test_exit() When test_gen_kprobe_cmd() failed after kprobe_event_gen_cmd_end(), it will goto delete, which will call kprobe_event_delete() and release the corresponding resource. However, the trace_array in gen_kretprobe_test will point to the invalid resource. Set gen_kretprobe_test to NULL after called kprobe_event_delete() to prevent null-ptr-deref. BUG: kernel NULL pointer dereference, address: 0000000000000070 PGD 0 P4D 0 Oops: 0000 [#1] SMP PTI CPU: 0 PID: 246 Comm: modprobe Tainted: G W 6.1.0-rc1-00174-g9522dc5c87da-dirty #248 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.15.0-0-g2dd4b9b3f840-prebuilt.qemu.org 04/01/2014 RIP: 0010:__ftrace_set_clr_event_nolock+0x53/0x1b0 Code: e8 82 26 fc ff 49 8b 1e c7 44 24 0c ea ff ff ff 49 39 de 0f 84 3c 01 00 00 c7 44 24 18 00 00 00 00 e8 61 26 fc ff 48 8b 6b 10 <44> 8b 65 70 4c 8b 6d 18 41 f7 c4 00 02 00 00 75 2f RSP: 0018:ffffc9000159fe00 EFLAGS: 00010293 RAX: 0000000000000000 RBX: ffff88810971d268 RCX: 0000000000000000 RDX: ffff8881080be600 RSI: ffffffff811b48ff RDI: ffff88810971d058 RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000001 R10: ffffc9000159fe58 R11: 0000000000000001 R12: ffffffffa0001064 R13: ffffffffa000106c R14: ffff88810971d238 R15: 0000000000000000 FS: 00007f89eeff6540(0000) GS:ffff88813b600000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 0000000000000070 CR3: 000000010599e004 CR4: 0000000000330ef0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Call Trace: <TASK> __ftrace_set_clr_event+0x3e/0x60 trace_array_set_clr_event+0x35/0x50 ? 0xffffffffa0000000 kprobe_event_gen_test_exit+0xcd/0x10b [kprobe_event_gen_test] __x64_sys_delete_module+0x206/0x380 ? lockdep_hardirqs_on_prepare+0xd8/0x190 ? syscall_enter_from_user_mode+0x1c/0x50 do_syscall_64+0x3f/0x90 entry_SYSCALL_64_after_hwframe+0x63/0xcd RIP: 0033:0x7f89eeb061b7",,,"[{""url"":""https://git.kernel.org/stable/c/22ea4ca9631eb137e64e5ab899e9c89cb6670959"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/28a54854a95923b6266a9479ad660ca2cc0e1d5f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/510c12f93674ea0a1423b24f36c67357168a262a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e57daa750369fedbf678346aec724a43b9a51749"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49797,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:02.990,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: tracing: kprobe: Fix potential null-ptr-deref on trace_event_file in kprobe_event_gen_test_exit() When trace_get_event_file() failed, gen_kretprobe_test will be assigned as the error code. If module kprobe_event_gen_test is removed now, the null pointer dereference will happen in kprobe_event_gen_test_exit(). Check if gen_kprobe_test or gen_kretprobe_test is error code or NULL before dereference them. BUG: kernel NULL pointer dereference, address: 0000000000000012 PGD 0 P4D 0 Oops: 0000 [#1] SMP PTI CPU: 3 PID: 2210 Comm: modprobe Not tainted 6.1.0-rc1-00171-g2159299a3b74-dirty #217 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.15.0-0-g2dd4b9b3f840-prebuilt.qemu.org 04/01/2014 RIP: 0010:kprobe_event_gen_test_exit+0x1c/0xb5 [kprobe_event_gen_test] Code: Unable to access opcode bytes at 0xffffffff9ffffff2. RSP: 0018:ffffc900015bfeb8 EFLAGS: 00010246 RAX: ffffffffffffffea RBX: ffffffffa0002080 RCX: 0000000000000000 RDX: ffffffffa0001054 RSI: ffffffffa0001064 RDI: ffffffffdfc6349c RBP: ffffffffa0000000 R08: 0000000000000004 R09: 00000000001e95c0 R10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000800 R13: ffffffffa0002420 R14: 0000000000000000 R15: 0000000000000000 FS: 00007f56b75be540(0000) GS:ffff88813bc00000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: ffffffff9ffffff2 CR3: 000000010874a006 CR4: 0000000000330ee0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Call Trace: <TASK> __x64_sys_delete_module+0x206/0x380 ? lockdep_hardirqs_on_prepare+0xd8/0x190 ? syscall_enter_from_user_mode+0x1c/0x50 do_syscall_64+0x3f/0x90 entry_SYSCALL_64_after_hwframe+0x63/0xcd",,,"[{""url"":""https://git.kernel.org/stable/c/3a41c0f2a5c3bf72b4c4e9dd4b1025378201e332"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bb70fcae4115d24b7e8cee17a6da8b1943f546bb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e0d75267f59d7084e0468bd68beeb1bf9c71d7c0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fd0efd4f7bfe611a8339ba01bc2ac3c33e79159d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49798,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:03.097,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: tracing: Fix race where eprobes can be called before the event The flag that tells the event to call its triggers after reading the event is set for eprobes after the eprobe is enabled. This leads to a race where the eprobe may be triggered at the beginning of the event where the record information is NULL. The eprobe then dereferences the NULL record causing a NULL kernel pointer bug. Test for a NULL record to keep this from happening.",,,"[{""url"":""https://git.kernel.org/stable/c/7291dec4f2d17a2d3fd1f789fb41e58476539f21"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/73f5191467ffe3af82f27fe0ea6a8c2fac724d3f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/94eedf3dded5fb472ce97bfaf3ac1c6c29c35d26"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49799,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:03.200,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: tracing: Fix wild-memory-access in register_synth_event() In register_synth_event(), if set_synth_event_print_fmt() failed, then both trace_remove_event_call() and unregister_trace_event() will be called, which means the trace_event_call will call __unregister_trace_event() twice. As the result, the second unregister will causes the wild-memory-access. register_synth_event set_synth_event_print_fmt failed trace_remove_event_call event_remove if call->event.funcs then __unregister_trace_event (first call) unregister_trace_event __unregister_trace_event (second call) Fix the bug by avoiding to call the second __unregister_trace_event() by checking if the first one is called. general protection fault, probably for non-canonical address 0xfbd59c0000000024: 0000 [#1] SMP KASAN PTI KASAN: maybe wild-memory-access in range [0xdead000000000120-0xdead000000000127] CPU: 0 PID: 3807 Comm: modprobe Not tainted 6.1.0-rc1-00186-g76f33a7eedb4 #299 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.15.0-0-g2dd4b9b3f840-prebuilt.qemu.org 04/01/2014 RIP: 0010:unregister_trace_event+0x6e/0x280 Code: 00 fc ff df 4c 89 ea 48 c1 ea 03 80 3c 02 00 0f 85 0e 02 00 00 48 b8 00 00 00 00 00 fc ff df 4c 8b 63 08 4c 89 e2 48 c1 ea 03 <80> 3c 02 00 0f 85 e2 01 00 00 49 89 2c 24 48 85 ed 74 28 e8 7a 9b RSP: 0018:ffff88810413f370 EFLAGS: 00010a06 RAX: dffffc0000000000 RBX: ffff888105d050b0 RCX: 0000000000000000 RDX: 1bd5a00000000024 RSI: ffff888119e276e0 RDI: ffffffff835a8b20 RBP: dead000000000100 R08: 0000000000000000 R09: fffffbfff0913481 R10: ffffffff8489a407 R11: fffffbfff0913480 R12: dead000000000122 R13: ffff888105d050b8 R14: 0000000000000000 R15: ffff888105d05028 FS: 00007f7823e8d540(0000) GS:ffff888119e00000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00007f7823e7ebec CR3: 000000010a058002 CR4: 0000000000330ef0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Call Trace: <TASK> __create_synth_event+0x1e37/0x1eb0 create_or_delete_synth_event+0x110/0x250 synth_event_run_command+0x2f/0x110 test_gen_synth_cmd+0x170/0x2eb [synth_event_gen_test] synth_event_gen_test_init+0x76/0x9bc [synth_event_gen_test] do_one_initcall+0xdb/0x480 do_init_module+0x1cf/0x680 load_module+0x6a50/0x70a0 __do_sys_finit_module+0x12f/0x1c0 do_syscall_64+0x3f/0x90 entry_SYSCALL_64_after_hwframe+0x63/0xcd",,,"[{""url"":""https://git.kernel.org/stable/c/1b5f1c34d3f5a664a57a5a7557a50e4e3cc2505c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/315b149f08229a233d47532eb5da1707b28f764c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6517b97134f724d12f673f9fb4f456d75c7a905f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a5bfa53e5036b3e7a80be902dd3719a930accabd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49800,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:03.303,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: tracing: Fix memory leak in test_gen_synth_cmd() and test_empty_synth_event() test_gen_synth_cmd() only free buf in fail path, hence buf will leak when there is no failure. Add kfree(buf) to prevent the memleak. The same reason and solution in test_empty_synth_event(). unreferenced object 0xffff8881127de000 (size 2048): comm ""modprobe"", pid 247, jiffies 4294972316 (age 78.756s) hex dump (first 32 bytes): 20 67 65 6e 5f 73 79 6e 74 68 5f 74 65 73 74 20 gen_synth_test 20 70 69 64 5f 74 20 6e 65 78 74 5f 70 69 64 5f pid_t next_pid_ backtrace: [<000000004254801a>] kmalloc_trace+0x26/0x100 [<0000000039eb1cf5>] 0xffffffffa00083cd [<000000000e8c3bc8>] 0xffffffffa00086ba [<00000000c293d1ea>] do_one_initcall+0xdb/0x480 [<00000000aa189e6d>] do_init_module+0x1cf/0x680 [<00000000d513222b>] load_module+0x6a50/0x70a0 [<000000001fd4d529>] __do_sys_finit_module+0x12f/0x1c0 [<00000000b36c4c0f>] do_syscall_64+0x3f/0x90 [<00000000bbf20cf3>] entry_SYSCALL_64_after_hwframe+0x63/0xcd unreferenced object 0xffff8881127df000 (size 2048): comm ""modprobe"", pid 247, jiffies 4294972324 (age 78.728s) hex dump (first 32 bytes): 20 65 6d 70 74 79 5f 73 79 6e 74 68 5f 74 65 73 empty_synth_tes 74 20 20 70 69 64 5f 74 20 6e 65 78 74 5f 70 69 t pid_t next_pi backtrace: [<000000004254801a>] kmalloc_trace+0x26/0x100 [<00000000d4db9a3d>] 0xffffffffa0008071 [<00000000c31354a5>] 0xffffffffa00086ce [<00000000c293d1ea>] do_one_initcall+0xdb/0x480 [<00000000aa189e6d>] do_init_module+0x1cf/0x680 [<00000000d513222b>] load_module+0x6a50/0x70a0 [<000000001fd4d529>] __do_sys_finit_module+0x12f/0x1c0 [<00000000b36c4c0f>] do_syscall_64+0x3f/0x90 [<00000000bbf20cf3>] entry_SYSCALL_64_after_hwframe+0x63/0xcd",,,"[{""url"":""https://git.kernel.org/stable/c/07ba4f0603aba288580866394f2916dfe55823a2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/0e5baaa181a052d968701bb9c5b1d55847f00942"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/65ba7e7c241122ef0a9e61d1920f2ae9689aa796"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a4527fef9afe5c903c718d0cd24609fe9c754250"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49801,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:03.407,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: tracing: Fix memory leak in tracing_read_pipe() kmemleak reports this issue: unreferenced object 0xffff888105a18900 (size 128): comm ""test_progs"", pid 18933, jiffies 4336275356 (age 22801.766s) hex dump (first 32 bytes): 25 73 00 90 81 88 ff ff 26 05 00 00 42 01 58 04 %s......&...B.X. 03 00 00 00 02 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [<00000000560143a1>] __kmalloc_node_track_caller+0x4a/0x140 [<000000006af00822>] krealloc+0x8d/0xf0 [<00000000c309be6a>] trace_iter_expand_format+0x99/0x150 [<000000005a53bdb6>] trace_check_vprintf+0x1e0/0x11d0 [<0000000065629d9d>] trace_event_printf+0xb6/0xf0 [<000000009a690dc7>] trace_raw_output_bpf_trace_printk+0x89/0xc0 [<00000000d22db172>] print_trace_line+0x73c/0x1480 [<00000000cdba76ba>] tracing_read_pipe+0x45c/0x9f0 [<0000000015b58459>] vfs_read+0x17b/0x7c0 [<000000004aeee8ed>] ksys_read+0xed/0x1c0 [<0000000063d3d898>] do_syscall_64+0x3b/0x90 [<00000000a06dda7f>] entry_SYSCALL_64_after_hwframe+0x63/0xcd iter->fmt alloced in tracing_read_pipe() -> .. ->trace_iter_expand_format(), but not freed, to fix, add free in tracing_release_pipe()",,,"[{""url"":""https://git.kernel.org/stable/c/2c21ee020ce43d744ecd7f3e9bddfcaafef270ce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/649e72070cbbb8600eb823833e4748f5a0815116"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a7d3f8f33c113478737bc61bb32ec5f9a987da7d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49802,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:03.510,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ftrace: Fix null pointer dereference in ftrace_add_mod() The @ftrace_mod is allocated by kzalloc(), so both the members {prev,next} of @ftrace_mode->list are NULL, it's not a valid state to call list_del(). If kstrdup() for @ftrace_mod->{func|module} fails, it goes to @out_free tag and calls free_ftrace_mod() to destroy @ftrace_mod, then list_del() will write prev->next and next->prev, where null pointer dereference happens. BUG: kernel NULL pointer dereference, address: 0000000000000008 Oops: 0002 [#1] PREEMPT SMP NOPTI Call Trace: <TASK> ftrace_mod_callback+0x20d/0x220 ? do_filp_open+0xd9/0x140 ftrace_process_regex.isra.51+0xbf/0x130 ftrace_regex_write.isra.52.part.53+0x6e/0x90 vfs_write+0xee/0x3a0 ? __audit_filter_op+0xb1/0x100 ? auditd_test_task+0x38/0x50 ksys_write+0xa5/0xe0 do_syscall_64+0x3a/0x90 entry_SYSCALL_64_after_hwframe+0x63/0xcd Kernel panic - not syncing: Fatal exception So call INIT_LIST_HEAD() to initialize the list member to fix this issue.",,,"[{""url"":""https://git.kernel.org/stable/c/19ba6c8af9382c4c05dc6a0a79af3013b9a35cd0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1bea037a1abb23a6729bef36a2265a4565f5ea77"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/665b4c6648bf2b91f69b33817f4321cf4c3cafe9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6a14828caddad0d989495a72af678adf60992704"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6e50eb4b1807017f6c2d5089064256ce2de8aef1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b5bfc61f541d3f092b13dedcfe000d86eb8e133c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f715f31559b82e3f75ce047fa476de63d8107584"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49803,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:03.617,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: netdevsim: Fix memory leak of nsim_dev->fa_cookie kmemleak reports this issue: unreferenced object 0xffff8881bac872d0 (size 8): comm ""sh"", pid 58603, jiffies 4481524462 (age 68.065s) hex dump (first 8 bytes): 04 00 00 00 de ad be ef ........ backtrace: [<00000000c80b8577>] __kmalloc+0x49/0x150 [<000000005292b8c6>] nsim_dev_trap_fa_cookie_write+0xc1/0x210 [netdevsim] [<0000000093d78e77>] full_proxy_write+0xf3/0x180 [<000000005a662c16>] vfs_write+0x1c5/0xaf0 [<000000007aabf84a>] ksys_write+0xed/0x1c0 [<000000005f1d2e47>] do_syscall_64+0x3b/0x90 [<000000006001c6ec>] entry_SYSCALL_64_after_hwframe+0x63/0xcd The issue occurs in the following scenarios: nsim_dev_trap_fa_cookie_write() kmalloc() fa_cookie nsim_dev->fa_cookie = fa_cookie .. nsim_drv_remove() The fa_cookie allocked in nsim_dev_trap_fa_cookie_write() is not freed. To fix, add kfree(nsim_dev->fa_cookie) to nsim_drv_remove().",,,"[{""url"":""https://git.kernel.org/stable/c/064bc7312bd09a48798418663090be0c776183db"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/207edad5717e0a5709ce8467f0eff41c607835c9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49804,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:03.717,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: s390: avoid using global register for current_stack_pointer Commit 30de14b1884b (""s390: current_stack_pointer shouldn't be a function"") made current_stack_pointer a global register variable like on many other architectures. Unfortunately on s390 it uncovers old gcc bug which is fixed only since gcc-9.1 [gcc commit 3ad7fed1cc87 (""S/390: Fix PR89775. Stackpointer save/restore instructions removed"")] and backported to gcc-8.4 and later. Due to this bug gcc versions prior to 8.4 generate broken code which leads to stack corruptions. Current minimal gcc version required to build the kernel is declared as 5.1. It is not possible to fix all old gcc versions, so work around this problem by avoiding using global register variable for current_stack_pointer.",,,"[{""url"":""https://git.kernel.org/stable/c/a478952a8ac44e32316dc046a063a7dc34825aa6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e3c11025bcd2142a61abe5806b2f86a0e78118df"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49805,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:03.817,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: lan966x: Fix potential null-ptr-deref in lan966x_stats_init() lan966x_stats_init() calls create_singlethread_workqueue() and not checked the ret value, which may return NULL. And a null-ptr-deref may happen: lan966x_stats_init() create_singlethread_workqueue() # failed, lan966x->stats_queue is NULL queue_delayed_work() queue_delayed_work_on() __queue_delayed_work() # warning here, but continue __queue_work() # access wq->flags, null-ptr-deref Check the ret value and return -ENOMEM if it is NULL.",,,"[{""url"":""https://git.kernel.org/stable/c/4a43c1c6040e848e1344c7b16ac696b68fbc439c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ba86af3733aece88dbcee0dfebf7e2dcfefb2be4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49806,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:03.920,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: microchip: sparx5: Fix potential null-ptr-deref in sparx_stats_init() and sparx5_start() sparx_stats_init() calls create_singlethread_workqueue() and not checked the ret value, which may return NULL. And a null-ptr-deref may happen: sparx_stats_init() create_singlethread_workqueue() # failed, sparx5->stats_queue is NULL queue_delayed_work() queue_delayed_work_on() __queue_delayed_work() # warning here, but continue __queue_work() # access wq->flags, null-ptr-deref Check the ret value and return -ENOMEM if it is NULL. So as sparx5_start().",,,"[{""url"":""https://git.kernel.org/stable/c/456327e565dc49d18b2f595f39f47df8a36f1057"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/639f5d006e36bb303f525d9479448c412b720c39"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/80e590aeb132887102c3fa79d99b338f099dc952"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49807,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:04.030,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: nvmet: fix a memory leak in nvmet_auth_set_key When changing dhchap secrets we need to release the old secrets as well. kmemleak complaint: -- unreferenced object 0xffff8c7f44ed8180 (size 64): comm ""check"", pid 7304, jiffies 4295686133 (age 72034.246s) hex dump (first 32 bytes): 44 48 48 43 2d 31 3a 30 30 3a 4c 64 4c 4f 64 71 DHHC-1:00:LdLOdq 79 56 69 67 77 48 55 32 6d 5a 59 4c 7a 35 59 38 yVigwHU2mZYLz5Y8 backtrace: [<00000000b6fc5071>] kstrdup+0x2e/0x60 [<00000000f0f4633f>] 0xffffffffc0e07ee6 [<0000000053006c05>] 0xffffffffc0dff783 [<00000000419ae922>] configfs_write_iter+0xb1/0x120 [<000000008183c424>] vfs_write+0x2be/0x3c0 [<000000009005a2a5>] ksys_write+0x5f/0xe0 [<00000000cd495c89>] do_syscall_64+0x38/0x90 [<00000000f2a84ac5>] entry_SYSCALL_64_after_hwframe+0x63/0xcd",,,"[{""url"":""https://git.kernel.org/stable/c/0a52566279b4ee65ecd2503d7b7342851f84755c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/65710ea51d4a185592c7b14c9e33d0c4a364f074"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49808,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:04.130,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: dsa: don't leak tagger-owned storage on switch driver unbind In the initial commit dc452a471dba (""net: dsa: introduce tagger-owned storage for private and shared data""), we had a call to tag_ops->disconnect(dst) issued from dsa_tree_free(), which is called at tree teardown time. There were problems with connecting to a switch tree as a whole, so this got reworked to connecting to individual switches within the tree. In this process, tag_ops->disconnect(ds) was made to be called only from switch.c (cross-chip notifiers emitted as a result of dynamic tag proto changes), but the normal driver teardown code path wasn't replaced with anything. Solve this problem by adding a function that does the opposite of dsa_switch_setup_tag_protocol(), which is called from the equivalent spot in dsa_switch_teardown(). The positioning here also ensures that we won't have any use-after-free in tagging protocol (*rcv) ops, since the teardown sequence is as follows: dsa_tree_teardown -> dsa_tree_teardown_master -> dsa_master_teardown -> unsets master->dsa_ptr, making no further packets match the ETH_P_XDSA packet type handler -> dsa_tree_teardown_ports -> dsa_port_teardown -> dsa_slave_destroy -> unregisters DSA net devices, there is even a synchronize_net() in unregister_netdevice_many() -> dsa_tree_teardown_switches -> dsa_switch_teardown -> dsa_switch_teardown_tag_protocol -> finally frees the tagger-owned storage",,,"[{""url"":""https://git.kernel.org/stable/c/4e0c19fcb8b5323716140fa82b79aa9f60e60407"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5809fb03942dbac25144db5bebea84fa003ecaca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49809,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:04.237,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net/x25: Fix skb leak in x25_lapb_receive_frame() x25_lapb_receive_frame() using skb_copy() to get a private copy of skb, the new skb should be freed in the undersized/fragmented skb error handling path. Otherwise there is a memory leak.",,,"[{""url"":""https://git.kernel.org/stable/c/0ef17d966445358a55c5f4ccf2c73cca3e39192b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2929cceb2fcf0ded7182562e4888afafece82cce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2d675be16a461310d738d93f9f1a00da62055c5a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9f00da9c866d506998bf0a3f699ec900730472da"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c8baf1fc248b2e88642f094fea9509a9bf98c5bb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dfcfbe4f2e4b2c81cff4e79b48502d97fda73118"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e109b41870db995cae25dfaf0cc3922f9028b1a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fda0ba7c84b46d10947c687320804b9de149a921"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49810,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:04.347,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: netfs: Fix missing xas_retry() calls in xarray iteration netfslib has a number of places in which it performs iteration of an xarray whilst being under the RCU read lock. It *should* call xas_retry() as the first thing inside of the loop and do ""continue"" if it returns true in case the xarray walker passed out a special value indicating that the walk needs to be redone from the root[*]. Fix this by adding the missing retry checks. [*] I wonder if this should be done inside xas_find(), xas_next_node() and suchlike, but I'm told that's not an simple change to effect. This can cause an oops like that below. Note the faulting address - this is an internal value (|0x2) returned from xarray. BUG: kernel NULL pointer dereference, address: 0000000000000402 ... RIP: 0010:netfs_rreq_unlock+0xef/0x380 [netfs] ... Call Trace: netfs_rreq_assess+0xa6/0x240 [netfs] netfs_readpage+0x173/0x3b0 [netfs] ? init_wait_var_entry+0x50/0x50 filemap_read_page+0x33/0xf0 filemap_get_pages+0x2f2/0x3f0 filemap_read+0xaa/0x320 ? do_filp_open+0xb2/0x150 ? rmqueue+0x3be/0xe10 ceph_read_iter+0x1fe/0x680 [ceph] ? new_sync_read+0x115/0x1a0 new_sync_read+0x115/0x1a0 vfs_read+0xf3/0x180 ksys_read+0x5f/0xe0 do_syscall_64+0x38/0x90 entry_SYSCALL_64_after_hwframe+0x44/0xae Changes: ======== ver #2) - Changed an unsigned int to a size_t to reduce the likelihood of an overflow as per Willy's suggestion. - Added an additional patch to fix the maths.",,,"[{""url"":""https://git.kernel.org/stable/c/7e043a80b5dae5c2d2cf84031501de7827fd6c00"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b2cc07a76f1eb12de3b22caf5fdbf856a7bef16d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49811,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:04.450,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drbd: use after free in drbd_create_device() The drbd_destroy_connection() frees the ""connection"" so use the _safe() iterator to prevent a use after free.",,,"[{""url"":""https://git.kernel.org/stable/c/7d93417d596402ddd46bd76c721f205d09d0d025"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/813a8dd9c45fd46f5cbbfbedf0791afa7740ccf5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9ed51414aef6e59e832e2960f10766dce2d5b1a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a7a1598189228b5007369a9622ccdf587be0730f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bf47ca1b35fc1f55091ffaff5fbe41ea0c6f59a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c2a00b149836d60c222930bbea6b2139caf34d4f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fc1897f16ebcfd22364f2afcc27f53a740f3bc7a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49812,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:04.560,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: bridge: switchdev: Fix memory leaks when changing VLAN protocol The bridge driver can offload VLANs to the underlying hardware either via switchdev or the 8021q driver. When the former is used, the VLAN is marked in the bridge driver with the 'BR_VLFLAG_ADDED_BY_SWITCHDEV' private flag. To avoid the memory leaks mentioned in the cited commit, the bridge driver will try to delete a VLAN via the 8021q driver if the VLAN is not marked with the previously mentioned flag. When the VLAN protocol of the bridge changes, switchdev drivers are notified via the 'SWITCHDEV_ATTR_ID_BRIDGE_VLAN_PROTOCOL' attribute, but the 8021q driver is also called to add the existing VLANs with the new protocol and delete them with the old protocol. In case the VLANs were offloaded via switchdev, the above behavior is both redundant and buggy. Redundant because the VLANs are already programmed in hardware and drivers that support VLAN protocol change (currently only mlx5) change the protocol upon the switchdev attribute notification. Buggy because the 8021q driver is called despite these VLANs being marked with 'BR_VLFLAG_ADDED_BY_SWITCHDEV'. This leads to memory leaks [1] when the VLANs are deleted. Fix by not calling the 8021q driver for VLANs that were already programmed via switchdev. [1] unreferenced object 0xffff8881f6771200 (size 256): comm ""ip"", pid 446855, jiffies 4298238841 (age 55.240s) hex dump (first 32 bytes): 00 00 7f 0e 83 88 ff ff 00 00 00 00 00 00 00 00 ................ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [<00000000012819ac>] vlan_vid_add+0x437/0x750 [<00000000f2281fad>] __br_vlan_set_proto+0x289/0x920 [<000000000632b56f>] br_changelink+0x3d6/0x13f0 [<0000000089d25f04>] __rtnl_newlink+0x8ae/0x14c0 [<00000000f6276baf>] rtnl_newlink+0x5f/0x90 [<00000000746dc902>] rtnetlink_rcv_msg+0x336/0xa00 [<000000001c2241c0>] netlink_rcv_skb+0x11d/0x340 [<0000000010588814>] netlink_unicast+0x438/0x710 [<00000000e1a4cd5c>] netlink_sendmsg+0x788/0xc40 [<00000000e8992d4e>] sock_sendmsg+0xb0/0xe0 [<00000000621b8f91>] ____sys_sendmsg+0x4ff/0x6d0 [<000000000ea26996>] ___sys_sendmsg+0x12e/0x1b0 [<00000000684f7e25>] __sys_sendmsg+0xab/0x130 [<000000004538b104>] do_syscall_64+0x3d/0x90 [<0000000091ed9678>] entry_SYSCALL_64_after_hwframe+0x46/0xb0",,,"[{""url"":""https://git.kernel.org/stable/c/347f1793b573466424c550f2748ed837b6690fe7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9d45921ee4cb364910097e7d1b7558559c2f9fd2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f8926e2d2225eb7b7e11cd3fa266aaad9075b767"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fc16a2c81a3eb1cbba8775f5bdc67856df903a7c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49813,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:04.673,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: ena: Fix error handling in ena_init() The ena_init() won't destroy workqueue created by create_singlethread_workqueue() when pci_register_driver() failed. Call destroy_workqueue() when pci_register_driver() failed to prevent the resource leak.",,,"[{""url"":""https://git.kernel.org/stable/c/0e2369223b174d198ec42a3ec0a7f06c8727b968"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3f7b2ef8fe924e299bc339811ea3f1b9935c040f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6b23a4b252044e4fd23438930d452244818d7000"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d349e9be5a2c2d7588a2c4e4bfa0bb3dc1226769"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49814,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:04.787,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: kcm: close race conditions on sk_receive_queue sk->sk_receive_queue is protected by skb queue lock, but for KCM sockets its RX path takes mux->rx_lock to protect more than just skb queue. However, kcm_recvmsg() still only grabs the skb queue lock, so race conditions still exist. We can teach kcm_recvmsg() to grab mux->rx_lock too but this would introduce a potential performance regression as struct kcm_mux can be shared by multiple KCM sockets. So we have to enforce skb queue lock in requeue_rx_msgs() and handle skb peek case carefully in kcm_wait_data(). Fortunately, skb_recv_datagram() already handles it nicely and is widely used by other sockets, we can just switch to skb_recv_datagram() after getting rid of the unnecessary sock lock in kcm_recvmsg() and kcm_splice_read(). Side note: SOCK_DONE is not used by KCM sockets, so it is safe to get rid of this check too. I ran the original syzbot reproducer for 30 min without seeing any issue.",,,"[{""url"":""https://git.kernel.org/stable/c/22f6b5d47396b4287662668ee3f5c1f766cb4259"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4154b6afa2bd639214ff259d912faad984f7413a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5121197ecc5db58c07da95eb1ff82b98b121a221"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bf92e54597d842da127c59833b365d6faeeaf020"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ce57d6474ae999a3b2d442314087473a646a65c7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d9ad4de92e184b19bcae4da10dac0275abf83931"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f7b0e95071bb4be4b811af3f0bfc3e200eedeaa3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49815,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:04.893,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: erofs: fix missing xas_retry() in fscache mode The xarray iteration only holds the RCU read lock and thus may encounter XA_RETRY_ENTRY if there's process modifying the xarray concurrently. This will cause oops when referring to the invalid entry. Fix this by adding the missing xas_retry(), which will make the iteration wind back to the root node if XA_RETRY_ENTRY is encountered.",,,"[{""url"":""https://git.kernel.org/stable/c/37020bbb71d911431e16c2c940b97cf86ae4f2f6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dbc98fe99e17ed18f2f272d5fe880d844b1c68c3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49816,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:04.997,2025-05-02T06:15:47.253,Rejected,[],Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.,,,[],,,,,,,,,
CVE-2022-49817,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:05.103,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: mhi: Fix memory leak in mhi_net_dellink() MHI driver registers network device without setting the needs_free_netdev flag, and does NOT call free_netdev() when unregisters network device, which causes a memory leak. This patch calls free_netdev() to fix it since netdev_priv is used after unregister.",,,"[{""url"":""https://git.kernel.org/stable/c/25a270343b0f16e1f6e65f541a15975a35e238ff"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/88da008e5e2f9753726ea5a51ef2eb144e9de927"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f7c125bd79f50ec6094761090be81d02726ec6f4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49818,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:05.207,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: mISDN: fix misuse of put_device() in mISDN_register_device() We should not release reference by put_device() before calling device_initialize().",,,"[{""url"":""https://git.kernel.org/stable/c/2d25107e111a85c56f601a5470f1780ec054e6ac"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/44658d65f6b3118f595a1229d7eed74845a5e2ac"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/596230471da3415e92ae6b9d2a4e26f4a81cac5a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/709aa1f73d3e9e9ea16e2c4e44f2874c5d2c382c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/81db4f182744acd004f17d7cc52dde9ea53467e6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/83672c1b83d107b0d4fe0accf1bf64d8988398e6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/87b336aa158201dc30a318431e63e8c5b26c4156"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d40b35a7922f4df3767ad6fb8ef3dc86e31d7ba3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49819,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:05.317,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: octeon_ep: fix potential memory leak in octep_device_setup() When occur unsupported_dev and mbox init errors, it did not free oct->conf and iounmap() oct->mmio[i].hw_addr. That would trigger memory leak problem. Add kfree() for oct->conf and iounmap() for oct->mmio[i].hw_addr under unsupported_dev and mbox init errors to fix the problem.",,,"[{""url"":""https://git.kernel.org/stable/c/67b65a0db8a7fdad43159819f41335497a4bb04f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e4041be97b15302ebfffda8bbd45f3b2d096048f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49820,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:05.413,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: mctp i2c: don't count unused / invalid keys for flow release We're currently hitting the WARN_ON in mctp_i2c_flow_release: if (midev->release_count > midev->i2c_lock_count) { WARN_ONCE(1, ""release count overflow""); This may be hit if we expire a flow before sending the first packet it contains - as we will not be pairing the increment of release_count (performed on flow release) with the i2c lock operation (only performed on actual TX). To fix this, only release a flow if we've encountered it previously (ie, dev_flow_state does not indicate NEW), as we will mark the flow as ACTIVE at the same time as accounting for the i2c lock operation. We also need to add an INVALID flow state, to indicate when we've done the release.",,,"[{""url"":""https://git.kernel.org/stable/c/9cbd48d5fa14e4c65f8580de16686077f7cea02b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a5915a9a3ab4067ef8996a57738d156eabeb3a12"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49821,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:05.513,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: mISDN: fix possible memory leak in mISDN_dsp_element_register() Afer commit 1fa5ae857bb1 (""driver core: get rid of struct device's bus_id string array""), the name of device is allocated dynamically, use put_device() to give up the reference, so that the name can be freed in kobject_cleanup() when the refcount is 0. The 'entry' is going to be freed in mISDN_dsp_dev_release(), so the kfree() is removed. list_del() is called in mISDN_dsp_dev_release(), so it need be initialized.",,,"[{""url"":""https://git.kernel.org/stable/c/083a2c9ef82e184bdf0b9f9a1e5fc38d32afbb47"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/0f2c681900a01e3f23789bca26d88268c3d5b51d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/727ed7d28348c026c7ef4d852f3d0e5054d376e8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7a05e3929668c8cfef495c69752a9e91fac4878f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/98a2ac1ca8fd6eca6867726fe238d06e75eb1acd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b119bedbefb7dd9ed8bf8cb9f1056504250d610e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bbd53d05c4c892080ef3b617eff4f57903acecb9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d4b8394725079670be309f9a35ad88a8cbbaaefd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49822,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:05.623,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: cifs: Fix connections leak when tlink setup failed If the tlink setup failed, lost to put the connections, then the module refcnt leak since the cifsd kthread not exit. Also leak the fscache info, and for next mount with fsc, it will print the follow errors: CIFS: Cache volume key already in use (cifs,127.0.0.1:445,TEST) Let's check the result of tlink setup, and do some cleanup.",,,"[{""url"":""https://git.kernel.org/stable/c/0a087842d10b5daa123ee5291e386cdd78413705"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1dcdf5f5b2137185cbdd5385f29949ab3da4f00c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a9059e338fc000c0b87d8cf29e93c74fd703212e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49823,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:05.723,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ata: libata-transport: fix error handling in ata_tdev_add() In ata_tdev_add(), the return value of transport_add_device() is not checked. As a result, it causes null-ptr-deref while removing the module, because transport_remove_device() is called to remove the device that was not added. Unable to handle kernel NULL pointer dereference at virtual address 00000000000000d0 CPU: 13 PID: 13603 Comm: rmmod Kdump: loaded Tainted: G W 6.1.0-rc3+ #36 pstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--) pc : device_del+0x48/0x3a0 lr : device_del+0x44/0x3a0 Call trace: device_del+0x48/0x3a0 attribute_container_class_device_del+0x28/0x40 transport_remove_classdev+0x60/0x7c attribute_container_device_trigger+0x118/0x120 transport_remove_device+0x20/0x30 ata_tdev_delete+0x24/0x50 [libata] ata_tlink_delete+0x40/0xa0 [libata] ata_tport_delete+0x2c/0x60 [libata] ata_port_detach+0x148/0x1b0 [libata] ata_pci_remove_one+0x50/0x80 [libata] ahci_remove_one+0x4c/0x8c [ahci] Fix this by checking and handling return value of transport_add_device() in ata_tdev_add(). In the error path, device_del() is called to delete the device which was added earlier in this function, and ata_tdev_free() is called to free ata_dev.",,,"[{""url"":""https://git.kernel.org/stable/c/1ff36351309e3eadcff297480baf4785e726de9b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ef2ac07ab83163b9a53f45da20e14302591ad9cc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f23058dc2398db1d8faca9a2b1ce30b85cdd8b22"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f54331962883f4fc4bf5e487e6e7cf07c4567fef"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49824,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:05.830,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ata: libata-transport: fix error handling in ata_tlink_add() In ata_tlink_add(), the return value of transport_add_device() is not checked. As a result, it causes null-ptr-deref while removing the module, because transport_remove_device() is called to remove the device that was not added. Unable to handle kernel NULL pointer dereference at virtual address 00000000000000d0 CPU: 33 PID: 13850 Comm: rmmod Kdump: loaded Tainted: G W 6.1.0-rc3+ #12 pstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--) pc : device_del+0x48/0x39c lr : device_del+0x44/0x39c Call trace: device_del+0x48/0x39c attribute_container_class_device_del+0x28/0x40 transport_remove_classdev+0x60/0x7c attribute_container_device_trigger+0x118/0x120 transport_remove_device+0x20/0x30 ata_tlink_delete+0x88/0xb0 [libata] ata_tport_delete+0x2c/0x60 [libata] ata_port_detach+0x148/0x1b0 [libata] ata_pci_remove_one+0x50/0x80 [libata] ahci_remove_one+0x4c/0x8c [ahci] Fix this by checking and handling return value of transport_add_device() in ata_tlink_add().",,,"[{""url"":""https://git.kernel.org/stable/c/67b219314628b90b3a314528e177335b0cd5c70b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7377a14598f6b04446c54bc4a50cd249470d6c6f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cf0816f6322c5c37ee52655f928e91ecf32da103"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d5234480ca822bdcf03fe4d6a590ddcb854558f7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49825,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:05.937,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ata: libata-transport: fix error handling in ata_tport_add() In ata_tport_add(), the return value of transport_add_device() is not checked. As a result, it causes null-ptr-deref while removing the module, because transport_remove_device() is called to remove the device that was not added. Unable to handle kernel NULL pointer dereference at virtual address 00000000000000d0 CPU: 12 PID: 13605 Comm: rmmod Kdump: loaded Tainted: G W 6.1.0-rc3+ #8 pstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--) pc : device_del+0x48/0x39c lr : device_del+0x44/0x39c Call trace: device_del+0x48/0x39c attribute_container_class_device_del+0x28/0x40 transport_remove_classdev+0x60/0x7c attribute_container_device_trigger+0x118/0x120 transport_remove_device+0x20/0x30 ata_tport_delete+0x34/0x60 [libata] ata_port_detach+0x148/0x1b0 [libata] ata_pci_remove_one+0x50/0x80 [libata] ahci_remove_one+0x4c/0x8c [ahci] Fix this by checking and handling return value of transport_add_device() in ata_tport_add().",,,"[{""url"":""https://git.kernel.org/stable/c/3613dbe3909dcc637fe6be00e4dc43b4aa0470ee"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/52d9bb0adae9359711a0c5271430afd3754069e7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b5362dc1634d8b8d5f30920f33ac11a3276b7ed9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e7bb1b7a7bf26f6b7372b7b683daece4a42fda02"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49826,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:06.043,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ata: libata-transport: fix double ata_host_put() in ata_tport_add() In the error path in ata_tport_add(), when calling put_device(), ata_tport_release() is called, it will put the refcount of 'ap->host'. And then ata_host_put() is called again, the refcount is decreased to 0, ata_host_release() is called, all ports are freed and set to null. When unbinding the device after failure, ata_host_stop() is called to release the resources, it leads a null-ptr-deref(), because all the ports all freed and null. Unable to handle kernel NULL pointer dereference at virtual address 0000000000000008 CPU: 7 PID: 18671 Comm: modprobe Kdump: loaded Tainted: G E 6.1.0-rc3+ #8 pstate: 80400009 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--) pc : ata_host_stop+0x3c/0x84 [libata] lr : release_nodes+0x64/0xd0 Call trace: ata_host_stop+0x3c/0x84 [libata] release_nodes+0x64/0xd0 devres_release_all+0xbc/0x1b0 device_unbind_cleanup+0x20/0x70 really_probe+0x158/0x320 __driver_probe_device+0x84/0x120 driver_probe_device+0x44/0x120 __driver_attach+0xb4/0x220 bus_for_each_dev+0x78/0xdc driver_attach+0x2c/0x40 bus_add_driver+0x184/0x240 driver_register+0x80/0x13c __pci_register_driver+0x4c/0x60 ahci_pci_driver_init+0x30/0x1000 [ahci] Fix this by removing redundant ata_host_put() in the error path.",,,"[{""url"":""https://git.kernel.org/stable/c/30e12e2be27ac6c4be2af4163c70db381364706f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/377ff82c33c0cb74562a353361b64b33c09562cf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/865a6da40ba092c18292ae5f6194756131293745"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8c76310740807ade5ecdab5888f70ecb6d35732e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ac471468f7c16cda2525909946ca13ddbcd14000"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bec9ded5404cb14e5f5470103d0973a2ff83d6a5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49827,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:06.150,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm: Fix potential null-ptr-deref in drm_vblank_destroy_worker() drm_vblank_init() call drmm_add_action_or_reset() with drm_vblank_init_release() as action. If __drmm_add_action() failed, will directly call drm_vblank_init_release() with the vblank whose worker is NULL. As the resule, a null-ptr-deref will happen in kthread_destroy_worker(). Add the NULL check before calling drm_vblank_destroy_worker(). BUG: null-ptr-deref KASAN: null-ptr-deref in range [0x0000000000000068-0x000000000000006f] CPU: 5 PID: 961 Comm: modprobe Not tainted 6.0.0-11331-gd465bff130bf-dirty RIP: 0010:kthread_destroy_worker+0x25/0xb0 Call Trace: <TASK> drm_vblank_init_release+0x124/0x220 [drm] ? drm_crtc_vblank_restore+0x8b0/0x8b0 [drm] __drmm_add_action_or_reset+0x41/0x50 [drm] drm_vblank_init+0x282/0x310 [drm] vkms_init+0x35f/0x1000 [vkms] ? 0xffffffffc4508000 ? lock_is_held_type+0xd7/0x130 ? __kmem_cache_alloc_node+0x1c2/0x2b0 ? lock_is_held_type+0xd7/0x130 ? 0xffffffffc4508000 do_one_initcall+0xd0/0x4f0 ... do_syscall_64+0x35/0x80 entry_SYSCALL_64_after_hwframe+0x46/0xb0",,,"[{""url"":""https://git.kernel.org/stable/c/1d160dfb3fdf11ba9447e862c548447f91f4e74a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3acd2016421b2e628acad65495d15493bf7a3bc3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4979524f5a2a8210e87fde2f642b0dc060860821"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e884a6c2d49a6c12761e5bed851e9fe93bd923a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49828,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:06.260,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: hugetlbfs: don't delete error page from pagecache This change is very similar to the change that was made for shmem [1], and it solves the same problem but for HugeTLBFS instead. Currently, when poison is found in a HugeTLB page, the page is removed from the page cache. That means that attempting to map or read that hugepage in the future will result in a new hugepage being allocated instead of notifying the user that the page was poisoned. As [1] states, this is effectively memory corruption. The fix is to leave the page in the page cache. If the user attempts to use a poisoned HugeTLB page with a syscall, the syscall will fail with EIO, the same error code that shmem uses. For attempts to map the page, the thread will get a BUS_MCEERR_AR SIGBUS. [1]: commit a76054266661 (""mm: shmem: don't truncate page if memory failure happens"")",,,"[{""url"":""https://git.kernel.org/stable/c/30571f28bb35c826219971c63bcf60d2517112ed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8625147cafaa9ba74713d682f5185eb62cb2aedb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ec667443b2dbc6cdbbac4073e51a17733158ec6a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49829,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:06.373,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/scheduler: fix fence ref counting We leaked dependency fences when processes were beeing killed. Additional to that grab a reference to the last scheduled fence.",,,"[{""url"":""https://git.kernel.org/stable/c/b3af84383e7abdc5e63435817bb73a268e7c3637"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e5f4b38362df93594cb426b04979d8834122f159"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49830,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:06.470,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/drv: Fix potential memory leak in drm_dev_init() drm_dev_init() will add drm_dev_init_release() as a callback. When drmm_add_action() failed, the release function won't be added. As the result, the ref cnt added by device_get() in drm_dev_init() won't be put by drm_dev_init_release(), which leads to the memleak. Use drmm_add_action_or_reset() instead of drmm_add_action() to prevent memleak. unreferenced object 0xffff88810bc0c800 (size 2048): comm ""modprobe"", pid 8322, jiffies 4305809845 (age 15.292s) hex dump (first 32 bytes): e8 cc c0 0b 81 88 ff ff ff ff ff ff 00 00 00 00 ................ 20 24 3c 0c 81 88 ff ff 18 c8 c0 0b 81 88 ff ff $<............. backtrace: [<000000007251f72d>] __kmalloc+0x4b/0x1c0 [<0000000045f21f26>] platform_device_alloc+0x2d/0xe0 [<000000004452a479>] platform_device_register_full+0x24/0x1c0 [<0000000089f4ea61>] 0xffffffffa0736051 [<00000000235b2441>] do_one_initcall+0x7a/0x380 [<0000000001a4a177>] do_init_module+0x5c/0x230 [<000000002bf8a8e2>] load_module+0x227d/0x2420 [<00000000637d6d0a>] __do_sys_finit_module+0xd5/0x140 [<00000000c99fc324>] do_syscall_64+0x3f/0x90 [<000000004d85aa77>] entry_SYSCALL_64_after_hwframe+0x63/0xcd",,,"[{""url"":""https://git.kernel.org/stable/c/07e56de8766fe5be67252596244b84ac0ec0de91"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bd8d1335e6e70a396094ef98913b513140c0b86b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c47a823ea186263ab69cfb665327b7f72cb5e779"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ff963634f7b2e0dc011349abb3fb81a0d074f443"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49831,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:06.573,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: btrfs: zoned: initialize device's zone info for seeding When performing seeding on a zoned filesystem it is necessary to initialize each zoned device's btrfs_zoned_device_info structure, otherwise mounting the filesystem will cause a NULL pointer dereference. This was uncovered by fstests' testcase btrfs/163.",,,"[{""url"":""https://git.kernel.org/stable/c/544f38a738343d7e75f104e5e9d1ade58d8b71bd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/91c38504e589dadbcde47b1cacdfc5b684154d44"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a8d1b1647bf8244a5f270538e9e636e2657fffa3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49832,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:06.673,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: pinctrl: devicetree: fix null pointer dereferencing in pinctrl_dt_to_map Here is the BUG report by KASAN about null pointer dereference: BUG: KASAN: null-ptr-deref in strcmp+0x2e/0x50 Read of size 1 at addr 0000000000000000 by task python3/2640 Call Trace: strcmp __of_find_property of_find_property pinctrl_dt_to_map kasprintf() would return NULL pointer when kmalloc() fail to allocate. So directly return ENOMEM, if kasprintf() return NULL pointer.",,,"[{""url"":""https://git.kernel.org/stable/c/040f726fecd88121f3b95e70369785ad452dddf9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5834a3a98cd266ad35a229923c0adbd0addc8d68"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/777430aa4ddccaa5accec6db90ffc1d47f00d471"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/91d5c5060ee24fe8da88cd585bb43b843d2f0dce"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/97e5b508e96176f1a73888ed89df396d7041bfcb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a988dcd3dd9e691c5ccc3324b209688f3b5453e9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/aaf552c5d53abe4659176e099575fe870d2e4768"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b4d9f55cd38435358bc16d580612bc0d798d7b4c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49833,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:06.780,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: btrfs: zoned: clone zoned device info when cloning a device When cloning a btrfs_device, we're not cloning the associated btrfs_zoned_device_info structure of the device in case of a zoned filesystem. Later on this leads to a NULL pointer dereference when accessing the device's zone_info for instance when setting a zone as active. This was uncovered by fstests' testcase btrfs/161.",,,"[{""url"":""https://git.kernel.org/stable/c/21e61ec6d0bb786818490e926aa9aeb4de95ad0d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ad88cabcec942c033f980cd1e28d56ecdaf5f3b8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49834,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:06.873,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: nilfs2: fix use-after-free bug of ns_writer on remount If a nilfs2 filesystem is downgraded to read-only due to metadata corruption on disk and is remounted read/write, or if emergency read-only remount is performed, detaching a log writer and synchronizing the filesystem can be done at the same time. In these cases, use-after-free of the log writer (hereinafter nilfs->ns_writer) can happen as shown in the scenario below: Task1 Task2 -------------------------------- ------------------------------ nilfs_construct_segment nilfs_segctor_sync init_wait init_waitqueue_entry add_wait_queue schedule nilfs_remount (R/W remount case) nilfs_attach_log_writer nilfs_detach_log_writer nilfs_segctor_destroy kfree finish_wait _raw_spin_lock_irqsave __raw_spin_lock_irqsave do_raw_spin_lock debug_spin_lock_before <-- use-after-free While Task1 is sleeping, nilfs->ns_writer is freed by Task2. After Task1 waked up, Task1 accesses nilfs->ns_writer which is already freed. This scenario diagram is based on the Shigeru Yoshida's post [1]. This patch fixes the issue by not detaching nilfs->ns_writer on remount so that this UAF race doesn't happen. Along with this change, this patch also inserts a few necessary read-only checks with superblock instance where only the ns_writer pointer was used to check if the filesystem is read-only.",,,"[{""url"":""https://git.kernel.org/stable/c/39a3ed68270b079c6b874d4e4727a512b9b4882c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4feedde5486c07ea79787839153a71ca71329c7d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8cccf05fe857a18ee26e20d11a8455a73ffd4efd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9b162e81045266a2d5b44df9dffdf05c54de9cca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/afbd1188382a75f6cfe22c0b68533f7f9664f182"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b152300d5a1ba4258dacf9916bff20e6a8c7603b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b2fbf10040216ef5ee270773755fc2f5da65b749"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b4736ab5542112fe0a40f140a0a0b072954f34da"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49835,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:06.980,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ALSA: hda: fix potential memleak in 'add_widget_node' As 'kobject_add' may allocated memory for 'kobject->name' when return error. And in this function, if call 'kobject_add' failed didn't free kobject. So call 'kobject_put' to recycling resources.",,,"[{""url"":""https://git.kernel.org/stable/c/02dea987ec1cac712c78e75d224ceb9bb73519ed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3a79f9568de08657fcdbc41d6fc4c0ca145a7a2b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/455d99bd6baf19688048b6d42d9fa74eae27f93b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7140d7aaf93da6a665b454f91bb4dc6b1de218bd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/90b7d055e2b5f39429f9a9e3815b48a48530ef28"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9a5523f72bd2b0d66eef3d58810c6eb7b5ffc143"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b688a3ec235222d9a84e43a48a6f31acb95baf2d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bb0ac8d5e541224f599bc8e8f31a313faa4bf7b7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49836,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:07.087,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: siox: fix possible memory leak in siox_device_add() If device_register() returns error in siox_device_add(), the name allocated by dev_set_name() need be freed. As comment of device_register() says, it should use put_device() to give up the reference in the error path. So fix this by calling put_device(), then the name can be freed in kobject_cleanup(), and sdevice is freed in siox_device_release(), set it to null in error path.",,,"[{""url"":""https://git.kernel.org/stable/c/0a5da069603ecc3d7aa09167450235462adaa295"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5d03c2911c529ea4d6ebfec53425f1091e8d402b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6e63153db50059fb78b8a8447b132664887d24e3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a4b5423f88a17a36550ae8c16c46779b1ee42f4b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d9c31e728843259209fb530c59995e4fe262699f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f9fe7ba4ea5b24ffdf8e125f660aca3ba4a147fb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49837,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:07.187,2025-05-07T13:33:13.787,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: bpf: Fix memory leaks in __check_func_call kmemleak reports this issue: unreferenced object 0xffff88817139d000 (size 2048): comm ""test_progs"", pid 33246, jiffies 4307381979 (age 45851.820s) hex dump (first 32 bytes): 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [<0000000045f075f0>] kmalloc_trace+0x27/0xa0 [<0000000098b7c90a>] __check_func_call+0x316/0x1230 [<00000000b4c3c403>] check_helper_call+0x172e/0x4700 [<00000000aa3875b7>] do_check+0x21d8/0x45e0 [<000000001147357b>] do_check_common+0x767/0xaf0 [<00000000b5a595b4>] bpf_check+0x43e3/0x5bc0 [<0000000011e391b1>] bpf_prog_load+0xf26/0x1940 [<0000000007f765c0>] __sys_bpf+0xd2c/0x3650 [<00000000839815d6>] __x64_sys_bpf+0x75/0xc0 [<00000000946ee250>] do_syscall_64+0x3b/0x90 [<0000000000506b7f>] entry_SYSCALL_64_after_hwframe+0x63/0xcd The root case here is: In function prepare_func_exit(), the callee is not released in the abnormal scenario after ""state->curframe--;"". To fix, move ""state->curframe--;"" to the very bottom of the function, right when we free callee and reset frame[] pointer to NULL, as Andrii suggested. In addition, function __check_func_call() has a similar problem. In the abnormal scenario before ""state->curframe++;"", the callee also should be released by free_func_state().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.15.80"",""matchCriteriaId"":""19E8FB68-6A3C-43C9-82F9-900E6D4954AC""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.10"",""matchCriteriaId"":""64F9ADD1-3ADB-4D66-A00F-4A83010B05F0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/83946d772e756734a900ef99dbe0aeda506adf37"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d4944497827a3d14bc5a26dbcfb7433eb5a956c0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/eb86559a691cea5fa63e57a03ec3dc9c31e97955"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49838,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:07.290,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: sctp: clear out_curr if all frag chunks of current msg are pruned A crash was reported by Zhen Chen: list_del corruption, ffffa035ddf01c18->next is NULL WARNING: CPU: 1 PID: 250682 at lib/list_debug.c:49 __list_del_entry_valid+0x59/0xe0 RIP: 0010:__list_del_entry_valid+0x59/0xe0 Call Trace: sctp_sched_dequeue_common+0x17/0x70 [sctp] sctp_sched_fcfs_dequeue+0x37/0x50 [sctp] sctp_outq_flush_data+0x85/0x360 [sctp] sctp_outq_uncork+0x77/0xa0 [sctp] sctp_cmd_interpreter.constprop.0+0x164/0x1450 [sctp] sctp_side_effects+0x37/0xe0 [sctp] sctp_do_sm+0xd0/0x230 [sctp] sctp_primitive_SEND+0x2f/0x40 [sctp] sctp_sendmsg_to_asoc+0x3fa/0x5c0 [sctp] sctp_sendmsg+0x3d5/0x440 [sctp] sock_sendmsg+0x5b/0x70 and in sctp_sched_fcfs_dequeue() it dequeued a chunk from stream out_curr outq while this outq was empty. Normally stream->out_curr must be set to NULL once all frag chunks of current msg are dequeued, as we can see in sctp_sched_dequeue_done(). However, in sctp_prsctp_prune_unsent() as it is not a proper dequeue, sctp_sched_dequeue_done() is not called to do this. This patch is to fix it by simply setting out_curr to NULL when the last frag chunk of current msg is dequeued from out_curr stream in sctp_prsctp_prune_unsent().",,,"[{""url"":""https://git.kernel.org/stable/c/2ea600b598dd3e061854dd4dd5b4c815397dfcea"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2f201ae14ae0f91dbf1cffea7bb1e29e81d4d108"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3eff34e01062ec08fbb45ce2baaaa644550be821"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e27458b18b35caee4b27b37a4a9c503b93cae5cc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49839,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:07.390,2025-05-07T13:33:01.973,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: scsi_transport_sas: Fix error handling in sas_phy_add() If transport_add_device() fails in sas_phy_add(), the kernel will crash trying to delete the device in transport_remove_device() called from sas_remove_host(). Unable to handle kernel NULL pointer dereference at virtual address 0000000000000108 CPU: 61 PID: 42829 Comm: rmmod Kdump: loaded Tainted: G W 6.1.0-rc1+ #173 pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--) pc : device_del+0x54/0x3d0 lr : device_del+0x37c/0x3d0 Call trace: device_del+0x54/0x3d0 attribute_container_class_device_del+0x28/0x38 transport_remove_classdev+0x6c/0x80 attribute_container_device_trigger+0x108/0x110 transport_remove_device+0x28/0x38 sas_phy_delete+0x30/0x60 [scsi_transport_sas] do_sas_phy_delete+0x6c/0x80 [scsi_transport_sas] device_for_each_child+0x68/0xb0 sas_remove_children+0x40/0x50 [scsi_transport_sas] sas_remove_host+0x20/0x38 [scsi_transport_sas] hisi_sas_remove+0x40/0x68 [hisi_sas_main] hisi_sas_v2_remove+0x20/0x30 [hisi_sas_v2_hw] platform_remove+0x2c/0x60 Fix this by checking and handling return value of transport_add_device() in sas_phy_add().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.14"",""versionEndExcluding"":""5.10.157"",""matchCriteriaId"":""A69FF9F0-900B-4742-B2DF-9976B031C34C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.80"",""matchCriteriaId"":""51BBEF3B-79F5-4D4C-ADBA-F34DA0E2465C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.10"",""matchCriteriaId"":""64F9ADD1-3ADB-4D66-A00F-4A83010B05F0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/03aabcb88aeeb7221ddb6196ae84ad5fb17b743f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2f21d653c648735657e23948b1d7ac7273de0f87"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5d7bebf2dfb0dc97aac1fbace0910e557ecdb16f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c736876ee294bb4f271d76a25cc7d70c8537bc5d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49840,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:07.493,2025-05-07T13:32:57.730,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: bpf, test_run: Fix alignment problem in bpf_prog_test_run_skb() We got a syzkaller problem because of aarch64 alignment fault if KFENCE enabled. When the size from user bpf program is an odd number, like 399, 407, etc, it will cause the struct skb_shared_info's unaligned access. As seen below: BUG: KFENCE: use-after-free read in __skb_clone+0x23c/0x2a0 net/core/skbuff.c:1032 Use-after-free read at 0xffff6254fffac077 (in kfence-#213): __lse_atomic_add arch/arm64/include/asm/atomic_lse.h:26 [inline] arch_atomic_add arch/arm64/include/asm/atomic.h:28 [inline] arch_atomic_inc include/linux/atomic-arch-fallback.h:270 [inline] atomic_inc include/asm-generic/atomic-instrumented.h:241 [inline] __skb_clone+0x23c/0x2a0 net/core/skbuff.c:1032 skb_clone+0xf4/0x214 net/core/skbuff.c:1481 ____bpf_clone_redirect net/core/filter.c:2433 [inline] bpf_clone_redirect+0x78/0x1c0 net/core/filter.c:2420 bpf_prog_d3839dd9068ceb51+0x80/0x330 bpf_dispatcher_nop_func include/linux/bpf.h:728 [inline] bpf_test_run+0x3c0/0x6c0 net/bpf/test_run.c:53 bpf_prog_test_run_skb+0x638/0xa7c net/bpf/test_run.c:594 bpf_prog_test_run kernel/bpf/syscall.c:3148 [inline] __do_sys_bpf kernel/bpf/syscall.c:4441 [inline] __se_sys_bpf+0xad0/0x1634 kernel/bpf/syscall.c:4381 kfence-#213: 0xffff6254fffac000-0xffff6254fffac196, size=407, cache=kmalloc-512 allocated by task 15074 on cpu 0 at 1342.585390s: kmalloc include/linux/slab.h:568 [inline] kzalloc include/linux/slab.h:675 [inline] bpf_test_init.isra.0+0xac/0x290 net/bpf/test_run.c:191 bpf_prog_test_run_skb+0x11c/0xa7c net/bpf/test_run.c:512 bpf_prog_test_run kernel/bpf/syscall.c:3148 [inline] __do_sys_bpf kernel/bpf/syscall.c:4441 [inline] __se_sys_bpf+0xad0/0x1634 kernel/bpf/syscall.c:4381 __arm64_sys_bpf+0x50/0x60 kernel/bpf/syscall.c:4381 To fix the problem, we adjust @size so that (@size + @hearoom) is a multiple of SMP_CACHE_BYTES. So we make sure the struct skb_shared_info is aligned to a cache line.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.12"",""versionEndExcluding"":""4.14.300"",""matchCriteriaId"":""B63CD4A4-1F05-4B97-B726-E239B42AF463""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.267"",""matchCriteriaId"":""A5C69A12-68E2-400E-9A5A-375A673C8402""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.225"",""matchCriteriaId"":""94D21814-3051-4860-AB06-C7880A3D4933""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.156"",""matchCriteriaId"":""E2152F3D-E6D3-405D-B0BE-911B8B6E2EE6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.80"",""matchCriteriaId"":""51BBEF3B-79F5-4D4C-ADBA-F34DA0E2465C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.10"",""matchCriteriaId"":""64F9ADD1-3ADB-4D66-A00F-4A83010B05F0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/047824a730699c6c66df43306b80f700c9dfc2fd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1b597f2d6a55e9f549989913860ad5170da04964"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/730fb1ef974a13915bc7651364d8b3318891cd70"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7a704dbfd3735304e261f2787c52fbc7c3884736"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d3fd203f36d46aa29600a72d57a1b61af80e4a25"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e60f37a1d379c821c17b08f366412dce9ef3d99f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/eaa8edd86514afac9deb9bf9a5053e74f37edf40"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49841,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:07.600,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: serial: imx: Add missing .thaw_noirq hook The following warning is seen with non-console UART instance when system hibernates. [ 37.371969] ------------[ cut here ]------------ [ 37.376599] uart3_root_clk already disabled [ 37.380810] WARNING: CPU: 0 PID: 296 at drivers/clk/clk.c:952 clk_core_disable+0xa4/0xb0 ... [ 37.506986] Call trace: [ 37.509432] clk_core_disable+0xa4/0xb0 [ 37.513270] clk_disable+0x34/0x50 [ 37.516672] imx_uart_thaw+0x38/0x5c [ 37.520250] platform_pm_thaw+0x30/0x6c [ 37.524089] dpm_run_callback.constprop.0+0x3c/0xd4 [ 37.528972] device_resume+0x7c/0x160 [ 37.532633] dpm_resume+0xe8/0x230 [ 37.536036] hibernation_snapshot+0x288/0x430 [ 37.540397] hibernate+0x10c/0x2e0 [ 37.543798] state_store+0xc4/0xd0 [ 37.547203] kobj_attr_store+0x1c/0x30 [ 37.550953] sysfs_kf_write+0x48/0x60 [ 37.554619] kernfs_fop_write_iter+0x118/0x1ac [ 37.559063] new_sync_write+0xe8/0x184 [ 37.562812] vfs_write+0x230/0x290 [ 37.566214] ksys_write+0x68/0xf4 [ 37.569529] __arm64_sys_write+0x20/0x2c [ 37.573452] invoke_syscall.constprop.0+0x50/0xf0 [ 37.578156] do_el0_svc+0x11c/0x150 [ 37.581648] el0_svc+0x30/0x140 [ 37.584792] el0t_64_sync_handler+0xe8/0xf0 [ 37.588976] el0t_64_sync+0x1a0/0x1a4 [ 37.592639] ---[ end trace 56e22eec54676d75 ]--- On hibernating, pm core calls into related hooks in sequence like: .freeze .freeze_noirq .thaw_noirq .thaw With .thaw_noirq hook being absent, the clock will be disabled in a unbalanced call which results the warning above. imx_uart_freeze() clk_prepare_enable() imx_uart_suspend_noirq() clk_disable() imx_uart_thaw clk_disable_unprepare() Adding the missing .thaw_noirq hook as imx_uart_resume_noirq() will have the call sequence corrected as below and thus fix the warning. imx_uart_freeze() clk_prepare_enable() imx_uart_suspend_noirq() clk_disable() imx_uart_resume_noirq() clk_enable() imx_uart_thaw clk_disable_unprepare()",,,"[{""url"":""https://git.kernel.org/stable/c/0a3160f4ffc70ee4bfa1521f698dace06e6091fd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4561d8008a467cb05ac632a215391d6b787f40aa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/476b09e07bd519ec7ba5941a6a6f9a02256dbb21"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ae22294e213a402a70fa1731538367d1b758ffe7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e3f9d87d6f0732827c443bd1474df21c2fad704b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e401312ca6e180ee1bd65f6a766e99dd40aa95e7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49842,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:07.703,2025-05-07T13:32:46.270,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ASoC: core: Fix use-after-free in snd_soc_exit() KASAN reports a use-after-free: BUG: KASAN: use-after-free in device_del+0xb5b/0xc60 Read of size 8 at addr ffff888008655050 by task rmmod/387 CPU: 2 PID: 387 Comm: rmmod Hardware name: QEMU Standard PC (i440FX + PIIX, 1996) Call Trace: <TASK> dump_stack_lvl+0x79/0x9a print_report+0x17f/0x47b kasan_report+0xbb/0xf0 device_del+0xb5b/0xc60 platform_device_del.part.0+0x24/0x200 platform_device_unregister+0x2e/0x40 snd_soc_exit+0xa/0x22 [snd_soc_core] __do_sys_delete_module.constprop.0+0x34f/0x5b0 do_syscall_64+0x3a/0x90 entry_SYSCALL_64_after_hwframe+0x63/0xcd ... </TASK> It's bacause in snd_soc_init(), snd_soc_util_init() is possble to fail, but its ret is ignored, which makes soc_dummy_dev unregistered twice. snd_soc_init() snd_soc_util_init() platform_device_register_simple(soc_dummy_dev) platform_driver_register() # fail platform_device_unregister(soc_dummy_dev) platform_driver_register() # success ... snd_soc_exit() snd_soc_util_exit() # soc_dummy_dev will be unregistered for second time To fix it, handle error and stop snd_soc_init() when util_init() fail. Also clean debugfs when util_init() or driver_register() fail.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.0"",""versionEndExcluding"":""4.9.334"",""matchCriteriaId"":""9B27565B-31CF-47D1-97C1-877DC4D928D8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.300"",""matchCriteriaId"":""424802D2-E9E7-48A9-AD6F-DF2227B3D83A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.267"",""matchCriteriaId"":""A5C69A12-68E2-400E-9A5A-375A673C8402""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.225"",""matchCriteriaId"":""94D21814-3051-4860-AB06-C7880A3D4933""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.156"",""matchCriteriaId"":""E2152F3D-E6D3-405D-B0BE-911B8B6E2EE6""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.80"",""matchCriteriaId"":""51BBEF3B-79F5-4D4C-ADBA-F34DA0E2465C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.10"",""matchCriteriaId"":""64F9ADD1-3ADB-4D66-A00F-4A83010B05F0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*"",""matchCriteriaId"":""35B26BE4-43A6-4A36-A7F6-5B3F572D9186""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2ec3f558db343b045a7c7419cdbaec266b8ac1a7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/34eee4189bcebbd5f6a2ff25ef0cb893ad33d51e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/41fad4f712e081acdfde8b59847f9f66eaf407a0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6ec27c53886c8963729885bcf2dd996eba2767a7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8d21554ec7680e9585fb852d933203c3db60dad1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/90bbdf30a51e42378cb23a312005a022794b8e1e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a3365e62239dc064019a244bde5686ac18527c22"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c5674bd073c0fd9f620ca550c5ff08d0d429bdd9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49843,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:07.807,2025-05-08T11:15:50.790,Rejected,[],Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.,,,[],,,,,,,,,
CVE-2022-49844,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:07.907,2025-05-07T13:32:51.333,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: can: dev: fix skb drop check In commit a6d190f8c767 (""can: skb: drop tx skb if in listen only mode"") the priv->ctrlmode element is read even on virtual CAN interfaces that do not create the struct can_priv at startup. This out-of-bounds read may lead to CAN frame drops for virtual CAN interfaces like vcan and vxcan. This patch mainly reverts the original commit and adds a new helper for CAN interface drivers that provide the required information in struct can_priv. [mkl: patch pch_can, too]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-125""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""6.0"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""FB0E56F8-B415-4563-B3CC-33864CBCEA4E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/386c49fe31ee748e053860b3bac7794a933ac9ac"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ae64438be1923e3c1102d90fd41db7afcfaf54cc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"",""baseScore"":7.1,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.2}]",,,,,,,,
CVE-2022-49845,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:08.010,2025-05-07T13:32:40.417,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: can: j1939: j1939_send_one(): fix missing CAN header initialization The read access to struct canxl_frame::len inside of a j1939 created skbuff revealed a missing initialization of reserved and later filled elements in struct can_frame. This patch initializes the 8 byte CAN header with zero.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-908""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4"",""versionEndExcluding"":""5.4.225"",""matchCriteriaId"":""22272FA8-5DCC-4821-B920-45E23BB0DE78""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.155"",""matchCriteriaId"":""172AC75C-0949-4468-9C58-64E2893EF0CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""39DC45D8-E30E-4F4A-9332-393B7BCF6900""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2719f82ad5d8199cf5f346ea8bb3998ad5323b72"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3eb3d283e8579a22b81dd2ac3987b77465b2a22f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/69e86c6268d59ceddd0abe9ae8f1f5296f316c3c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d0513b095e1ef1469718564dec3fb3348556d0a8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f8e0edeaa0f2b860bdbbf0aafb4492533043d650"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49846,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:08.113,2025-05-07T13:32:31.537,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: udf: Fix a slab-out-of-bounds write bug in udf_find_entry() Syzbot reported a slab-out-of-bounds Write bug: loop0: detected capacity change from 0 to 2048 ================================================================== BUG: KASAN: slab-out-of-bounds in udf_find_entry+0x8a5/0x14f0 fs/udf/namei.c:253 Write of size 105 at addr ffff8880123ff896 by task syz-executor323/3610 CPU: 0 PID: 3610 Comm: syz-executor323 Not tainted 6.1.0-rc2-syzkaller-00105-gb229b6ca5abb #0 Hardware name: Google Compute Engine/Google Compute Engine, BIOS Google 10/11/2022 Call Trace: <TASK> __dump_stack lib/dump_stack.c:88 [inline] dump_stack_lvl+0x1b1/0x28e lib/dump_stack.c:106 print_address_description+0x74/0x340 mm/kasan/report.c:284 print_report+0x107/0x1f0 mm/kasan/report.c:395 kasan_report+0xcd/0x100 mm/kasan/report.c:495 kasan_check_range+0x2a7/0x2e0 mm/kasan/generic.c:189 memcpy+0x3c/0x60 mm/kasan/shadow.c:66 udf_find_entry+0x8a5/0x14f0 fs/udf/namei.c:253 udf_lookup+0xef/0x340 fs/udf/namei.c:309 lookup_open fs/namei.c:3391 [inline] open_last_lookups fs/namei.c:3481 [inline] path_openat+0x10e6/0x2df0 fs/namei.c:3710 do_filp_open+0x264/0x4f0 fs/namei.c:3740 do_sys_openat2+0x124/0x4e0 fs/open.c:1310 do_sys_open fs/open.c:1326 [inline] __do_sys_creat fs/open.c:1402 [inline] __se_sys_creat fs/open.c:1396 [inline] __x64_sys_creat+0x11f/0x160 fs/open.c:1396 do_syscall_x64 arch/x86/entry/common.c:50 [inline] do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80 entry_SYSCALL_64_after_hwframe+0x63/0xcd RIP: 0033:0x7ffab0d164d9 Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48 RSP: 002b:00007ffe1a7e6bb8 EFLAGS: 00000246 ORIG_RAX: 0000000000000055 RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007ffab0d164d9 RDX: 00007ffab0d164d9 RSI: 0000000000000000 RDI: 0000000020000180 RBP: 00007ffab0cd5a10 R08: 0000000000000000 R09: 0000000000000000 R10: 00005555573552c0 R11: 0000000000000246 R12: 00007ffab0cd5aa0 R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000 </TASK> Allocated by task 3610: kasan_save_stack mm/kasan/common.c:45 [inline] kasan_set_track+0x3d/0x60 mm/kasan/common.c:52 ____kasan_kmalloc mm/kasan/common.c:371 [inline] __kasan_kmalloc+0x97/0xb0 mm/kasan/common.c:380 kmalloc include/linux/slab.h:576 [inline] udf_find_entry+0x7b6/0x14f0 fs/udf/namei.c:243 udf_lookup+0xef/0x340 fs/udf/namei.c:309 lookup_open fs/namei.c:3391 [inline] open_last_lookups fs/namei.c:3481 [inline] path_openat+0x10e6/0x2df0 fs/namei.c:3710 do_filp_open+0x264/0x4f0 fs/namei.c:3740 do_sys_openat2+0x124/0x4e0 fs/open.c:1310 do_sys_open fs/open.c:1326 [inline] __do_sys_creat fs/open.c:1402 [inline] __se_sys_creat fs/open.c:1396 [inline] __x64_sys_creat+0x11f/0x160 fs/open.c:1396 do_syscall_x64 arch/x86/entry/common.c:50 [inline] do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80 entry_SYSCALL_64_after_hwframe+0x63/0xcd The buggy address belongs to the object at ffff8880123ff800 which belongs to the cache kmalloc-256 of size 256 The buggy address is located 150 bytes inside of 256-byte region [ffff8880123ff800, ffff8880123ff900) The buggy address belongs to the physical page: page:ffffea000048ff80 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x123fe head:ffffea000048ff80 order:1 compound_mapcount:0 compound_pincount:0 flags: 0xfff00000010200(slab|head|node=0|zone=1|lastcpupid=0x7ff) raw: 00fff00000010200 ffffea00004b8500 dead000000000003 ffff888012041b40 raw: 0000000000000000 0000000080100010 00000001ffffffff 0000000000000000 page dumped because: kasan: bad access detected page_owner tracks the page as allocated page last allocated via order 0, migratetype Unmovable, gfp_mask 0x0(), pid 1, tgid 1 (swapper/0), ts 1841222404, free_ts 0 create_dummy_stack mm/page_owner.c: ---truncated---","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-787""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.6"",""versionEndExcluding"":""4.9.334"",""matchCriteriaId"":""0CB81AEB-3FD7-4D69-9CFF-3A77A52C4EB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.300"",""matchCriteriaId"":""424802D2-E9E7-48A9-AD6F-DF2227B3D83A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.267"",""matchCriteriaId"":""A5C69A12-68E2-400E-9A5A-375A673C8402""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.225"",""matchCriteriaId"":""94D21814-3051-4860-AB06-C7880A3D4933""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.155"",""matchCriteriaId"":""172AC75C-0949-4468-9C58-64E2893EF0CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""39DC45D8-E30E-4F4A-9332-393B7BCF6900""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/03f9582a6a2ebd25a440896475c968428c4b63e7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/583fdd98d94acba1e7225e5cc29063aef0741030"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7a6051d734f1ed0031e2216f9a538621235c11a4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ac79001b8e603226fab17240a79cb9ef679d3cd9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c736ed8541605e3a25075bb1cbf8f38cb3083238"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c8af247de385ce49afabc3bf1cf4fd455c94bfe8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d8971f410739a864c537e0ac29344a7b6c450232"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f1517721c408631f09d54c743aa70cb07fd3eebd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49847,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:08.223,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: ethernet: ti: am65-cpsw: Fix segmentation fault at module unload Move am65_cpsw_nuss_phylink_cleanup() call to after am65_cpsw_nuss_cleanup_ndev() so phylink is still valid to prevent the below Segmentation fault on module remove when first slave link is up. [ 31.652944] Unable to handle kernel paging request at virtual address 00040008000005f4 [ 31.684627] Mem abort info: [ 31.687446] ESR = 0x0000000096000004 [ 31.704614] EC = 0x25: DABT (current EL), IL = 32 bits [ 31.720663] SET = 0, FnV = 0 [ 31.723729] EA = 0, S1PTW = 0 [ 31.740617] FSC = 0x04: level 0 translation fault [ 31.756624] Data abort info: [ 31.759508] ISV = 0, ISS = 0x00000004 [ 31.776705] CM = 0, WnR = 0 [ 31.779695] [00040008000005f4] address between user and kernel address ranges [ 31.808644] Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP [ 31.814928] Modules linked in: wlcore_sdio wl18xx wlcore mac80211 libarc4 cfg80211 rfkill crct10dif_ce phy_gmii_sel ti_am65_cpsw_nuss(-) sch_fq_codel ipv6 [ 31.828776] CPU: 0 PID: 1026 Comm: modprobe Not tainted 6.1.0-rc2-00012-gfabfcf7dafdb-dirty #160 [ 31.837547] Hardware name: Texas Instruments AM625 (DT) [ 31.842760] pstate: 40000005 (nZcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--) [ 31.849709] pc : phy_stop+0x18/0xf8 [ 31.853202] lr : phylink_stop+0x38/0xf8 [ 31.857031] sp : ffff80000a0839f0 [ 31.860335] x29: ffff80000a0839f0 x28: ffff000000de1c80 x27: 0000000000000000 [ 31.867462] x26: 0000000000000000 x25: 0000000000000000 x24: ffff80000a083b98 [ 31.874589] x23: 0000000000000800 x22: 0000000000000001 x21: ffff000001bfba90 [ 31.881715] x20: ffff0000015ee000 x19: 0004000800000200 x18: 0000000000000000 [ 31.888842] x17: ffff800076c45000 x16: ffff800008004000 x15: 000058e39660b106 [ 31.895969] x14: 0000000000000144 x13: 0000000000000144 x12: 0000000000000000 [ 31.903095] x11: 000000000000275f x10: 00000000000009e0 x9 : ffff80000a0837d0 [ 31.910222] x8 : ffff000000de26c0 x7 : ffff00007fbd6540 x6 : ffff00007fbd64c0 [ 31.917349] x5 : ffff00007fbd0b10 x4 : ffff00007fbd0b10 x3 : ffff00007fbd3920 [ 31.924476] x2 : d0a07fcff8b8d500 x1 : 0000000000000000 x0 : 0004000800000200 [ 31.931603] Call trace: [ 31.934042] phy_stop+0x18/0xf8 [ 31.937177] phylink_stop+0x38/0xf8 [ 31.940657] am65_cpsw_nuss_ndo_slave_stop+0x28/0x1e0 [ti_am65_cpsw_nuss] [ 31.947452] __dev_close_many+0xa4/0x140 [ 31.951371] dev_close_many+0x84/0x128 [ 31.955115] unregister_netdevice_many+0x130/0x6d0 [ 31.959897] unregister_netdevice_queue+0x94/0xd8 [ 31.964591] unregister_netdev+0x24/0x38 [ 31.968504] am65_cpsw_nuss_cleanup_ndev.isra.0+0x48/0x70 [ti_am65_cpsw_nuss] [ 31.975637] am65_cpsw_nuss_remove+0x58/0xf8 [ti_am65_cpsw_nuss]",,,"[{""url"":""https://git.kernel.org/stable/c/1a0c016a4831ea29be09bbc8162d4a2a0690b4b8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/442fd1bfe599bc54d118775e9e1a4fe913e4b369"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49848,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:08.327,2025-05-07T13:33:36.537,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: phy: qcom-qmp-combo: fix NULL-deref on runtime resume Commit fc64623637da (""phy: qcom-qmp-combo,usb: add support for separate PCS_USB region"") started treating the PCS_USB registers as potentially separate from the PCS registers but used the wrong base when no PCS_USB offset has been provided. Fix the PCS_USB base used at runtime resume to prevent dereferencing a NULL pointer on platforms that do not provide a PCS_USB offset (e.g. SC7180).","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""6.0"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""FB0E56F8-B415-4563-B3CC-33864CBCEA4E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/04948e757148f870a31f4887ea2239403f516c3c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c559a8b5cfa3db196ced0257b288f17027621348"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49849,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:08.450,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: btrfs: fix match incorrectly in dev_args_match_device syzkaller found a failed assertion: assertion failed: (args->devid != (u64)-1) || args->missing, in fs/btrfs/volumes.c:6921 This can be triggered when we set devid to (u64)-1 by ioctl. In this case, the match of devid will be skipped and the match of device may succeed incorrectly. Patch 562d7b1512f7 introduced this function which is used to match device. This function contains two matching scenarios, we can distinguish them by checking the value of args->missing rather than check whether args->devid and args->uuid is default value.",,,"[{""url"":""https://git.kernel.org/stable/c/0fca385d6ebc3cabb20f67bcf8a71f1448bdc001"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bc6c127c377010f136360552ebf91c2723081c1b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c9fe4719c662e0af17eea723cf345e37719fd3c9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49850,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:08.567,2025-05-07T13:32:23.093,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: nilfs2: fix deadlock in nilfs_count_free_blocks() A semaphore deadlock can occur if nilfs_get_block() detects metadata corruption while locating data blocks and a superblock writeback occurs at the same time: task 1 task 2 ------ ------ * A file operation * nilfs_truncate() nilfs_get_block() down_read(rwsem A) <-- nilfs_bmap_lookup_contig() ... generic_shutdown_super() nilfs_put_super() * Prepare to write superblock * down_write(rwsem B) <-- nilfs_cleanup_super() * Detect b-tree corruption * nilfs_set_log_cursor() nilfs_bmap_convert_error() nilfs_count_free_blocks() __nilfs_error() down_read(rwsem A) <-- nilfs_set_error() down_write(rwsem B) <-- *** DEADLOCK *** Here, nilfs_get_block() readlocks rwsem A (= NILFS_MDT(dat_inode)->mi_sem) and then calls nilfs_bmap_lookup_contig(), but if it fails due to metadata corruption, __nilfs_error() is called from nilfs_bmap_convert_error() inside the lock section. Since __nilfs_error() calls nilfs_set_error() unless the filesystem is read-only and nilfs_set_error() attempts to writelock rwsem B (= nilfs->ns_sem) to write back superblock exclusively, hierarchical lock acquisition occurs in the order rwsem A -> rwsem B. Now, if another task starts updating the superblock, it may writelock rwsem B during the lock sequence above, and can deadlock trying to readlock rwsem A in nilfs_count_free_blocks(). However, there is actually no need to take rwsem A in nilfs_count_free_blocks() because it, within the lock section, only reads a single integer data on a shared struct with nilfs_sufile_get_ncleansegs(). This has been the case after commit aa474a220180 (""nilfs2: add local variable to cache the number of clean segments""), that is, even before this bug was introduced. So, this resolves the deadlock problem by just not taking the semaphore in nilfs_count_free_blocks().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-667""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.38"",""versionEndExcluding"":""4.9.334"",""matchCriteriaId"":""D036C92F-D89C-426E-949E-DCDB2F1458DB""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.300"",""matchCriteriaId"":""424802D2-E9E7-48A9-AD6F-DF2227B3D83A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.267"",""matchCriteriaId"":""A5C69A12-68E2-400E-9A5A-375A673C8402""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.225"",""matchCriteriaId"":""94D21814-3051-4860-AB06-C7880A3D4933""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.155"",""matchCriteriaId"":""172AC75C-0949-4468-9C58-64E2893EF0CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""39DC45D8-E30E-4F4A-9332-393B7BCF6900""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1d4ff73062096c21b47954d2996b4df259777bda"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/36ff974b0310771417c0be64b64aa221bd70d63d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3c89ca6d3dfa6c09c515807a7a97a521f5d5147e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8ac932a4921a96ca52f61935dbba64ea87bbd5dc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8b4506cff6630bb474bb46a2a75c31e533a756ba"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/abc082aac0d9b6b926038fc3adb7008306581be2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cb029b54953420f7a2d65100f1c5107f14411bdc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f0cc93080d4c09510b74ecba87fd778cca390bb1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49851,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:08.680,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: riscv: fix reserved memory setup Currently, RISC-V sets up reserved memory using the ""early"" copy of the device tree. As a result, when trying to get a reserved memory region using of_reserved_mem_lookup(), the pointer to reserved memory regions is using the early, pre-virtual-memory address which causes a kernel panic when trying to use the buffer's name: Unable to handle kernel paging request at virtual address 00000000401c31ac Oops [#1] Modules linked in: CPU: 0 PID: 0 Comm: swapper Not tainted 6.0.0-rc1-00001-g0d9d6953d834 #1 Hardware name: Microchip PolarFire-SoC Icicle Kit (DT) epc : string+0x4a/0xea ra : vsnprintf+0x1e4/0x336 epc : ffffffff80335ea0 ra : ffffffff80338936 sp : ffffffff81203be0 gp : ffffffff812e0a98 tp : ffffffff8120de40 t0 : 0000000000000000 t1 : ffffffff81203e28 t2 : 7265736572203a46 s0 : ffffffff81203c20 s1 : ffffffff81203e28 a0 : ffffffff81203d22 a1 : 0000000000000000 a2 : ffffffff81203d08 a3 : 0000000081203d21 a4 : ffffffffffffffff a5 : 00000000401c31ac a6 : ffff0a00ffffff04 a7 : ffffffffffffffff s2 : ffffffff81203d08 s3 : ffffffff81203d00 s4 : 0000000000000008 s5 : ffffffff000000ff s6 : 0000000000ffffff s7 : 00000000ffffff00 s8 : ffffffff80d9821a s9 : ffffffff81203d22 s10: 0000000000000002 s11: ffffffff80d9821c t3 : ffffffff812f3617 t4 : ffffffff812f3617 t5 : ffffffff812f3618 t6 : ffffffff81203d08 status: 0000000200000100 badaddr: 00000000401c31ac cause: 000000000000000d [<ffffffff80338936>] vsnprintf+0x1e4/0x336 [<ffffffff80055ae2>] vprintk_store+0xf6/0x344 [<ffffffff80055d86>] vprintk_emit+0x56/0x192 [<ffffffff80055ed8>] vprintk_default+0x16/0x1e [<ffffffff800563d2>] vprintk+0x72/0x80 [<ffffffff806813b2>] _printk+0x36/0x50 [<ffffffff8068af48>] print_reserved_mem+0x1c/0x24 [<ffffffff808057ec>] paging_init+0x528/0x5bc [<ffffffff808031ae>] setup_arch+0xd0/0x592 [<ffffffff8080070e>] start_kernel+0x82/0x73c early_init_fdt_scan_reserved_mem() takes no arguments as it operates on initial_boot_params, which is populated by early_init_dt_verify(). On RISC-V, early_init_dt_verify() is called twice. Once, directly, in setup_arch() if CONFIG_BUILTIN_DTB is not enabled and once indirectly, very early in the boot process, by parse_dtb() when it calls early_init_dt_scan_nodes(). This first call uses dtb_early_va to set initial_boot_params, which is not usable later in the boot process when early_init_fdt_scan_reserved_mem() is called. On arm64 for example, the corresponding call to early_init_dt_scan_nodes() uses fixmap addresses and doesn't suffer the same fate. Move early_init_fdt_scan_reserved_mem() further along the boot sequence, after the direct call to early_init_dt_verify() in setup_arch() so that the names use the correct virtual memory addresses. The above supposed that CONFIG_BUILTIN_DTB was not set, but should work equally in the case where it is - unflatted_and_copy_device_tree() also updates initial_boot_params.",,,"[{""url"":""https://git.kernel.org/stable/c/50e63dd8ed92045eb70a72d7ec725488320fb68b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/518e49f0590de66555503aabe199ba8d3f2e24ac"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/93598deb101540c4f9e7de15099ea8255b965fc2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/94ab8f88feb75e3b1486102c0c9c550f37d9d137"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49852,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:08.787,2025-05-02T13:53:20.943,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: riscv: process: fix kernel info leakage thread_struct's s[12] may contain random kernel memory content, which may be finally leaked to userspace. This is a security hole. Fix it by clearing the s[12] array in thread_struct when fork. As for kthread case, it's better to clear the s[12] array as well.",,,"[{""url"":""https://git.kernel.org/stable/c/358a68f98304b40b201ba5afe94c20355aa3dc68"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6510c78490c490a6636e48b61eeaa6fb65981f4b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c4601d30f7d989b4f354df899ab85b5f7a750d30"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c5c0b3167537793a7cf936fb240366eefd2fc7fb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cc36c7fa5d9384602529ba3eea8c5daee7be4dbc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e56d18a976dda653194218df6d40d8122c775712"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49853,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:08.890,2025-05-07T13:32:15.960,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: macvlan: fix memory leaks of macvlan_common_newlink kmemleak reports memory leaks in macvlan_common_newlink, as follows: ip link add link eth0 name .. type macvlan mode source macaddr add <MAC-ADDR> kmemleak reports: unreferenced object 0xffff8880109bb140 (size 64): comm ""ip"", pid 284, jiffies 4294986150 (age 430.108s) hex dump (first 32 bytes): 00 00 00 00 00 00 00 00 b8 aa 5a 12 80 88 ff ff ..........Z..... 80 1b fa 0d 80 88 ff ff 1e ff ac af c7 c1 6b 6b ..............kk backtrace: [<ffffffff813e06a7>] kmem_cache_alloc_trace+0x1c7/0x300 [<ffffffff81b66025>] macvlan_hash_add_source+0x45/0xc0 [<ffffffff81b66a67>] macvlan_changelink_sources+0xd7/0x170 [<ffffffff81b6775c>] macvlan_common_newlink+0x38c/0x5a0 [<ffffffff81b6797e>] macvlan_newlink+0xe/0x20 [<ffffffff81d97f8f>] __rtnl_newlink+0x7af/0xa50 [<ffffffff81d98278>] rtnl_newlink+0x48/0x70 ... In the scenario where the macvlan mode is configured as 'source', macvlan_changelink_sources() will be execured to reconfigure list of remote source mac addresses, at the same time, if register_netdevice() return an error, the resource generated by macvlan_changelink_sources() is not cleaned up. Using this patch, in the case of an error, it will execute macvlan_flush_sources() to ensure that the resource is cleaned up.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.9"",""versionEndExcluding"":""4.9.334"",""matchCriteriaId"":""1648A6C1-CD30-4F07-9803-D9E45515CEDF""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.300"",""matchCriteriaId"":""424802D2-E9E7-48A9-AD6F-DF2227B3D83A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.267"",""matchCriteriaId"":""A5C69A12-68E2-400E-9A5A-375A673C8402""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.225"",""matchCriteriaId"":""94D21814-3051-4860-AB06-C7880A3D4933""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.155"",""matchCriteriaId"":""172AC75C-0949-4468-9C58-64E2893EF0CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""39DC45D8-E30E-4F4A-9332-393B7BCF6900""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/21d3a8b6a1e39e7529ce9de07316ee13a63f305b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/23569b5652ee8e8e55a12f7835f59af6f3cefc30"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/685e73e3f7a9fb75cbf049a9d0b7c45cc6b57b2e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/956e0216a19994443c90ba2ea6b0b284c9c4f9cb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9ea003c4671b2fc455320ecf6d4a43b0a3c1878a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9f288e338be206713d79b29144c27fca4503c39b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a81b44d1df1f07f00c0dcc0a0b3d2fa24a46289e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a8d67367ab33604326cc37ab44fd1801bf5691ba"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49854,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:08.997,2025-05-07T13:32:09.350,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mctp: Fix an error handling path in mctp_init() If mctp_neigh_init() return error, the routes resources should be released in the error handling path. Otherwise some resources leak.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""19FCBA89-4EA3-472C-9992-C74EBB07C02A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/216c83222d2eb24b0e63df56e8740b02c33286e8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/49d8a6e24a3496d86e8d8ae748375df984fb6d6f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d4072058af4fd8fb4658e7452289042a406a9398"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49855,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:09.090,2025-05-07T13:31:58.267,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: wwan: iosm: fix memory leak in ipc_pcie_read_bios_cfg ipc_pcie_read_bios_cfg() is using the acpi_evaluate_dsm() to obtain the wwan power state configuration from BIOS but is not freeing the acpi_object. The acpi_evaluate_dsm() returned acpi_object to be freed. Free the acpi_object after use.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""FB443DA9-A9E7-45CA-AAF4-AF14F567FE9F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/13b1ea861e8aeb701bcfbfe436b943efa2d44029"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7560ceef4d2832a67e8781d924e129c7f542376f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d38a648d2d6cc7bee11c6f533ff9426a00c2a74c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49856,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:09.197,2025-05-08T11:15:51.407,Rejected,[],Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.,,,[],,,,,,,,,
CVE-2022-49857,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:09.307,2025-05-07T13:31:48.520,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: marvell: prestera: fix memory leak in prestera_rxtx_switch_init() When prestera_sdma_switch_init() failed, the memory pointed to by sw->rxtx isn't released. Fix it. Only be compiled, not be tested.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.10"",""versionEndExcluding"":""5.10.155"",""matchCriteriaId"":""8FE1B8A2-D998-4201-9A2B-A416164DC19B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""39DC45D8-E30E-4F4A-9332-393B7BCF6900""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/31e5084ac6876e52dbb0a1cc4fc18b6c79979f31"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/409731df6310a33f4d0a3ef594d2410cdcd637f2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/519b58bbfa825f042fcf80261cc18e1e35f85ffd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5333cf1b7f6861912aff6263978d4781f9858e47"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49858,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:09.410,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: octeontx2-pf: Fix SQE threshold checking Current way of checking available SQE count which is based on HW updated SQB count could result in driver submitting an SQE even before CQE for the previously transmitted SQE at the same index is processed in NAPI resulting losing SKB pointers, hence a leak. Fix this by checking a consumer index which is updated once CQE is processed.",,,"[{""url"":""https://git.kernel.org/stable/c/015e3c0a3b16193aab23beefe4719484b9984c2d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f0dfc4c88ef39be0ba736aa0ce6119263fc19aeb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49859,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:09.510,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: lapbether: fix issue of invalid opcode in lapbeth_open() If lapb_register() failed when lapb device goes to up for the first time, the NAPI is not disabled. As a result, the invalid opcode issue is reported when the lapb device goes to up for the second time. The stack info is as follows: [ 1958.311422][T11356] kernel BUG at net/core/dev.c:6442! [ 1958.312206][T11356] invalid opcode: 0000 [#1] PREEMPT SMP KASAN [ 1958.315979][T11356] RIP: 0010:napi_enable+0x16a/0x1f0 [ 1958.332310][T11356] Call Trace: [ 1958.332817][T11356] <TASK> [ 1958.336135][T11356] lapbeth_open+0x18/0x90 [ 1958.337446][T11356] __dev_open+0x258/0x490 [ 1958.341672][T11356] __dev_change_flags+0x4d4/0x6a0 [ 1958.345325][T11356] dev_change_flags+0x93/0x160 [ 1958.346027][T11356] devinet_ioctl+0x1276/0x1bf0 [ 1958.346738][T11356] inet_ioctl+0x1c8/0x2d0 [ 1958.349638][T11356] sock_ioctl+0x5d1/0x750 [ 1958.356059][T11356] __x64_sys_ioctl+0x3ec/0x1790 [ 1958.365594][T11356] do_syscall_64+0x35/0x80 [ 1958.366239][T11356] entry_SYSCALL_64_after_hwframe+0x46/0xb0 [ 1958.377381][T11356] </TASK>",,,"[{""url"":""https://git.kernel.org/stable/c/3faf7e14ec0c3462c2d747fa6793b8645d1391df"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4689bd3a1b23a1bd917899e63b81bca2ccdfab45"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ed4940050a7ce7fc2ccd51db580ef1ade64290b1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49860,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:09.610,2025-05-07T13:31:43.957,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: dmaengine: ti: k3-udma-glue: fix memory leak when register device fail If device_register() fails, it should call put_device() to give up reference, the name allocated in dev_set_name() can be freed in callback function kobject_cleanup().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""39DC45D8-E30E-4F4A-9332-393B7BCF6900""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/025eab5189fc7ee223ae9b4bc49d7df196543e53"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1dd27541aa2b95bde71bddd43d73f9c16d73272c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ac2b9f34f02052709aea7b34bb2a165e1853eb41"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49861,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:09.727,2025-05-07T13:31:38.873,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: dmaengine: mv_xor_v2: Fix a resource leak in mv_xor_v2_remove() A clk_prepare_enable() call in the probe is not balanced by a corresponding clk_disable_unprepare() in the remove function. Add the missing call.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.9.104"",""versionEndExcluding"":""4.9.334"",""matchCriteriaId"":""8EB31574-ACF0-47CB-8120-D5F7C0C20A1F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.14.45"",""versionEndExcluding"":""4.14.300"",""matchCriteriaId"":""CCE4062F-51A3-41E5-AFB2-48F6BC456C30""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.16"",""versionEndExcluding"":""4.19.267"",""matchCriteriaId"":""0EB4A88B-8032-4846-8973-0666BAC089F0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.225"",""matchCriteriaId"":""94D21814-3051-4860-AB06-C7880A3D4933""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.155"",""matchCriteriaId"":""172AC75C-0949-4468-9C58-64E2893EF0CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""39DC45D8-E30E-4F4A-9332-393B7BCF6900""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/04f2cc56d80a1ac058045a7835c5bfd910f17863"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/081195d17a0c4c636da2b869bd5809d42e8cbb13"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0b7ee3d50f32d277bf024b4ddb4de54da43a3025"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1d84887327659c58a6637060ac8c50c3a952a163"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/20479886b40c0ed4864a5fc8490a1f6b70cccf1b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4b6641c3a2ba95ddcfecec263b4a5e572a4b0641"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/992e966caf57e00855edbd79f19d911809732a69"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a1cb72e20a64a3c83f9b4ee993fbf97e4c1d7714"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49862,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:11.097,2025-05-07T13:22:46.437,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tipc: fix the msg->req tlv len check in tipc_nl_compat_name_table_dump_header This is a follow-up for commit 974cb0e3e7c9 (""tipc: fix uninit-value in tipc_nl_compat_name_table_dump"") where it should have type casted sizeof(..) to int to work when TLV_GET_DATA_LEN() returns a negative value. syzbot reported a call trace because of it: BUG: KMSAN: uninit-value in ... tipc_nl_compat_name_table_dump+0x841/0xea0 net/tipc/netlink_compat.c:934 __tipc_nl_compat_dumpit+0xab2/0x1320 net/tipc/netlink_compat.c:238 tipc_nl_compat_dumpit+0x991/0xb50 net/tipc/netlink_compat.c:321 tipc_nl_compat_recv+0xb6e/0x1640 net/tipc/netlink_compat.c:1324 genl_family_rcv_msg_doit net/netlink/genetlink.c:731 [inline] genl_family_rcv_msg net/netlink/genetlink.c:775 [inline] genl_rcv_msg+0x103f/0x1260 net/netlink/genetlink.c:792 netlink_rcv_skb+0x3a5/0x6c0 net/netlink/af_netlink.c:2501 genl_rcv+0x3c/0x50 net/netlink/genetlink.c:803 netlink_unicast_kernel net/netlink/af_netlink.c:1319 [inline] netlink_unicast+0xf3b/0x1270 net/netlink/af_netlink.c:1345 netlink_sendmsg+0x1288/0x1440 net/netlink/af_netlink.c:1921 sock_sendmsg_nosec net/socket.c:714 [inline] sock_sendmsg net/socket.c:734 [inline]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-908""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.4.172"",""versionEndExcluding"":""4.5"",""matchCriteriaId"":""A22B7234-9290-41F2-A8B0-6782137A0E8A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.9.152"",""versionEndExcluding"":""4.9.334"",""matchCriteriaId"":""1729E55A-9863-4AA9-884B-A3D5B295B485""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.14.95"",""versionEndExcluding"":""4.14.300"",""matchCriteriaId"":""80BD5D93-5773-4107-BC1B-9B7028CB6664""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.19.17"",""versionEndExcluding"":""4.19.267"",""matchCriteriaId"":""6BE4C0F8-46CB-4A0C-82EA-F11DAA29C473""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20.4"",""versionEndExcluding"":""5.4.225"",""matchCriteriaId"":""54280D03-52A8-48F4-A160-3D4398F0878C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.155"",""matchCriteriaId"":""172AC75C-0949-4468-9C58-64E2893EF0CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""39DC45D8-E30E-4F4A-9332-393B7BCF6900""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/082707d3df191bf5bb8801d43e4ce3dea39ca173"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1c075b192fe41030457cd4a5f7dea730412bca40"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/301caa06091af4d5cf056ac8249cbda4e6029c6a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/36769b9477491a7af6635863bd950309c1e1b96c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/55a253a6753a603e80b95932ca971ba514aa6ce7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6cee2c60bd168279852ac7dbe54c2b70d1028644"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a0ead1d648df9c456baec832b494513ef405949a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f31dd158580940938f77514b87337a777520185a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49863,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:11.203,2025-05-07T13:22:40.637,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: can: af_can: fix NULL pointer dereference in can_rx_register() It causes NULL pointer dereference when testing as following: (a) use syscall(__NR_socket, 0x10ul, 3ul, 0) to create netlink socket. (b) use syscall(__NR_sendmsg, ...) to create bond link device and vxcan link device, and bind vxcan device to bond device (can also use ifenslave command to bind vxcan device to bond device). (c) use syscall(__NR_socket, 0x1dul, 3ul, 1) to create CAN socket. (d) use syscall(__NR_bind, ...) to bind the bond device to CAN socket. The bond device invokes the can-raw protocol registration interface to receive CAN packets. However, ml_priv is not allocated to the dev, dev_rcv_lists is assigned to NULL in can_rx_register(). In this case, it will occur the NULL pointer dereference issue. The following is the stack information: BUG: kernel NULL pointer dereference, address: 0000000000000008 PGD 122a4067 P4D 122a4067 PUD 1223c067 PMD 0 Oops: 0000 [#1] PREEMPT SMP RIP: 0010:can_rx_register+0x12d/0x1e0 Call Trace: <TASK> raw_enable_filters+0x8d/0x120 raw_enable_allfilters+0x3b/0x130 raw_bind+0x118/0x4f0 __sys_bind+0x163/0x1a0 __x64_sys_bind+0x1e/0x30 do_syscall_64+0x35/0x80 entry_SYSCALL_64_after_hwframe+0x63/0xcd </TASK>","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4.110"",""versionEndExcluding"":""5.4.225"",""matchCriteriaId"":""E1A52173-A8BD-49E9-BEB7-8D25B75EFE1A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.10.28"",""versionEndExcluding"":""5.10.155"",""matchCriteriaId"":""3D49A70C-7ED1-4708-8946-17E22BF9D515""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11.12"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""6658878A-B87A-4728-80EB-30A1E6DE8B99""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.9:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""22BEDD49-2C6D-402D-9DBF-6646F6ECD10B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.9:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""DF73CB2A-DFFD-46FB-9BFE-AA394F27EA37""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.9:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""52048DDA-FC5A-4363-95A0-A6357B4D7F8C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.9:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""A06B2CCF-3F43-4FA9-8773-C83C3F5764B2""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/261178a1c2623077d62e374a75c195e6c99a6f05"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8aa59e355949442c408408c2d836e561794c40a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a8055677b054bc2bb78beb1080fdc2dc5158c2fe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/afab4655750fcb3fca359bc7d7214e3d634cdf9c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d68fa77ee3d03bad6fe84e89759ddf7005f9e9c6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49864,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:11.313,2025-05-07T13:22:34.333,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: drm/amdkfd: Fix NULL pointer dereference in svm_migrate_to_ram() ./drivers/gpu/drm/amd/amdkfd/kfd_migrate.c:985:58-62: ERROR: p is NULL but dereferenced.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""6625FAD9-319E-412C-8D78-4A6E90BA989E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/3c1bb6187e566143f15dbf0367ae671584aead5b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5b994354af3cab770bf13386469c5725713679af"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/613d5a9a440828970f1543b962779401ac2c9c62"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49865,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:11.420,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ipv6: addrlabel: fix infoleak when sending struct ifaddrlblmsg to network When copying a `struct ifaddrlblmsg` to the network, __ifal_reserved remained uninitialized, resulting in a 1-byte infoleak: BUG: KMSAN: kernel-network-infoleak in __netdev_start_xmit ./include/linux/netdevice.h:4841 __netdev_start_xmit ./include/linux/netdevice.h:4841 netdev_start_xmit ./include/linux/netdevice.h:4857 xmit_one net/core/dev.c:3590 dev_hard_start_xmit+0x1dc/0x800 net/core/dev.c:3606 __dev_queue_xmit+0x17e8/0x4350 net/core/dev.c:4256 dev_queue_xmit ./include/linux/netdevice.h:3009 __netlink_deliver_tap_skb net/netlink/af_netlink.c:307 __netlink_deliver_tap+0x728/0xad0 net/netlink/af_netlink.c:325 netlink_deliver_tap net/netlink/af_netlink.c:338 __netlink_sendskb net/netlink/af_netlink.c:1263 netlink_sendskb+0x1d9/0x200 net/netlink/af_netlink.c:1272 netlink_unicast+0x56d/0xf50 net/netlink/af_netlink.c:1360 nlmsg_unicast ./include/net/netlink.h:1061 rtnl_unicast+0x5a/0x80 net/core/rtnetlink.c:758 ip6addrlbl_get+0xfad/0x10f0 net/ipv6/addrlabel.c:628 rtnetlink_rcv_msg+0xb33/0x1570 net/core/rtnetlink.c:6082 ... Uninit was created at: slab_post_alloc_hook+0x118/0xb00 mm/slab.h:742 slab_alloc_node mm/slub.c:3398 __kmem_cache_alloc_node+0x4f2/0x930 mm/slub.c:3437 __do_kmalloc_node mm/slab_common.c:954 __kmalloc_node_track_caller+0x117/0x3d0 mm/slab_common.c:975 kmalloc_reserve net/core/skbuff.c:437 __alloc_skb+0x27a/0xab0 net/core/skbuff.c:509 alloc_skb ./include/linux/skbuff.h:1267 nlmsg_new ./include/net/netlink.h:964 ip6addrlbl_get+0x490/0x10f0 net/ipv6/addrlabel.c:608 rtnetlink_rcv_msg+0xb33/0x1570 net/core/rtnetlink.c:6082 netlink_rcv_skb+0x299/0x550 net/netlink/af_netlink.c:2540 rtnetlink_rcv+0x26/0x30 net/core/rtnetlink.c:6109 netlink_unicast_kernel net/netlink/af_netlink.c:1319 netlink_unicast+0x9ab/0xf50 net/netlink/af_netlink.c:1345 netlink_sendmsg+0xebc/0x10f0 net/netlink/af_netlink.c:1921 ... This patch ensures that the reserved field is always initialized.",,,"[{""url"":""https://git.kernel.org/stable/c/0f85b7ae7c4b5d7b4bbf7ac653a733c181a8a2bf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2acb2779b147decd300c117683d5a32ce61c75d6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/49e92ba5ecd7d72ba369dde2ccff738edd028a47"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/568a47ff756f913e8b374c2af9d22cd2c772c744"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/58cd7fdc8c1e6c7873acc08f190069fed88d1c12"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6d26d0587abccb9835382a0b53faa7b9b1cd83e3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a033b86c7f7621fde31f0364af8986f43b44914f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c23fb2c82267638f9d206cb96bb93e1f93ad7828"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49866,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:11.530,2025-05-07T13:22:26.790,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: wwan: mhi: fix memory leak in mhi_mbim_dellink MHI driver registers network device without setting the needs_free_netdev flag, and does NOT call free_netdev() when unregisters network device, which causes a memory leak. This patch sets needs_free_netdev to true when registers network device, which makes netdev subsystem call free_netdev() automatically after unregister_netdevice().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""19FCBA89-4EA3-472C-9992-C74EBB07C02A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2845bc9070cef0c651987487d84d4813d64675dd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3cd3ffe952f78ec5dadf300cb58d4b38a0c0106d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/668205b9c9f94d5ed6ab00cce9a46a654c2b5d16"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49867,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:11.633,2025-05-07T13:22:14.240,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: wwan: iosm: fix memory leak in ipc_wwan_dellink IOSM driver registers network device without setting the needs_free_netdev flag, and does NOT call free_netdev() when unregisters network device, which causes a memory leak. This patch sets needs_free_netdev to true when registers network device, which makes netdev subsystem call free_netdev() automatically after unregister_netdevice().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""FB443DA9-A9E7-45CA-AAF4-AF14F567FE9F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/128514b51a5ba2c82f9e4a106f1c10423907618a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2ce2348c2858d723f7fe389dead9b43b08e0944e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f25caaca424703d5a0607310f0452f978f1f78d9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49868,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:11.733,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: phy: ralink: mt7621-pci: add sentinel to quirks table With mt7621 soc_dev_attr fixed to register the soc as a device, kernel will experience an oops in soc_device_match_attr This quirk test was introduced in the staging driver in commit 9445ccb3714c (""staging: mt7621-pci-phy: add quirks for 'E2' revision using 'soc_device_attribute'""). The staging driver was removed, and later re-added in commit d87da32372a0 (""phy: ralink: Add PHY driver for MT7621 PCIe PHY"") for kernel 5.11",,,"[{""url"":""https://git.kernel.org/stable/c/500bcd3a99eae84412067c3b9e7ffba1c66e6383"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/819b885cd886c193782891c4f51bbcab3de119a4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d539cfd1202d66c2dcea383f1d96835ae72d5809"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49869,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:11.830,2025-05-07T13:22:08.883,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: bnxt_en: Fix possible crash in bnxt_hwrm_set_coal() During the error recovery sequence, the rtnl_lock is not held for the entire duration and some datastructures may be freed during the sequence. Check for the BNXT_STATE_OPEN flag instead of netif_running() to ensure that the device is fully operational before proceeding to reconfigure the coalescing settings. This will fix a possible crash like this: BUG: unable to handle kernel NULL pointer dereference at 0000000000000000 PGD 0 P4D 0 Oops: 0000 [#1] SMP NOPTI CPU: 10 PID: 181276 Comm: ethtool Kdump: loaded Tainted: G IOE --------- - - 4.18.0-348.el8.x86_64 #1 Hardware name: Dell Inc. PowerEdge R740/0F9N89, BIOS 2.3.10 08/15/2019 RIP: 0010:bnxt_hwrm_set_coal+0x1fb/0x2a0 [bnxt_en] Code: c2 66 83 4e 22 08 66 89 46 1c e8 10 cb 00 00 41 83 c6 01 44 39 b3 68 01 00 00 0f 8e a3 00 00 00 48 8b 93 c8 00 00 00 49 63 c6 <48> 8b 2c c2 48 8b 85 b8 02 00 00 48 85 c0 74 2e 48 8b 74 24 08 f6 RSP: 0018:ffffb11c8dcaba50 EFLAGS: 00010246 RAX: 0000000000000000 RBX: ffff8d168a8b0ac0 RCX: 00000000000000c5 RDX: 0000000000000000 RSI: ffff8d162f72c000 RDI: ffff8d168a8b0b28 RBP: 0000000000000000 R08: b6e1f68a12e9a7eb R09: 0000000000000000 R10: 0000000000000001 R11: 0000000000000037 R12: ffff8d168a8b109c R13: ffff8d168a8b10aa R14: 0000000000000000 R15: ffffffffc01ac4e0 FS: 00007f3852e4c740(0000) GS:ffff8d24c0080000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 0000000000000000 CR3: 000000041b3ee003 CR4: 00000000007706e0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 PKRU: 55555554 Call Trace: ethnl_set_coalesce+0x3ce/0x4c0 genl_family_rcv_msg_doit.isra.15+0x10f/0x150 genl_family_rcv_msg+0xb3/0x160 ? coalesce_fill_reply+0x480/0x480 genl_rcv_msg+0x47/0x90 ? genl_family_rcv_msg+0x160/0x160 netlink_rcv_skb+0x4c/0x120 genl_rcv+0x24/0x40 netlink_unicast+0x196/0x230 netlink_sendmsg+0x204/0x3d0 sock_sendmsg+0x4c/0x50 __sys_sendto+0xee/0x160 ? syscall_trace_enter+0x1d3/0x2c0 ? __audit_syscall_exit+0x249/0x2a0 __x64_sys_sendto+0x24/0x30 do_syscall_64+0x5b/0x1a0 entry_SYSCALL_64_after_hwframe+0x65/0xca RIP: 0033:0x7f38524163bb","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4"",""versionEndExcluding"":""5.4.225"",""matchCriteriaId"":""22272FA8-5DCC-4821-B920-45E23BB0DE78""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.155"",""matchCriteriaId"":""172AC75C-0949-4468-9C58-64E2893EF0CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""39DC45D8-E30E-4F4A-9332-393B7BCF6900""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/38147073c96dce8c7e142ce0e5f305a420a729ba"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6d81ea3765dfa6c8a20822613c81edad1c4a16a0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7781e32984cde65549bedc3201537e253297c98d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a5a05fbef4a0dfe45fe03b2f1d02ba23aebf5384"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ac257c43fa615d22180916074feed803b8bb8cb0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49870,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:11.937,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: capabilities: fix undefined behavior in bit shift for CAP_TO_MASK Shifting signed 32-bit value by 31 bits is undefined, so changing significant bit to unsigned. The UBSAN warning calltrace like below: UBSAN: shift-out-of-bounds in security/commoncap.c:1252:2 left shift of 1 by 31 places cannot be represented in type 'int' Call Trace: <TASK> dump_stack_lvl+0x7d/0xa5 dump_stack+0x15/0x1b ubsan_epilogue+0xe/0x4e __ubsan_handle_shift_out_of_bounds+0x1e7/0x20c cap_task_prctl+0x561/0x6f0 security_task_prctl+0x5a/0xb0 __x64_sys_prctl+0x61/0x8f0 do_syscall_64+0x58/0x80 entry_SYSCALL_64_after_hwframe+0x63/0xcd </TASK>",,,"[{""url"":""https://git.kernel.org/stable/c/151dc8087b5609e53b069c068e3f3ee100efa586"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/27bdb134c043ff32c459d98f16550d0ffa0b3c34"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/46653972e3ea64f79e7f8ae3aa41a4d3fdb70a13"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5661f111a1616ac105ec8cec81bff99b60f847ac"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5b79fa628e2ab789e629a83cd211ef9b4c1a593e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/65b0bc7a0690861812ade523d19f82688ab819dc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dbaab08c8677d598244d21afb7818e44e1c5d826"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fcbd2b336834bd24e1d9454ad5737856470c10d7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49871,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:12.030,2025-05-07T13:22:01.837,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: tun: Fix memory leaks of napi_get_frags kmemleak reports after running test_progs: unreferenced object 0xffff8881b1672dc0 (size 232): comm ""test_progs"", pid 394388, jiffies 4354712116 (age 841.975s) hex dump (first 32 bytes): e0 84 d7 a8 81 88 ff ff 80 2c 67 b1 81 88 ff ff .........,g..... 00 40 c5 9b 81 88 ff ff 00 00 00 00 00 00 00 00 .@.............. backtrace: [<00000000c8f01748>] napi_skb_cache_get+0xd4/0x150 [<0000000041c7fc09>] __napi_build_skb+0x15/0x50 [<00000000431c7079>] __napi_alloc_skb+0x26e/0x540 [<000000003ecfa30e>] napi_get_frags+0x59/0x140 [<0000000099b2199e>] tun_get_user+0x183d/0x3bb0 [tun] [<000000008a5adef0>] tun_chr_write_iter+0xc0/0x1b1 [tun] [<0000000049993ff4>] do_iter_readv_writev+0x19f/0x320 [<000000008f338ea2>] do_iter_write+0x135/0x630 [<000000008a3377a4>] vfs_writev+0x12e/0x440 [<00000000a6b5639a>] do_writev+0x104/0x280 [<00000000ccf065d8>] do_syscall_64+0x3b/0x90 [<00000000d776e329>] entry_SYSCALL_64_after_hwframe+0x63/0xcd The issue occurs in the following scenarios: tun_get_user() napi_gro_frags() napi_frags_finish() case GRO_NORMAL: gro_normal_one() list_add_tail(&skb->list, &napi->rx_list); <-- While napi->rx_count < READ_ONCE(gro_normal_batch), <-- gro_normal_list() is not called, napi->rx_list is not empty <-- not ask to complete the gro work, will cause memory leaks in <-- following tun_napi_del() ... tun_napi_del() netif_napi_del() __netif_napi_del() <-- &napi->rx_list is not empty, which caused memory leaks To fix, add napi_complete() after napi_gro_frags().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.267"",""matchCriteriaId"":""A5C69A12-68E2-400E-9A5A-375A673C8402""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.225"",""matchCriteriaId"":""94D21814-3051-4860-AB06-C7880A3D4933""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.155"",""matchCriteriaId"":""172AC75C-0949-4468-9C58-64E2893EF0CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""39DC45D8-E30E-4F4A-9332-393B7BCF6900""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1118b2049d77ca0b505775fc1a8d1909cf19a7ec"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/223ef6a94e52331a6a7ef31e59921e0e82d2d40a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3401f964028ac941425b9b2c8ff8a022539ef44a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8b12a020b20a78f62bedc50f26db3bf4fadf8cb9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a4f73f6adc53fd7a3f9771cbc89a03ef39b0b755"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d7569302a7a52a9305d2fb054df908ff985553bb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49872,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:12.133,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: gso: fix panic on frag_list with mixed head alloc types Since commit 3dcbdb134f32 (""net: gso: Fix skb_segment splat when splitting gso_size mangled skb having linear-headed frag_list""), it is allowed to change gso_size of a GRO packet. However, that commit assumes that ""checking the first list_skb member suffices; i.e if either of the list_skb members have non head_frag head, then the first one has too"". It turns out this assumption does not hold. We've seen BUG_ON being hit in skb_segment when skbs on the frag_list had differing head_frag with the vmxnet3 driver. This happens because __netdev_alloc_skb and __napi_alloc_skb can return a skb that is page backed or kmalloced depending on the requested size. As the result, the last small skb in the GRO packet can be kmalloced. There are three different locations where this can be fixed: (1) We could check head_frag in GRO and not allow GROing skbs with different head_frag. However, that would lead to performance regression on normal forward paths with unmodified gso_size, where !head_frag in the last packet is not a problem. (2) Set a flag in bpf_skb_net_grow and bpf_skb_net_shrink indicating that NETIF_F_SG is undesirable. That would need to eat a bit in sk_buff. Furthermore, that flag can be unset when all skbs on the frag_list are page backed. To retain good performance, bpf_skb_net_grow/shrink would have to walk the frag_list. (3) Walk the frag_list in skb_segment when determining whether NETIF_F_SG should be cleared. This of course slows things down. This patch implements (3). To limit the performance impact in skb_segment, the list is walked only for skbs with SKB_GSO_DODGY set that have gso_size changed. Normal paths thus will not hit it. We could check only the last skb but since we need to walk the whole list anyway, let's stay on the safe side.",,,"[{""url"":""https://git.kernel.org/stable/c/0a9f56e525ea871d3950b90076912f5c7494f00f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/50868de7dc4e7f0fcadd6029f32bf4387c102ee6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5876b7f249a1ecbbcc8e35072c3828d6526d1c3a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/598d9e30927b15731e83797fbd700ecf399f42dd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/65ad047fd83502447269fda8fd26c99077a9af47"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9e4b7a99a03aefd37ba7bb1f022c8efab5019165"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ad25a115f50800c6847e0d841c5c7992a9f7c1b3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bd5362e58721e4d0d1a37796593bd6e51536ce7a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49873,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:12.240,2025-05-07T13:21:56.420,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: bpf: Fix wrong reg type conversion in release_reference() Some helper functions will allocate memory. To avoid memory leaks, the verifier requires the eBPF program to release these memories by calling the corresponding helper functions. When a resource is released, all pointer registers corresponding to the resource should be invalidated. The verifier use release_references() to do this job, by apply __mark_reg_unknown() to each relevant register. It will give these registers the type of SCALAR_VALUE. A register that will contain a pointer value at runtime, but of type SCALAR_VALUE, which may allow the unprivileged user to get a kernel pointer by storing this register into a map. Using __mark_reg_not_init() while NOT allow_ptr_leaks can mitigate this problem.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-704""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.10.155"",""matchCriteriaId"":""91F46A95-7482-4E48-87C2-CFB90EFA6AAE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""39DC45D8-E30E-4F4A-9332-393B7BCF6900""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/466ce46f251dfb259a8cbaa895ab9edd6fb56240"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ae5ccad6c711db0f2ca1231be051935dd128b8f5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cedd4f01f67be94735f15123158f485028571037"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f1db20814af532f85e091231223e5e4818e8464b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49874,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:12.340,2025-05-07T13:21:49.873,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: HID: hyperv: fix possible memory leak in mousevsc_probe() If hid_add_device() returns error, it should call hid_destroy_device() to free hid_dev which is allocated in hid_allocate_device().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.3"",""versionEndExcluding"":""4.9.334"",""matchCriteriaId"":""7A00CD9E-22EC-4F5A-801B-A2D65C81E31F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.300"",""matchCriteriaId"":""424802D2-E9E7-48A9-AD6F-DF2227B3D83A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.267"",""matchCriteriaId"":""A5C69A12-68E2-400E-9A5A-375A673C8402""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.225"",""matchCriteriaId"":""94D21814-3051-4860-AB06-C7880A3D4933""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.155"",""matchCriteriaId"":""172AC75C-0949-4468-9C58-64E2893EF0CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""39DC45D8-E30E-4F4A-9332-393B7BCF6900""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/249b743801c00542e9324f87b380032e957a43e8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5ad95d71344b7ffec360d62591633b3c465dc049"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5f3aba6566b866f5b0a4916f0b2e8a6ae66a6451"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8597b59e3d22b27849bd3e4f92a3d466774bfb04"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a6d2fb1874c52ace1f5cf1966ee558829c5c19b6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b5bcb94b0954a026bbd671741fdb00e7141f9c91"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e29289d0d8193fca6d2c1f0a1de75cfc80edec00"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ed75d1a1c31a0cae8ecc8bcea710b25c0be68da0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49875,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:12.450,2025-05-07T13:21:37.030,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: bpftool: Fix NULL pointer dereference when pin {PROG, MAP, LINK} without FILE When using bpftool to pin {PROG, MAP, LINK} without FILE, segmentation fault will occur. The reson is that the lack of FILE will cause strlen to trigger NULL pointer dereference. The corresponding stacktrace is shown below: do_pin do_pin_any do_pin_fd mount_bpffs_for_pin strlen(name) <- NULL pointer dereference Fix it by adding validation to the common process.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.7"",""versionEndExcluding"":""5.10.155"",""matchCriteriaId"":""480078F8-76F3-495F-A2A7-0F04B65A542F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""39DC45D8-E30E-4F4A-9332-393B7BCF6900""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/34de8e6e0e1f66e431abf4123934a2581cb5f133"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6dcdd1b68b7f9333d48d48fc77b75e7f235f6a4a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8c80b2fca4112d724dde477aed13f7b0510a2792"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/da5161ba94c5e9182c301dd4f09c94f715c068bd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49876,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:12.550,2025-05-07T13:21:31.450,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: wifi: mac80211: fix general-protection-fault in ieee80211_subif_start_xmit() When device is running and the interface status is changed, the gpf issue is triggered. The problem triggering process is as follows: Thread A: Thread B ieee80211_runtime_change_iftype() process_one_work() ... ... ieee80211_do_stop() ... ... ... sdata->bss = NULL ... ... ieee80211_subif_start_xmit() ieee80211_multicast_to_unicast //!sdata->bss->multicast_to_unicast cause gpf issue When the interface status is changed, the sending queue continues to send packets. After the bss is set to NULL, the bss is accessed. As a result, this causes a general-protection-fault issue. The following is the stack information: general protection fault, probably for non-canonical address 0xdffffc000000002f: 0000 [#1] PREEMPT SMP KASAN KASAN: null-ptr-deref in range [0x0000000000000178-0x000000000000017f] Workqueue: mld mld_ifc_work RIP: 0010:ieee80211_subif_start_xmit+0x25b/0x1310 Call Trace: <TASK> dev_hard_start_xmit+0x1be/0x990 __dev_queue_xmit+0x2c9a/0x3b60 ip6_finish_output2+0xf92/0x1520 ip6_finish_output+0x6af/0x11e0 ip6_output+0x1ed/0x540 mld_sendpack+0xa09/0xe70 mld_ifc_work+0x71c/0xdb0 process_one_work+0x9bf/0x1710 worker_thread+0x665/0x1080 kthread+0x2e4/0x3a0 ret_from_fork+0x1f/0x30 </TASK>","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.19"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""D0A4E4AD-3B87-42F8-BB1A-CCA3FC47367F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/03eb68c72cee249aeb7af7d04a83c033aca3d6d9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/780854186946e0de2be192ee7fa5125666533b3a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49877,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:12.653,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: bpf, sockmap: Fix the sk->sk_forward_alloc warning of sk_stream_kill_queues When running `test_sockmap` selftests, the following warning appears: WARNING: CPU: 2 PID: 197 at net/core/stream.c:205 sk_stream_kill_queues+0xd3/0xf0 Call Trace: <TASK> inet_csk_destroy_sock+0x55/0x110 tcp_rcv_state_process+0xd28/0x1380 ? tcp_v4_do_rcv+0x77/0x2c0 tcp_v4_do_rcv+0x77/0x2c0 __release_sock+0x106/0x130 __tcp_close+0x1a7/0x4e0 tcp_close+0x20/0x70 inet_release+0x3c/0x80 __sock_release+0x3a/0xb0 sock_close+0x14/0x20 __fput+0xa3/0x260 task_work_run+0x59/0xb0 exit_to_user_mode_prepare+0x1b3/0x1c0 syscall_exit_to_user_mode+0x19/0x50 do_syscall_64+0x48/0x90 entry_SYSCALL_64_after_hwframe+0x44/0xae The root case is in commit 84472b436e76 (""bpf, sockmap: Fix more uncharged while msg has more_data""), where I used msg->sg.size to replace the tosend, causing breakage: if (msg->apply_bytes && msg->apply_bytes < tosend) tosend = psock->apply_bytes;",,,"[{""url"":""https://git.kernel.org/stable/c/14e8bc3bf7bd6af64d7538a0684c8238d96cdfd7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8ec95b94716a1e4d126edc3fb2bc426a717e2dba"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/95adbd2ac8de82e43fd6b347e7e1b47f74dc1abb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cc21dc48a78cc9e5af9a4d039cd456446a6e73ff"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d975bec1eaeb52341acc9273db79ddb078220399"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49878,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:12.753,2025-05-07T13:21:23.850,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: bpf, verifier: Fix memory leak in array reallocation for stack state If an error (NULL) is returned by krealloc(), callers of realloc_array() were setting their allocation pointers to NULL, but on error krealloc() does not touch the original allocation. This would result in a memory resource leak. Instead, free the old allocation on the error handling path. The memory leak information is as follows as also reported by Zhengchao: unreferenced object 0xffff888019801800 (size 256): comm ""bpf_repo"", pid 6490, jiffies 4294959200 (age 17.170s) hex dump (first 32 bytes): 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [<00000000b211474b>] __kmalloc_node_track_caller+0x45/0xc0 [<0000000086712a0b>] krealloc+0x83/0xd0 [<00000000139aab02>] realloc_array+0x82/0xe2 [<00000000b1ca41d1>] grow_stack_state+0xfb/0x186 [<00000000cd6f36d2>] check_mem_access.cold+0x141/0x1341 [<0000000081780455>] do_check_common+0x5358/0xb350 [<0000000015f6b091>] bpf_check.cold+0xc3/0x29d [<000000002973c690>] bpf_prog_load+0x13db/0x2240 [<00000000028d1644>] __sys_bpf+0x1605/0x4ce0 [<00000000053f29bd>] __x64_sys_bpf+0x75/0xb0 [<0000000056fedaf5>] do_syscall_64+0x35/0x80 [<000000002bd58261>] entry_SYSCALL_64_after_hwframe+0x63/0xcd","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""FB443DA9-A9E7-45CA-AAF4-AF14F567FE9F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/06615967d4889b08b19ff3dda96e8b131282f73d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3e210891c4a4c2d858cd6f9f61d5809af251d4df"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/42378a9ca55347102bbf86708776061d8fe3ece2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49879,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:12.857,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ext4: fix BUG_ON() when directory entry has invalid rec_len The rec_len field in the directory entry has to be a multiple of 4. A corrupted filesystem image can be used to hit a BUG() in ext4_rec_len_to_disk(), called from make_indexed_dir(). ------------[ cut here ]------------ kernel BUG at fs/ext4/ext4.h:2413! ... RIP: 0010:make_indexed_dir+0x53f/0x5f0 ... Call Trace: <TASK> ? add_dirent_to_buf+0x1b2/0x200 ext4_add_entry+0x36e/0x480 ext4_add_nondir+0x2b/0xc0 ext4_create+0x163/0x200 path_openat+0x635/0xe90 do_filp_open+0xb4/0x160 ? __create_object.isra.0+0x1de/0x3b0 ? _raw_spin_unlock+0x12/0x30 do_sys_openat2+0x91/0x150 __x64_sys_open+0x6c/0xa0 do_syscall_64+0x3c/0x80 entry_SYSCALL_64_after_hwframe+0x46/0xb0 The fix simply adds a call to ext4_check_dir_entry() to validate the directory entry, returning -EFSCORRUPTED if the entry is invalid.",,,"[{""url"":""https://git.kernel.org/stable/c/156451a67b93986fb07c274ef6995ff40766c5ad"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/17a0bc9bd697f75cfdf9b378d5eb2d7409c91340"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2fa24d0274fbf913b56ee31f15bc01168669d909"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/999cff2b6ce3b45c08abf793bf55534777421327"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ce1ee2c8827fb6493e91acbd50f664cf2a972c3d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49880,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:12.960,2025-05-07T13:21:17.940,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ext4: fix warning in 'ext4_da_release_space' Syzkaller report issue as follows: EXT4-fs (loop0): Free/Dirty block details EXT4-fs (loop0): free_blocks=0 EXT4-fs (loop0): dirty_blocks=0 EXT4-fs (loop0): Block reservation details EXT4-fs (loop0): i_reserved_data_blocks=0 EXT4-fs warning (device loop0): ext4_da_release_space:1527: ext4_da_release_space: ino 18, to_free 1 with only 0 reserved data blocks ------------[ cut here ]------------ WARNING: CPU: 0 PID: 92 at fs/ext4/inode.c:1528 ext4_da_release_space+0x25e/0x370 fs/ext4/inode.c:1524 Modules linked in: CPU: 0 PID: 92 Comm: kworker/u4:4 Not tainted 6.0.0-syzkaller-09423-g493ffd6605b2 #0 Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/22/2022 Workqueue: writeback wb_workfn (flush-7:0) RIP: 0010:ext4_da_release_space+0x25e/0x370 fs/ext4/inode.c:1528 RSP: 0018:ffffc900015f6c90 EFLAGS: 00010296 RAX: 42215896cd52ea00 RBX: 0000000000000000 RCX: 42215896cd52ea00 RDX: 0000000000000000 RSI: 0000000080000001 RDI: 0000000000000000 RBP: 1ffff1100e907d96 R08: ffffffff816aa79d R09: fffff520002bece5 R10: fffff520002bece5 R11: 1ffff920002bece4 R12: ffff888021fd2000 R13: ffff88807483ecb0 R14: 0000000000000001 R15: ffff88807483e740 FS: 0000000000000000(0000) GS:ffff8880b9a00000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00005555569ba628 CR3: 000000000c88e000 CR4: 00000000003506f0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Call Trace: <TASK> ext4_es_remove_extent+0x1ab/0x260 fs/ext4/extents_status.c:1461 mpage_release_unused_pages+0x24d/0xef0 fs/ext4/inode.c:1589 ext4_writepages+0x12eb/0x3be0 fs/ext4/inode.c:2852 do_writepages+0x3c3/0x680 mm/page-writeback.c:2469 __writeback_single_inode+0xd1/0x670 fs/fs-writeback.c:1587 writeback_sb_inodes+0xb3b/0x18f0 fs/fs-writeback.c:1870 wb_writeback+0x41f/0x7b0 fs/fs-writeback.c:2044 wb_do_writeback fs/fs-writeback.c:2187 [inline] wb_workfn+0x3cb/0xef0 fs/fs-writeback.c:2227 process_one_work+0x877/0xdb0 kernel/workqueue.c:2289 worker_thread+0xb14/0x1330 kernel/workqueue.c:2436 kthread+0x266/0x300 kernel/kthread.c:376 ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:306 </TASK> Above issue may happens as follows: ext4_da_write_begin ext4_create_inline_data ext4_clear_inode_flag(inode, EXT4_INODE_EXTENTS); ext4_set_inode_flag(inode, EXT4_INODE_INLINE_DATA); __ext4_ioctl ext4_ext_migrate -> will lead to eh->eh_entries not zero, and set extent flag ext4_da_write_begin ext4_da_convert_inline_data_to_extent ext4_da_write_inline_data_begin ext4_da_map_blocks ext4_insert_delayed_block if (!ext4_es_scan_clu(inode, &ext4_es_is_delonly, lblk)) if (!ext4_es_scan_clu(inode, &ext4_es_is_mapped, lblk)) ext4_clu_mapped(inode, EXT4_B2C(sbi, lblk)); -> will return 1 allocated = true; ext4_es_insert_delayed_block(inode, lblk, allocated); ext4_writepages mpage_map_and_submit_extent(handle, &mpd, &give_up_on_write); -> return -ENOSPC mpage_release_unused_pages(&mpd, give_up_on_write); -> give_up_on_write == 1 ext4_es_remove_extent ext4_da_release_space(inode, reserved); if (unlikely(to_free > ei->i_reserved_data_blocks)) -> to_free == 1 but ei->i_reserved_data_blocks == 0 -> then trigger warning as above To solve above issue, forbid inode do migrate which has inline data.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-noinfo""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""4.9.333"",""matchCriteriaId"":""BD342BE3-BDB3-4031-9F0B-DE4F90246387""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.299"",""matchCriteriaId"":""2FE9A829-20E8-4929-AE9B-02761322A926""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.265"",""matchCriteriaId"":""ABED5D97-9B16-4CF6-86E3-D5F5C4358E35""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.224"",""matchCriteriaId"":""1D67A077-EB45-4ADE-94CD-F9A76F6C319C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""475D097C-AB5A-4CF5-899F-413077854ABD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""AB8B27B9-B41B-42D5-AE67-0A89A8A8EEB1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0a43c015e98121c91a76154edf42280ce1a8a883"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0de5ee103747fd3a24f1c010c79caabe35e8f0bb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1b8f787ef547230a3249bcf897221ef0cc78481b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5370b965b7a945bb8f48b9ee23d83a76a947902e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/72743d5598b9096950bbfd6a9b7f173d156eea97"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/890d738f569fa9412b70ba09f15407f17a52da20"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/89bee03d2fb8c54119b38ac6c24e7d60fae036b6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c3bf1e95cfa7d950dc3c064d0c2e3d06b427bc63"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49881,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:13.077,2025-05-07T13:21:11.203,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: wifi: cfg80211: fix memory leak in query_regdb_file() In the function query_regdb_file() the alpha2 parameter is duplicated using kmemdup() and subsequently freed in regdb_fw_cb(). However, request_firmware_nowait() can fail without calling regdb_fw_cb() and thus leak memory.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.267"",""matchCriteriaId"":""A5C69A12-68E2-400E-9A5A-375A673C8402""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.225"",""matchCriteriaId"":""94D21814-3051-4860-AB06-C7880A3D4933""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.155"",""matchCriteriaId"":""172AC75C-0949-4468-9C58-64E2893EF0CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.79"",""matchCriteriaId"":""39DC45D8-E30E-4F4A-9332-393B7BCF6900""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.9"",""matchCriteriaId"":""C3F26709-7D49-4AF0-8145-46CCF4E8E2AD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*"",""matchCriteriaId"":""1C6E00FE-5FB9-4D20-A1A1-5A32128F9B76""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0ede1a988299e95d54bd89551fd635980572e920"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/219446396786330937bcd382a7bc4ccd767383bc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/38c9fa2cc6bf4b6e1a74057aef8b5cffd23d3264"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/57b962e627ec0ae53d4d16d7bd1033e27e67677a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e1e12180321f416d83444f2cdc9259e0f5093d35"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e9b5a4566d5bc71cc901be50d1fa24da00613120"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49882,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:13.183,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: KVM: Reject attempts to consume or refresh inactive gfn_to_pfn_cache Reject kvm_gpc_check() and kvm_gpc_refresh() if the cache is inactive. Not checking the active flag during refresh is particularly egregious, as KVM can end up with a valid, inactive cache, which can lead to a variety of use-after-free bugs, e.g. consuming a NULL kernel pointer or missing an mmu_notifier invalidation due to the cache not being on the list of gfns to invalidate. Note, ""active"" needs to be set if and only if the cache is on the list of caches, i.e. is reachable via mmu_notifier events. If a relevant mmu_notifier event occurs while the cache is ""active"" but not on the list, KVM will not acquire the cache's lock and so will not serailize the mmu_notifier event with active users and/or kvm_gpc_refresh(). A race between KVM_XEN_ATTR_TYPE_SHARED_INFO and KVM_XEN_HVM_EVTCHN_SEND can be exploited to trigger the bug. 1. Deactivate shinfo cache: kvm_xen_hvm_set_attr case KVM_XEN_ATTR_TYPE_SHARED_INFO kvm_gpc_deactivate kvm_gpc_unmap gpc->valid = false gpc->khva = NULL gpc->active = false Result: active = false, valid = false 2. Cause cache refresh: kvm_arch_vm_ioctl case KVM_XEN_HVM_EVTCHN_SEND kvm_xen_hvm_evtchn_send kvm_xen_set_evtchn kvm_xen_set_evtchn_fast kvm_gpc_check return -EWOULDBLOCK because !gpc->valid kvm_xen_set_evtchn_fast return -EWOULDBLOCK kvm_gpc_refresh hva_to_pfn_retry gpc->valid = true gpc->khva = not NULL Result: active = false, valid = true 3. Race ioctl KVM_XEN_HVM_EVTCHN_SEND against ioctl KVM_XEN_ATTR_TYPE_SHARED_INFO: kvm_arch_vm_ioctl case KVM_XEN_HVM_EVTCHN_SEND kvm_xen_hvm_evtchn_send kvm_xen_set_evtchn kvm_xen_set_evtchn_fast read_lock gpc->lock kvm_xen_hvm_set_attr case KVM_XEN_ATTR_TYPE_SHARED_INFO mutex_lock kvm->lock kvm_xen_shared_info_init kvm_gpc_activate gpc->khva = NULL kvm_gpc_check [ Check passes because gpc->valid is still true, even though gpc->khva is already NULL. ] shinfo = gpc->khva pending_bits = shinfo->evtchn_pending CRASH: test_and_set_bit(..., pending_bits)",,,"[{""url"":""https://git.kernel.org/stable/c/bfa9672f8fc9eb118124bab61899d2dd497f95ba"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ecbcf030b45666ad11bc98565e71dfbcb7be4393"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49883,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:13.287,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: KVM: x86: smm: number of GPRs in the SMRAM image depends on the image format On 64 bit host, if the guest doesn't have X86_FEATURE_LM, KVM will access 16 gprs to 32-bit smram image, causing out-ouf-bound ram access. On 32 bit host, the rsm_load_state_64/enter_smm_save_state_64 is compiled out, thus access overflow can't happen.",,,"[{""url"":""https://git.kernel.org/stable/c/696db303e54f7352623d9f640e6c51d8fa9d5588"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a7ebfbea0f52550d7cdf12c38f3f5eaa7b2b6494"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49884,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:13.387,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: KVM: Initialize gfn_to_pfn_cache locks in dedicated helper Move the gfn_to_pfn_cache lock initialization to another helper and call the new helper during VM/vCPU creation. There are race conditions possible due to kvm_gfn_to_pfn_cache_init()'s ability to re-initialize the cache's locks. For example: a race between ioctl(KVM_XEN_HVM_EVTCHN_SEND) and kvm_gfn_to_pfn_cache_init() leads to a corrupted shinfo gpc lock. (thread 1) | (thread 2) | kvm_xen_set_evtchn_fast | read_lock_irqsave(&gpc->lock, ...) | | kvm_gfn_to_pfn_cache_init | rwlock_init(&gpc->lock) read_unlock_irqrestore(&gpc->lock, ...) | Rename ""cache_init"" and ""cache_destroy"" to activate+deactivate to avoid implying that the cache really is destroyed/freed. Note, there more races in the newly named kvm_gpc_activate() that will be addressed separately. [sean: call out that this is a bug fix]",,,"[{""url"":""https://git.kernel.org/stable/c/52491a38b2c2411f3f0229dc6ad610349c704a41"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/61242001d6c9c253df7645dab090842d8da08764"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49885,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:13.480,2025-05-07T13:21:04.487,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ACPI: APEI: Fix integer overflow in ghes_estatus_pool_init() Change num_ghes from int to unsigned int, preventing an overflow and causing subsequent vmalloc() to fail. The overflow happens in ghes_estatus_pool_init() when calculating len during execution of the statement below as both multiplication operands here are signed int: len += (num_ghes * GHES_ESOURCE_PREALLOC_MAX_SIZE); The following call trace is observed because of this bug: [ 9.317108] swapper/0: vmalloc error: size 18446744071562596352, exceeds total pages, mode:0xcc0(GFP_KERNEL), nodemask=(null),cpuset=/,mems_allowed=0-1 [ 9.317131] Call Trace: [ 9.317134] <TASK> [ 9.317137] dump_stack_lvl+0x49/0x5f [ 9.317145] dump_stack+0x10/0x12 [ 9.317146] warn_alloc.cold+0x7b/0xdf [ 9.317150] ? __device_attach+0x16a/0x1b0 [ 9.317155] __vmalloc_node_range+0x702/0x740 [ 9.317160] ? device_add+0x17f/0x920 [ 9.317164] ? dev_set_name+0x53/0x70 [ 9.317166] ? platform_device_add+0xf9/0x240 [ 9.317168] __vmalloc_node+0x49/0x50 [ 9.317170] ? ghes_estatus_pool_init+0x43/0xa0 [ 9.317176] vmalloc+0x21/0x30 [ 9.317177] ghes_estatus_pool_init+0x43/0xa0 [ 9.317179] acpi_hest_init+0x129/0x19c [ 9.317185] acpi_init+0x434/0x4a4 [ 9.317188] ? acpi_sleep_proc_init+0x2a/0x2a [ 9.317190] do_one_initcall+0x48/0x200 [ 9.317195] kernel_init_freeable+0x221/0x284 [ 9.317200] ? rest_init+0xe0/0xe0 [ 9.317204] kernel_init+0x1a/0x130 [ 9.317205] ret_from_fork+0x22/0x30 [ 9.317208] </TASK> [ rjw: Subject and changelog edits ]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-190""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""FA1EA5DB-DA69-40A9-9060-30F90C4DF51E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""AB8B27B9-B41B-42D5-AE67-0A89A8A8EEB1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/43d2748394c3feb86c0c771466f5847e274fc043"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4c10c854113720cbfe75d4f51db79b700a629e73"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9edf20e5a1d805855e78f241cf221d741b50d482"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c50ec15725e005e9fb20bce69b6c23b135a4a9b7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49886,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:13.590,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: x86/tdx: Panic on bad configs that #VE on ""private"" memory access All normal kernel memory is ""TDX private memory"". This includes everything from kernel stacks to kernel text. Handling exceptions on arbitrary accesses to kernel memory is essentially impossible because they can happen in horribly nasty places like kernel entry/exit. But, TDX hardware can theoretically _deliver_ a virtualization exception (#VE) on any access to private memory. But, it's not as bad as it sounds. TDX can be configured to never deliver these exceptions on private memory with a ""TD attribute"" called ATTR_SEPT_VE_DISABLE. The guest has no way to *set* this attribute, but it can check it. Ensure ATTR_SEPT_VE_DISABLE is set in early boot. panic() if it is unset. There is no sane way for Linux to run with this attribute clear so a panic() is appropriate. There's small window during boot before the check where kernel has an early #VE handler. But the handler is only for port I/O and will also panic() as soon as it sees any other #VE, such as a one generated by a private memory access. [ dhansen: Rewrite changelog and rebase on new tdx_parse_tdinfo(). Add Kirill's tested-by because I made changes since he wrote this. ]",,,"[{""url"":""https://git.kernel.org/stable/c/373e715e31bf4e0f129befe87613a278fac228d3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/895c168c8f78079f21ad50fead7593ffa352f795"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49887,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:13.690,2025-05-07T13:20:20.687,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: media: meson: vdec: fix possible refcount leak in vdec_probe() v4l2_device_unregister need to be called to put the refcount got by v4l2_device_register when vdec_probe fails or vdec_remove is called.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionEndExcluding"":""5.4.224"",""matchCriteriaId"":""1A06F3FB-68BF-4D02-8B97-06AB86DC13A7""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""475D097C-AB5A-4CF5-899F-413077854ABD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""AB8B27B9-B41B-42D5-AE67-0A89A8A8EEB1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0457e7b12ece1a7e41fa0ae8b7e47c0a72a83bef"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/70119756311a0be3b95bec2e1ba714673e90feba"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7718999356234d9cc6a11b4641bb773928f1390f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/be6e22f54623d8a856a4f167b25be73c2ff1ff80"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f96ad391d054bd5c36994f98afd6a12cbb5600bf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49888,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:13.790,2025-05-07T13:20:08.403,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: arm64: entry: avoid kprobe recursion The cortex_a76_erratum_1463225_debug_handler() function is called when handling debug exceptions (and synchronous exceptions from BRK instructions), and so is called when a probed function executes. If the compiler does not inline cortex_a76_erratum_1463225_debug_handler(), it can be probed. If cortex_a76_erratum_1463225_debug_handler() is probed, any debug exception or software breakpoint exception will result in recursive exceptions leading to a stack overflow. This can be triggered with the ftrace multiple_probes selftest, and as per the example splat below. This is a regression caused by commit: 6459b8469753e9fe (""arm64: entry: consolidate Cortex-A76 erratum 1463225 workaround"") ... which removed the NOKPROBE_SYMBOL() annotation associated with the function. My intent was that cortex_a76_erratum_1463225_debug_handler() would be inlined into its caller, el1_dbg(), which is marked noinstr and cannot be probed. Mark cortex_a76_erratum_1463225_debug_handler() as __always_inline to ensure this. Example splat prior to this patch (with recursive entries elided): | # echo p cortex_a76_erratum_1463225_debug_handler > /sys/kernel/debug/tracing/kprobe_events | # echo p do_el0_svc >> /sys/kernel/debug/tracing/kprobe_events | # echo 1 > /sys/kernel/debug/tracing/events/kprobes/enable | Insufficient stack space to handle exception! | ESR: 0x0000000096000047 -- DABT (current EL) | FAR: 0xffff800009cefff0 | Task stack: [0xffff800009cf0000..0xffff800009cf4000] | IRQ stack: [0xffff800008000000..0xffff800008004000] | Overflow stack: [0xffff00007fbc00f0..0xffff00007fbc10f0] | CPU: 0 PID: 145 Comm: sh Not tainted 6.0.0 #2 | Hardware name: linux,dummy-virt (DT) | pstate: 604003c5 (nZCv DAIF +PAN -UAO -TCO -DIT -SSBS BTYPE=--) | pc : arm64_enter_el1_dbg+0x4/0x20 | lr : el1_dbg+0x24/0x5c | sp : ffff800009cf0000 | x29: ffff800009cf0000 x28: ffff000002c74740 x27: 0000000000000000 | x26: 0000000000000000 x25: 0000000000000000 x24: 0000000000000000 | x23: 00000000604003c5 x22: ffff80000801745c x21: 0000aaaac95ac068 | x20: 00000000f2000004 x19: ffff800009cf0040 x18: 0000000000000000 | x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000 | x14: 0000000000000000 x13: 0000000000000000 x12: 0000000000000000 | x11: 0000000000000010 x10: ffff800008c87190 x9 : ffff800008ca00d0 | x8 : 000000000000003c x7 : 0000000000000000 x6 : 0000000000000000 | x5 : 0000000000000000 x4 : 0000000000000000 x3 : 00000000000043a4 | x2 : 00000000f2000004 x1 : 00000000f2000004 x0 : ffff800009cf0040 | Kernel panic - not syncing: kernel stack overflow | CPU: 0 PID: 145 Comm: sh Not tainted 6.0.0 #2 | Hardware name: linux,dummy-virt (DT) | Call trace: | dump_backtrace+0xe4/0x104 | show_stack+0x18/0x4c | dump_stack_lvl+0x64/0x7c | dump_stack+0x18/0x38 | panic+0x14c/0x338 | test_taint+0x0/0x2c | panic_bad_stack+0x104/0x118 | handle_bad_stack+0x34/0x48 | __bad_stack+0x78/0x7c | arm64_enter_el1_dbg+0x4/0x20 | el1h_64_sync_handler+0x40/0x98 | el1h_64_sync+0x64/0x68 | cortex_a76_erratum_1463225_debug_handler+0x0/0x34 ... | el1h_64_sync_handler+0x40/0x98 | el1h_64_sync+0x64/0x68 | cortex_a76_erratum_1463225_debug_handler+0x0/0x34 ... | el1h_64_sync_handler+0x40/0x98 | el1h_64_sync+0x64/0x68 | cortex_a76_erratum_1463225_debug_handler+0x0/0x34 | el1h_64_sync_handler+0x40/0x98 | el1h_64_sync+0x64/0x68 | do_el0_svc+0x0/0x28 | el0t_64_sync_handler+0x84/0xf0 | el0t_64_sync+0x18c/0x190 | Kernel Offset: disabled | CPU features: 0x0080,00005021,19001080 | Memory Limit: none | ---[ end Kernel panic - not syncing: kernel stack overflow ]--- With this patch, cortex_a76_erratum_1463225_debug_handler() is inlined into el1_dbg(), and el1_dbg() cannot be probed: | # echo p cortex_a76_erratum_1463225_debug_handler > /sys/kernel/debug/tracing/kprobe_events | sh: write error: No such file or directory | # grep -w cortex_a76_errat ---truncated---","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-787""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.12"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""047D3644-B2CA-4427-B14E-7F2ADE40217B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/024f4b2e1f874934943eb2d3d288ebc52c79f55c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/71d6c33fe223255f4416a01514da2c0bc3e283e7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/db66629d43b2d12cb43b004a4ca6be1d03228e97"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49889,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:13.897,2025-05-07T13:19:59.030,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ring-buffer: Check for NULL cpu_buffer in ring_buffer_wake_waiters() On some machines the number of listed CPUs may be bigger than the actual CPUs that exist. The tracing subsystem allocates a per_cpu directory with access to the per CPU ring buffer via a cpuX file. But to save space, the ring buffer will only allocate buffers for online CPUs, even though the CPU array will be as big as the nr_cpu_ids. With the addition of waking waiters on the ring buffer when closing the file, the ring_buffer_wake_waiters() now needs to make sure that the buffer is allocated (with the irq_work allocated with it) before trying to wake waiters, as it will cause a NULL pointer dereference. While debugging this, I added a NULL check for the buffer itself (which is OK to do), and also NULL pointer checks against buffer->buffers (which is not fine, and will WARN) as well as making sure the CPU number passed in is within the nr_cpu_ids (which is also not fine if it isn't). Bugzilla: https://bugzilla.opensuse.org/show_bug.cgi?id=1204705","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15.75"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""C4CB2AAA-62E0-462D-A82C-B508C89FE544""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.19.17"",""versionEndExcluding"":""6.0"",""matchCriteriaId"":""6817F83D-0EC4-49B2-AAB2-1836D288AE4E""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""6.0.3"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""4D03DFBA-5776-42FE-83ED-12B26DA723B5""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/49ca992f6e50d0f46ec9608f44e011cf3121f389"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7433632c9ff68a991bd0bc38cabf354e9d2de410"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b5074df412bf3df9d6ce096b6fa03eb1082d05c9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49890,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:14.000,2025-05-07T13:19:54.100,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: capabilities: fix potential memleak on error path from vfs_getxattr_alloc() In cap_inode_getsecurity(), we will use vfs_getxattr_alloc() to complete the memory allocation of tmpbuf, if we have completed the memory allocation of tmpbuf, but failed to call handler->get(...), there will be a memleak in below logic: |-- ret = (int)vfs_getxattr_alloc(mnt_userns, ...) | /* ^^^ alloc for tmpbuf */ |-- value = krealloc(*xattr_value, error + 1, flags) | /* ^^^ alloc memory */ |-- error = handler->get(handler, ...) | /* error! */ |-- *xattr_value = value | /* xattr_value is &tmpbuf (memory leak!) */ So we will try to free(tmpbuf) after vfs_getxattr_alloc() fails to fix it. [PM: subject line and backtrace tweaks]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.14"",""versionEndExcluding"":""4.14.299"",""matchCriteriaId"":""CCE1B290-651F-4D7F-B83A-AD7466E2CBB9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.265"",""matchCriteriaId"":""ABED5D97-9B16-4CF6-86E3-D5F5C4358E35""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.224"",""matchCriteriaId"":""1D67A077-EB45-4ADE-94CD-F9A76F6C319C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""475D097C-AB5A-4CF5-899F-413077854ABD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""AB8B27B9-B41B-42D5-AE67-0A89A8A8EEB1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0c3e6288da650d1ec911a259c77bc2d88e498603"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2de8eec8afb75792440b8900a01d52b8f6742fd1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6bb00eb21c0fbf18e5d3538c9ff0cf63fd0ace85"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7480aeff0093d8c54377553ec6b31110bea37b4d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8cf0a1bc12870d148ae830a4ba88cfdf0e879cee"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/90577bcc01c4188416a47269f8433f70502abe98"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cdf01c807e974048c43c7fd3ca574f6086a57906"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49891,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:14.107,2025-05-07T13:19:49.620,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: tracing: kprobe: Fix memory leak in test_gen_kprobe/kretprobe_cmd() test_gen_kprobe_cmd() only free buf in fail path, hence buf will leak when there is no failure. Move kfree(buf) from fail path to common path to prevent the memleak. The same reason and solution in test_gen_kretprobe_cmd(). unreferenced object 0xffff888143b14000 (size 2048): comm ""insmod"", pid 52490, jiffies 4301890980 (age 40.553s) hex dump (first 32 bytes): 70 3a 6b 70 72 6f 62 65 73 2f 67 65 6e 5f 6b 70 p:kprobes/gen_kp 72 6f 62 65 5f 74 65 73 74 20 64 6f 5f 73 79 73 robe_test do_sys backtrace: [<000000006d7b836b>] kmalloc_trace+0x27/0xa0 [<0000000009528b5b>] 0xffffffffa059006f [<000000008408b580>] do_one_initcall+0x87/0x2a0 [<00000000c4980a7e>] do_init_module+0xdf/0x320 [<00000000d775aad0>] load_module+0x3006/0x3390 [<00000000e9a74b80>] __do_sys_finit_module+0x113/0x1b0 [<000000003726480d>] do_syscall_64+0x35/0x80 [<000000003441e93b>] entry_SYSCALL_64_after_hwframe+0x46/0xb0","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.6"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""B0DA74CD-D573-4831-8842-4FBB6C0F49AA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""AB8B27B9-B41B-42D5-AE67-0A89A8A8EEB1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/66f0919c953ef7b55e5ab94389a013da2ce80a2c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/71aeb8d01a8c7ab5cf7da3f81b35206f56ce6bca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bef08acbe560a926b4cee9cc46404cc98ae5703b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d1b6a8e3414aeaa0985139180c145d2d0fbd2a49"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49892,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:14.210,2025-05-07T13:19:41.120,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ftrace: Fix use-after-free for dynamic ftrace_ops KASAN reported a use-after-free with ftrace ops [1]. It was found from vmcore that perf had registered two ops with the same content successively, both dynamic. After unregistering the second ops, a use-after-free occurred. In ftrace_shutdown(), when the second ops is unregistered, the FTRACE_UPDATE_CALLS command is not set because there is another enabled ops with the same content. Also, both ops are dynamic and the ftrace callback function is ftrace_ops_list_func, so the FTRACE_UPDATE_TRACE_FUNC command will not be set. Eventually the value of 'command' will be 0 and ftrace_shutdown() will skip the rcu synchronization. However, ftrace may be activated. When the ops is released, another CPU may be accessing the ops. Add the missing synchronization to fix this problem. [1] BUG: KASAN: use-after-free in __ftrace_ops_list_func kernel/trace/ftrace.c:7020 [inline] BUG: KASAN: use-after-free in ftrace_ops_list_func+0x2b0/0x31c kernel/trace/ftrace.c:7049 Read of size 8 at addr ffff56551965bbc8 by task syz-executor.2/14468 CPU: 1 PID: 14468 Comm: syz-executor.2 Not tainted 5.10.0 #7 Hardware name: linux,dummy-virt (DT) Call trace: dump_backtrace+0x0/0x40c arch/arm64/kernel/stacktrace.c:132 show_stack+0x30/0x40 arch/arm64/kernel/stacktrace.c:196 __dump_stack lib/dump_stack.c:77 [inline] dump_stack+0x1b4/0x248 lib/dump_stack.c:118 print_address_description.constprop.0+0x28/0x48c mm/kasan/report.c:387 __kasan_report mm/kasan/report.c:547 [inline] kasan_report+0x118/0x210 mm/kasan/report.c:564 check_memory_region_inline mm/kasan/generic.c:187 [inline] __asan_load8+0x98/0xc0 mm/kasan/generic.c:253 __ftrace_ops_list_func kernel/trace/ftrace.c:7020 [inline] ftrace_ops_list_func+0x2b0/0x31c kernel/trace/ftrace.c:7049 ftrace_graph_call+0x0/0x4 __might_sleep+0x8/0x100 include/linux/perf_event.h:1170 __might_fault mm/memory.c:5183 [inline] __might_fault+0x58/0x70 mm/memory.c:5171 do_strncpy_from_user lib/strncpy_from_user.c:41 [inline] strncpy_from_user+0x1f4/0x4b0 lib/strncpy_from_user.c:139 getname_flags+0xb0/0x31c fs/namei.c:149 getname+0x2c/0x40 fs/namei.c:209 [...] Allocated by task 14445: kasan_save_stack+0x24/0x50 mm/kasan/common.c:48 kasan_set_track mm/kasan/common.c:56 [inline] __kasan_kmalloc mm/kasan/common.c:479 [inline] __kasan_kmalloc.constprop.0+0x110/0x13c mm/kasan/common.c:449 kasan_kmalloc+0xc/0x14 mm/kasan/common.c:493 kmem_cache_alloc_trace+0x440/0x924 mm/slub.c:2950 kmalloc include/linux/slab.h:563 [inline] kzalloc include/linux/slab.h:675 [inline] perf_event_alloc.part.0+0xb4/0x1350 kernel/events/core.c:11230 perf_event_alloc kernel/events/core.c:11733 [inline] __do_sys_perf_event_open kernel/events/core.c:11831 [inline] __se_sys_perf_event_open+0x550/0x15f4 kernel/events/core.c:11723 __arm64_sys_perf_event_open+0x6c/0x80 kernel/events/core.c:11723 [...] Freed by task 14445: kasan_save_stack+0x24/0x50 mm/kasan/common.c:48 kasan_set_track+0x24/0x34 mm/kasan/common.c:56 kasan_set_free_info+0x20/0x40 mm/kasan/generic.c:358 __kasan_slab_free.part.0+0x11c/0x1b0 mm/kasan/common.c:437 __kasan_slab_free mm/kasan/common.c:445 [inline] kasan_slab_free+0x2c/0x40 mm/kasan/common.c:446 slab_free_hook mm/slub.c:1569 [inline] slab_free_freelist_hook mm/slub.c:1608 [inline] slab_free mm/slub.c:3179 [inline] kfree+0x12c/0xc10 mm/slub.c:4176 perf_event_alloc.part.0+0xa0c/0x1350 kernel/events/core.c:11434 perf_event_alloc kernel/events/core.c:11733 [inline] __do_sys_perf_event_open kernel/events/core.c:11831 [inline] __se_sys_perf_event_open+0x550/0x15f4 kernel/events/core.c:11723 [...]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.1.45"",""versionEndExcluding"":""4.2"",""matchCriteriaId"":""91BB91F2-46E3-449B-A3FE-F98A6B3BE083""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.4.89"",""versionEndExcluding"":""4.5"",""matchCriteriaId"":""EBC7F61E-A805-4852-B85F-8F68C59C14F1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.9.52"",""versionEndExcluding"":""4.10"",""matchCriteriaId"":""AA0F3955-3D60-432E-B223-9F985F9DA2CE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.13.4"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""CEEA4187-015B-4DF5-8809-3C1940635275""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""AB8B27B9-B41B-42D5-AE67-0A89A8A8EEB1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0e792b89e6800cd9cb4757a76a96f7ef3e8b6294"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/88561a66777e7a2fe06638c6dcb22a9fae0b6733"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cc1b9961a0ceb70f6ca4e2f4b8bb71c87c7a495c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ea5f2fd4640ecbb9df969bf8bb27733ae2183169"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49893,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:14.317,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: cxl/region: Fix cxl_region leak, cleanup targets at region delete When a region is deleted any targets that have been previously assigned to that region hold references to it. Trigger those references to drop by detaching all targets at unregister_region() time. Otherwise that region object will leak as userspace has lost the ability to detach targets once region sysfs is torn down.",,,"[{""url"":""https://git.kernel.org/stable/c/0d9e734018d70cecf79e2e4c6082167160a0f13f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/45d9fb4b758b9d602ee7776eb6754b0349946aad"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49894,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:14.417,2025-05-07T13:19:31.730,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: cxl/region: Fix region HPA ordering validation Some regions may not have any address space allocated. Skip them when validating HPA order otherwise a crash like the following may result: devm_cxl_add_region: cxl_acpi cxl_acpi.0: decoder3.4: created region9 BUG: kernel NULL pointer dereference, address: 0000000000000000 [..] RIP: 0010:store_targetN+0x655/0x1740 [cxl_core] [..] Call Trace: <TASK> kernfs_fop_write_iter+0x144/0x200 vfs_write+0x24a/0x4d0 ksys_write+0x69/0xf0 do_syscall_64+0x3a/0x90 store_targetN+0x655/0x1740: alloc_region_ref at drivers/cxl/core/region.c:676 (inlined by) cxl_port_attach_region at drivers/cxl/core/region.c:850 (inlined by) cxl_region_attach at drivers/cxl/core/region.c:1290 (inlined by) attach_target at drivers/cxl/core/region.c:1410 (inlined by) store_targetN at drivers/cxl/core/region.c:1453","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""6.0"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""2AE8E086-9C21-4A47-A505-C5DBF09AAA5A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/12316b9f7c18138ae656050cfd716728e27b7e2f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a90accb358ae33ea982a35595573f7a045993f8b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49895,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:14.517,2025-05-07T13:19:26.667,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: cxl/region: Fix decoder allocation crash When an intermediate port's decoders have been exhausted by existing regions, and creating a new region with the port in question in it's hierarchical path is attempted, cxl_port_attach_region() fails to find a port decoder (as would be expected), and drops into the failure / cleanup path. However, during cleanup of the region reference, a sanity check attempts to dereference the decoder, which in the above case didn't exist. This causes a NULL pointer dereference BUG. To fix this, refactor the decoder allocation and de-allocation into helper routines, and in this 'free' routine, check that the decoder, @cxld, is valid before attempting any operations on it.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""6.0"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""2AE8E086-9C21-4A47-A505-C5DBF09AAA5A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/71ee71d7adcba648077997a29a91158d20c40b09"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c6813b5610ac53af73edd87a660d23a0511faa47"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49896,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:14.643,2025-05-07T13:19:15.073,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: cxl/pmem: Fix cxl_pmem_region and cxl_memdev leak When a cxl_nvdimm object goes through a ->remove() event (device physically removed, nvdimm-bridge disabled, or nvdimm device disabled), then any associated regions must also be disabled. As highlighted by the cxl-create-region.sh test [1], a single device may host multiple regions, but the driver was only tracking one region at a time. This leads to a situation where only the last enabled region per nvdimm device is cleaned up properly. Other regions are leaked, and this also causes cxl_memdev reference leaks. Fix the tracking by allowing cxl_nvdimm objects to track multiple region associations.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-Other""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""6.0"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""2AE8E086-9C21-4A47-A505-C5DBF09AAA5A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/4d07ae22e79ebc2d7528bbc69daa53b86981cb3a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f43b6bfdbab78606735ba81185cf0602b81e40b6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49897,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:14.747,2025-05-08T11:15:51.677,Rejected,[],Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.,,,[],,,,,,,,,
CVE-2022-49898,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:14.850,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: btrfs: fix tree mod log mishandling of reallocated nodes We have been seeing the following panic in production kernel BUG at fs/btrfs/tree-mod-log.c:677! invalid opcode: 0000 [#1] SMP RIP: 0010:tree_mod_log_rewind+0x1b4/0x200 RSP: 0000:ffffc9002c02f890 EFLAGS: 00010293 RAX: 0000000000000003 RBX: ffff8882b448c700 RCX: 0000000000000000 RDX: 0000000000008000 RSI: 00000000000000a7 RDI: ffff88877d831c00 RBP: 0000000000000002 R08: 000000000000009f R09: 0000000000000000 R10: 0000000000000000 R11: 0000000000100c40 R12: 0000000000000001 R13: ffff8886c26d6a00 R14: ffff88829f5424f8 R15: ffff88877d831a00 FS: 00007fee1d80c780(0000) GS:ffff8890400c0000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00007fee1963a020 CR3: 0000000434f33002 CR4: 00000000007706e0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 PKRU: 55555554 Call Trace: btrfs_get_old_root+0x12b/0x420 btrfs_search_old_slot+0x64/0x2f0 ? tree_mod_log_oldest_root+0x3d/0xf0 resolve_indirect_ref+0xfd/0x660 ? ulist_alloc+0x31/0x60 ? kmem_cache_alloc_trace+0x114/0x2c0 find_parent_nodes+0x97a/0x17e0 ? ulist_alloc+0x30/0x60 btrfs_find_all_roots_safe+0x97/0x150 iterate_extent_inodes+0x154/0x370 ? btrfs_search_path_in_tree+0x240/0x240 iterate_inodes_from_logical+0x98/0xd0 ? btrfs_search_path_in_tree+0x240/0x240 btrfs_ioctl_logical_to_ino+0xd9/0x180 btrfs_ioctl+0xe2/0x2ec0 ? __mod_memcg_lruvec_state+0x3d/0x280 ? do_sys_openat2+0x6d/0x140 ? kretprobe_dispatcher+0x47/0x70 ? kretprobe_rethook_handler+0x38/0x50 ? rethook_trampoline_handler+0x82/0x140 ? arch_rethook_trampoline_callback+0x3b/0x50 ? kmem_cache_free+0xfb/0x270 ? do_sys_openat2+0xd5/0x140 __x64_sys_ioctl+0x71/0xb0 do_syscall_64+0x2d/0x40 Which is this code in tree_mod_log_rewind() switch (tm->op) { case BTRFS_MOD_LOG_KEY_REMOVE_WHILE_FREEING: BUG_ON(tm->slot < n); This occurs because we replay the nodes in order that they happened, and when we do a REPLACE we will log a REMOVE_WHILE_FREEING for every slot, starting at 0. 'n' here is the number of items in this block, which in this case was 1, but we had 2 REMOVE_WHILE_FREEING operations. The actual root cause of this was that we were replaying operations for a block that shouldn't have been replayed. Consider the following sequence of events 1. We have an already modified root, and we do a btrfs_get_tree_mod_seq(). 2. We begin removing items from this root, triggering KEY_REPLACE for it's child slots. 3. We remove one of the 2 children this root node points to, thus triggering the root node promotion of the remaining child, and freeing this node. 4. We modify a new root, and re-allocate the above node to the root node of this other root. The tree mod log looks something like this logical 0 op KEY_REPLACE (slot 1) seq 2 logical 0 op KEY_REMOVE (slot 1) seq 3 logical 0 op KEY_REMOVE_WHILE_FREEING (slot 0) seq 4 logical 4096 op LOG_ROOT_REPLACE (old logical 0) seq 5 logical 8192 op KEY_REMOVE_WHILE_FREEING (slot 1) seq 6 logical 8192 op KEY_REMOVE_WHILE_FREEING (slot 0) seq 7 logical 0 op LOG_ROOT_REPLACE (old logical 8192) seq 8 >From here the bug is triggered by the following steps 1. Call btrfs_get_old_root() on the new_root. 2. We call tree_mod_log_oldest_root(btrfs_root_node(new_root)), which is currently logical 0. 3. tree_mod_log_oldest_root() calls tree_mod_log_search_oldest(), which gives us the KEY_REPLACE seq 2, and since that's not a LOG_ROOT_REPLACE we incorrectly believe that we don't have an old root, because we expect that the most recent change should be a LOG_ROOT_REPLACE. 4. Back in tree_mod_log_oldest_root() we don't have a LOG_ROOT_REPLACE, so we don't set old_root, we simply use our e ---truncated---",,,"[{""url"":""https://git.kernel.org/stable/c/007058eb8292efc4c88f921752194b83269da085"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/52b2b65c9eb56fd829dda323786db828627ff7e6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/968b71583130b6104c9f33ba60446d598e327a8b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49899,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:14.953,2025-05-07T13:19:06.700,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: fscrypt: stop using keyrings subsystem for fscrypt_master_key The approach of fs/crypto/ internally managing the fscrypt_master_key structs as the payloads of ""struct key"" objects contained in a ""struct key"" keyring has outlived its usefulness. The original idea was to simplify the code by reusing code from the keyrings subsystem. However, several issues have arisen that can't easily be resolved: - When a master key struct is destroyed, blk_crypto_evict_key() must be called on any per-mode keys embedded in it. (This started being the case when inline encryption support was added.) Yet, the keyrings subsystem can arbitrarily delay the destruction of keys, even past the time the filesystem was unmounted. Therefore, currently there is no easy way to call blk_crypto_evict_key() when a master key is destroyed. Currently, this is worked around by holding an extra reference to the filesystem's request_queue(s). But it was overlooked that the request_queue reference is *not* guaranteed to pin the corresponding blk_crypto_profile too; for device-mapper devices that support inline crypto, it doesn't. This can cause a use-after-free. - When the last inode that was using an incompletely-removed master key is evicted, the master key removal is completed by removing the key struct from the keyring. Currently this is done via key_invalidate(). Yet, key_invalidate() takes the key semaphore. This can deadlock when called from the shrinker, since in fscrypt_ioctl_add_key(), memory is allocated with GFP_KERNEL under the same semaphore. - More generally, the fact that the keyrings subsystem can arbitrarily delay the destruction of keys (via garbage collection delay, or via random processes getting temporary key references) is undesirable, as it means we can't strictly guarantee that all secrets are ever wiped. - Doing the master key lookups via the keyrings subsystem results in the key_permission LSM hook being called. fscrypt doesn't want this, as all access control for encrypted files is designed to happen via the files themselves, like any other files. The workaround which SELinux users are using is to change their SELinux policy to grant key search access to all domains. This works, but it is an odd extra step that shouldn't really have to be done. The fix for all these issues is to change the implementation to what I should have done originally: don't use the keyrings subsystem to keep track of the filesystem's fscrypt_master_key structs. Instead, just store them in a regular kernel data structure, and rework the reference counting, locking, and lifetime accordingly. Retain support for RCU-mode key lookups by using a hash table. Replace fscrypt_sb_free() with fscrypt_sb_delete(), which releases the keys synchronously and runs a bit earlier during unmount, so that block devices are still available. A side effect of this patch is that neither the master keys themselves nor the filesystem keyrings will be listed in /proc/keys anymore. (""Master key users"" and the master key users keyrings will still be listed.) However, this was mostly an implementation detail, and it was intended just for debugging purposes. I don't know of anyone using it. This patch does *not* change how ""master key users"" (->mk_users) works; that still uses the keyrings subsystem. That is still needed for key quotas, and changing that isn't necessary to solve the issues listed above. If we decide to change that too, it would be a separate patch. I've marked this as fixing the original commit that added the fscrypt keyring, but as noted above the most important issue that this patch fixes wasn't introduced until the addition of inline encryption support.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""NVD-CWE-noinfo""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""0910F02E-5A73-45B6-9ABC-05EABA85090A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""AB8B27B9-B41B-42D5-AE67-0A89A8A8EEB1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/391cceee6d435e616f68631e68f5b32d480b1e67"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/68d15d6558a386f46d815a6ac39edecad713a1bf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d7e7b9af104c7b389a0c21eb26532511bce4b510"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e6f4fd85ef1ee6ab356bfbd64df28c1cb73aee7e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49900,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:15.060,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: i2c: piix4: Fix adapter not be removed in piix4_remove() In piix4_probe(), the piix4 adapter will be registered in: piix4_probe() piix4_add_adapters_sb800() / piix4_add_adapter() i2c_add_adapter() Based on the probed device type, piix4_add_adapters_sb800() or single piix4_add_adapter() will be called. For the former case, piix4_adapter_count is set as the number of adapters, while for antoher case it is not set and kept default *zero*. When piix4 is removed, piix4_remove() removes the adapters added in piix4_probe(), basing on the piix4_adapter_count value. Because the count is zero for the single adapter case, the adapter won't be removed and makes the sources allocated for adapter leaked, such as the i2c client and device. These sources can still be accessed by i2c or bus and cause problems. An easily reproduced case is that if a new adapter is registered, i2c will get the leaked adapter and try to call smbus_algorithm, which was already freed: Triggered by: rmmod i2c_piix4 && modprobe max31730 BUG: unable to handle page fault for address: ffffffffc053d860 #PF: supervisor read access in kernel mode #PF: error_code(0x0000) - not-present page Oops: 0000 [#1] PREEMPT SMP KASAN CPU: 0 PID: 3752 Comm: modprobe Tainted: G Hardware name: QEMU Standard PC (i440FX + PIIX, 1996) RIP: 0010:i2c_default_probe (drivers/i2c/i2c-core-base.c:2259) i2c_core RSP: 0018:ffff888107477710 EFLAGS: 00000246 ... <TASK> i2c_detect (drivers/i2c/i2c-core-base.c:2302) i2c_core __process_new_driver (drivers/i2c/i2c-core-base.c:1336) i2c_core bus_for_each_dev (drivers/base/bus.c:301) i2c_for_each_dev (drivers/i2c/i2c-core-base.c:1823) i2c_core i2c_register_driver (drivers/i2c/i2c-core-base.c:1861) i2c_core do_one_initcall (init/main.c:1296) do_init_module (kernel/module/main.c:2455) ... </TASK> ---[ end trace 0000000000000000 ]--- Fix this problem by correctly set piix4_adapter_count as 1 for the single adapter so it can be normally removed.",,,"[{""url"":""https://git.kernel.org/stable/c/569bea74c94d37785682b11bab76f557520477cd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bfd5e62f9a7ee214661cb6f143a3b40ccc63317f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d78ccdce662e88f41e87e90cf2bee63c1715d2a5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fe51636fffc8108c7c4da6aa393010e786530ad9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49901,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:15.167,2025-05-07T13:34:07.623,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: blk-mq: Fix kmemleak in blk_mq_init_allocated_queue There is a kmemleak caused by modprobe null_blk.ko unreferenced object 0xffff8881acb1f000 (size 1024): comm ""modprobe"", pid 836, jiffies 4294971190 (age 27.068s) hex dump (first 32 bytes): 00 00 00 00 ad 4e ad de ff ff ff ff 00 00 00 00 .....N.......... ff ff ff ff ff ff ff ff 00 53 99 9e ff ff ff ff .........S...... backtrace: [<000000004a10c249>] kmalloc_node_trace+0x22/0x60 [<00000000648f7950>] blk_mq_alloc_and_init_hctx+0x289/0x350 [<00000000af06de0e>] blk_mq_realloc_hw_ctxs+0x2fe/0x3d0 [<00000000e00c1872>] blk_mq_init_allocated_queue+0x48c/0x1440 [<00000000d16b4e68>] __blk_mq_alloc_disk+0xc8/0x1c0 [<00000000d10c98c3>] 0xffffffffc450d69d [<00000000b9299f48>] 0xffffffffc4538392 [<0000000061c39ed6>] do_one_initcall+0xd0/0x4f0 [<00000000b389383b>] do_init_module+0x1a4/0x680 [<0000000087cf3542>] load_module+0x6249/0x7110 [<00000000beba61b8>] __do_sys_finit_module+0x140/0x200 [<00000000fdcfff51>] do_syscall_64+0x35/0x80 [<000000003c0f1f71>] entry_SYSCALL_64_after_hwframe+0x46/0xb0 That is because q->ma_ops is set to NULL before blk_release_queue is called. blk_mq_init_queue_data blk_mq_init_allocated_queue blk_mq_realloc_hw_ctxs for (i = 0; i < set->nr_hw_queues; i++) { old_hctx = xa_load(&q->hctx_table, i); if (!blk_mq_alloc_and_init_hctx(.., i, ..)) [1] if (!old_hctx) break; xa_for_each_start(&q->hctx_table, j, hctx, j) blk_mq_exit_hctx(q, set, hctx, j); [2] if (!q->nr_hw_queues) [3] goto err_hctxs; err_exit: q->mq_ops = NULL; [4] blk_put_queue blk_release_queue if (queue_is_mq(q)) [5] blk_mq_release(q); [1]: blk_mq_alloc_and_init_hctx failed at i != 0. [2]: The hctxs allocated by [1] are moved to q->unused_hctx_list and will be cleaned up in blk_mq_release. [3]: q->nr_hw_queues is 0. [4]: Set q->mq_ops to NULL. [5]: queue_is_mq returns false due to [4]. And blk_mq_release will not be called. The hctxs in q->unused_hctx_list are leaked. To fix it, call blk_release_queue in exception path.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.2"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""66B9CABA-A89A-494C-A449-F7161E64DECE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/2dc97e15a54b7bdf457848aa8c663c98a24e58a6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/943f45b9399ed8b2b5190cbc797995edaa97f58f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49902,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:15.270,2025-05-07T13:30:42.970,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: block: Fix possible memory leak for rq_wb on add_disk failure kmemleak reported memory leaks in device_add_disk(): kmemleak: 3 new suspected memory leaks unreferenced object 0xffff88800f420800 (size 512): comm ""modprobe"", pid 4275, jiffies 4295639067 (age 223.512s) hex dump (first 32 bytes): 04 00 00 00 08 00 00 00 01 00 00 00 00 00 00 00 ................ 00 e1 f5 05 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [<00000000d3662699>] kmalloc_trace+0x26/0x60 [<00000000edc7aadc>] wbt_init+0x50/0x6f0 [<0000000069601d16>] wbt_enable_default+0x157/0x1c0 [<0000000028fc393f>] blk_register_queue+0x2a4/0x420 [<000000007345a042>] device_add_disk+0x6fd/0xe40 [<0000000060e6aab0>] nbd_dev_add+0x828/0xbf0 [nbd] ... It is because the memory allocated in wbt_enable_default() is not released in device_add_disk() error path. Normally, these memory are freed in: del_gendisk() rq_qos_exit() rqos->ops->exit(rqos); wbt_exit() So rq_qos_exit() is called to free the rq_wb memory for wbt_init(). However in the error path of device_add_disk(), only blk_unregister_queue() is called and make rq_wb memory leaked. Add rq_qos_exit() to the error path to fix it.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""8F6D7999-4597-4115-9540-B15A0C26C955""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/4e68c5da60cd79950bd56287ae80b39d6261f995"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/528677d3b4af985445bd4ac667485ded1ed11220"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fa81cbafbf5764ad5053512152345fab37a1fe18"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49903,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:15.373,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ipv6: fix WARNING in ip6_route_net_exit_late() During the initialization of ip6_route_net_init_late(), if file ipv6_route or rt6_stats fails to be created, the initialization is successful by default. Therefore, the ipv6_route or rt6_stats file doesn't be found during the remove in ip6_route_net_exit_late(). It will cause WRNING. The following is the stack information: name 'rt6_stats' WARNING: CPU: 0 PID: 9 at fs/proc/generic.c:712 remove_proc_entry+0x389/0x460 Modules linked in: Workqueue: netns cleanup_net RIP: 0010:remove_proc_entry+0x389/0x460 PKRU: 55555554 Call Trace: <TASK> ops_exit_list+0xb0/0x170 cleanup_net+0x4ea/0xb00 process_one_work+0x9bf/0x1710 worker_thread+0x665/0x1080 kthread+0x2e4/0x3a0 ret_from_fork+0x1f/0x30 </TASK>",,,"[{""url"":""https://git.kernel.org/stable/c/080589287127838046077904f34d5054ea0f895c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/0ed71af4d017d2bd2cbb8f7254f613a4914def26"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/381453770f731f0f43616a1cd4c759b7807a1517"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5dbb47ee89762da433cd8458788d7640c85f1a07"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/768b3c745fe5789f2430bdab02f35a9ad1148d97"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/83fbf246ced54dadd7b9adc2a16efeff30ba944d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49904,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:15.480,2025-05-07T13:30:34.307,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net, neigh: Fix null-ptr-deref in neigh_table_clear() When IPv6 module gets initialized but hits an error in the middle, kenel panic with: KASAN: null-ptr-deref in range [0x0000000000000598-0x000000000000059f] CPU: 1 PID: 361 Comm: insmod Hardware name: QEMU Standard PC (i440FX + PIIX, 1996) RIP: 0010:__neigh_ifdown.isra.0+0x24b/0x370 RSP: 0018:ffff888012677908 EFLAGS: 00000202 ... Call Trace: <TASK> neigh_table_clear+0x94/0x2d0 ndisc_cleanup+0x27/0x40 [ipv6] inet6_init+0x21c/0x2cb [ipv6] do_one_initcall+0xd3/0x4d0 do_init_module+0x1ae/0x670 ... Kernel panic - not syncing: Fatal exception When ipv6 initialization fails, it will try to cleanup and calls: neigh_table_clear() neigh_ifdown(tbl, NULL) pneigh_queue_purge(&tbl->proxy_queue, dev_net(dev == NULL)) # dev_net(NULL) triggers null-ptr-deref. Fix it by passing NULL to pneigh_queue_purge() in neigh_ifdown() if dev is NULL, to make kernel not panic immediately.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.14.292"",""versionEndExcluding"":""4.14.299"",""matchCriteriaId"":""ACF1943E-656C-440D-81D9-3F3FA23D23B2""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.19.257"",""versionEndExcluding"":""4.19.265"",""matchCriteriaId"":""D2847A4B-743C-483A-AFAA-5F8246CB36C0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4.212"",""versionEndExcluding"":""5.4.224"",""matchCriteriaId"":""4E471077-A8B4-46CA-B708-055F12D45483""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.10.141"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""D090B338-9D25-43EA-9557-2C221E1E3C93""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15.65"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""AD95DA02-3B8E-44E0-B8B1-CF0DAB5377CD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.19.7"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""60F95F94-9031-4778-B2D0-E7A8286B58D1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0d38b4ca6679e72860ff8730e79bb99d0e9fa3b0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/1c89642e7f2b7ecc9635610653f5c2f0276c0051"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2b45d6d0c41cb9593868e476681efb1aae5078a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a99a8ec4c62180c889482a2ff6465033e0743458"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b49f6b2f21f543d4dc88fb7b1ec2adccb822f27c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b736592de2aa53aee2d48d6b129bc0c892007bbe"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f8017317cb0b279b8ab98b0f3901a2e0ac880dad"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49905,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:15.593,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net/smc: Fix possible leaked pernet namespace in smc_init() In smc_init(), register_pernet_subsys(&smc_net_stat_ops) is called without any error handling. If it fails, registering of &smc_net_ops won't be reverted. And if smc_nl_init() fails, &smc_net_stat_ops itself won't be reverted. This leaves wild ops in subsystem linkedlist and when another module tries to call register_pernet_operations() it triggers page fault: BUG: unable to handle page fault for address: fffffbfff81b964c RIP: 0010:register_pernet_operations+0x1b9/0x5f0 Call Trace: <TASK> register_pernet_subsys+0x29/0x40 ebtables_init+0x58/0x1000 [ebtables] ...",,,"[{""url"":""https://git.kernel.org/stable/c/61defd6450a9ef4a1487090449999b0fd83518ef"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/62ff373da2534534c55debe6c724c7fe14adb97f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c97daf836f7caf81d3144b8cd2b2a51f9bc3bd09"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49906,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:15.703,2025-05-07T13:30:25.537,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: ibmvnic: Free rwi on reset success Free the rwi structure in the event that the last rwi in the list processed successfully. The logic in commit 4f408e1fa6e1 (""ibmvnic: retry reset if there are no other resets"") introduces an issue that results in a 32 byte memory leak whenever the last rwi in the list gets processed.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""4A83CCE5-725E-495E-A0C2-C673EA7B658A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/535b78739ae75f257c894a05b1afa86ad9a3669e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c3543a287cfba9105dcc4bb41eb817f51266caaf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d6dd2fe71153f0ff748bf188bd4af076fe09a0a6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49907,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:15.810,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: mdio: fix undefined behavior in bit shift for __mdiobus_register Shifting signed 32-bit value by 31 bits is undefined, so changing significant bit to unsigned. The UBSAN warning calltrace like below: UBSAN: shift-out-of-bounds in drivers/net/phy/mdio_bus.c:586:27 left shift of 1 by 31 places cannot be represented in type 'int' Call Trace: <TASK> dump_stack_lvl+0x7d/0xa5 dump_stack+0x15/0x1b ubsan_epilogue+0xe/0x4e __ubsan_handle_shift_out_of_bounds+0x1e7/0x20c __mdiobus_register+0x49d/0x4e0 fixed_mdio_bus_init+0xd8/0x12d do_one_initcall+0x76/0x430 kernel_init_freeable+0x3b3/0x422 kernel_init+0x24/0x1e0 ret_from_fork+0x1f/0x30 </TASK>",,,"[{""url"":""https://git.kernel.org/stable/c/20ed01a7b9af6e6a3c33761eebbb710ea6dd49b7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/40e4eb324c59e11fcb927aa46742d28aba6ecb8a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4954b5359eb141499492fadfab891e28905509e2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/634f066d02bdb22a26da7deb0c7617ab1a65fc9d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6ce6f8f8f6316da6f92afe7490bc2f0b654d68e0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7006176a3c863e3e353ce1b8a349ef5bb1b9320e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/985a88bf0b27193522bba7856b1763f428cef19d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a3fafc974be37319679f36dc4e7cca7db1e02973"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49908,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:15.920,2025-05-07T13:30:18.757,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: Bluetooth: L2CAP: Fix memory leak in vhci_write Syzkaller reports a memory leak as follows: ==================================== BUG: memory leak unreferenced object 0xffff88810d81ac00 (size 240): [...] hex dump (first 32 bytes): 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [<ffffffff838733d9>] __alloc_skb+0x1f9/0x270 net/core/skbuff.c:418 [<ffffffff833f742f>] alloc_skb include/linux/skbuff.h:1257 [inline] [<ffffffff833f742f>] bt_skb_alloc include/net/bluetooth/bluetooth.h:469 [inline] [<ffffffff833f742f>] vhci_get_user drivers/bluetooth/hci_vhci.c:391 [inline] [<ffffffff833f742f>] vhci_write+0x5f/0x230 drivers/bluetooth/hci_vhci.c:511 [<ffffffff815e398d>] call_write_iter include/linux/fs.h:2192 [inline] [<ffffffff815e398d>] new_sync_write fs/read_write.c:491 [inline] [<ffffffff815e398d>] vfs_write+0x42d/0x540 fs/read_write.c:578 [<ffffffff815e3cdd>] ksys_write+0x9d/0x160 fs/read_write.c:631 [<ffffffff845e0645>] do_syscall_x64 arch/x86/entry/common.c:50 [inline] [<ffffffff845e0645>] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80 [<ffffffff84600087>] entry_SYSCALL_64_after_hwframe+0x63/0xcd ==================================== HCI core will uses hci_rx_work() to process frame, which is queued to the hdev->rx_q tail in hci_recv_frame() by HCI driver. Yet the problem is that, HCI core may not free the skb after handling ACL data packets. To be more specific, when start fragment does not contain the L2CAP length, HCI core just copies skb into conn->rx_skb and finishes frame process in l2cap_recv_acldata(), without freeing the skb, which triggers the above memory leak. This patch solves it by releasing the relative skb, after processing the above case in l2cap_recv_acldata().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.12"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""047D3644-B2CA-4427-B14E-7F2ADE40217B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/5b4f039a2f487c5edae681d763fe1af505f84c13"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7c9524d929648935bac2bbb4c20437df8f9c3f42"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/aa16cac06b752e5f609c106735bd7838f444784c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49909,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:16.030,2025-05-07T13:30:13.010,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: Bluetooth: L2CAP: fix use-after-free in l2cap_conn_del() When l2cap_recv_frame() is invoked to receive data, and the cid is L2CAP_CID_A2MP, if the channel does not exist, it will create a channel. However, after a channel is created, the hold operation of the channel is not performed. In this case, the value of channel reference counting is 1. As a result, after hci_error_reset() is triggered, l2cap_conn_del() invokes the close hook function of A2MP to release the channel. Then l2cap_chan_unlock(chan) will trigger UAF issue. The process is as follows: Receive data: l2cap_data_channel() a2mp_channel_create() --->channel ref is 2 l2cap_chan_put() --->channel ref is 1 Triger event: hci_error_reset() hci_dev_do_close() ... l2cap_disconn_cfm() l2cap_conn_del() l2cap_chan_hold() --->channel ref is 2 l2cap_chan_del() --->channel ref is 1 a2mp_chan_close_cb() --->channel ref is 0, release channel l2cap_chan_unlock() --->UAF of channel The detailed Call Trace is as follows: BUG: KASAN: use-after-free in __mutex_unlock_slowpath+0xa6/0x5e0 Read of size 8 at addr ffff8880160664b8 by task kworker/u11:1/7593 Workqueue: hci0 hci_error_reset Call Trace: <TASK> dump_stack_lvl+0xcd/0x134 print_report.cold+0x2ba/0x719 kasan_report+0xb1/0x1e0 kasan_check_range+0x140/0x190 __mutex_unlock_slowpath+0xa6/0x5e0 l2cap_conn_del+0x404/0x7b0 l2cap_disconn_cfm+0x8c/0xc0 hci_conn_hash_flush+0x11f/0x260 hci_dev_close_sync+0x5f5/0x11f0 hci_dev_do_close+0x2d/0x70 hci_error_reset+0x9e/0x140 process_one_work+0x98a/0x1620 worker_thread+0x665/0x1080 kthread+0x2e4/0x3a0 ret_from_fork+0x1f/0x30 </TASK> Allocated by task 7593: kasan_save_stack+0x1e/0x40 __kasan_kmalloc+0xa9/0xd0 l2cap_chan_create+0x40/0x930 amp_mgr_create+0x96/0x990 a2mp_channel_create+0x7d/0x150 l2cap_recv_frame+0x51b8/0x9a70 l2cap_recv_acldata+0xaa3/0xc00 hci_rx_work+0x702/0x1220 process_one_work+0x98a/0x1620 worker_thread+0x665/0x1080 kthread+0x2e4/0x3a0 ret_from_fork+0x1f/0x30 Freed by task 7593: kasan_save_stack+0x1e/0x40 kasan_set_track+0x21/0x30 kasan_set_free_info+0x20/0x30 ____kasan_slab_free+0x167/0x1c0 slab_free_freelist_hook+0x89/0x1c0 kfree+0xe2/0x580 l2cap_chan_put+0x22a/0x2d0 l2cap_conn_del+0x3fc/0x7b0 l2cap_disconn_cfm+0x8c/0xc0 hci_conn_hash_flush+0x11f/0x260 hci_dev_close_sync+0x5f5/0x11f0 hci_dev_do_close+0x2d/0x70 hci_error_reset+0x9e/0x140 process_one_work+0x98a/0x1620 worker_thread+0x665/0x1080 kthread+0x2e4/0x3a0 ret_from_fork+0x1f/0x30 Last potentially related work creation: kasan_save_stack+0x1e/0x40 __kasan_record_aux_stack+0xbe/0xd0 call_rcu+0x99/0x740 netlink_release+0xe6a/0x1cf0 __sock_release+0xcd/0x280 sock_close+0x18/0x20 __fput+0x27c/0xa90 task_work_run+0xdd/0x1a0 exit_to_user_mode_prepare+0x23c/0x250 syscall_exit_to_user_mode+0x19/0x50 do_syscall_64+0x42/0x80 entry_SYSCALL_64_after_hwframe+0x63/0xcd Second to last potentially related work creation: kasan_save_stack+0x1e/0x40 __kasan_record_aux_stack+0xbe/0xd0 call_rcu+0x99/0x740 netlink_release+0xe6a/0x1cf0 __sock_release+0xcd/0x280 sock_close+0x18/0x20 __fput+0x27c/0xa90 task_work_run+0xdd/0x1a0 exit_to_user_mode_prepare+0x23c/0x250 syscall_exit_to_user_mode+0x19/0x50 do_syscall_64+0x42/0x80 entry_SYSCALL_64_after_hwframe+0x63/0xcd","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.9.326"",""versionEndExcluding"":""4.9.333"",""matchCriteriaId"":""D84C81C1-D061-4258-9090-FF12425AB73D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.14.291"",""versionEndExcluding"":""4.14.299"",""matchCriteriaId"":""E3955807-4322-48D0-9AEB-D6BFA82DD383""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.19.255"",""versionEndExcluding"":""4.19.265"",""matchCriteriaId"":""E0DEA1BD-2B66-4FD7-B05F-DC59DD6882D8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4.209"",""versionEndExcluding"":""5.4.224"",""matchCriteriaId"":""A073F673-EF17-46A8-A925-83B17398CBBD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.10.135"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""41E4FAC9-2C06-49C6-B571-F3C809F45578""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15.59"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""E43D4A8A-AA40-459C-8C74-F0D7D6E68094""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""9AD1CF46-3373-4654-9949-503286317280""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0d0e2d032811280b927650ff3c15fe5020e82533"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/17c6164854f8bb80bf76f32b2c2f199c16b53703"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7f7bfdd9a9af3b12c33d9da9a012e7f4d5c91f4b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8f7e4cf0694149a5d999d676ebd9ecf1b4cb2cc9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a3a7b2ac64de232edb67279e804932cb42f0b52a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c1f594dddd9ffd747c39f49cc5b67a9b7677d2ab"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d9ec6e2fbd4a565b2345d4852f586b7ae3ab41fd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/db4a0783ed78beb2ebaa32f5f785bfd79c580689"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49910,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:16.147,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: Bluetooth: L2CAP: Fix use-after-free caused by l2cap_reassemble_sdu Fix the race condition between the following two flows that run in parallel: 1. l2cap_reassemble_sdu -> chan->ops->recv (l2cap_sock_recv_cb) -> __sock_queue_rcv_skb. 2. bt_sock_recvmsg -> skb_recv_datagram, skb_free_datagram. An SKB can be queued by the first flow and immediately dequeued and freed by the second flow, therefore the callers of l2cap_reassemble_sdu can't use the SKB after that function returns. However, some places continue accessing struct l2cap_ctrl that resides in the SKB's CB for a short time after l2cap_reassemble_sdu returns, leading to a use-after-free condition (the stack trace is below, line numbers for kernel 5.19.8). Fix it by keeping a local copy of struct l2cap_ctrl. BUG: KASAN: use-after-free in l2cap_rx_state_recv (net/bluetooth/l2cap_core.c:6906) bluetooth Read of size 1 at addr ffff88812025f2f0 by task kworker/u17:3/43169 Workqueue: hci0 hci_rx_work [bluetooth] Call Trace: <TASK> dump_stack_lvl (lib/dump_stack.c:107 (discriminator 4)) print_report.cold (mm/kasan/report.c:314 mm/kasan/report.c:429) ? l2cap_rx_state_recv (net/bluetooth/l2cap_core.c:6906) bluetooth kasan_report (mm/kasan/report.c:162 mm/kasan/report.c:493) ? l2cap_rx_state_recv (net/bluetooth/l2cap_core.c:6906) bluetooth l2cap_rx_state_recv (net/bluetooth/l2cap_core.c:6906) bluetooth l2cap_rx (net/bluetooth/l2cap_core.c:7236 net/bluetooth/l2cap_core.c:7271) bluetooth ret_from_fork (arch/x86/entry/entry_64.S:306) </TASK> Allocated by task 43169: kasan_save_stack (mm/kasan/common.c:39) __kasan_slab_alloc (mm/kasan/common.c:45 mm/kasan/common.c:436 mm/kasan/common.c:469) kmem_cache_alloc_node (mm/slab.h:750 mm/slub.c:3243 mm/slub.c:3293) __alloc_skb (net/core/skbuff.c:414) l2cap_recv_frag (./include/net/bluetooth/bluetooth.h:425 net/bluetooth/l2cap_core.c:8329) bluetooth l2cap_recv_acldata (net/bluetooth/l2cap_core.c:8442) bluetooth hci_rx_work (net/bluetooth/hci_core.c:3642 net/bluetooth/hci_core.c:3832) bluetooth process_one_work (kernel/workqueue.c:2289) worker_thread (./include/linux/list.h:292 kernel/workqueue.c:2437) kthread (kernel/kthread.c:376) ret_from_fork (arch/x86/entry/entry_64.S:306) Freed by task 27920: kasan_save_stack (mm/kasan/common.c:39) kasan_set_track (mm/kasan/common.c:45) kasan_set_free_info (mm/kasan/generic.c:372) ____kasan_slab_free (mm/kasan/common.c:368 mm/kasan/common.c:328) slab_free_freelist_hook (mm/slub.c:1780) kmem_cache_free (mm/slub.c:3536 mm/slub.c:3553) skb_free_datagram (./include/net/sock.h:1578 ./include/net/sock.h:1639 net/core/datagram.c:323) bt_sock_recvmsg (net/bluetooth/af_bluetooth.c:295) bluetooth l2cap_sock_recvmsg (net/bluetooth/l2cap_sock.c:1212) bluetooth sock_read_iter (net/socket.c:1087) new_sync_read (./include/linux/fs.h:2052 fs/read_write.c:401) vfs_read (fs/read_write.c:482) ksys_read (fs/read_write.c:620) do_syscall_64 (arch/x86/entry/common.c:50 arch/x86/entry/common.c:80) entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:120)",,,"[{""url"":""https://git.kernel.org/stable/c/03af22e23b96fb7ef75fb7885407ef457e8b403d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3aff8aaca4e36dc8b17eaa011684881a80238966"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4cd094fd5d872862ca278e15b9b51b07e915ef3f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6c7407bfbeafc80a04e6eaedcf34d378532a04f2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8278a87bb1eeea94350d675ef961ee5a03341fde"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9a04161244603f502c6e453913e51edd59cb70c1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cb1c012099ef5904cd468bdb8d6fcdfdd9bcb569"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dc30e05bb18852303084430c03ca76e69257d9ea"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49911,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:16.260,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: netfilter: ipset: enforce documented limit to prevent allocating huge memory Daniel Xu reported that the hash:net,iface type of the ipset subsystem does not limit adding the same network with different interfaces to a set, which can lead to huge memory usage or allocation failure. The quick reproducer is $ ipset create ACL.IN.ALL_PERMIT hash:net,iface hashsize 1048576 timeout 0 $ for i in $(seq 0 100); do /sbin/ipset add ACL.IN.ALL_PERMIT 0.0.0.0/0,kaf_$i timeout 0 -exist; done The backtrace when vmalloc fails: [Tue Oct 25 00:13:08 2022] ipset: vmalloc error: size 1073741848, exceeds total pages <...> [Tue Oct 25 00:13:08 2022] Call Trace: [Tue Oct 25 00:13:08 2022] <TASK> [Tue Oct 25 00:13:08 2022] dump_stack_lvl+0x48/0x60 [Tue Oct 25 00:13:08 2022] warn_alloc+0x155/0x180 [Tue Oct 25 00:13:08 2022] __vmalloc_node_range+0x72a/0x760 [Tue Oct 25 00:13:08 2022] ? hash_netiface4_add+0x7c0/0xb20 [Tue Oct 25 00:13:08 2022] ? __kmalloc_large_node+0x4a/0x90 [Tue Oct 25 00:13:08 2022] kvmalloc_node+0xa6/0xd0 [Tue Oct 25 00:13:08 2022] ? hash_netiface4_resize+0x99/0x710 <...> The fix is to enforce the limit documented in the ipset(8) manpage: > The internal restriction of the hash:net,iface set type is that the same > network prefix cannot be stored with more than 64 different interfaces > in a single set.",,,"[{""url"":""https://git.kernel.org/stable/c/42d20d5e24575c9afa2d66d9a51e7386db9514f5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/510841da1fcc16f702440ab58ef0b4d82a9056b7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a37ef32fe5956fe9248df68f6a61997845ba047e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49912,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:16.363,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: btrfs: fix ulist leaks in error paths of qgroup self tests In the test_no_shared_qgroup() and test_multiple_refs() qgroup self tests, if we fail to add the tree ref, remove the extent item or remove the extent ref, we are returning from the test function without freeing the ""old_roots"" ulist that was allocated by the previous calls to btrfs_find_all_roots(). Fix that by calling ulist_free() before returning.",,,"[{""url"":""https://git.kernel.org/stable/c/0a0dead4ad1a2e2a9bdf133ef45111d7c8daef84"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/203204798831c35d855ecc6417d98267d2d2184b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3f58283d83a588ff5da62fc150de19e798ed2ec2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5d1a47ebf84540e40b5b43fc21aef0d6c0f627d9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d37de92b38932d40e4a251e876cc388f9aee5f42"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d81370396025cf63a7a1b5f8bb25a3479203b2ca"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/da7003434bcab0ae9aba3f2c003e734cae093326"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f46ea5fa3320dca4fe0c0926b49a5f14cb85de62"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49913,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:16.477,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: btrfs: fix inode list leak during backref walking at find_parent_nodes() During backref walking, at find_parent_nodes(), if we are dealing with a data extent and we get an error while resolving the indirect backrefs, at resolve_indirect_refs(), or in the while loop that iterates over the refs in the direct refs rbtree, we end up leaking the inode lists attached to the direct refs we have in the direct refs rbtree that were not yet added to the refs ulist passed as argument to find_parent_nodes(). Since they were not yet added to the refs ulist and prelim_release() does not free the lists, on error the caller can only free the lists attached to the refs that were added to the refs ulist, all the remaining refs get their inode lists never freed, therefore leaking their memory. Fix this by having prelim_release() always free any attached inode list to each ref found in the rbtree, and have find_parent_nodes() set the ref's inode list to NULL once it transfers ownership of the inode list to a ref added to the refs ulist passed to find_parent_nodes().",,,"[{""url"":""https://git.kernel.org/stable/c/222a3d533027b9492d5b7f5ecdc01a90f57bb5a9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/61e06128113711df0534c404fb6bb528eb7d2332"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6a6731a0df8c47ecc703bd7bb73459df767051e0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/83ea8c5b54d452a5769e605e3c5c687e8ca06d89"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/92876eec382a0f19f33d09d2c939e9ca49038ae5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49914,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:16.593,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: btrfs: fix inode list leak during backref walking at resolve_indirect_refs() During backref walking, at resolve_indirect_refs(), if we get an error we jump to the 'out' label and call ulist_free() on the 'parents' ulist, which frees all the elements in the ulist - however that does not free any inode lists that may be attached to elements, through the 'aux' field of a ulist node, so we end up leaking lists if we have any attached to the unodes. Fix this by calling free_leaf_list() instead of ulist_free() when we exit from resolve_indirect_refs(). The static function free_leaf_list() is moved up for this to be possible and it's slightly simplified by removing unnecessary code.",,,"[{""url"":""https://git.kernel.org/stable/c/2c0329406bb28109c07c6e23e5e3e0fa618a95d7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/396515db923ad5cbeb179d6b88927870b4cbebb7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5614dc3a47e3310fbc77ea3b67eaadd1c6417bf1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6ba3479f9e96b9ad460c7e77abc26dd16e5dec4f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a52e24c7fcc3c5ce3588a14e3663c00868d36623"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b1dc9019bb5f89abae85645de1a2dd4830c1f8e9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cded2c89774b99b67c98147ae103ea878c92a206"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49915,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:16.710,2025-05-07T13:26:51.760,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: mISDN: fix possible memory leak in mISDN_register_device() Afer commit 1fa5ae857bb1 (""driver core: get rid of struct device's bus_id string array""), the name of device is allocated dynamically, add put_device() to give up the reference, so that the name can be freed in kobject_cleanup() when the refcount is 0. Set device class before put_device() to avoid null release() function WARN message in device_release().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""2.6.30"",""versionEndExcluding"":""4.9.333"",""matchCriteriaId"":""1C004715-F8B0-42F5-9CF4-A394C27623BF""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.299"",""matchCriteriaId"":""2FE9A829-20E8-4929-AE9B-02761322A926""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.265"",""matchCriteriaId"":""ABED5D97-9B16-4CF6-86E3-D5F5C4358E35""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.224"",""matchCriteriaId"":""1D67A077-EB45-4ADE-94CD-F9A76F6C319C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""475D097C-AB5A-4CF5-899F-413077854ABD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""AB8B27B9-B41B-42D5-AE67-0A89A8A8EEB1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/029d5b7688a2f3a86f2a3be5a6ba9cc968c80e41"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/080aabfb29b2ee9cbb8894a1d039651943d3773e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/0d4e91efcaee081e919b3c50e875ecbb84290e41"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/2ff6b669523d3b3d253a044fa9636a67d0694995"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a636fc5a7cabd05699b5692ad838c2c7a3abec7b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d1d1aede313eb2b9a84afd60ff6cfb7c33631e0e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e77d213843e67b4373285712699b692f9c743f61"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e7d1d4d9ac0dfa40be4c2c8abd0731659869b297"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49916,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:16.820,2025-05-07T13:27:03.267,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: rose: Fix NULL pointer dereference in rose_send_frame() The syzkaller reported an issue: KASAN: null-ptr-deref in range [0x0000000000000380-0x0000000000000387] CPU: 0 PID: 4069 Comm: kworker/0:15 Not tainted 6.0.0-syzkaller-02734-g0326074ff465 #0 Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/22/2022 Workqueue: rcu_gp srcu_invoke_callbacks RIP: 0010:rose_send_frame+0x1dd/0x2f0 net/rose/rose_link.c:101 Call Trace: <IRQ> rose_transmit_clear_request+0x1d5/0x290 net/rose/rose_link.c:255 rose_rx_call_request+0x4c0/0x1bc0 net/rose/af_rose.c:1009 rose_loopback_timer+0x19e/0x590 net/rose/rose_loopback.c:111 call_timer_fn+0x1a0/0x6b0 kernel/time/timer.c:1474 expire_timers kernel/time/timer.c:1519 [inline] __run_timers.part.0+0x674/0xa80 kernel/time/timer.c:1790 __run_timers kernel/time/timer.c:1768 [inline] run_timer_softirq+0xb3/0x1d0 kernel/time/timer.c:1803 __do_softirq+0x1d0/0x9c8 kernel/softirq.c:571 [...] </IRQ> It triggers NULL pointer dereference when 'neigh->dev->dev_addr' is called in the rose_send_frame(). It's the first occurrence of the `neigh` is in rose_loopback_timer() as `rose_loopback_neigh', and the 'dev' in 'rose_loopback_neigh' is initialized sa nullptr. It had been fixed by commit 3b3fd068c56e3fbea30090859216a368398e39bf (""rose: Fix Null pointer dereference in rose_send_frame()"") ever. But it's introduced by commit 3c53cd65dece47dd1f9d3a809f32e59d1d87b2b8 (""rose: check NULL rose_loopback_neigh->loopback"") again. We fix it by add NULL check in rose_transmit_clear_request(). When the 'dev' in 'neigh' is NULL, we don't reply the request and just clear it. syzkaller don't provide repro, and I provide a syz repro like: r0 = syz_init_net_socket$bt_sco(0x1f, 0x5, 0x2) ioctl$sock_inet_SIOCSIFFLAGS(r0, 0x8914, &(0x7f0000000180)={'rose0\x00', 0x201}) r1 = syz_init_net_socket$rose(0xb, 0x5, 0x0) bind$rose(r1, &(0x7f00000000c0)=@full={0xb, @dev, @null, 0x0, [@null, @null, @netrom, @netrom, @default, @null]}, 0x40) connect$rose(r1, &(0x7f0000000240)=@short={0xb, @dev={0xbb, 0xbb, 0xbb, 0x1, 0x0}, @remote={0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x1}, 0x1, @netrom={0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0x0, 0x0}}, 0x1c)","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.9.327"",""versionEndExcluding"":""4.9.333"",""matchCriteriaId"":""31F61179-4732-41F1-A11D-6888D0B5A9E9""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.14.292"",""versionEndExcluding"":""4.14.299"",""matchCriteriaId"":""ACF1943E-656C-440D-81D9-3F3FA23D23B2""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.19.257"",""versionEndExcluding"":""4.19.265"",""matchCriteriaId"":""D2847A4B-743C-483A-AFAA-5F8246CB36C0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4.212"",""versionEndExcluding"":""5.4.224"",""matchCriteriaId"":""4E471077-A8B4-46CA-B708-055F12D45483""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.10.140"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""E598301C-2E9F-4209-93F0-9A4BDA889078""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15.64"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""94A75C9E-35AD-489C-BD91-6888509DC1DE""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.19.6"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""992D506B-5819-4016-814E-981BC909AFA5""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/01b9c68c121847d05a4ccef68244dadf82bfa331"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3e2129c67daca21043a26575108f6286c85e71f6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5b46adfbee1e429f33b10a88d6c00fa88f3d6c77"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a601e5eded33bb88b8a42743db8fef3ad41dd97e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b13be5e852b03f376058027e462fad4230240891"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bbc03d74e641e824754443b908454ca9e203773e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e97c089d7a49f67027395ddf70bf327eeac2611e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f06186e5271b980bac03f5c97276ed0146ddc9b0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49917,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:16.927,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ipvs: fix WARNING in ip_vs_app_net_cleanup() During the initialization of ip_vs_app_net_init(), if file ip_vs_app fails to be created, the initialization is successful by default. Therefore, the ip_vs_app file doesn't be found during the remove in ip_vs_app_net_cleanup(). It will cause WRNING. The following is the stack information: name 'ip_vs_app' WARNING: CPU: 1 PID: 9 at fs/proc/generic.c:712 remove_proc_entry+0x389/0x460 Modules linked in: Workqueue: netns cleanup_net RIP: 0010:remove_proc_entry+0x389/0x460 Call Trace: <TASK> ops_exit_list+0x125/0x170 cleanup_net+0x4ea/0xb00 process_one_work+0x9bf/0x1710 worker_thread+0x665/0x1080 kthread+0x2e4/0x3a0 ret_from_fork+0x1f/0x30 </TASK>",,,"[{""url"":""https://git.kernel.org/stable/c/06d7596d18725f1a93cf817662d36050e5afb989"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2c8d81bdb2684d53d6cedad7410ba4cf9090e343"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5663ed63adb9619c98ab7479aa4606fa9b7a548c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8457a00c981fe1a799ce34123908856b0f5973b8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/97f872b00937f2689bff2dab4ad9ed259482840f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/adc76740ccd52e4a1d910767cd1223e134a7078b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49918,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:17.060,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ipvs: fix WARNING in __ip_vs_cleanup_batch() During the initialization of ip_vs_conn_net_init(), if file ip_vs_conn or ip_vs_conn_sync fails to be created, the initialization is successful by default. Therefore, the ip_vs_conn or ip_vs_conn_sync file doesn't be found during the remove. The following is the stack information: name 'ip_vs_conn_sync' WARNING: CPU: 3 PID: 9 at fs/proc/generic.c:712 remove_proc_entry+0x389/0x460 Modules linked in: Workqueue: netns cleanup_net RIP: 0010:remove_proc_entry+0x389/0x460 Call Trace: <TASK> __ip_vs_cleanup_batch+0x7d/0x120 ops_exit_list+0x125/0x170 cleanup_net+0x4ea/0xb00 process_one_work+0x9bf/0x1710 worker_thread+0x665/0x1080 kthread+0x2e4/0x3a0 ret_from_fork+0x1f/0x30 </TASK>",,,"[{""url"":""https://git.kernel.org/stable/c/3d00c6a0da8ddcf75213e004765e4a42acc71d5d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5ee2d6b726b0ce339e36569e5849692f4cf4595e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7effc4ce3d1434ce6ff286866585a6e905fdbfc1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/931f56d59c854263b32075bfac56fdb3b1598d1b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e724220b826e008764309d2a1f55a9434a4e1530"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f08ee2aa24c076f81d84e26e213d8c6f4efd9f50"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49919,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:17.380,2025-05-07T13:27:09.437,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: netfilter: nf_tables: release flow rule object from commit path No need to postpone this to the commit release path, since no packets are walking over this object, this is accessed from control plane only. This helped uncovered UAF triggered by races with the netlink notifier.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""},{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4.198"",""versionEndExcluding"":""5.4.224"",""matchCriteriaId"":""138E3146-9DF8-4672-A8E4-77BC270F720F""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.10.122"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""5270EC98-823C-43E7-97F5-8458A300C4D0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.15.47"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""68D361EA-1C28-4614-BF59-63BAC5A4FB73""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.17.15"",""versionEndExcluding"":""5.18"",""matchCriteriaId"":""5BF6ED63-C6AF-4B5E-9814-C77A3C45349D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18.4"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""BDA2C319-826E-4387-A1A8-664512DBBEDF""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/26b5934ff4194e13196bedcba373cd4915071d0e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4ab6f96444e936f5e4a936d5c0bc948144bcded3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6044791b7be707fd0e709f26e961a446424e5051"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/74fd5839467054cd9c4d050614d3ee8788386171"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b2d7a92aff0fbd93c29d2aa6451fb99f050e2c4e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.0,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49920,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:17.517,2025-05-07T13:27:38.097,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: netfilter: nf_tables: netlink notifier might race to release objects commit release path is invoked via call_rcu and it runs lockless to release the objects after rcu grace period. The netlink notifier handler might win race to remove objects that the transaction context is still referencing from the commit release path. Call rcu_barrier() to ensure pending rcu callbacks run to completion if the list of transactions to be destroyed is not empty.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-362""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.12"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""047D3644-B2CA-4427-B14E-7F2ADE40217B""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1ffe7100411a8b9015115ce124cd6c9c9da6f8e3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d4bc8271db21ea9f1c86a1ca4d64999f184d4aae"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e40b7c44d19e327ad8b49a491ef1fa8dcc4566e0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":4.7,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""HIGH"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.0,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49921,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:17.627,2025-05-07T13:27:50.000,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: sched: Fix use after free in red_enqueue() We can't use ""skb"" again after passing it to qdisc_enqueue(). This is basically identical to commit 2f09707d0c97 (""sch_sfb: Also store skb len before calling child enqueue"").","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-416""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.4.163"",""versionEndExcluding"":""4.5"",""matchCriteriaId"":""52348607-E78A-4915-866C-6F2278BFD342""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.7"",""versionEndExcluding"":""4.9.333"",""matchCriteriaId"":""161839A0-1AC7-4219-B8DA-82368D4686E7""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.299"",""matchCriteriaId"":""2FE9A829-20E8-4929-AE9B-02761322A926""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.265"",""matchCriteriaId"":""ABED5D97-9B16-4CF6-86E3-D5F5C4358E35""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.224"",""matchCriteriaId"":""1D67A077-EB45-4ADE-94CD-F9A76F6C319C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""475D097C-AB5A-4CF5-899F-413077854ABD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""AB8B27B9-B41B-42D5-AE67-0A89A8A8EEB1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/170e5317042c302777ed6d59fdb84af9b0219d4e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/52e0429471976785c155bfbf51d80990c6cd46e2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5960b9081baca85cc7dcb14aec1de85999ea9d36"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/795afe0b9bb6c915f0299a8e309936519be01619"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8bdc2acd420c6f3dd1f1c78750ec989f02a1e2b9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/a238cdcf2bdc72207c74375fc8be13ee549ca9db"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e877f8fa49fbccc63cb2df2e9179bddc695b825a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/fc4b50adb400ee5ec527a04073174e8e73a139fa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"",""baseScore"":7.8,""baseSeverity"":""HIGH"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""HIGH"",""integrityImpact"":""HIGH"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":5.9}]",,,,,,,,
CVE-2022-49922,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:17.747,2025-05-07T13:28:14.680,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: nfc: nfcmrvl: Fix potential memory leak in nfcmrvl_i2c_nci_send() nfcmrvl_i2c_nci_send() will be called by nfcmrvl_nci_send(), and skb should be freed in nfcmrvl_i2c_nci_send(). However, nfcmrvl_nci_send() will only free skb when i2c_master_send() return >=0, which means skb will memleak when i2c_master_send() failed. Free skb no matter whether i2c_master_send() succeeds.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.4"",""versionEndExcluding"":""4.9.333"",""matchCriteriaId"":""8C082EDC-26AB-4D1E-A5FA-7D87FB49F44D""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.299"",""matchCriteriaId"":""2FE9A829-20E8-4929-AE9B-02761322A926""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.265"",""matchCriteriaId"":""ABED5D97-9B16-4CF6-86E3-D5F5C4358E35""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.224"",""matchCriteriaId"":""1D67A077-EB45-4ADE-94CD-F9A76F6C319C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""475D097C-AB5A-4CF5-899F-413077854ABD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""AB8B27B9-B41B-42D5-AE67-0A89A8A8EEB1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/52438e734c1566f5e2bcd9a065d2d65e306c0555"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/5dfdac5e3f8db5f4445228c44f64091045644a3b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/825656ae61e73ddc05f585e6258d284c87064b10"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/92a1df9c6da20c02cf9872f8b025a66ddb307aeb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/93d904a734a74c54d945a9884b4962977f1176cd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/c8e7d4a1166f063703955f1b2e765a6db5bf1771"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/dd0ee55ead91fbb16889dbe7ff0b0f7c9e4e849d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/f30060efcf18883748a0541aa41acef183cd9c0e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49923,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:17.900,2025-05-07T13:28:19.467,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: nfc: nxp-nci: Fix potential memory leak in nxp_nci_send() nxp_nci_send() will call nxp_nci_i2c_write(), and only free skb when nxp_nci_i2c_write() failed. However, even if the nxp_nci_i2c_write() run succeeds, the skb will not be freed in nxp_nci_i2c_write(). As the result, the skb will memleak. nxp_nci_send() should also free the skb when nxp_nci_i2c_write() succeeds.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.1"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""431648F4-7FA3-4FF3-A2E4-B51B3CD7F8F0""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""AB8B27B9-B41B-42D5-AE67-0A89A8A8EEB1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/3cba1f061bfe23fece2841129ca2862cdec29d5c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/3ecf0f4227029b2c42e036b10ff6e5d09e20821e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7bf1ed6aff0f70434bd0cdd45495e83f1dffb551"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9ae2c9a91ff068f4c3e392f47e8e26a1c9f85ebb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49924,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:18.170,2025-05-07T13:28:24.500,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: nfc: fdp: Fix potential memory leak in fdp_nci_send() fdp_nci_send() will call fdp_nci_i2c_write that will not free skb in the function. As a result, when fdp_nci_i2c_write() finished, the skb will memleak. fdp_nci_send() should free skb after fdp_nci_i2c_write() finished.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.4"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""21ABEE72-0981-4A7D-A2BF-83AFDAD1D629""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""AB8B27B9-B41B-42D5-AE67-0A89A8A8EEB1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1a7a898f8f7b56c0eaa2baf67a0c96235a30bc29"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/44bc1868a4f542502ea2221fe5ad88ca66d1c6b6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/8e4aae6b8ca76afb1fb64dcb24be44ba814e7f8a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/e8c11ee2d07f7c4dfa2ac0ea8efc4f627e58ea57"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49925,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:18.337,2025-05-07T13:28:29.707,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: RDMA/core: Fix null-ptr-deref in ib_core_cleanup() KASAN reported a null-ptr-deref error: KASAN: null-ptr-deref in range [0x0000000000000118-0x000000000000011f] CPU: 1 PID: 379 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996) RIP: 0010:destroy_workqueue+0x2f/0x740 RSP: 0018:ffff888016137df8 EFLAGS: 00000202 ... Call Trace: ib_core_cleanup+0xa/0xa1 [ib_core] __do_sys_delete_module.constprop.0+0x34f/0x5b0 do_syscall_64+0x3a/0x90 entry_SYSCALL_64_after_hwframe+0x63/0xcd RIP: 0033:0x7fa1a0d221b7 ... It is because the fail of roce_gid_mgmt_init() is ignored: ib_core_init() roce_gid_mgmt_init() gid_cache_wq = alloc_ordered_workqueue # fail ... ib_core_cleanup() roce_gid_mgmt_cleanup() destroy_workqueue(gid_cache_wq) # destroy an unallocated wq Fix this by catching the fail of roce_gid_mgmt_init() in ib_core_init().","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.3"",""versionEndExcluding"":""5.4.224"",""matchCriteriaId"":""84C9786C-D588-4D8B-AA59-78A7D935EACA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""475D097C-AB5A-4CF5-899F-413077854ABD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""AB8B27B9-B41B-42D5-AE67-0A89A8A8EEB1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/07c0d131cc0fe1f3981a42958fc52d573d303d89"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/6b3d5dcb12347f3518308c2c9d2cf72453a3e1e5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ab817f75e5e0fa58d9be0825da6a7b7d8a1fa1d9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/af8fb5a0600e9ae29950e9422a032c3c22649ee5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d360e875c011a005628525bf290322058927e7dc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49926,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:18.440,2025-05-07T13:28:34.500,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: net: dsa: Fix possible memory leaks in dsa_loop_init() kmemleak reported memory leaks in dsa_loop_init(): kmemleak: 12 new suspected memory leaks unreferenced object 0xffff8880138ce000 (size 2048): comm ""modprobe"", pid 390, jiffies 4295040478 (age 238.976s) backtrace: [<000000006a94f1d5>] kmalloc_trace+0x26/0x60 [<00000000a9c44622>] phy_device_create+0x5d/0x970 [<00000000d0ee2afc>] get_phy_device+0xf3/0x2b0 [<00000000dca0c71f>] __fixed_phy_register.part.0+0x92/0x4e0 [<000000008a834798>] fixed_phy_register+0x84/0xb0 [<0000000055223fcb>] dsa_loop_init+0xa9/0x116 [dsa_loop] ... There are two reasons for memleak in dsa_loop_init(). First, fixed_phy_register() create and register phy_device: fixed_phy_register() get_phy_device() phy_device_create() # freed by phy_device_free() phy_device_register() # freed by phy_device_remove() But fixed_phy_unregister() only calls phy_device_remove(). So the memory allocated in phy_device_create() is leaked. Second, when mdio_driver_register() fail in dsa_loop_init(), it just returns and there is no cleanup for phydevs. Fix the problems by catching the error of mdio_driver_register() in dsa_loop_init(), then calling both fixed_phy_unregister() and phy_device_free() to release phydevs. Also add a function for phydevs cleanup to avoid duplacate.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.12"",""versionEndExcluding"":""4.14.299"",""matchCriteriaId"":""D2CFDFB9-7D89-4036-A84B-B2E8E20CA6EF""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.265"",""matchCriteriaId"":""ABED5D97-9B16-4CF6-86E3-D5F5C4358E35""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.224"",""matchCriteriaId"":""1D67A077-EB45-4ADE-94CD-F9A76F6C319C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""475D097C-AB5A-4CF5-899F-413077854ABD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""AB8B27B9-B41B-42D5-AE67-0A89A8A8EEB1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/37a098fc9b42bd7fce66764866aa514639667b6e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/4d2024b138d9f7b02ae13ee997fd3a71e9e46254"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/633efc8b3dc96f56f5a57f2a49764853a2fa3f50"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/935b4beb724946a37cebf97191592d4879d3a3a3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/9f555b1584fc2d5d16ee3c4d9438e93ac7c502c7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/bbc5d7b46a729bfcbb5544f6612b7a67dd4f4d6f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d593e1ede655b74c42e4e4fe285ea64aee96fb5c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49927,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:18.657,2025-05-07T13:28:39.750,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: nfs4: Fix kmemleak when allocate slot failed If one of the slot allocate failed, should cleanup all the other allocated slots, otherwise, the allocated slots will leak: unreferenced object 0xffff8881115aa100 (size 64): comm """"mount.nfs"""", pid 679, jiffies 4294744957 (age 115.037s) hex dump (first 32 bytes): 00 cc 19 73 81 88 ff ff 00 a0 5a 11 81 88 ff ff ...s......Z..... 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [<000000007a4c434a>] nfs4_find_or_create_slot+0x8e/0x130 [<000000005472a39c>] nfs4_realloc_slot_table+0x23f/0x270 [<00000000cd8ca0eb>] nfs40_init_client+0x4a/0x90 [<00000000128486db>] nfs4_init_client+0xce/0x270 [<000000008d2cacad>] nfs4_set_client+0x1a2/0x2b0 [<000000000e593b52>] nfs4_create_server+0x300/0x5f0 [<00000000e4425dd2>] nfs4_try_get_tree+0x65/0x110 [<00000000d3a6176f>] vfs_get_tree+0x41/0xf0 [<0000000016b5ad4c>] path_mount+0x9b3/0xdd0 [<00000000494cae71>] __x64_sys_mount+0x190/0x1d0 [<000000005d56bdec>] do_syscall_64+0x35/0x80 [<00000000687c9ae4>] entry_SYSCALL_64_after_hwframe+0x46/0xb0","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-401""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""3.12"",""versionEndExcluding"":""4.9.333"",""matchCriteriaId"":""07DC6E81-B320-4B74-8FB7-5362344C1DB1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.10"",""versionEndExcluding"":""4.14.299"",""matchCriteriaId"":""2FE9A829-20E8-4929-AE9B-02761322A926""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.15"",""versionEndExcluding"":""4.19.265"",""matchCriteriaId"":""ABED5D97-9B16-4CF6-86E3-D5F5C4358E35""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""4.20"",""versionEndExcluding"":""5.4.224"",""matchCriteriaId"":""1D67A077-EB45-4ADE-94CD-F9A76F6C319C""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.5"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""475D097C-AB5A-4CF5-899F-413077854ABD""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.11"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""AB8B27B9-B41B-42D5-AE67-0A89A8A8EEB1""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/24641993a7dce6b1628645f4e1d97ca06c9f765d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/45aea4fbf61e205649c29200726b9f45c1718a67"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7e8436728e22181c3f12a5dbabd35ed3a8b8c593"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/84b5cb476903003ae9ca88f32b57ff0eaefa6d4c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/86ce0e93cf6fb4d0c447323ac66577c642628b9d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/925cb538bd5851154602818dc80bf4b4d924c127"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/aae35a0c8a775fa4afa6a4e7dab3f936f1f89bbb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/db333ae981fb8843c383aa7dbf62cc682597d401"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49928,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:18.783,2025-05-07T13:28:44.973,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: SUNRPC: Fix null-ptr-deref when xps sysfs alloc failed There is a null-ptr-deref when xps sysfs alloc failed: BUG: KASAN: null-ptr-deref in sysfs_do_create_link_sd+0x40/0xd0 Read of size 8 at addr 0000000000000030 by task gssproxy/457 CPU: 5 PID: 457 Comm: gssproxy Not tainted 6.0.0-09040-g02357b27ee03 #9 Call Trace: <TASK> dump_stack_lvl+0x34/0x44 kasan_report+0xa3/0x120 sysfs_do_create_link_sd+0x40/0xd0 rpc_sysfs_client_setup+0x161/0x1b0 rpc_new_client+0x3fc/0x6e0 rpc_create_xprt+0x71/0x220 rpc_create+0x1d4/0x350 gssp_rpc_create+0xc3/0x160 set_gssp_clnt+0xbc/0x140 write_gssp+0x116/0x1a0 proc_reg_write+0xd6/0x130 vfs_write+0x177/0x690 ksys_write+0xb9/0x150 do_syscall_64+0x35/0x80 entry_SYSCALL_64_after_hwframe+0x46/0xb0 When the xprt_switch sysfs alloc failed, should not add xprt and switch sysfs to it, otherwise, maybe null-ptr-deref; also initialize the 'xps_sysfs' to NULL to avoid oops when destroy it.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""4A83CCE5-725E-495E-A0C2-C673EA7B658A""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/7b189b0aa8dab14b49c31c65af8a982e96e25b62"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/cbdeaee94a415800c65a8c3fa04d9664a8b8fb3a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/d59722d088a9d86ce6d9d39979e5d1d669d249f7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49929,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:18.887,2025-05-02T13:52:51.693,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: RDMA/rxe: Fix mr leak in RESPST_ERR_RNR rxe_recheck_mr() will increase mr's ref_cnt, so we should call rxe_put(mr) to drop mr's ref_cnt in RESPST_ERR_RNR to avoid below warning: WARNING: CPU: 0 PID: 4156 at drivers/infiniband/sw/rxe/rxe_pool.c:259 __rxe_cleanup+0x1df/0x240 [rdma_rxe] ... Call Trace: rxe_dereg_mr+0x4c/0x60 [rdma_rxe] ib_dereg_mr_user+0xa8/0x200 [ib_core] ib_mr_pool_destroy+0x77/0xb0 [ib_core] nvme_rdma_destroy_queue_ib+0x89/0x240 [nvme_rdma] nvme_rdma_free_queue+0x40/0x50 [nvme_rdma] nvme_rdma_teardown_io_queues.part.0+0xc3/0x120 [nvme_rdma] nvme_rdma_error_recovery_work+0x4d/0xf0 [nvme_rdma] process_one_work+0x582/0xa40 ? pwq_dec_nr_in_flight+0x100/0x100 ? rwlock_bug.part.0+0x60/0x60 worker_thread+0x2a9/0x700 ? process_one_work+0xa40/0xa40 kthread+0x168/0x1a0 ? kthread_complete_and_exit+0x20/0x20 ret_from_fork+0x22/0x30",,,"[{""url"":""https://git.kernel.org/stable/c/50b35ad2864a9d66f802f9ce193d99bbef64e219"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b5f9a01fae42684648c2ee3cd9985f80c67ab9f7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49930,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:18.983,2025-05-07T13:28:51.413,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: RDMA/hns: Fix NULL pointer problem in free_mr_init() Lock grab occurs in a concurrent scenario, resulting in stepping on a NULL pointer. It should be init mutex_init() first before use the lock. Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000 Call trace: __mutex_lock.constprop.0+0xd0/0x5c0 __mutex_lock_slowpath+0x1c/0x2c mutex_lock+0x44/0x50 free_mr_send_cmd_to_hw+0x7c/0x1c0 [hns_roce_hw_v2] hns_roce_v2_dereg_mr+0x30/0x40 [hns_roce_hw_v2] hns_roce_dereg_mr+0x4c/0x130 [hns_roce_hw_v2] ib_dereg_mr_user+0x54/0x124 uverbs_free_mr+0x24/0x30 destroy_hw_idr_uobject+0x38/0x74 uverbs_destroy_uobject+0x48/0x1c4 uobj_destroy+0x74/0xcc ib_uverbs_cmd_verbs+0x368/0xbb0 ib_uverbs_ioctl+0xec/0x1a4 __arm64_sys_ioctl+0xb4/0x100 invoke_syscall+0x50/0x120 el0_svc_common.constprop.0+0x58/0x190 do_el0_svc+0x30/0x90 el0_svc+0x2c/0xb4 el0t_64_sync_handler+0x1a4/0x1b0 el0t_64_sync+0x19c/0x1a0","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.18"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""1A7CC21A-D6B9-425E-AEBB-BD23DFDC85EA""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/0e23e85d86b78e734dd6654f1b69fbaeb5534c81"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/12bcaf87d8b66d8cd812479c8a6349dcb245375c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49931,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-01T15:16:19.087,2025-05-07T13:29:02.710,Analyzed,[],"In the Linux kernel, the following vulnerability has been resolved: IB/hfi1: Correctly move list in sc_disable() Commit 13bac861952a (""IB/hfi1: Fix abba locking issue with sc_disable()"") incorrectly tries to move a list from one list head to another. The result is a kernel crash. The crash is triggered when a link goes down and there are waiters for a send to complete. The following signature is seen: BUG: kernel NULL pointer dereference, address: 0000000000000030 [...] Call Trace: sc_disable+0x1ba/0x240 [hfi1] pio_freeze+0x3d/0x60 [hfi1] handle_freeze+0x27/0x1b0 [hfi1] process_one_work+0x1b0/0x380 ? process_one_work+0x380/0x380 worker_thread+0x30/0x360 ? process_one_work+0x380/0x380 kthread+0xd7/0x100 ? kthread_complete_and_exit+0x20/0x20 ret_from_fork+0x1f/0x30 The fix is to use the correct call to move the list.","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""description"":[{""lang"":""en"",""value"":""CWE-476""}]}]","[{""nodes"":[{""operator"":""OR"",""negate"":false,""cpeMatch"":[{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.4.157"",""versionEndExcluding"":""5.4.224"",""matchCriteriaId"":""BDFAB6A5-9A63-4F7C-919F-15F161381091""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.10.77"",""versionEndExcluding"":""5.10.154"",""matchCriteriaId"":""C395A4B6-7D4C-4782-A571-27F4A03657B8""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.14.16"",""versionEndExcluding"":""5.15.78"",""matchCriteriaId"":""BCEFCD80-1AE5-488A-B899-FCA4D6012958""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"",""versionStartIncluding"":""5.16"",""versionEndExcluding"":""6.0.8"",""matchCriteriaId"":""EC9A754E-625D-42F3-87A7-960D643E2867""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*"",""matchCriteriaId"":""E7E331DA-1FB0-4DEC-91AC-7DA69D461C11""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*"",""matchCriteriaId"":""17F0B248-42CF-4AE6-A469-BB1BAE7F4705""},{""vulnerable"":true,""criteria"":""cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*"",""matchCriteriaId"":""E2422816-0C14-4B5E-A1E6-A9D776E5C49B""}]}]}]","[{""url"":""https://git.kernel.org/stable/c/1afac08b39d85437187bb2a92d89a741b1078f55"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/25760a41e3802f54aadcc31385543665ab349b8e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/7c4260f8f188df32414a5ecad63e8b934c2aa3f0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/b8bcff99b07cc175a6ee12a52db51cdd2229586c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]},{""url"":""https://git.kernel.org/stable/c/ba95409d6b580501ff6d78efd00064f7df669926"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67"",""tags"":[""Patch""]}]","[{""source"":""nvd@nist.gov"",""type"":""Primary"",""cvssData"":{""version"":""3.1"",""vectorString"":""CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"",""baseScore"":5.5,""baseSeverity"":""MEDIUM"",""attackVector"":""LOCAL"",""attackComplexity"":""LOW"",""privilegesRequired"":""LOW"",""userInteraction"":""NONE"",""scope"":""UNCHANGED"",""confidentialityImpact"":""NONE"",""integrityImpact"":""NONE"",""availabilityImpact"":""HIGH""},""exploitabilityScore"":1.8,""impactScore"":3.6}]",,,,,,,,
CVE-2022-49932,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-02T16:15:22.070,2025-05-05T20:54:45.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: KVM: VMX: Do _all_ initialization before exposing /dev/kvm to userspace Call kvm_init() only after _all_ setup is complete, as kvm_init() exposes /dev/kvm to userspace and thus allows userspace to create VMs (and call other ioctls). E.g. KVM will encounter a NULL pointer when attempting to add a vCPU to the per-CPU loaded_vmcss_on_cpu list if userspace is able to create a VM before vmx_init() configures said list. BUG: kernel NULL pointer dereference, address: 0000000000000008 #PF: supervisor write access in kernel mode #PF: error_code(0x0002) - not-present page PGD 0 P4D 0 Oops: 0002 [#1] SMP CPU: 6 PID: 1143 Comm: stable Not tainted 6.0.0-rc7+ #988 Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015 RIP: 0010:vmx_vcpu_load_vmcs+0x68/0x230 [kvm_intel] <TASK> vmx_vcpu_load+0x16/0x60 [kvm_intel] kvm_arch_vcpu_load+0x32/0x1f0 [kvm] vcpu_load+0x2f/0x40 [kvm] kvm_arch_vcpu_create+0x231/0x310 [kvm] kvm_vm_ioctl+0x79f/0xe10 [kvm] ? handle_mm_fault+0xb1/0x220 __x64_sys_ioctl+0x80/0xb0 do_syscall_64+0x2b/0x50 entry_SYSCALL_64_after_hwframe+0x46/0xb0 RIP: 0033:0x7f5a6b05743b </TASK> Modules linked in: vhost_net vhost vhost_iotlb tap kvm_intel(+) kvm irqbypass",,,"[{""url"":""https://git.kernel.org/stable/c/e136e969d268b9b89329c816c002e53f60e82985"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e28533c08023c4b319b7f2cd77f3f7c9204eb517"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e32b120071ea114efc0b4ddd439547750b85f618"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49933,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-05-02T16:15:22.163,2025-05-20T14:15:26.470,Rejected,[],Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.,,,[],,,,,,,,,
CVE-2022-49934,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:19.400,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: wifi: mac80211: Fix UAF in ieee80211_scan_rx() ieee80211_scan_rx() tries to access scan_req->flags after a null check, but a UAF is observed when the scan is completed and __ieee80211_scan_completed() executes, which then calls cfg80211_scan_done() leading to the freeing of scan_req. Since scan_req is rcu_dereference()'d, prevent the racing in __ieee80211_scan_completed() by ensuring that from mac80211's POV it is no longer accessed from an RCU read critical section before we call cfg80211_scan_done().",,,"[{""url"":""https://git.kernel.org/stable/c/4abc8c07a065ecf771827bde3c63fbbe4aa0c08b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5d20c6f932f2758078d0454729129c894fe353e7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/60deb9f10eec5c6a20252ed36238b55d8b614a2c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6eb181a64fdabf10be9e54de728876667da20255"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/78a07732fbb0934d14827d8f09b9aa6a49ee1aa9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9ad48cbf8b07f10c1e4a7a262b32a9179ae9dd2d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c0445feb80a4d0854898118fa01073701f8d356b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e0ff39448cea654843744c72c6780293c5082cb1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49935,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:20.340,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: dma-buf/dma-resv: check if the new fence is really later Previously when we added a fence to a dma_resv object we always assumed the the newer than all the existing fences. With Jason's work to add an UAPI to explicit export/import that's not necessary the case any more. So without this check we would allow userspace to force the kernel into an use after free error. Since the change is very small and defensive it's probably a good idea to backport this to stable kernels as well just in case others are using the dma_resv object in the same way.",,,"[{""url"":""https://git.kernel.org/stable/c/a3f7c10a269d5b77dd5822ade822643ced3057f0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c4c798fe98adceb642050819cb57cbc8f5c27870"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49936,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:20.450,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: USB: core: Prevent nested device-reset calls Automatic kernel fuzzing revealed a recursive locking violation in usb-storage: ============================================ WARNING: possible recursive locking detected 5.18.0 #3 Not tainted -------------------------------------------- kworker/1:3/1205 is trying to acquire lock: ffff888018638db8 (&us_interface_key[i]){+.+.}-{3:3}, at: usb_stor_pre_reset+0x35/0x40 drivers/usb/storage/usb.c:230 but task is already holding lock: ffff888018638db8 (&us_interface_key[i]){+.+.}-{3:3}, at: usb_stor_pre_reset+0x35/0x40 drivers/usb/storage/usb.c:230 ... stack backtrace: CPU: 1 PID: 1205 Comm: kworker/1:3 Not tainted 5.18.0 #3 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014 Workqueue: usb_hub_wq hub_event Call Trace: <TASK> __dump_stack lib/dump_stack.c:88 [inline] dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106 print_deadlock_bug kernel/locking/lockdep.c:2988 [inline] check_deadlock kernel/locking/lockdep.c:3031 [inline] validate_chain kernel/locking/lockdep.c:3816 [inline] __lock_acquire.cold+0x152/0x3ca kernel/locking/lockdep.c:5053 lock_acquire kernel/locking/lockdep.c:5665 [inline] lock_acquire+0x1ab/0x520 kernel/locking/lockdep.c:5630 __mutex_lock_common kernel/locking/mutex.c:603 [inline] __mutex_lock+0x14f/0x1610 kernel/locking/mutex.c:747 usb_stor_pre_reset+0x35/0x40 drivers/usb/storage/usb.c:230 usb_reset_device+0x37d/0x9a0 drivers/usb/core/hub.c:6109 r871xu_dev_remove+0x21a/0x270 drivers/staging/rtl8712/usb_intf.c:622 usb_unbind_interface+0x1bd/0x890 drivers/usb/core/driver.c:458 device_remove drivers/base/dd.c:545 [inline] device_remove+0x11f/0x170 drivers/base/dd.c:537 __device_release_driver drivers/base/dd.c:1222 [inline] device_release_driver_internal+0x1a7/0x2f0 drivers/base/dd.c:1248 usb_driver_release_interface+0x102/0x180 drivers/usb/core/driver.c:627 usb_forced_unbind_intf+0x4d/0xa0 drivers/usb/core/driver.c:1118 usb_reset_device+0x39b/0x9a0 drivers/usb/core/hub.c:6114 This turned out not to be an error in usb-storage but rather a nested device reset attempt. That is, as the rtl8712 driver was being unbound from a composite device in preparation for an unrelated USB reset (that driver does not have pre_reset or post_reset callbacks), its ->remove routine called usb_reset_device() -- thus nesting one reset call within another. Performing a reset as part of disconnect processing is a questionable practice at best. However, the bug report points out that the USB core does not have any protection against nested resets. Adding a reset_in_progress flag and testing it will prevent such errors in the future.",,,"[{""url"":""https://git.kernel.org/stable/c/1b29498669914c7f9afb619722421418a753d372"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9c6d778800b921bde3bff3cff5003d1650f942d1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/abe3cfb7a7c8e907b312c7dbd7bf4d142b745aa8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c548b99e1c37db6f7df86ecfe9a1f895d6c5966e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cc9a12e12808af178c600cc485338bac2e37d2a8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d5eb850b3e8836197a38475840725260b9783e94"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d90419b8b8322b6924f6da9da952647f2dadc21b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/df1875084898b15cbc42f712e93d7f113ae6271b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49937,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:20.570,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: media: mceusb: Use new usb_control_msg_*() routines Automatic kernel fuzzing led to a WARN about invalid pipe direction in the mceusb driver: ------------[ cut here ]------------ usb 6-1: BOGUS control dir, pipe 80000380 doesn't match bRequestType 40 WARNING: CPU: 0 PID: 2465 at drivers/usb/core/urb.c:410 usb_submit_urb+0x1326/0x1820 drivers/usb/core/urb.c:410 Modules linked in: CPU: 0 PID: 2465 Comm: kworker/0:2 Not tainted 5.19.0-rc4-00208-g69cb6c6556ad #1 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014 Workqueue: usb_hub_wq hub_event RIP: 0010:usb_submit_urb+0x1326/0x1820 drivers/usb/core/urb.c:410 Code: 7c 24 40 e8 ac 23 91 fd 48 8b 7c 24 40 e8 b2 70 1b ff 45 89 e8 44 89 f1 4c 89 e2 48 89 c6 48 c7 c7 a0 30 a9 86 e8 48 07 11 02 <0f> 0b e9 1c f0 ff ff e8 7e 23 91 fd 0f b6 1d 63 22 83 05 31 ff 41 RSP: 0018:ffffc900032becf0 EFLAGS: 00010282 RAX: 0000000000000000 RBX: ffff8881100f3058 RCX: 0000000000000000 RDX: ffffc90004961000 RSI: ffff888114c6d580 RDI: fffff52000657d90 RBP: ffff888105ad90f0 R08: ffffffff812c3638 R09: 0000000000000000 R10: 0000000000000005 R11: ffffed1023504ef1 R12: ffff888105ad9000 R13: 0000000000000040 R14: 0000000080000380 R15: ffff88810ba96500 FS: 0000000000000000(0000) GS:ffff88811a800000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00007ffe810bda58 CR3: 000000010b720000 CR4: 0000000000350ef0 Call Trace: <TASK> usb_start_wait_urb+0x101/0x4c0 drivers/usb/core/message.c:58 usb_internal_control_msg drivers/usb/core/message.c:102 [inline] usb_control_msg+0x31c/0x4a0 drivers/usb/core/message.c:153 mceusb_gen1_init drivers/media/rc/mceusb.c:1431 [inline] mceusb_dev_probe+0x258e/0x33f0 drivers/media/rc/mceusb.c:1807 The reason for the warning is clear enough; the driver sends an unusual read request on endpoint 0 but does not set the USB_DIR_IN bit in the bRequestType field. More importantly, the whole situation can be avoided and the driver simplified by converting it over to the relatively new usb_control_msg_recv() and usb_control_msg_send() routines. That's what this fix does.",,,"[{""url"":""https://git.kernel.org/stable/c/587f793c64d99d92be8ef01c4c69d885a3f2edb6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/608e58a0f4617977178131f5f68a3fce1d3f5316"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/75913c562f5ba4cf397d835c63f443879167c6f6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d69c738ac9310b56e84c51c8f09fc018a8291bc6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49938,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:20.683,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: cifs: fix small mempool leak in SMB2_negotiate() In some cases of failure (dialect mismatches) in SMB2_negotiate(), after the request is sent, the checks would return -EIO when they should be rather setting rc = -EIO and jumping to neg_exit to free the response buffer from mempool.",,,"[{""url"":""https://git.kernel.org/stable/c/27893dfc1285f80f80f46b3b8c95f5d15d2e66d0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/38a6b469bf22f153282fbe7d702a24e9eb43f50e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9e3c9efa7caf16e5acc05eab5e4d0a714e1610b0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49939,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:20.793,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: binder: fix UAF of ref->proc caused by race condition A transaction of type BINDER_TYPE_WEAK_HANDLE can fail to increment the reference for a node. In this case, the target proc normally releases the failed reference upon close as expected. However, if the target is dying in parallel the call will race with binder_deferred_release(), so the target could have released all of its references by now leaving the cleanup of the new failed reference unhandled. The transaction then ends and the target proc gets released making the ref->proc now a dangling pointer. Later on, ref->node is closed and we attempt to take spin_lock(&ref->proc->inner_lock), which leads to the use-after-free bug reported below. Let's fix this by cleaning up the failed reference on the spot instead of relying on the target to do so. ================================================================== BUG: KASAN: use-after-free in _raw_spin_lock+0xa8/0x150 Write of size 4 at addr ffff5ca207094238 by task kworker/1:0/590 CPU: 1 PID: 590 Comm: kworker/1:0 Not tainted 5.19.0-rc8 #10 Hardware name: linux,dummy-virt (DT) Workqueue: events binder_deferred_func Call trace: dump_backtrace.part.0+0x1d0/0x1e0 show_stack+0x18/0x70 dump_stack_lvl+0x68/0x84 print_report+0x2e4/0x61c kasan_report+0xa4/0x110 kasan_check_range+0xfc/0x1a4 __kasan_check_write+0x3c/0x50 _raw_spin_lock+0xa8/0x150 binder_deferred_func+0x5e0/0x9b0 process_one_work+0x38c/0x5f0 worker_thread+0x9c/0x694 kthread+0x188/0x190 ret_from_fork+0x10/0x20",,,"[{""url"":""https://git.kernel.org/stable/c/06e5b43ca4dab06a92bf4c2f33766e6fb11b880a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/229f47603dd306bc0eb1a831439adb8e48bb0eae"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/30d0901b307f27d36b2655fb3048cf31ee0e89c0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/603a47f2ae56bf68288784d3c0a8c5b8e0a827ed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9629f2dfdb1dad294b468038ff8e161e94d0b609"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a0e44c64b6061dda7e00b7c458e4523e2331b739"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c2a4b5dc8fa71af73bab704d0cac42ac39767ed6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49940,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:20.917,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: tty: n_gsm: add sanity check for gsm->receive in gsm_receive_buf() A null pointer dereference can happen when attempting to access the ""gsm->receive()"" function in gsmld_receive_buf(). Currently, the code assumes that gsm->recieve is only called after MUX activation. Since the gsmld_receive_buf() function can be accessed without the need to initialize the MUX, the gsm->receive() function will not be set and a NULL pointer dereference will occur. Fix this by avoiding the call to ""gsm->receive()"" in case the function is not initialized by adding a sanity check. Call Trace: <TASK> gsmld_receive_buf+0x1c2/0x2f0 drivers/tty/n_gsm.c:2861 tiocsti drivers/tty/tty_io.c:2293 [inline] tty_ioctl+0xa75/0x15d0 drivers/tty/tty_io.c:2692 vfs_ioctl fs/ioctl.c:51 [inline] __do_sys_ioctl fs/ioctl.c:870 [inline] __se_sys_ioctl fs/ioctl.c:856 [inline] __x64_sys_ioctl+0x193/0x200 fs/ioctl.c:856 do_syscall_x64 arch/x86/entry/common.c:50 [inline] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80 entry_SYSCALL_64_after_hwframe+0x63/0xcd",,,"[{""url"":""https://git.kernel.org/stable/c/309aea4b6b813f6678c3a547cfd7fe3a76ffa976"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5a82cf64f8ad63caf6bf115642ce44ddbc64311e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5aa37f9510345a812c0998bcbbc4d88d1dcc4d8b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f16c6d2e58a4c2b972efcf9eb12390ee0ba3befb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49941,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:21.030,2025-06-18T15:15:20.837,Rejected,[],Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.,,,[],,,,,,,,,
CVE-2022-49942,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:21.147,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: wifi: mac80211: Don't finalize CSA in IBSS mode if state is disconnected When we are not connected to a channel, sending channel ""switch"" announcement doesn't make any sense. The BSS list is empty in that case. This causes the for loop in cfg80211_get_bss() to be bypassed, so the function returns NULL (check line 1424 of net/wireless/scan.c), causing the WARN_ON() in ieee80211_ibss_csa_beacon() to get triggered (check line 500 of net/mac80211/ibss.c), which was consequently reported on the syzkaller dashboard. Thus, check if we have an existing connection before generating the CSA beacon in ieee80211_ibss_finish_csa().",,,"[{""url"":""https://git.kernel.org/stable/c/15bc8966b6d3a5b9bfe4c9facfa02f2b69b1e5f0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1691a48aef0a82d1754b9853dae7e3f5cacdf70b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/552ba102a6898630a7d16887f29e606d6fabe508"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/66689c5c02acd4d76c28498fe220998610aec61e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/864e280cb3a9a0f5212b16ef5057c4e692f7039d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cdb9a8da9b84800eb15506cd9363cf0cf059e677"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d9eb37db6a28b59a95a3461450ee209654c5f95b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dd649b49219a0388cc10fc40e4c2ea681566a780"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49943,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:21.267,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: USB: gadget: Fix obscure lockdep violation for udc_mutex A recent commit expanding the scope of the udc_lock mutex in the gadget core managed to cause an obscure and slightly bizarre lockdep violation. In abbreviated form: ====================================================== WARNING: possible circular locking dependency detected 5.19.0-rc7+ #12510 Not tainted ------------------------------------------------------ udevadm/312 is trying to acquire lock: ffff80000aae1058 (udc_lock){+.+.}-{3:3}, at: usb_udc_uevent+0x54/0xe0 but task is already holding lock: ffff000002277548 (kn->active#4){++++}-{0:0}, at: kernfs_seq_start+0x34/0xe0 which lock already depends on the new lock. the existing dependency chain (in reverse order) is: -> #3 (kn->active#4){++++}-{0:0}: lock_acquire+0x68/0x84 __kernfs_remove+0x268/0x380 kernfs_remove_by_name_ns+0x58/0xac sysfs_remove_file_ns+0x18/0x24 device_del+0x15c/0x440 -> #2 (device_links_lock){+.+.}-{3:3}: lock_acquire+0x68/0x84 __mutex_lock+0x9c/0x430 mutex_lock_nested+0x38/0x64 device_link_remove+0x3c/0xa0 _regulator_put.part.0+0x168/0x190 regulator_put+0x3c/0x54 devm_regulator_release+0x14/0x20 -> #1 (regulator_list_mutex){+.+.}-{3:3}: lock_acquire+0x68/0x84 __mutex_lock+0x9c/0x430 mutex_lock_nested+0x38/0x64 regulator_lock_dependent+0x54/0x284 regulator_enable+0x34/0x80 phy_power_on+0x24/0x130 __dwc2_lowlevel_hw_enable+0x100/0x130 dwc2_lowlevel_hw_enable+0x18/0x40 dwc2_hsotg_udc_start+0x6c/0x2f0 gadget_bind_driver+0x124/0x1f4 -> #0 (udc_lock){+.+.}-{3:3}: __lock_acquire+0x1298/0x20cc lock_acquire.part.0+0xe0/0x230 lock_acquire+0x68/0x84 __mutex_lock+0x9c/0x430 mutex_lock_nested+0x38/0x64 usb_udc_uevent+0x54/0xe0 Evidently this was caused by the scope of udc_mutex being too large. The mutex is only meant to protect udc->driver along with a few other things. As far as I can tell, there's no reason for the mutex to be held while the gadget core calls a gadget driver's ->bind or ->unbind routine, or while a UDC is being started or stopped. (This accounts for link #1 in the chain above, where the mutex is held while the dwc2_hsotg_udc is started as part of driver probing.) Gadget drivers' ->disconnect callbacks are problematic. Even though usb_gadget_disconnect() will now acquire the udc_mutex, there's a window in usb_gadget_bind_driver() between the times when the mutex is released and the ->bind callback is invoked. If a disconnect occurred during that window, we could call the driver's ->disconnect routine before its ->bind routine. To prevent this from happening, it will be necessary to prevent a UDC from connecting while it has no gadget driver. This should be done already but it doesn't seem to be; currently usb_gadget_connect() has no check for this. Such a check will have to be added later. Some degree of mutual exclusion is required in soft_connect_store(), which can dereference udc->driver at arbitrary times since it is a sysfs callback. The solution here is to acquire the gadget's device lock rather than the udc_mutex. Since the driver core guarantees that the device lock is always held during driver binding and unbinding, this will make the accesses in soft_connect_store() mutually exclusive with any changes to udc->driver. Lastly, it turns out there is one place which should hold the udc_mutex but currently does not: The function_show() routine needs protection while it dereferences udc->driver. The missing lock and unlock calls are added.",,,"[{""url"":""https://git.kernel.org/stable/c/1016fc0c096c92dd0e6e0541daac7a7868169903"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1a065e4673cbdd9f222a05f85e17d78ea50c8d9c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49944,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:21.377,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: Revert ""usb: typec: ucsi: add a common function ucsi_unregister_connectors()"" The recent commit 87d0e2f41b8c (""usb: typec: ucsi: add a common function ucsi_unregister_connectors()"") introduced a regression that caused NULL dereference at reading the power supply sysfs. It's a stale sysfs entry that should have been removed but remains with NULL ops. The commit changed the error handling to skip the entries after a NULL con->wq, and this leaves the power device unreleased. For addressing the regression, the straight revert is applied here. Further code improvements can be done from the scratch again.",,,"[{""url"":""https://git.kernel.org/stable/c/3d4044c9e6d2e3f11f1f8b5e0ee8647d3eb1afad"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5f73aa2cf8bef4a39baa1591c3144ede4788826e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49945,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:21.483,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: hwmon: (gpio-fan) Fix array out of bounds access The driver does not check if the cooling state passed to gpio_fan_set_cur_state() exceeds the maximum cooling state as stored in fan_data->num_speeds. Since the cooling state is later used as an array index in set_fan_speed(), an array out of bounds access can occur. This can be exploited by setting the state of the thermal cooling device to arbitrary values, causing for example a kernel oops when unavailable memory is accessed this way. Example kernel oops: [ 807.987276] Unable to handle kernel paging request at virtual address ffffff80d0588064 [ 807.987369] Mem abort info: [ 807.987398] ESR = 0x96000005 [ 807.987428] EC = 0x25: DABT (current EL), IL = 32 bits [ 807.987477] SET = 0, FnV = 0 [ 807.987507] EA = 0, S1PTW = 0 [ 807.987536] FSC = 0x05: level 1 translation fault [ 807.987570] Data abort info: [ 807.987763] ISV = 0, ISS = 0x00000005 [ 807.987801] CM = 0, WnR = 0 [ 807.987832] swapper pgtable: 4k pages, 39-bit VAs, pgdp=0000000001165000 [ 807.987872] [ffffff80d0588064] pgd=0000000000000000, p4d=0000000000000000, pud=0000000000000000 [ 807.987961] Internal error: Oops: 96000005 [#1] PREEMPT SMP [ 807.987992] Modules linked in: cmac algif_hash aes_arm64 algif_skcipher af_alg bnep hci_uart btbcm bluetooth ecdh_generic ecc 8021q garp stp llc snd_soc_hdmi_codec brcmfmac vc4 brcmutil cec drm_kms_helper snd_soc_core cfg80211 snd_compress bcm2835_codec(C) snd_pcm_dmaengine syscopyarea bcm2835_isp(C) bcm2835_v4l2(C) sysfillrect v4l2_mem2mem bcm2835_mmal_vchiq(C) raspberrypi_hwmon sysimgblt videobuf2_dma_contig videobuf2_vmalloc fb_sys_fops videobuf2_memops rfkill videobuf2_v4l2 videobuf2_common i2c_bcm2835 snd_bcm2835(C) videodev snd_pcm snd_timer snd mc vc_sm_cma(C) gpio_fan uio_pdrv_genirq uio drm fuse drm_panel_orientation_quirks backlight ip_tables x_tables ipv6 [ 807.988508] CPU: 0 PID: 1321 Comm: bash Tainted: G C 5.15.56-v8+ #1575 [ 807.988548] Hardware name: Raspberry Pi 3 Model B Rev 1.2 (DT) [ 807.988574] pstate: 20000005 (nzCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--) [ 807.988608] pc : set_fan_speed.part.5+0x34/0x80 [gpio_fan] [ 807.988654] lr : gpio_fan_set_cur_state+0x34/0x50 [gpio_fan] [ 807.988691] sp : ffffffc008cf3bd0 [ 807.988710] x29: ffffffc008cf3bd0 x28: ffffff80019edac0 x27: 0000000000000000 [ 807.988762] x26: 0000000000000000 x25: 0000000000000000 x24: ffffff800747c920 [ 807.988787] x23: 000000000000000a x22: ffffff800369f000 x21: 000000001999997c [ 807.988854] x20: ffffff800369f2e8 x19: ffffff8002ae8080 x18: 0000000000000000 [ 807.988877] x17: 0000000000000000 x16: 0000000000000000 x15: 000000559e271b70 [ 807.988938] x14: 0000000000000000 x13: 0000000000000000 x12: 0000000000000000 [ 807.988960] x11: 0000000000000000 x10: ffffffc008cf3c20 x9 : ffffffcfb60c741c [ 807.989018] x8 : 000000000000000a x7 : 00000000ffffffc9 x6 : 0000000000000009 [ 807.989040] x5 : 000000000000002a x4 : 0000000000000000 x3 : ffffff800369f2e8 [ 807.989062] x2 : 000000000000e780 x1 : 0000000000000001 x0 : ffffff80d0588060 [ 807.989084] Call trace: [ 807.989091] set_fan_speed.part.5+0x34/0x80 [gpio_fan] [ 807.989113] gpio_fan_set_cur_state+0x34/0x50 [gpio_fan] [ 807.989199] cur_state_store+0x84/0xd0 [ 807.989221] dev_attr_store+0x20/0x38 [ 807.989262] sysfs_kf_write+0x4c/0x60 [ 807.989282] kernfs_fop_write_iter+0x130/0x1c0 [ 807.989298] new_sync_write+0x10c/0x190 [ 807.989315] vfs_write+0x254/0x378 [ 807.989362] ksys_write+0x70/0xf8 [ 807.989379] __arm64_sys_write+0x24/0x30 [ 807.989424] invoke_syscall+0x4c/0x110 [ 807.989442] el0_svc_common.constprop.3+0xfc/0x120 [ 807.989458] do_el0_svc+0x2c/0x90 [ 807.989473] el0_svc+0x24/0x60 [ 807.989544] el0t_64_sync_handler+0x90/0xb8 [ 807.989558] el0t_64_sync+0x1a0/0x1a4 [ 807.989579] Code: b9403801 f9402800 7100003f 8b35cc00 (b9400416) [ 807.989627] ---[ end t ---truncated---",,,"[{""url"":""https://git.kernel.org/stable/c/3263984c7acdcb0658155b05a724ed45a10de76d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3ff866455e1e263a9ac1958095fd440984248e2f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/517dba798793e69b510779c3cde7224a65f3ed1d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/53196e0376205ed49b75bfd0475af5e0fbd20156"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7756eb1ed124753f4d64f761fc3d84290dffcb4d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c8ae6a18708f260ccdeef6ba53af7548457dc26c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e9f6972ab40a82bd7f6d36800792ba2e084474d8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f233d2be38dbbb22299192292983037f01ab363c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49946,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:21.610,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: clk: bcm: rpi: Prevent out-of-bounds access The while loop in raspberrypi_discover_clocks() relies on the assumption that the id of the last clock element is zero. Because this data comes from the Videocore firmware and it doesn't guarantuee such a behavior this could lead to out-of-bounds access. So fix this by providing a sentinel element.",,,"[{""url"":""https://git.kernel.org/stable/c/bc163555603e4ae9c817675ad80d618a4cdbfa2d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c8b04b731d43366824841ebdca4ac715f95e0ea4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fcae47b2d23c81603b01f56cf8db63ed64599d34"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ff0b144d4b0a9fbd6efe4d2c0a4b6c9bae2138d2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49947,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:21.717,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: binder: fix alloc->vma_vm_mm null-ptr dereference Syzbot reported a couple issues introduced by commit 44e602b4e52f (""binder_alloc: add missing mmap_lock calls when using the VMA""), in which we attempt to acquire the mmap_lock when alloc->vma_vm_mm has not been initialized yet. This can happen if a binder_proc receives a transaction without having previously called mmap() to setup the binder_proc->alloc space in [1]. Also, a similar issue occurs via binder_alloc_print_pages() when we try to dump the debugfs binder stats file in [2]. Sample of syzbot's crash report: ================================================================== KASAN: null-ptr-deref in range [0x0000000000000128-0x000000000000012f] CPU: 0 PID: 3755 Comm: syz-executor229 Not tainted 6.0.0-rc1-next-20220819-syzkaller #0 syz-executor229[3755] cmdline: ./syz-executor2294415195 Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 07/22/2022 RIP: 0010:__lock_acquire+0xd83/0x56d0 kernel/locking/lockdep.c:4923 [...] Call Trace: <TASK> lock_acquire kernel/locking/lockdep.c:5666 [inline] lock_acquire+0x1ab/0x570 kernel/locking/lockdep.c:5631 down_read+0x98/0x450 kernel/locking/rwsem.c:1499 mmap_read_lock include/linux/mmap_lock.h:117 [inline] binder_alloc_new_buf_locked drivers/android/binder_alloc.c:405 [inline] binder_alloc_new_buf+0xa5/0x19e0 drivers/android/binder_alloc.c:593 binder_transaction+0x242e/0x9a80 drivers/android/binder.c:3199 binder_thread_write+0x664/0x3220 drivers/android/binder.c:3986 binder_ioctl_write_read drivers/android/binder.c:5036 [inline] binder_ioctl+0x3470/0x6d00 drivers/android/binder.c:5323 vfs_ioctl fs/ioctl.c:51 [inline] __do_sys_ioctl fs/ioctl.c:870 [inline] __se_sys_ioctl fs/ioctl.c:856 [inline] __x64_sys_ioctl+0x193/0x200 fs/ioctl.c:856 do_syscall_x64 arch/x86/entry/common.c:50 [inline] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80 entry_SYSCALL_64_after_hwframe+0x63/0xcd [...] ================================================================== Fix these issues by setting up alloc->vma_vm_mm pointer during open() and caching directly from current->mm. This guarantees we have a valid reference to take the mmap_lock during scenarios described above. [1] https://syzkaller.appspot.com/bug?extid=f7dc54e5be28950ac459 [2] https://syzkaller.appspot.com/bug?extid=a75ebe0452711c9e56d9",,,"[{""url"":""https://git.kernel.org/stable/c/1da52815d5f1b654c89044db0cdc6adce43da1f1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/81203ab7a6ef843a2b904a0a494f28c457d44d27"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b2a97babb0a510f8921891f9e70c5a5ef33cadac"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49948,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:21.827,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: vt: Clear selection before changing the font When changing the console font with ioctl(KDFONTOP) the new font size can be bigger than the previous font. A previous selection may thus now be outside of the new screen size and thus trigger out-of-bounds accesses to graphics memory if the selection is removed in vc_do_resize(). Prevent such out-of-memory accesses by dropping the selection before the various con_font_set() console handlers are called.",,,"[{""url"":""https://git.kernel.org/stable/c/1cf1930369c9dc428d827b60260c53271bff3285"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2535431ae967ad17585513649625fea7db28d4db"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/566f9c9f89337792070b5a6062dff448b3e7977f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/989201bb8c00b222235aff04e6200230d29dc7bb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c555cf04684fde39b5b0dd9fd80730030ee10c4a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c904fe03c4bd1f356a58797d39e2a5d0ca15cefc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e9ba4611ddf676194385506222cce7b0844e708e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f74b4a41c5d7c9522469917e3072e55d435efd9e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49949,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:21.947,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: firmware_loader: Fix memory leak in firmware upload In the case of firmware-upload, an instance of struct fw_upload is allocated in firmware_upload_register(). This data needs to be freed in fw_dev_release(). Create a new fw_upload_free() function in sysfs_upload.c to handle the firmware-upload specific memory frees and incorporate the missing kfree call for the fw_upload structure.",,,"[{""url"":""https://git.kernel.org/stable/c/789bba82f63c3e81dce426ba457fc7905b30ac6e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/baf92485d111be828e1ab84a995515b604b938e5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49950,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:22.050,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: misc: fastrpc: fix memory corruption on open The probe session-duplication overflow check incremented the session count also when there were no more available sessions so that memory beyond the fixed-size slab-allocated session array could be corrupted in fastrpc_session_alloc() on open().",,,"[{""url"":""https://git.kernel.org/stable/c/5cf2a57c7a01a0d7bdecf875a63682f542891b1b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cf20c3533efc89578ace94fa20a9e63446223c72"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d245f43aab2b61195d8ebb64cef7b5a08c590ab4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e0578e603065f120a8759b75e0d6c216c7078a39"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f8632b8bb53ebc005d8f24a68a0c1f9678c0e908"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49951,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:22.167,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: firmware_loader: Fix use-after-free during unregister In the following code within firmware_upload_unregister(), the call to device_unregister() could result in the dev_release function freeing the fw_upload_priv structure before it is dereferenced for the call to module_put(). This bug was found by the kernel test robot using CONFIG_KASAN while running the firmware selftests. device_unregister(&fw_sysfs->dev); module_put(fw_upload_priv->module); The problem is fixed by copying fw_upload_priv->module to a local variable for use when calling device_unregister().",,,"[{""url"":""https://git.kernel.org/stable/c/8b40c38e37492b5bdf8e95b46b5cca9517a9957a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d380d40930a674c520a5b55f3be1eb17dc634ebc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49952,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:22.277,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: misc: fastrpc: fix memory corruption on probe Add the missing sanity check on the probed-session count to avoid corrupting memory beyond the fixed-size slab-allocated session array when there are more than FASTRPC_MAX_SESSIONS sessions defined in the devicetree.",,,"[{""url"":""https://git.kernel.org/stable/c/0e33b0f322fecd7a92d9dc186535cdf97940a856"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9baa1415d9abdd1e08362ea2dcfadfacee8690b5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c0425c2facd9166fa083f90c9f3187ace0c7837a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c99bc901d5eb9fbdd7bd39f625e170ce97390336"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ec186b9f4aa2e6444d5308a6cc268aada7007639"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49953,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:22.397,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: iio: light: cm3605: Fix an error handling path in cm3605_probe() The commit in Fixes also introduced a new error handling path which should goto the existing error handling path. Otherwise some resources leak.",,,"[{""url"":""https://git.kernel.org/stable/c/160905549e663019e26395ed9d66c24ee2cf5187"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3f7f49d8135cfe137c81316af64678f4dca1b82b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49954,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:22.500,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: Input: iforce - wake up after clearing IFORCE_XMIT_RUNNING flag syzbot is reporting hung task at __input_unregister_device() [1], for iforce_close() waiting at wait_event_interruptible() with dev->mutex held is blocking input_disconnect_device() from __input_unregister_device(). It seems that the cause is simply that commit c2b27ef672992a20 (""Input: iforce - wait for command completion when closing the device"") forgot to call wake_up() after clear_bit(). Fix this problem by introducing a helper that calls clear_bit() followed by wake_up_all().",,,"[{""url"":""https://git.kernel.org/stable/c/98e01215708b6d416345465c09dce2bd4868c67a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b271090eea3899399e2adcf79c9c95367d472b03"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b533b9d3a0d1327cbb31c201dc8dbbf98c8bfe3c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d186c65599bff0222da37b9215784ddfe39f9e1b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/df1b53bc799d58f79701c465505a206c72ad4ab8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49955,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:22.630,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: powerpc/rtas: Fix RTAS MSR[HV] handling for Cell The semi-recent changes to MSR handling when entering RTAS (firmware) cause crashes on IBM Cell machines. An example trace: kernel tried to execute user page (2fff01a8) - exploit attempt? (uid: 0) BUG: Unable to handle kernel instruction fetch Faulting instruction address: 0x2fff01a8 Oops: Kernel access of bad area, sig: 11 [#1] BE PAGE_SIZE=64K MMU=Hash SMP NR_CPUS=4 NUMA Cell Modules linked in: CPU: 0 PID: 0 Comm: swapper/0 Tainted: G W 6.0.0-rc2-00433-gede0a8d3307a #207 NIP: 000000002fff01a8 LR: 0000000000032608 CTR: 0000000000000000 REGS: c0000000015236b0 TRAP: 0400 Tainted: G W (6.0.0-rc2-00433-gede0a8d3307a) MSR: 0000000008001002 <ME,RI> CR: 00000000 XER: 20000000 ... NIP 0x2fff01a8 LR 0x32608 Call Trace: 0xc00000000143c5f8 (unreliable) .rtas_call+0x224/0x320 .rtas_get_boot_time+0x70/0x150 .read_persistent_clock64+0x114/0x140 .read_persistent_wall_and_boot_offset+0x24/0x80 .timekeeping_init+0x40/0x29c .start_kernel+0x674/0x8f0 start_here_common+0x1c/0x50 Unlike PAPR platforms where RTAS is only used in guests, on the IBM Cell machines Linux runs with MSR[HV] set but also uses RTAS, provided by SLOF. Fix it by copying the MSR[HV] bit from the MSR value we've just read using mfmsr into the value used for RTAS. It seems like we could also fix it using an #ifdef CELL to set MSR[HV], but that doesn't work because it's possible to build a single kernel image that runs on both Cell native and pseries.",,,"[{""url"":""https://git.kernel.org/stable/c/8b08d4f97233d8e58fff2fd9d5f86397a49733c5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/91926d8b7e71aaf5f84f0cf208fc5a8b7a761050"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49956,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:22.773,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: staging: rtl8712: fix use after free bugs _Read/Write_MACREG callbacks are NULL so the read/write_macreg_hdl() functions don't do anything except free the ""pcmd"" pointer. It results in a use after free. Delete them.",,,"[{""url"":""https://git.kernel.org/stable/c/19e3f69d19801940abc2ac37c169882769ed9770"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/376e15487fec837301d888068a3fcc82efb6171a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7dce6b0ee7d78667d6c831ced957a08769973063"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9fd6170c5e2d0ccd027abe26f6f5ffc528e1bb27"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b1727def850904e4b8ba384043775672841663a1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d0aac7146e96bf39e79c65087d21dfa02ef8db38"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dc02aaf950015850e7589696521c7fca767cea77"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e230a4455ac3e9b112f0367d1b8e255e141afae0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49957,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:22.897,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: kcm: fix strp_init() order and cleanup strp_init() is called just a few lines above this csk->sk_user_data check, it also initializes strp->work etc., therefore, it is unnecessary to call strp_done() to cancel the freshly initialized work. And if sk_user_data is already used by KCM, psock->strp should not be touched, particularly strp->work state, so we need to move strp_init() after the csk->sk_user_data check. This also makes a lockdep warning reported by syzbot go away.",,,"[{""url"":""https://git.kernel.org/stable/c/0946ff31d1a8778787bf6708beb20f38715267cc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1b6666964ca1de93a7bf06e122bcf3616dbd33a9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/473f394953216614087f4179e55cdf0cf616a13b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/55fb8c3baa8071c5d533a9ad48624e44e2a04ef5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8fc29ff3910f3af08a7c40a75d436b5720efe2bf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a8a0c321319ad64a5427d6172cd9c23b4d6ca1e8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f865976baa85915c7672f351b74d5974b93215f6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49958,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:23.013,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net/sched: fix netdevice reference leaks in attach_default_qdiscs() In attach_default_qdiscs(), if a dev has multiple queues and queue 0 fails to attach qdisc because there is no memory in attach_one_default_qdisc(). Then dev->qdisc will be noop_qdisc by default. But the other queues may be able to successfully attach to default qdisc. In this case, the fallback to noqueue process will be triggered. If the original attached qdisc is not released and a new one is directly attached, this will cause netdevice reference leaks. The following is the bug log: veth0: default qdisc (fq_codel) fail, fallback to noqueue unregister_netdevice: waiting for veth0 to become free. Usage count = 32 leaked reference. qdisc_alloc+0x12e/0x210 qdisc_create_dflt+0x62/0x140 attach_one_default_qdisc.constprop.41+0x44/0x70 dev_activate+0x128/0x290 __dev_open+0x12a/0x190 __dev_change_flags+0x1a2/0x1f0 dev_change_flags+0x23/0x60 do_setlink+0x332/0x1150 __rtnl_newlink+0x52f/0x8e0 rtnl_newlink+0x43/0x70 rtnetlink_rcv_msg+0x140/0x3b0 netlink_rcv_skb+0x50/0x100 netlink_unicast+0x1bb/0x290 netlink_sendmsg+0x37c/0x4e0 sock_sendmsg+0x5f/0x70 ____sys_sendmsg+0x208/0x280 Fix this bug by clearing any non-noop qdiscs that may have been assigned before trying to re-attach.",,,"[{""url"":""https://git.kernel.org/stable/c/0c6c522857151ac00150fd01baeebf231fb7d142"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/44dfa645895a56f65461249deb5b81cd16560e2a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a420d587260185407eda9c5766cfa9bdd5c39a56"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f612466ebecb12a00d9152344ddda6f6345f04dc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49959,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:23.127,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: openvswitch: fix memory leak at failed datapath creation ovs_dp_cmd_new()->ovs_dp_change()->ovs_dp_set_upcall_portids() allocates array via kmalloc. If for some reason new_vport() fails during ovs_dp_cmd_new() dp->upcall_portids must be freed. Add missing kfree. Kmemleak example: unreferenced object 0xffff88800c382500 (size 64): comm ""dump_state"", pid 323, jiffies 4294955418 (age 104.347s) hex dump (first 32 bytes): 5e c2 79 e4 1f 7a 38 c7 09 21 38 0c 80 88 ff ff ^.y..z8..!8..... 03 00 00 00 0a 00 00 00 14 00 00 00 28 00 00 00 ............(... backtrace: [<0000000071bebc9f>] ovs_dp_set_upcall_portids+0x38/0xa0 [<000000000187d8bd>] ovs_dp_change+0x63/0xe0 [<000000002397e446>] ovs_dp_cmd_new+0x1f0/0x380 [<00000000aa06f36e>] genl_family_rcv_msg_doit+0xea/0x150 [<000000008f583bc4>] genl_rcv_msg+0xdc/0x1e0 [<00000000fa10e377>] netlink_rcv_skb+0x50/0x100 [<000000004959cece>] genl_rcv+0x24/0x40 [<000000004699ac7f>] netlink_unicast+0x23e/0x360 [<00000000c153573e>] netlink_sendmsg+0x24e/0x4b0 [<000000006f4aa380>] sock_sendmsg+0x62/0x70 [<00000000d0068654>] ____sys_sendmsg+0x230/0x270 [<0000000012dacf7d>] ___sys_sendmsg+0x88/0xd0 [<0000000011776020>] __sys_sendmsg+0x59/0xa0 [<000000002e8f2dc1>] do_syscall_64+0x3b/0x90 [<000000003243e7cb>] entry_SYSCALL_64_after_hwframe+0x63/0xcd",,,"[{""url"":""https://git.kernel.org/stable/c/a87406f4adee9c53b311d8a1ba2849c69e29a6d0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c0c1c0241917459644326a1a3102207c871ae159"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ca54b2bfaab385778e55a9fd33f6c31e7f743b48"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49960,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:23.237,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/i915: fix null pointer dereference Asus chromebook CX550 crashes during boot on v5.17-rc1 kernel. The root cause is null pointer defeference of bi_next in tgl_get_bw_info() in drivers/gpu/drm/i915/display/intel_bw.c. BUG: kernel NULL pointer dereference, address: 000000000000002e PGD 0 P4D 0 Oops: 0002 [#1] PREEMPT SMP NOPTI CPU: 0 PID: 1 Comm: swapper/0 Tainted: G U 5.17.0-rc1 Hardware name: Google Delbin/Delbin, BIOS Google_Delbin.13672.156.3 05/14/2021 RIP: 0010:tgl_get_bw_info+0x2de/0x510 ... [ 2.554467] Call Trace: [ 2.554467] <TASK> [ 2.554467] intel_bw_init_hw+0x14a/0x434 [ 2.554467] ? _printk+0x59/0x73 [ 2.554467] ? _dev_err+0x77/0x91 [ 2.554467] i915_driver_hw_probe+0x329/0x33e [ 2.554467] i915_driver_probe+0x4c8/0x638 [ 2.554467] i915_pci_probe+0xf8/0x14e [ 2.554467] ? _raw_spin_unlock_irqrestore+0x12/0x2c [ 2.554467] pci_device_probe+0xaa/0x142 [ 2.554467] really_probe+0x13f/0x2f4 [ 2.554467] __driver_probe_device+0x9e/0xd3 [ 2.554467] driver_probe_device+0x24/0x7c [ 2.554467] __driver_attach+0xba/0xcf [ 2.554467] ? driver_attach+0x1f/0x1f [ 2.554467] bus_for_each_dev+0x8c/0xc0 [ 2.554467] bus_add_driver+0x11b/0x1f7 [ 2.554467] driver_register+0x60/0xea [ 2.554467] ? mipi_dsi_bus_init+0x16/0x16 [ 2.554467] i915_init+0x2c/0xb9 [ 2.554467] ? mipi_dsi_bus_init+0x16/0x16 [ 2.554467] do_one_initcall+0x12e/0x2b3 [ 2.554467] do_initcall_level+0xd6/0xf3 [ 2.554467] do_initcalls+0x4e/0x79 [ 2.554467] kernel_init_freeable+0xed/0x14d [ 2.554467] ? rest_init+0xc1/0xc1 [ 2.554467] kernel_init+0x1a/0x120 [ 2.554467] ret_from_fork+0x1f/0x30 [ 2.554467] </TASK> ... Kernel panic - not syncing: Fatal exception (cherry picked from commit c247cd03898c4c43c3bce6d4014730403bc13032)",,,"[{""url"":""https://git.kernel.org/stable/c/458ec0c8f35963626ccd51c3d50b752de5f1b9d4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c2798203315f4729bab0b917bf4c17a159abf9f8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49961,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:23.347,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: bpf: Do mark_chain_precision for ARG_CONST_ALLOC_SIZE_OR_ZERO Precision markers need to be propagated whenever we have an ARG_CONST_* style argument, as the verifier cannot consider imprecise scalars to be equivalent for the purposes of states_equal check when such arguments refine the return value (in this case, set mem_size for PTR_TO_MEM). The resultant mem_size for the R0 is derived from the constant value, and if the verifier incorrectly prunes states considering them equivalent where such arguments exist (by seeing that both registers have reg->precise as false in regsafe), we can end up with invalid programs passing the verifier which can do access beyond what should have been the correct mem_size in that explored state. To show a concrete example of the problem: 0000000000000000 <prog>: 0: r2 = *(u32 *)(r1 + 80) 1: r1 = *(u32 *)(r1 + 76) 2: r3 = r1 3: r3 += 4 4: if r3 > r2 goto +18 <LBB5_5> 5: w2 = 0 6: *(u32 *)(r1 + 0) = r2 7: r1 = *(u32 *)(r1 + 0) 8: r2 = 1 9: if w1 == 0 goto +1 <LBB5_3> 10: r2 = -1 0000000000000058 <LBB5_3>: 11: r1 = 0 ll 13: r3 = 0 14: call bpf_ringbuf_reserve 15: if r0 == 0 goto +7 <LBB5_5> 16: r1 = r0 17: r1 += 16777215 18: w2 = 0 19: *(u8 *)(r1 + 0) = r2 20: r1 = r0 21: r2 = 0 22: call bpf_ringbuf_submit 00000000000000b8 <LBB5_5>: 23: w0 = 0 24: exit For the first case, the single line execution's exploration will prune the search at insn 14 for the branch insn 9's second leg as it will be verified first using r2 = -1 (UINT_MAX), while as w1 at insn 9 will always be 0 so at runtime we don't get error for being greater than UINT_MAX/4 from bpf_ringbuf_reserve. The verifier during regsafe just sees reg->precise as false for both r2 registers in both states, hence considers them equal for purposes of states_equal. If we propagated precise markers using the backtracking support, we would use the precise marking to then ensure that old r2 (UINT_MAX) was within the new r2 (1) and this would never be true, so the verification would rightfully fail. The end result is that the out of bounds access at instruction 19 would be permitted without this fix. Note that reg->precise is always set to true when user does not have CAP_BPF (or when subprog count is greater than 1 (i.e. use of any static or global functions)), hence this is only a problem when precision marks need to be explicitly propagated (i.e. privileged users with CAP_BPF). A simplified test case has been included in the next patch to prevent future regressions.",,,"[{""url"":""https://git.kernel.org/stable/c/2459615a8d7f44ac81f0965bc094e55ccb254717"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2fc31465c5373b5ca4edf2e5238558cb62902311"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49962,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:23.457,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: xhci: Fix null pointer dereference in remove if xHC has only one roothub The remove path in xhci platform driver tries to remove and put both main and shared hcds even if only a main hcd exists (one roothub) This causes a null pointer dereference in reboot for those controllers. Check that the shared_hcd exists before trying to remove it.",,,"[{""url"":""https://git.kernel.org/stable/c/4a593a62a9e3a25ab4bc37f612e4edec144f7f43"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7081b2f34ff291ada012bd6abacaf7d51c4cf73f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49963,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:23.570,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/i915/ttm: fix CCS handling Crucible + recent Mesa seems to sometimes hit: GEM_BUG_ON(num_ccs_blks > NUM_CCS_BLKS_PER_XFER) And it looks like we can also trigger this with gem_lmem_swapping, if we modify the test to use slightly larger object sizes. Looking closer it looks like we have the following issues in migrate_copy(): - We are using plain integer in various places, which we can easily overflow with a large object. - We pass the entire object size (when the src is lmem) into emit_pte() and then try to copy it, which doesn't work, since we only have a few fixed sized windows in which to map the pages and perform the copy. With an object > 8M we therefore aren't properly copying the pages. And then with an object > 64M we trigger the GEM_BUG_ON(num_ccs_blks > NUM_CCS_BLKS_PER_XFER). So it looks like our copy handling for any object > 8M (which is our CHUNK_SZ) is currently broken on DG2. Testcase: igt@gem_lmem_swapping (cherry picked from commit 8676145eb2f53a9940ff70910caf0125bd8a4bc2)",,,"[{""url"":""https://git.kernel.org/stable/c/8d905254162965c8e6be697d82c7dbf5d08f574d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/97434cb55bd884bd268626ec41489f79b261b2d4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49964,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:23.677,2025-07-15T16:15:23.937,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: arm64: cacheinfo: Fix incorrect assignment of signed error value to unsigned fw_level Though acpi_find_last_cache_level() always returned signed value and the document states it will return any errors caused by lack of a PPTT table, it never returned negative values before. Commit 0c80f9e165f8 (""ACPI: PPTT: Leave the table mapped for the runtime usage"") however changed it by returning -ENOENT if no PPTT was found. The value returned from acpi_find_last_cache_level() is then assigned to unsigned fw_level. It will result in the number of cache leaves calculated incorrectly as a huge value which will then cause the following warning from __alloc_pages as the order would be great than MAX_ORDER because of incorrect and huge cache leaves value. | WARNING: CPU: 0 PID: 1 at mm/page_alloc.c:5407 __alloc_pages+0x74/0x314 | Modules linked in: | CPU: 0 PID: 1 Comm: swapper/0 Not tainted 5.19.0-10393-g7c2a8d3ac4c0 #73 | pstate: 20000005 (nzCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--) | pc : __alloc_pages+0x74/0x314 | lr : alloc_pages+0xe8/0x318 | Call trace: | __alloc_pages+0x74/0x314 | alloc_pages+0xe8/0x318 | kmalloc_order_trace+0x68/0x1dc | __kmalloc+0x240/0x338 | detect_cache_attributes+0xe0/0x56c | update_siblings_masks+0x38/0x284 | store_cpu_topology+0x78/0x84 | smp_prepare_cpus+0x48/0x134 | kernel_init_freeable+0xc4/0x14c | kernel_init+0x2c/0x1b4 | ret_from_fork+0x10/0x20 Fix the same by changing fw_level to be signed integer and return the error from init_cache_level() early in case of error.",,,"[{""url"":""https://git.kernel.org/stable/c/a754ee1c66bd0a23e613f0bf865053b29cb90e16"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e75d18cecbb3805895d8ed64da4f78575ec96043"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49965,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:23.797,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/amd/pm: add missing ->fini_xxxx interfaces for some SMU13 asics Without these, potential memory leak may be induced.",,,"[{""url"":""https://git.kernel.org/stable/c/22a75c616f1971c23838506b14971a4ef4a66bd7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4bac1c846eff8042dd59ddecd0a43f3b9de5fd23"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49966,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:23.903,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/amd/pm: add missing ->fini_microcode interface for Sienna Cichlid To avoid any potential memory leak.",,,"[{""url"":""https://git.kernel.org/stable/c/0a2d922a5618377cdf8fa476351362733ef55342"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/4d21584ac6392aa66171b7efd647ecd1a447556b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/60d522f317078381ff8a3599fe808f96fc256cd5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a89e753d5a9f3b321f4a3098e2755c5aabcff0af"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49967,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:24.013,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: bpf: Fix a data-race around bpf_jit_limit. While reading bpf_jit_limit, it can be changed concurrently via sysctl, WRITE_ONCE() in __do_proc_doulongvec_minmax(). The size of bpf_jit_limit is long, so we need to add a paired READ_ONCE() to avoid load-tearing.",,,"[{""url"":""https://git.kernel.org/stable/c/0947ae1121083d363d522ff7518ee72b55bd8d29"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ba632ad0bacb13197a8f38e7526448974e87f292"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49968,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:24.123,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ieee802154/adf7242: defer destroy_workqueue call There is a possible race condition (use-after-free) like below (FREE) | (USE) adf7242_remove | adf7242_channel cancel_delayed_work_sync | destroy_workqueue (1) | adf7242_cmd_rx | mod_delayed_work (2) | The root cause for this race is that the upper layer (ieee802154) is unaware of this detaching event and the function adf7242_channel can be called without any checks. To fix this, we can add a flag write at the beginning of adf7242_remove and add flag check in adf7242_channel. Or we can just defer the destructive operation like other commit 3e0588c291d6 (""hamradio: defer ax25 kfree after unregister_netdev"") which let the ieee802154_unregister_hw() to handle the synchronization. This patch takes the second option. runs"")",,,"[{""url"":""https://git.kernel.org/stable/c/15f3b89bd521d5770d36a61fc04a77c293138ba6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/23a29932715ca43bceb2eae1bdb770995afe7271"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9f8558c5c642c62c450c98c99b7d18a709fff485"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/afe7116f6d3b888778ed6d95e3cf724767b9aedf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bed12d7531df1417fc92c691999ff95e03835008"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dede80aaf01f4b6e8657d23726cb4a3da226ec4c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49969,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:24.237,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/amd/display: clear optc underflow before turn off odm clock [Why] After ODM clock off, optc underflow bit will be kept there always and clear not work. We need to clear that before clock off. [How] Clear that if have when clock off.",,,"[{""url"":""https://git.kernel.org/stable/c/3101839b080137c367f3f88c2a040f791de880aa"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3c1dfeaeb3b4e3ea656041da1241e6ee3c3b3202"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/443687798d6f094412b7312b64b3bb4d99aedff7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5ee30bcfdb32526233d2572f3d9ec371928679f1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/814b756d4ec3a8728debb116cf49005feada7750"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b2a93490201300a749ad261b5c5d05cb50179c44"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49970,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:24.357,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: bpf, cgroup: Fix kernel BUG in purge_effective_progs Syzkaller reported a triggered kernel BUG as follows: ------------[ cut here ]------------ kernel BUG at kernel/bpf/cgroup.c:925! invalid opcode: 0000 [#1] PREEMPT SMP NOPTI CPU: 1 PID: 194 Comm: detach Not tainted 5.19.0-14184-g69dac8e431af #8 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014 RIP: 0010:__cgroup_bpf_detach+0x1f2/0x2a0 Code: 00 e8 92 60 30 00 84 c0 75 d8 4c 89 e0 31 f6 85 f6 74 19 42 f6 84 28 48 05 00 00 02 75 0e 48 8b 80 c0 00 00 00 48 85 c0 75 e5 <0f> 0b 48 8b 0c5 RSP: 0018:ffffc9000055bdb0 EFLAGS: 00000246 RAX: 0000000000000000 RBX: ffff888100ec0800 RCX: ffffc900000f1000 RDX: 0000000000000000 RSI: 0000000000000001 RDI: ffff888100ec4578 RBP: 0000000000000000 R08: ffff888100ec0800 R09: 0000000000000040 R10: 0000000000000000 R11: 0000000000000000 R12: ffff888100ec4000 R13: 000000000000000d R14: ffffc90000199000 R15: ffff888100effb00 FS: 00007f68213d2b80(0000) GS:ffff88813bc80000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 000055f74a0e5850 CR3: 0000000102836000 CR4: 00000000000006e0 Call Trace: <TASK> cgroup_bpf_prog_detach+0xcc/0x100 __sys_bpf+0x2273/0x2a00 __x64_sys_bpf+0x17/0x20 do_syscall_64+0x3b/0x90 entry_SYSCALL_64_after_hwframe+0x63/0xcd RIP: 0033:0x7f68214dbcb9 Code: 08 44 89 e0 5b 41 5c c3 66 0f 1f 84 00 00 00 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff8 RSP: 002b:00007ffeb487db68 EFLAGS: 00000246 ORIG_RAX: 0000000000000141 RAX: ffffffffffffffda RBX: 000000000000000b RCX: 00007f68214dbcb9 RDX: 0000000000000090 RSI: 00007ffeb487db70 RDI: 0000000000000009 RBP: 0000000000000003 R08: 0000000000000012 R09: 0000000b00000003 R10: 00007ffeb487db70 R11: 0000000000000246 R12: 00007ffeb487dc20 R13: 0000000000000004 R14: 0000000000000001 R15: 000055f74a1011b0 </TASK> Modules linked in: ---[ end trace 0000000000000000 ]--- Repetition steps: For the following cgroup tree, root | cg1 | cg2 1. attach prog2 to cg2, and then attach prog1 to cg1, both bpf progs attach type is NONE or OVERRIDE. 2. write 1 to /proc/thread-self/fail-nth for failslab. 3. detach prog1 for cg1, and then kernel BUG occur. Failslab injection will cause kmalloc fail and fall back to purge_effective_progs. The problem is that cg2 have attached another prog, so when go through cg2 layer, iteration will add pos to 1, and subsequent operations will be skipped by the following condition, and cg will meet NULL in the end. `if (pos && !(cg->bpf.flags[atype] & BPF_F_ALLOW_MULTI))` The NULL cg means no link or prog match, this is as expected, and it's not a bug. So here just skip the no match situation.",,,"[{""url"":""https://git.kernel.org/stable/c/222bd95c89b135fde21f0bd0cb5cc1611c0c576c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7d6620f107bae6ed687ff07668e8e8f855487aa9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a1a05d3ae58299b040da4d5b27e72e81c2132e0b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c5f975e3ebfa57be13393c585a4b58ea707023cb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49971,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:24.473,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: drm/amd/pm: Fix a potential gpu_metrics_table memory leak Memory is allocated for gpu_metrics_table in smu_v13_0_4_init_smc_tables(), but not freed in smu_v13_0_4_fini_smc_tables(). This may cause memory leaks, fix it.",,,"[{""url"":""https://git.kernel.org/stable/c/4b25bdb54578f3b96ff055e5d27bc1cb82950e51"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5afb76522a0af0513b6dc01f84128a73206b051b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49972,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:24.570,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: xsk: Fix corrupted packets for XDP_SHARED_UMEM Fix an issue in XDP_SHARED_UMEM mode together with aligned mode where packets are corrupted for the second and any further sockets bound to the same umem. In other words, this does not affect the first socket bound to the umem. The culprit for this bug is that the initialization of the DMA addresses for the pre-populated xsk buffer pool entries was not performed for any socket but the first one bound to the umem. Only the linear array of DMA addresses was populated. Fix this by populating the DMA addresses in the xsk buffer pool for every socket bound to the same umem.",,,"[{""url"":""https://git.kernel.org/stable/c/2c75891d56ab6fe5ba0d415bfad91d514a4027cd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/58ca14ed98c87cfe0d1408cc65a9745d9e9b7a56"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49973,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:24.673,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: skmsg: Fix wrong last sg check in sk_msg_recvmsg() Fix one kernel NULL pointer dereference as below: [ 224.462334] Call Trace: [ 224.462394] __tcp_bpf_recvmsg+0xd3/0x380 [ 224.462441] ? sock_has_perm+0x78/0xa0 [ 224.462463] tcp_bpf_recvmsg+0x12e/0x220 [ 224.462494] inet_recvmsg+0x5b/0xd0 [ 224.462534] __sys_recvfrom+0xc8/0x130 [ 224.462574] ? syscall_trace_enter+0x1df/0x2e0 [ 224.462606] ? __do_page_fault+0x2de/0x500 [ 224.462635] __x64_sys_recvfrom+0x24/0x30 [ 224.462660] do_syscall_64+0x5d/0x1d0 [ 224.462709] entry_SYSCALL_64_after_hwframe+0x65/0xca In commit 9974d37ea75f (""skmsg: Fix invalid last sg check in sk_msg_recvmsg()""), we change last sg check to sg_is_last(), but in sockmap redirection case (without stream_parser/stream_verdict/ skb_verdict), we did not mark the end of the scatterlist. Check the sk_msg_alloc, sk_msg_page_add, and bpf_msg_push_data functions, they all do not mark the end of sg. They are expected to use sg.end for end judgment. So the judgment of '(i != msg_rx->sg.end)' is added back here.",,,"[{""url"":""https://git.kernel.org/stable/c/10ee118a1756141f8e9c87aa7344ed12b41630a8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/583585e48d965338e73e1eb383768d16e0922d73"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/de22cba333d8699ad77e79f862fe1320cb1284de"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49974,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:24.783,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: HID: nintendo: fix rumble worker null pointer deref We can dereference a null pointer trying to queue work to a destroyed workqueue. If the device is disconnected, nintendo_hid_remove is called, in which the rumble_queue is destroyed. Avoid using that queue to defer rumble work once the controller state is set to JOYCON_CTLR_STATE_REMOVED. This eliminates the null pointer dereference.",,,"[{""url"":""https://git.kernel.org/stable/c/1ff89e06c2e5fab30274e4b02360d4241d6e605e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7c6e6c334154be16740b44dcd7638fb510b9bd91"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49975,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:24.893,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: bpf: Don't redirect packets with invalid pkt_len Syzbot found an issue [1]: fq_codel_drop() try to drop a flow whitout any skbs, that is, the flow->head is null. The root cause, as the [2] says, is because that bpf_prog_test_run_skb() run a bpf prog which redirects empty skbs. So we should determine whether the length of the packet modified by bpf prog or others like bpf_prog_test is valid before forwarding it directly.",,,"[{""url"":""https://git.kernel.org/stable/c/6204bf78b2a903b96ba43afff6abc0b04d6e0462"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/72f2dc8993f10262092745a88cb2dd0fef094f23"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8b68e53d56697a59b5c53893b53f508bbdf272a0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a75987714bd2d8e59840667a28e15c1fa5c47554"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fd1894224407c484f652ad456e1ce423e89bb3eb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49976,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:25.007,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: platform/x86: x86-android-tablets: Fix broken touchscreen on Chuwi Hi8 with Windows BIOS The x86-android-tablets handling for the Chuwi Hi8 is only necessary with the Android BIOS and it is causing problems with the Windows BIOS version. Specifically when trying to register the already present touchscreen x86_acpi_irq_helper_get() calls acpi_unregister_gsi(), this breaks the working of the touchscreen and also leads to an oops: [ 14.248946] ------------[ cut here ]------------ [ 14.248954] remove_proc_entry: removing non-empty directory 'irq/75', leaking at least 'MSSL0001:00' [ 14.248983] WARNING: CPU: 3 PID: 440 at fs/proc/generic.c:718 remove_proc_entry ... [ 14.249293] unregister_irq_proc+0xe0/0x100 [ 14.249305] free_desc+0x29/0x70 [ 14.249312] irq_free_descs+0x4b/0x80 [ 14.249320] mp_unmap_irq+0x5c/0x60 [ 14.249329] acpi_unregister_gsi_ioapic+0x2a/0x40 [ 14.249338] x86_acpi_irq_helper_get+0x4b/0x190 [x86_android_tablets] [ 14.249355] x86_android_tablet_init+0x178/0xe34 [x86_android_tablets] Add an init callback for the Chuwi Hi8, which detects when the Windows BIOS is in use and exits with -ENODEV in that case, fixing this.",,,"[{""url"":""https://git.kernel.org/stable/c/2986c51540ed50ac654ffb5a772e546c02628c91"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c77b724cddfb8ac1291a60e3e68937e62cbfc5e0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49977,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:25.120,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: ftrace: Fix NULL pointer dereference in is_ftrace_trampoline when ftrace is dead ftrace_startup does not remove ops from ftrace_ops_list when ftrace_startup_enable fails: register_ftrace_function ftrace_startup __register_ftrace_function ... add_ftrace_ops(&ftrace_ops_list, ops) ... ... ftrace_startup_enable // if ftrace failed to modify, ftrace_disabled is set to 1 ... return 0 // ops is in the ftrace_ops_list. When ftrace_disabled = 1, unregister_ftrace_function simply returns without doing anything: unregister_ftrace_function ftrace_shutdown if (unlikely(ftrace_disabled)) return -ENODEV; // return here, __unregister_ftrace_function is not executed, // as a result, ops is still in the ftrace_ops_list __unregister_ftrace_function ... If ops is dynamically allocated, it will be free later, in this case, is_ftrace_trampoline accesses NULL pointer: is_ftrace_trampoline ftrace_ops_trampoline do_for_each_ftrace_op(op, ftrace_ops_list) // OOPS! op may be NULL! Syzkaller reports as follows: [ 1203.506103] BUG: kernel NULL pointer dereference, address: 000000000000010b [ 1203.508039] #PF: supervisor read access in kernel mode [ 1203.508798] #PF: error_code(0x0000) - not-present page [ 1203.509558] PGD 800000011660b067 P4D 800000011660b067 PUD 130fb8067 PMD 0 [ 1203.510560] Oops: 0000 [#1] SMP KASAN PTI [ 1203.511189] CPU: 6 PID: 29532 Comm: syz-executor.2 Tainted: G B W 5.10.0 #8 [ 1203.512324] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014 [ 1203.513895] RIP: 0010:is_ftrace_trampoline+0x26/0xb0 [ 1203.514644] Code: ff eb d3 90 41 55 41 54 49 89 fc 55 53 e8 f2 00 fd ff 48 8b 1d 3b 35 5d 03 e8 e6 00 fd ff 48 8d bb 90 00 00 00 e8 2a 81 26 00 <48> 8b ab 90 00 00 00 48 85 ed 74 1d e8 c9 00 fd ff 48 8d bb 98 00 [ 1203.518838] RSP: 0018:ffffc900012cf960 EFLAGS: 00010246 [ 1203.520092] RAX: 0000000000000000 RBX: 000000000000007b RCX: ffffffff8a331866 [ 1203.521469] RDX: 0000000000000000 RSI: 0000000000000008 RDI: 000000000000010b [ 1203.522583] RBP: 0000000000000000 R08: 0000000000000000 R09: ffffffff8df18b07 [ 1203.523550] R10: fffffbfff1be3160 R11: 0000000000000001 R12: 0000000000478399 [ 1203.524596] R13: 0000000000000000 R14: ffff888145088000 R15: 0000000000000008 [ 1203.525634] FS: 00007f429f5f4700(0000) GS:ffff8881daf00000(0000) knlGS:0000000000000000 [ 1203.526801] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 1203.527626] CR2: 000000000000010b CR3: 0000000170e1e001 CR4: 00000000003706e0 [ 1203.528611] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 [ 1203.529605] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Therefore, when ftrace_startup_enable fails, we need to rollback registration process and remove ops from ftrace_ops_list.",,,"[{""url"":""https://git.kernel.org/stable/c/4c34a2a6c9927c239dd2e295a03d49b37b618d2c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8569b4ada1e0b9bfaa125bd0c0967918b6560fa2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/934e49f7d696afdae9f979abe3f308408184e17b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c3b0f72e805f0801f05fa2aa52011c4bfc694c44"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d81bd6671f45fde4c3ac7fd7733c6e3082ae9d8e"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dbd8c8fc60480e3faa3ae7e27ebe03371ecd1b77"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ddffe882d74ef43a3494f0ab0c24baf076c45f96"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e4ae97295984ff1b9b340ed18ae1b066f36b7835"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49978,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:25.243,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: fbdev: fb_pm2fb: Avoid potential divide by zero error In `do_fb_ioctl()` of fbmem.c, if cmd is FBIOPUT_VSCREENINFO, var will be copied from user, then go through `fb_set_var()` and `info->fbops->fb_check_var()` which could may be `pm2fb_check_var()`. Along the path, `var->pixclock` won't be modified. This function checks whether reciprocal of `var->pixclock` is too high. If `var->pixclock` is zero, there will be a divide by zero error. So, it is necessary to check whether denominator is zero to avoid crash. As this bug is found by Syzkaller, logs are listed below. divide error in pm2fb_check_var Call Trace: <TASK> fb_set_var+0x367/0xeb0 drivers/video/fbdev/core/fbmem.c:1015 do_fb_ioctl+0x234/0x670 drivers/video/fbdev/core/fbmem.c:1110 fb_ioctl+0xdd/0x130 drivers/video/fbdev/core/fbmem.c:1189",,,"[{""url"":""https://git.kernel.org/stable/c/0f1174f4972ea9fad6becf8881d71adca8e9ca91"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/19f953e7435644b81332dd632ba1b2d80b1e37af"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/34c3dea1189525cd533071ed5c176fc4ea8d982b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/3ec326a6a0d4667585ca595f438c7293e5ced7c4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7d9591b32a9092fc6391a316b56e8016c6181c3d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7f88cdfea8d7f4dbaf423d808241403b2bb945e4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8fc778ee2fb2853f7a3531fa7273349640d8e4e9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cb4bb011a683532841344ca7f281b5e04389b4f8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49979,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:25.363,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: fix refcount bug in sk_psock_get (2) Syzkaller reports refcount bug as follows: ------------[ cut here ]------------ refcount_t: saturated; leaking memory. WARNING: CPU: 1 PID: 3605 at lib/refcount.c:19 refcount_warn_saturate+0xf4/0x1e0 lib/refcount.c:19 Modules linked in: CPU: 1 PID: 3605 Comm: syz-executor208 Not tainted 5.18.0-syzkaller-03023-g7e062cda7d90 #0 <TASK> __refcount_add_not_zero include/linux/refcount.h:163 [inline] __refcount_inc_not_zero include/linux/refcount.h:227 [inline] refcount_inc_not_zero include/linux/refcount.h:245 [inline] sk_psock_get+0x3bc/0x410 include/linux/skmsg.h:439 tls_data_ready+0x6d/0x1b0 net/tls/tls_sw.c:2091 tcp_data_ready+0x106/0x520 net/ipv4/tcp_input.c:4983 tcp_data_queue+0x25f2/0x4c90 net/ipv4/tcp_input.c:5057 tcp_rcv_state_process+0x1774/0x4e80 net/ipv4/tcp_input.c:6659 tcp_v4_do_rcv+0x339/0x980 net/ipv4/tcp_ipv4.c:1682 sk_backlog_rcv include/net/sock.h:1061 [inline] __release_sock+0x134/0x3b0 net/core/sock.c:2849 release_sock+0x54/0x1b0 net/core/sock.c:3404 inet_shutdown+0x1e0/0x430 net/ipv4/af_inet.c:909 __sys_shutdown_sock net/socket.c:2331 [inline] __sys_shutdown_sock net/socket.c:2325 [inline] __sys_shutdown+0xf1/0x1b0 net/socket.c:2343 __do_sys_shutdown net/socket.c:2351 [inline] __se_sys_shutdown net/socket.c:2349 [inline] __x64_sys_shutdown+0x50/0x70 net/socket.c:2349 do_syscall_x64 arch/x86/entry/common.c:50 [inline] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80 entry_SYSCALL_64_after_hwframe+0x46/0xb0 </TASK> During SMC fallback process in connect syscall, kernel will replaces TCP with SMC. In order to forward wakeup smc socket waitqueue after fallback, kernel will sets clcsk->sk_user_data to origin smc socket in smc_fback_replace_callbacks(). Later, in shutdown syscall, kernel will calls sk_psock_get(), which treats the clcsk->sk_user_data as psock type, triggering the refcnt warning. So, the root cause is that smc and psock, both will use sk_user_data field. So they will mismatch this field easily. This patch solves it by using another bit(defined as SK_USER_DATA_PSOCK) in PTRMASK, to mark whether sk_user_data points to a psock object or not. This patch depends on a PTRMASK introduced in commit f1ff5ce2cd5e (""net, sk_msg: Clear sk_user_data pointer on clone if tagged""). For there will possibly be more flags in the sk_user_data field, this patch also refactor sk_user_data flags code to be more generic to improve its maintainability.",,,"[{""url"":""https://git.kernel.org/stable/c/2a0133723f9ebeb751cfce19f74ec07e108bef1f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/61cc798591a36ca27eb7d8d6c09bf20e50a59968"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/86026be8535c16fcc5e4f960286faf04d7f77815"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a5d1cb908131e939bd8b63b8e5e23365bbc2edaf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49980,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:25.480,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: USB: gadget: Fix use-after-free Read in usb_udc_uevent() The syzbot fuzzer found a race between uevent callbacks and gadget driver unregistration that can cause a use-after-free bug: --------------------------------------------------------------- BUG: KASAN: use-after-free in usb_udc_uevent+0x11f/0x130 drivers/usb/gadget/udc/core.c:1732 Read of size 8 at addr ffff888078ce2050 by task udevd/2968 CPU: 1 PID: 2968 Comm: udevd Not tainted 5.19.0-rc4-next-20220628-syzkaller #0 Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 06/29/2022 Call Trace: <TASK> __dump_stack lib/dump_stack.c:88 [inline] dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106 print_address_description mm/kasan/report.c:317 [inline] print_report.cold+0x2ba/0x719 mm/kasan/report.c:433 kasan_report+0xbe/0x1f0 mm/kasan/report.c:495 usb_udc_uevent+0x11f/0x130 drivers/usb/gadget/udc/core.c:1732 dev_uevent+0x290/0x770 drivers/base/core.c:2424 --------------------------------------------------------------- The bug occurs because usb_udc_uevent() dereferences udc->driver but does so without acquiring the udc_lock mutex, which protects this field. If the gadget driver is unbound from the udc concurrently with uevent processing, the driver structure may be accessed after it has been deallocated. To prevent the race, we make sure that the routine holds the mutex around the racing accesses.",,,"[{""url"":""https://git.kernel.org/stable/c/2191c00855b03aa59c20e698be713d952d51fc18"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f44b0b95d50fffeca036e1ba36770390e0b519dd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49981,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:25.597,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: HID: hidraw: fix memory leak in hidraw_release() Free the buffered reports before deleting the list entry. BUG: memory leak unreferenced object 0xffff88810e72f180 (size 32): comm ""softirq"", pid 0, jiffies 4294945143 (age 16.080s) hex dump (first 32 bytes): 64 f3 c6 6a d1 88 07 04 00 00 00 00 00 00 00 00 d..j............ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [<ffffffff814ac6c3>] kmemdup+0x23/0x50 mm/util.c:128 [<ffffffff8357c1d2>] kmemdup include/linux/fortify-string.h:440 [inline] [<ffffffff8357c1d2>] hidraw_report_event+0xa2/0x150 drivers/hid/hidraw.c:521 [<ffffffff8356ddad>] hid_report_raw_event+0x27d/0x740 drivers/hid/hid-core.c:1992 [<ffffffff8356e41e>] hid_input_report+0x1ae/0x270 drivers/hid/hid-core.c:2065 [<ffffffff835f0d3f>] hid_irq_in+0x1ff/0x250 drivers/hid/usbhid/hid-core.c:284 [<ffffffff82d3c7f9>] __usb_hcd_giveback_urb+0xf9/0x230 drivers/usb/core/hcd.c:1670 [<ffffffff82d3cc26>] usb_hcd_giveback_urb+0x1b6/0x1d0 drivers/usb/core/hcd.c:1747 [<ffffffff82ef1e14>] dummy_timer+0x8e4/0x14c0 drivers/usb/gadget/udc/dummy_hcd.c:1988 [<ffffffff812f50a8>] call_timer_fn+0x38/0x200 kernel/time/timer.c:1474 [<ffffffff812f5586>] expire_timers kernel/time/timer.c:1519 [inline] [<ffffffff812f5586>] __run_timers.part.0+0x316/0x430 kernel/time/timer.c:1790 [<ffffffff812f56e4>] __run_timers kernel/time/timer.c:1768 [inline] [<ffffffff812f56e4>] run_timer_softirq+0x44/0x90 kernel/time/timer.c:1803 [<ffffffff848000e6>] __do_softirq+0xe6/0x2ea kernel/softirq.c:571 [<ffffffff81246db0>] invoke_softirq kernel/softirq.c:445 [inline] [<ffffffff81246db0>] __irq_exit_rcu kernel/softirq.c:650 [inline] [<ffffffff81246db0>] irq_exit_rcu+0xc0/0x110 kernel/softirq.c:662 [<ffffffff84574f02>] sysvec_apic_timer_interrupt+0xa2/0xd0 arch/x86/kernel/apic/apic.c:1106 [<ffffffff84600c8b>] asm_sysvec_apic_timer_interrupt+0x1b/0x20 arch/x86/include/asm/idtentry.h:649 [<ffffffff8458a070>] native_safe_halt arch/x86/include/asm/irqflags.h:51 [inline] [<ffffffff8458a070>] arch_safe_halt arch/x86/include/asm/irqflags.h:89 [inline] [<ffffffff8458a070>] acpi_safe_halt drivers/acpi/processor_idle.c:111 [inline] [<ffffffff8458a070>] acpi_idle_do_entry+0xc0/0xd0 drivers/acpi/processor_idle.c:554",,,"[{""url"":""https://git.kernel.org/stable/c/1bea0bbf66001b0c7bf239a4d70eaf47824d3feb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/52a3c62a815161c2dcf38ac421f6c41d8679462b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/53c7c4d5d40b45c127cb1193bf3e9670f844c3cf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/7e2fa79226580b035b00260d9f240ab9bda4af5d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a5623a203cffe2d2b84d2f6c989d9017db1856af"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c06b013f5cbfeafe0a9cfa5a7128604c34e0e517"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dfd27a737283313a3e626e97b9d9b2d8d6a94188"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f5b7e9611cffec345d62d5bdd8b6e30e89956818"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49982,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:25.720,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: media: pvrusb2: fix memory leak in pvr_probe The error handling code in pvr2_hdw_create forgets to unregister the v4l2 device. When pvr2_hdw_create returns back to pvr2_context_create, it calls pvr2_context_destroy to destroy context, but mp->hdw is NULL, which leads to that pvr2_hdw_destroy directly returns. Fix this by adding v4l2_device_unregister to decrease the refcount of usb interface.",,,"[{""url"":""https://git.kernel.org/stable/c/2fe46195d2f0d5d09ea65433aefe47a4d0d0ff4d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/466b67c0543b2ae67814d053f6e29b39be6b33bb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/491762b3250fb06a0c97b5198656ea48359eaeed"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/945a9a8e448b65bec055d37eba58f711b39f66f0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ba7dd8a9686a61a34b3a7b922ce721378d4740d0"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/bacb37bdc2a21c8f7fdc83dcc0dea2f4ca1341fb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c02d2a91a85c4c4d05826cd1ea74a9b8d42e4280"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f2f6e67522916f53ad8ccd4dbe68dcf76e9776e5"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49983,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:25.840,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: udmabuf: Set the DMA mask for the udmabuf device (v2) If the DMA mask is not set explicitly, the following warning occurs when the userspace tries to access the dma-buf via the CPU as reported by syzbot here: WARNING: CPU: 1 PID: 3595 at kernel/dma/mapping.c:188 __dma_map_sg_attrs+0x181/0x1f0 kernel/dma/mapping.c:188 Modules linked in: CPU: 0 PID: 3595 Comm: syz-executor249 Not tainted 5.17.0-rc2-syzkaller-00316-g0457e5153e0e #0 Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011 RIP: 0010:__dma_map_sg_attrs+0x181/0x1f0 kernel/dma/mapping.c:188 Code: 00 00 00 00 00 fc ff df 48 c1 e8 03 80 3c 10 00 75 71 4c 8b 3d c0 83 b5 0d e9 db fe ff ff e8 b6 0f 13 00 0f 0b e8 af 0f 13 00 <0f> 0b 45 31 e4 e9 54 ff ff ff e8 a0 0f 13 00 49 8d 7f 50 48 b8 00 RSP: 0018:ffffc90002a07d68 EFLAGS: 00010293 RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000 RDX: ffff88807e25e2c0 RSI: ffffffff81649e91 RDI: ffff88801b848408 RBP: ffff88801b848000 R08: 0000000000000002 R09: ffff88801d86c74f R10: ffffffff81649d72 R11: 0000000000000001 R12: 0000000000000002 R13: ffff88801d86c680 R14: 0000000000000001 R15: 0000000000000000 FS: 0000555556e30300(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00000000200000cc CR3: 000000001d74a000 CR4: 00000000003506e0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Call Trace: <TASK> dma_map_sgtable+0x70/0xf0 kernel/dma/mapping.c:264 get_sg_table.isra.0+0xe0/0x160 drivers/dma-buf/udmabuf.c:72 begin_cpu_udmabuf+0x130/0x1d0 drivers/dma-buf/udmabuf.c:126 dma_buf_begin_cpu_access+0xfd/0x1d0 drivers/dma-buf/dma-buf.c:1164 dma_buf_ioctl+0x259/0x2b0 drivers/dma-buf/dma-buf.c:363 vfs_ioctl fs/ioctl.c:51 [inline] __do_sys_ioctl fs/ioctl.c:874 [inline] __se_sys_ioctl fs/ioctl.c:860 [inline] __x64_sys_ioctl+0x193/0x200 fs/ioctl.c:860 do_syscall_x64 arch/x86/entry/common.c:50 [inline] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80 entry_SYSCALL_64_after_hwframe+0x44/0xae RIP: 0033:0x7f62fcf530f9 Code: 28 c3 e8 2a 14 00 00 66 2e 0f 1f 84 00 00 00 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48 RSP: 002b:00007ffe3edab9b8 EFLAGS: 00000246 ORIG_RAX: 0000000000000010 RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f62fcf530f9 RDX: 0000000020000200 RSI: 0000000040086200 RDI: 0000000000000006 RBP: 00007f62fcf170e0 R08: 0000000000000000 R09: 0000000000000000 R10: 0000000000000000 R11: 0000000000000246 R12: 00007f62fcf17170 R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000 </TASK> v2: Dont't forget to deregister if DMA mask setup fails.",,,"[{""url"":""https://git.kernel.org/stable/c/63d8c1933ed280717f934e2bc2edd869bb66f329"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/872875c9ecf8fa2e1d82bb2f2f1963f571aa8959"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9e9fa6a9198b767b00f48160800128e83a038f9f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e658538c610c6047b3c9f552e73801894d9284b1"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f2f6ea1a8da1317430a84701fc0170449ee88315"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49984,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:25.953,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: HID: steam: Prevent NULL pointer dereference in steam_{recv,send}_report It is possible for a malicious device to forgo submitting a Feature Report. The HID Steam driver presently makes no prevision for this and de-references the 'struct hid_report' pointer obtained from the HID devices without first checking its validity. Let's change that.",,,"[{""url"":""https://git.kernel.org/stable/c/989560b6d9e00d99e07bc33067fa1c770994bf4d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c20d03b82a2e3ddbb555dad4d4f3374a9763222c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cd11d1a6114bd4bc6450ae59f6e110ec47362126"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dc815761948ab5b8c94db6cb53c95103588f16ae"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dee1e51b54794e90763e70a3c78f27ba4fa930ec"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fa2b822d86be5b5ad54fe4fa2daca464e71ff90a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49985,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:26.067,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: bpf: Don't use tnum_range on array range checking for poke descriptors Hsin-Wei reported a KASAN splat triggered by their BPF runtime fuzzer which is based on a customized syzkaller: BUG: KASAN: slab-out-of-bounds in bpf_int_jit_compile+0x1257/0x13f0 Read of size 8 at addr ffff888004e90b58 by task syz-executor.0/1489 CPU: 1 PID: 1489 Comm: syz-executor.0 Not tainted 5.19.0 #1 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014 Call Trace: <TASK> dump_stack_lvl+0x9c/0xc9 print_address_description.constprop.0+0x1f/0x1f0 ? bpf_int_jit_compile+0x1257/0x13f0 kasan_report.cold+0xeb/0x197 ? kvmalloc_node+0x170/0x200 ? bpf_int_jit_compile+0x1257/0x13f0 bpf_int_jit_compile+0x1257/0x13f0 ? arch_prepare_bpf_dispatcher+0xd0/0xd0 ? rcu_read_lock_sched_held+0x43/0x70 bpf_prog_select_runtime+0x3e8/0x640 ? bpf_obj_name_cpy+0x149/0x1b0 bpf_prog_load+0x102f/0x2220 ? __bpf_prog_put.constprop.0+0x220/0x220 ? find_held_lock+0x2c/0x110 ? __might_fault+0xd6/0x180 ? lock_downgrade+0x6e0/0x6e0 ? lock_is_held_type+0xa6/0x120 ? __might_fault+0x147/0x180 __sys_bpf+0x137b/0x6070 ? bpf_perf_link_attach+0x530/0x530 ? new_sync_read+0x600/0x600 ? __fget_files+0x255/0x450 ? lock_downgrade+0x6e0/0x6e0 ? fput+0x30/0x1a0 ? ksys_write+0x1a8/0x260 __x64_sys_bpf+0x7a/0xc0 ? syscall_enter_from_user_mode+0x21/0x70 do_syscall_64+0x3b/0x90 entry_SYSCALL_64_after_hwframe+0x63/0xcd RIP: 0033:0x7f917c4e2c2d The problem here is that a range of tnum_range(0, map->max_entries - 1) has limited ability to represent the concrete tight range with the tnum as the set of resulting states from value + mask can result in a superset of the actual intended range, and as such a tnum_in(range, reg->var_off) check may yield true when it shouldn't, for example tnum_range(0, 2) would result in 00XX -> v = 0000, m = 0011 such that the intended set of {0, 1, 2} is here represented by a less precise superset of {0, 1, 2, 3}. As the register is known const scalar, really just use the concrete reg->var_off.value for the upper index check.",,,"[{""url"":""https://git.kernel.org/stable/c/4f672112f8665102a5842c170be1713f8ff95919"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a36df92c7ff7ecde2fb362241d0ab024dddd0597"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a657182a5c5150cdfacb6640aad1d2712571a409"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/e8979807178434db8ceaa84dfcd44363e71e50bb"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49986,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:26.183,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: scsi: storvsc: Remove WQ_MEM_RECLAIM from storvsc_error_wq storvsc_error_wq workqueue should not be marked as WQ_MEM_RECLAIM as it doesn't need to make forward progress under memory pressure. Marking this workqueue as WQ_MEM_RECLAIM may cause deadlock while flushing a non-WQ_MEM_RECLAIM workqueue. In the current state it causes the following warning: [ 14.506347] ------------[ cut here ]------------ [ 14.506354] workqueue: WQ_MEM_RECLAIM storvsc_error_wq_0:storvsc_remove_lun is flushing !WQ_MEM_RECLAIM events_freezable_power_:disk_events_workfn [ 14.506360] WARNING: CPU: 0 PID: 8 at <-snip->kernel/workqueue.c:2623 check_flush_dependency+0xb5/0x130 [ 14.506390] CPU: 0 PID: 8 Comm: kworker/u4:0 Not tainted 5.4.0-1086-azure #91~18.04.1-Ubuntu [ 14.506391] Hardware name: Microsoft Corporation Virtual Machine/Virtual Machine, BIOS Hyper-V UEFI Release v4.1 05/09/2022 [ 14.506393] Workqueue: storvsc_error_wq_0 storvsc_remove_lun [ 14.506395] RIP: 0010:check_flush_dependency+0xb5/0x130 <-snip-> [ 14.506408] Call Trace: [ 14.506412] __flush_work+0xf1/0x1c0 [ 14.506414] __cancel_work_timer+0x12f/0x1b0 [ 14.506417] ? kernfs_put+0xf0/0x190 [ 14.506418] cancel_delayed_work_sync+0x13/0x20 [ 14.506420] disk_block_events+0x78/0x80 [ 14.506421] del_gendisk+0x3d/0x2f0 [ 14.506423] sr_remove+0x28/0x70 [ 14.506427] device_release_driver_internal+0xef/0x1c0 [ 14.506428] device_release_driver+0x12/0x20 [ 14.506429] bus_remove_device+0xe1/0x150 [ 14.506431] device_del+0x167/0x380 [ 14.506432] __scsi_remove_device+0x11d/0x150 [ 14.506433] scsi_remove_device+0x26/0x40 [ 14.506434] storvsc_remove_lun+0x40/0x60 [ 14.506436] process_one_work+0x209/0x400 [ 14.506437] worker_thread+0x34/0x400 [ 14.506439] kthread+0x121/0x140 [ 14.506440] ? process_one_work+0x400/0x400 [ 14.506441] ? kthread_park+0x90/0x90 [ 14.506443] ret_from_fork+0x35/0x40 [ 14.506445] ---[ end trace 2d9633159fdc6ee7 ]---",,,"[{""url"":""https://git.kernel.org/stable/c/46fcb0fc884db78a0384be92cc2a51927e6581b8"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/828f57ac75eaccd6607ee4d1468d34e983e32c68"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b4c928ace9a123629eeb14ec5d7ee8f73e5ac668"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b692c238ddfa61f00d97c4c1f021425d132ba96f"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cd2a50d0a097a42b6de283377da98ff757505120"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/d957e7ffb2c72410bcc1a514153a46719255a5da"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49987,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:26.303,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: md: call __md_stop_writes in md_stop From the link [1], we can see raid1d was running even after the path raid_dtr -> md_stop -> __md_stop. Let's stop write first in destructor to align with normal md-raid to fix the KASAN issue. [1]. https://lore.kernel.org/linux-raid/CAPhsuW5gc4AakdGNdF8ubpezAuDLFOYUO_sfMZcec6hQFm8nhg@mail.gmail.com/T/#m7f12bf90481c02c6d2da68c64aeed4779b7df74a",,,"[{""url"":""https://git.kernel.org/stable/c/0dd84b319352bb8ba64752d4e45396d8b13e6018"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/1678ca35b80a94d474fdc31e2497ce5d7ed52512"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/661c01b2181d9413c799127f13143583b69f20fd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/690b5c90fd2d81fd1d2b6110fa36783232f6dce2"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8e7fb19f1a744fd34e982633ced756fee0498ef7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a5a58fab556bfe618b4c9719eb85712d78c6cb10"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f42a9819ba84bed2e609a4dff56af37063dcabdc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49988,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:26.420,2025-06-18T15:15:20.923,Rejected,[],Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.,,,[],,,,,,,,,
CVE-2022-49989,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:26.530,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: xen/privcmd: fix error exit of privcmd_ioctl_dm_op() The error exit of privcmd_ioctl_dm_op() is calling unlock_pages() potentially with pages being NULL, leading to a NULL dereference. Additionally lock_pages() doesn't check for pin_user_pages_fast() having been completely successful, resulting in potentially not locking all pages into memory. This could result in sporadic failures when using the related memory in user mode. Fix all of that by calling unlock_pages() always with the real number of pinned pages, which will be zero in case pages being NULL, and by checking the number of pages pinned by pin_user_pages_fast() matching the expected number of pages.",,,"[{""url"":""https://git.kernel.org/stable/c/45d47bd9b96e7874b98dbcc7602fe2826c5d62a6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6de50db104af0dc921f593fd95c55db86a52ceef"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c2b7bae7c90051fd6a679d5dee00400d67ebbf4a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c5deb27895e017a0267de0a20d140ad5fcc55a54"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49990,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:26.637,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: s390: fix double free of GS and RI CBs on fork() failure The pointers for guarded storage and runtime instrumentation control blocks are stored in the thread_struct of the associated task. These pointers are initially copied on fork() via arch_dup_task_struct() and then cleared via copy_thread() before fork() returns. If fork() happens to fail after the initial task dup and before copy_thread(), the newly allocated task and associated thread_struct memory are freed via free_task() -> arch_release_task_struct(). This results in a double free of the guarded storage and runtime info structs because the fields in the failed task still refer to memory associated with the source task. This problem can manifest as a BUG_ON() in set_freepointer() (with CONFIG_SLAB_FREELIST_HARDENED enabled) or KASAN splat (if enabled) when running trinity syscall fuzz tests on s390x. To avoid this problem, clear the associated pointer fields in arch_dup_task_struct() immediately after the new task is copied. Note that the RI flag is still cleared in copy_thread() because it resides in thread stack memory and that is where stack info is copied.",,,"[{""url"":""https://git.kernel.org/stable/c/13cccafe0edcd03bf1c841de8ab8a1c8e34f77d9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/25a95303b9e513cd2978aacc385d06e6fec23d07"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/297ae7e87a87a001dd3dfeac1cb26a42fd929708"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/8195e065abf3df84eb0ad2987e76a40f21d1791c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/cacd522e6652fbc2dc0cc6ae11c4e30782fef14b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/fbdc482d43eda40a70de4b0155843d5472f6de62"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49991,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:26.753,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: mm/hugetlb: avoid corrupting page->mapping in hugetlb_mcopy_atomic_pte In MCOPY_ATOMIC_CONTINUE case with a non-shared VMA, pages in the page cache are installed in the ptes. But hugepage_add_new_anon_rmap is called for them mistakenly because they're not vm_shared. This will corrupt the page->mapping used by page cache code.",,,"[{""url"":""https://git.kernel.org/stable/c/3ada1b3e58db255a14ec73a59d7913e84dc5a8a4"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ab74ef708dc51df7cf2b8a890b9c6990fac5c0c6"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/da60ddd80d09f8371fbba1a238a4b318d13ba698"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49992,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:26.870,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: mm/mprotect: only reference swap pfn page if type match Yu Zhao reported a bug after the commit ""mm/swap: Add swp_offset_pfn() to fetch PFN from swap entry"" added a check in swp_offset_pfn() for swap type [1]: kernel BUG at include/linux/swapops.h:117! CPU: 46 PID: 5245 Comm: EventManager_De Tainted: G S O L 6.0.0-dbg-DEV #2 RIP: 0010:pfn_swap_entry_to_page+0x72/0xf0 Code: c6 48 8b 36 48 83 fe ff 74 53 48 01 d1 48 83 c1 08 48 8b 09 f6 c1 01 75 7b 66 90 48 89 c1 48 8b 09 f6 c1 01 74 74 5d c3 eb 9e <0f> 0b 48 ba ff ff ff ff 03 00 00 00 eb ae a9 ff 0f 00 00 75 13 48 RSP: 0018:ffffa59e73fabb80 EFLAGS: 00010282 RAX: 00000000ffffffe8 RBX: 0c00000000000000 RCX: ffffcd5440000000 RDX: 1ffffffffff7a80a RSI: 0000000000000000 RDI: 0c0000000000042b RBP: ffffa59e73fabb80 R08: ffff9965ca6e8bb8 R09: 0000000000000000 R10: ffffffffa5a2f62d R11: 0000030b372e9fff R12: ffff997b79db5738 R13: 000000000000042b R14: 0c0000000000042b R15: 1ffffffffff7a80a FS: 00007f549d1bb700(0000) GS:ffff99d3cf680000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 0000440d035b3180 CR3: 0000002243176004 CR4: 00000000003706e0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Call Trace: <TASK> change_pte_range+0x36e/0x880 change_p4d_range+0x2e8/0x670 change_protection_range+0x14e/0x2c0 mprotect_fixup+0x1ee/0x330 do_mprotect_pkey+0x34c/0x440 __x64_sys_mprotect+0x1d/0x30 It triggers because pfn_swap_entry_to_page() could be called upon e.g. a genuine swap entry. Fix it by only calling it when it's a write migration entry where the page* is used. [1] https://lore.kernel.org/lkml/CAOUHufaVC2Za-p8m0aiHw6YkheDcrO-C3wRGixwDS32VTS+k1w@mail.gmail.com/",,,"[{""url"":""https://git.kernel.org/stable/c/3d2f78f08cd8388035ac375e731ec1ac1b79b09d"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5fcf81e308d1f4ae95f31690d2a80b7061385ff9"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49993,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:26.977,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: loop: Check for overflow while configuring loop The userspace can configure a loop using an ioctl call, wherein a configuration of type loop_config is passed (see lo_ioctl()'s case on line 1550 of drivers/block/loop.c). This proceeds to call loop_configure() which in turn calls loop_set_status_from_info() (see line 1050 of loop.c), passing &config->info which is of type loop_info64*. This function then sets the appropriate values, like the offset. loop_device has lo_offset of type loff_t (see line 52 of loop.c), which is typdef-chained to long long, whereas loop_info64 has lo_offset of type __u64 (see line 56 of include/uapi/linux/loop.h). The function directly copies offset from info to the device as follows (See line 980 of loop.c): lo->lo_offset = info->lo_offset; This results in an overflow, which triggers a warning in iomap_iter() due to a call to iomap_iter_done() which has: WARN_ON_ONCE(iter->iomap.offset > iter->pos); Thus, check for negative value during loop_set_status_from_info(). Bug report: https://syzkaller.appspot.com/bug?id=c620fe14aac810396d3c3edc9ad73848bf69a29e",,,"[{""url"":""https://git.kernel.org/stable/c/0455bef69028c65065f16bb04635591b2374249b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/18e28817cb516b39de6281f6db9b0618b2cc7b42"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/6858933131d0dadac071c4d33335a9ea4b8e76cf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9be7fa7ead18a48940df7b59d993bbc8b9055c15"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a217715338fd48f72114725aa7a40e484a781ca7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/adf0112d9b8acb03485624220b4934f69bf13369"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b40877b8562c5720d0a7fce20729f56b75a3dede"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c490a0b5a4f36da3918181a8acdc6991d967c5f3"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49994,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:27.107,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: bootmem: remove the vmemmap pages from kmemleak in put_page_bootmem The vmemmap pages is marked by kmemleak when allocated from memblock. Remove it from kmemleak when freeing the page. Otherwise, when we reuse the page, kmemleak may report such an error and then stop working. kmemleak: Cannot insert 0xffff98fb6eab3d40 into the object search tree (overlaps existing) kmemleak: Kernel memory leak detector disabled kmemleak: Object 0xffff98fb6be00000 (size 335544320): kmemleak: comm ""swapper"", pid 0, jiffies 4294892296 kmemleak: min_count = 0 kmemleak: count = 0 kmemleak: flags = 0x1 kmemleak: checksum = 0 kmemleak: backtrace:",,,"[{""url"":""https://git.kernel.org/stable/c/16a12ee619e39e8112f61b603255c16b73b6264b"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9ae15c4ba2be1e5a62503b6d873e84beb5fcbb5a"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/dd0ff4d12dd284c334f7e9b07f8f335af856ac78"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49995,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:27.227,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: writeback: avoid use-after-free after removing device When a disk is removed, bdi_unregister gets called to stop further writeback and wait for associated delayed work to complete. However, wb_inode_writeback_end() may schedule bandwidth estimation dwork after this has completed, which can result in the timer attempting to access the just freed bdi_writeback. Fix this by checking if the bdi_writeback is alive, similar to when scheduling writeback work. Since this requires wb->work_lock, and wb_inode_writeback_end() may get called from interrupt, switch wb->work_lock to an irqsafe lock.",,,"[{""url"":""https://git.kernel.org/stable/c/9a6c710f3bc10bc9cc23e1c080b53245b7f9d5b7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f87904c075515f3e1d8f4a7115869d3b914674fd"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/f96b9f7c1676923bce871e728bb49c0dfa5013cc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49996,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:27.337,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: btrfs: fix possible memory leak in btrfs_get_dev_args_from_path() In btrfs_get_dev_args_from_path(), btrfs_get_bdev_and_sb() can fail if the path is invalid. In this case, btrfs_get_dev_args_from_path() returns directly without freeing args->uuid and args->fsid allocated before, which causes memory leak. To fix these possible leaks, when btrfs_get_bdev_and_sb() fails, btrfs_put_dev_args_from_path() is called to clean up the memory.",,,"[{""url"":""https://git.kernel.org/stable/c/4b124ad87244cd7f0883c5eaa38d2326b2154cad"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/5f52402c77013e4a826394b807dd5ea4dc83bd72"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/9ea0106a7a3d8116860712e3f17cd52ce99f6707"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49997,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:27.447,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: net: lantiq_xrx200: restore buffer if memory allocation failed In a situation where memory allocation fails, an invalid buffer address is stored. When this descriptor is used again, the system panics in the build_skb() function when accessing memory.",,,"[{""url"":""https://git.kernel.org/stable/c/3ef2786e32d93e562cd40601248a14ae090de873"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/c9c3b1775f80fa21f5bff874027d2ccb10f5d90c"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49998,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:27.557,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: rxrpc: Fix locking in rxrpc's sendmsg Fix three bugs in the rxrpc's sendmsg implementation: (1) rxrpc_new_client_call() should release the socket lock when returning an error from rxrpc_get_call_slot(). (2) rxrpc_wait_for_tx_window_intr() will return without the call mutex held in the event that we're interrupted by a signal whilst waiting for tx space on the socket or relocking the call mutex afterwards. Fix this by: (a) moving the unlock/lock of the call mutex up to rxrpc_send_data() such that the lock is not held around all of rxrpc_wait_for_tx_window*() and (b) indicating to higher callers whether we're return with the lock dropped. Note that this means recvmsg() will not block on this call whilst we're waiting. (3) After dropping and regaining the call mutex, rxrpc_send_data() needs to go and recheck the state of the tx_pending buffer and the tx_total_len check in case we raced with another sendmsg() on the same call. Thinking on this some more, it might make sense to have different locks for sendmsg() and recvmsg(). There's probably no need to make recvmsg() wait for sendmsg(). It does mean that recvmsg() can return MSG_EOR indicating that a call is dead before a sendmsg() to that call returns - but that can currently happen anyway. Without fix (2), something like the following can be induced: WARNING: bad unlock balance detected! 5.16.0-rc6-syzkaller #0 Not tainted ------------------------------------- syz-executor011/3597 is trying to release lock (&call->user_mutex) at: [<ffffffff885163a3>] rxrpc_do_sendmsg+0xc13/0x1350 net/rxrpc/sendmsg.c:748 but there are no more locks to release! other info that might help us debug this: no locks held by syz-executor011/3597. ... Call Trace: <TASK> __dump_stack lib/dump_stack.c:88 [inline] dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106 print_unlock_imbalance_bug include/trace/events/lock.h:58 [inline] __lock_release kernel/locking/lockdep.c:5306 [inline] lock_release.cold+0x49/0x4e kernel/locking/lockdep.c:5657 __mutex_unlock_slowpath+0x99/0x5e0 kernel/locking/mutex.c:900 rxrpc_do_sendmsg+0xc13/0x1350 net/rxrpc/sendmsg.c:748 rxrpc_sendmsg+0x420/0x630 net/rxrpc/af_rxrpc.c:561 sock_sendmsg_nosec net/socket.c:704 [inline] sock_sendmsg+0xcf/0x120 net/socket.c:724 ____sys_sendmsg+0x6e8/0x810 net/socket.c:2409 ___sys_sendmsg+0xf3/0x170 net/socket.c:2463 __sys_sendmsg+0xe5/0x1b0 net/socket.c:2492 do_syscall_x64 arch/x86/entry/common.c:50 [inline] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80 entry_SYSCALL_64_after_hwframe+0x44/0xae [Thanks to Hawkins Jiawei and Khalid Masum for their attempts to fix this]",,,"[{""url"":""https://git.kernel.org/stable/c/091dc91e119fdd61432347231724f4e861c6b465"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/2bc769b8edb158be7379d15f36e23d66cf850053"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/79e2ca7aa96e80961828ab6312264633b66183cc"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/b0f571ecd7943423c25947439045f0d352ca3dbf"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
CVE-2022-49999,416baaa9-dc9f-4396-8d5f-8c081fb06d67,2025-06-18T11:15:27.673,2025-06-18T13:46:52.973,Awaiting Analysis,[],"In the Linux kernel, the following vulnerability has been resolved: btrfs: fix space cache corruption and potential double allocations When testing space_cache v2 on a large set of machines, we encountered a few symptoms: 1. ""unable to add free space :-17"" (EEXIST) errors. 2. Missing free space info items, sometimes caught with a ""missing free space info for X"" error. 3. Double-accounted space: ranges that were allocated in the extent tree and also marked as free in the free space tree, ranges that were marked as allocated twice in the extent tree, or ranges that were marked as free twice in the free space tree. If the latter made it onto disk, the next reboot would hit the BUG_ON() in add_new_free_space(). 4. On some hosts with no on-disk corruption or error messages, the in-memory space cache (dumped with drgn) disagreed with the free space tree. All of these symptoms have the same underlying cause: a race between caching the free space for a block group and returning free space to the in-memory space cache for pinned extents causes us to double-add a free range to the space cache. This race exists when free space is cached from the free space tree (space_cache=v2) or the extent tree (nospace_cache, or space_cache=v1 if the cache needs to be regenerated). struct btrfs_block_group::last_byte_to_unpin and struct btrfs_block_group::progress are supposed to protect against this race, but commit d0c2f4fa555e (""btrfs: make concurrent fsyncs wait less when waiting for a transaction commit"") subtly broke this by allowing multiple transactions to be unpinning extents at the same time. Specifically, the race is as follows: 1. An extent is deleted from an uncached block group in transaction A. 2. btrfs_commit_transaction() is called for transaction A. 3. btrfs_run_delayed_refs() -> __btrfs_free_extent() runs the delayed ref for the deleted extent. 4. __btrfs_free_extent() -> do_free_extent_accounting() -> add_to_free_space_tree() adds the deleted extent back to the free space tree. 5. do_free_extent_accounting() -> btrfs_update_block_group() -> btrfs_cache_block_group() queues up the block group to get cached. block_group->progress is set to block_group->start. 6. btrfs_commit_transaction() for transaction A calls switch_commit_roots(). It sets block_group->last_byte_to_unpin to block_group->progress, which is block_group->start because the block group hasn't been cached yet. 7. The caching thread gets to our block group. Since the commit roots were already switched, load_free_space_tree() sees the deleted extent as free and adds it to the space cache. It finishes caching and sets block_group->progress to U64_MAX. 8. btrfs_commit_transaction() advances transaction A to TRANS_STATE_SUPER_COMMITTED. 9. fsync calls btrfs_commit_transaction() for transaction B. Since transaction A is already in TRANS_STATE_SUPER_COMMITTED and the commit is for fsync, it advances. 10. btrfs_commit_transaction() for transaction B calls switch_commit_roots(). This time, the block group has already been cached, so it sets block_group->last_byte_to_unpin to U64_MAX. 11. btrfs_commit_transaction() for transaction A calls btrfs_finish_extent_commit(), which calls unpin_extent_range() for the deleted extent. It sees last_byte_to_unpin set to U64_MAX (by transaction B!), so it adds the deleted extent to the space cache again! This explains all of our symptoms above: * If the sequence of events is exactly as described above, when the free space is re-added in step 11, it will fail with EEXIST. * If another thread reallocates the deleted extent in between steps 7 and 11, then step 11 will silently re-add that space to the space cache as free even though it is actually allocated. Then, if that space is allocated *again*, the free space tree will be corrupted (namely, the wrong item will be deleted). * If we don't catch this free space tree corr ---truncated---",,,"[{""url"":""https://git.kernel.org/stable/c/92dc4c1a8e58bcc7a183a4c86b055c24cc88d967"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/a2e54eb64229f07f917b05d0c323604fda9b89f7"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""},{""url"":""https://git.kernel.org/stable/c/ced8ecf026fd8084cf175530ff85c76d6085d715"",""source"":""416baaa9-dc9f-4396-8d5f-8c081fb06d67""}]",,,,,,,,,
